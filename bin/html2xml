#!/usr/bin/env ruby
# -*- coding: utf-8; -*-
#
# WCAG2.0 Technicsの日本語訳HTMLを元のXMLフォーマットへ変換する
#
require 'nokogiri'

if ARGV.size != 2
	$stderr.puts "usage: #{File.basename $0} <html> <dest>\n\thtml: HTML file name\n\tdest: destination path"
	exit 1
end

src = ARGV.shift
dst = ARGV.shift
tech_id = File.basename( src, '.html' )
html = Nokogiri( open( src, 'r:utf-8', &:read ) )

xml = Nokogiri::XML::Builder.new do |x|
	x.technique( id: tech_id ) {
		x.__send__( :"short-name" ) {
			x.text (html / :h1)[0].text.strip.sub( /\A.*? /, '' )
		}
		x.applicability {
			x << (html / 'div.applicability div.textbody').inner_html
		}
		x.__send__( :'applies-to' ) {
			[].tap{|ids|
				(html / 'p.referenced + ul > li a').each do |a|
					next if a.attr( 'href' ) !~ /#/
					ids << a.attr( 'href' ).sub( /\A.*#/, '' )
				end
			}.uniq.each do |id|
				x.__send__( :'success-criterion', idref: id )
			end
		}
		x.__send__( :'ua-issues' ) {
			x.__send__( :'ua-issue' ) {
				### CODE HERE ###
			}
		}
		x.description {
			x << (html / "h2##{tech_id}-description + div.textbody").inner_html
		}
		x.examples {
			(html / 'div.example').each_with_index do |example, idx|
				head = (html / "##{tech_id}-ex#{idx+1}").text.sub( /事例\s\d：?/, '' )
				x.head { x.text head } unless head.empty?
				x.__send__( :'eg-group' ) {
					(example / :div).each{|div|
						case div.attr( 'class' )
						when 'textbody'
							x.description {
								x << div.inner_html
							}
						when 'code'
							x.code {
								x << (div / :code).inner_html
							}
						else
							raise "Unknown class name #{div.attr 'class'}."
						end
					}
				}
			end
		}
		x.resources {
			x.__send__( :'see-also' ) {
			}
		}
		x.__send__( :'related-techniques' ) {
			x.relatedtech {
			}
		}
		x.tests {
			x.procedure {
			}
			x.__send__( :'expected-results' ) {
			}
		}
	}
end

puts Nokogiri::XML( xml.to_xml, nil, 'utf-8' )
