<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec SYSTEM "xmlspec.dtd">
<spec status="final" w3c-doctype="wgnote">
	<header>
		<title>CSS Techniques</title>
		<w3c-designation>WCAG20-CSS-TECHS</w3c-designation>
		<w3c-doctype>W3C Working Group Note</w3c-doctype>
		<pubdate>
			<day>3</day>
			<month>January</month>
			<year>2012</year>
		</pubdate>
		<publoc> <loc href="http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS-20060331/">http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS-20060331/</loc> </publoc>
		<latestloc>
			<loc href="http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS/">http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS/</loc>
		</latestloc>
		<prevlocs> <loc href="http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS-20050630/">http://www.w3.org/WAI/GL/WCAG20/WD-WCAG20-CSS-TECHS-20050630/</loc> </prevlocs>
		<authlist>
			<author>
				<name>Wendy Chisholm, W3C</name>
			</author>
			<author>
				<name>Becky Gibson, IBM</name>
			</author>
		</authlist>
		<status>
			<p>
				<emph>This section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current W3C publications and the latest revision of this technical report can be found in the <loc
				xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/">W3C technical reports index</loc> at http://www.w3.org/TR/.</emph> </p>
			<p>This version of CSS techniques has not significantly changed since the 19 November 2004 Working Draft. The <loc
				xmlns:xlink="http://www.w3.org/1999/xlink" href="/WAI/GL/">Web Content  Accessibility Guidelines Working Group</loc> (WCAG WG) has focused on addressing issues related to Guidelines and Success Criteria. This publication  demonstrates how the different documents may link to each other. As the focus of the WCAG WG returns to techniques and test suites, the structure and presentation of the techniques documents will likely change to  reflect the relationships between Guidelines, Techniques, and testing documents. In future revisions, we expect to distinguish between techniques required for conformance versus those that are optional. Please refer to "<loc href="http://trace.wisc.edu/bugzilla_wcag/condensedreports/css_issues.php">Issue tracking for WCAG 2.0 Techniques for CSS</loc>" for a list of open issues related to this Working Draft. The "<loc href="/WAI/GL/WCAG20/css-tech-change-history.html">History of Changes to CSS Techniques for WCAG 2.0 Working Drafts</loc>" is also available.
			</p>
			<p>Please send comments about this document to <loc href="mailto:public-comments-wcag20@w3.org">public-comments-wcag20@w3.org</loc>. The <loc href="http://lists.w3.org/Archives/Public/public-comments-wcag20/">archives for the public comments list</loc> are publicly available.   <loc href="http://lists.w3.org/Archives/Public/w3c-wai-gl">Archives of the WCAG WG mailing list</loc> are also publicly available.</p>
			<p>Publication as a Working Draft does not imply endorsement by the W3C Membership. This is a draft document and may be updated, replaced or obsoleted by other documents at any time. It is inappropriate to cite this document as other than work in progress.  The WCAG WG intends to publish this as a Working Group Note at the time that WCAG 2.0 becomes a Recommendation.</p>
			<!-- do not need patent section since these are not on the Rec track -->
			<p>This document has been produced as part of the W3C <loc
				xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/WAI/">Web Accessibility Initiative</loc> (WAI). The goals of the WCAG WG are discussed in the <loc href="http://www.w3.org/WAI/GL/new-charter-2000.html">Working Group charter</loc>. The WCAG WG is part of the <loc href="http://www.w3.org/WAI/Technical/Activity">WAI Technical Activity</loc>.</p>
		</status>
		<abstract>
			<p>This document provides information to Web content developers who wish to satisfy the Success Criteria of "Web Content Accessibility Guidelines 2.0" <bibref ref="WCAG20"
				/> (currently a W3C Working Draft).   The techniques in this document are specific to Cascading Style Sheet content <bibref ref="CSS1"/>, <bibref ref="CSS2"/> (and in the future <bibref ref="CSS21"/> and <bibref ref="CSS3"
				/>) although some techniques contain Hypertext Markup Language content <bibref ref="HTML4"/>, <bibref ref="XHTML1"/> <bibref ref="CSS1"
				/> and ECMAScript solutions.  Use of the illustrative techniques provided in this document may make it more likely for Web content to demonstrate conformance to WCAG 2.0 Success Criteria (by passing the relevant tests in the WCAG 2.0 test suite - <emph>to be developed</emph>) than if these illustrative techniques are not used.</p>
			<p>There may be other techniques besides those provided in this document that may be used to demonstrate conformance to WCAG 2.0; in that case, it is encouraged to submit those techniques to the WCAG WG for consideration for inclusion in this document, so that the set of techniques  maintained by the WCAG WG is as comprehensive as possible. Deprecated examples illustrate techniques that the Working Group no longer recommends, but may be applicable in some cases. </p>
			<p>This document is part of a series of documents published by the W3C
Web Accessibility Initiative (WAI) to support WCAG 2.0.</p>
		</abstract>
		<langusage>
			<language id="en-US"/>
		</langusage>
		<revisiondesc>
			<p/>
		</revisiondesc>
	</header>
	<body>
		<!-- techniques -->
		<div1 id="css">
			<head>CSS Techniques</head>
			<technique id="C6">
				<short-name>Positioning content based on structural markup</short-name>
				<applicability>
					<p>All technologies that support CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-skip" />
					<success-criterion idref="content-structure-separation-sequence" />
					<success-criterion idref="visual-audio-contrast-text-presentation" />
					<success-criterion idref="visual-audio-contrast-text-images" />
				</applies-to>
				<description>
					<p>The objective of this technique is to demonstrate how visual appearance may be enhanced via style sheets while still maintaining a meaningful presentation when style sheets are not applied. Using the positioning properties of CSS2, content may be displayed at any position on the user's viewport. Using structural elements ensures that the meaning of the content can still be determined when styling is not available. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>In this example structural markup (definition lists) have been applied to the content. CSS has been used to style the content into columnar form. Each class absolutely positions the content into columns and the margins have been set to 0 to override the default behavior of user agents to display HTML definition lists with the DD element indented. </p>
							<p>Here is the content to be displayed:</p>
						</description>
						<code role="html401"><![CDATA[
 <div class="box">
  <dl>
    <dt class="menu1">Products</dt>
    <dd class="item1">Telephones</dd>
    <dd class="item2">Computers</dd>
    <dd class="item3">Portable MP3 Players</dd>
    <dt class="menu2">Locations</dt>
    <dd class="item4">Idaho</dd>
    <dd class="item5">Wisconsin</dd>
    </dt>
  </dl>
 </div>
]]></code>
						<description>
							<p>Here is the CSS which positions and styles the above elements:</p>
						</description>
						<code role="html401"><![CDATA[
 .item1 {
   left: 0;
   margin: 0;
   position: absolute;
   top: 7em;
 }
 .item2 {
   left: 0;
   margin: 0;
   position: absolute;
   top: 8em;
 }
 .item3 {
   left: 0;
   margin: 0;
   position: absolute;
   top: 9em;
 }
 .item4 {
   left: 14em;
   margin: 0;
   position: absolute;
   top: 7em;
 }
 .item5 {
   left: 14em;
   margin: 0;
   position: absolute;
   top: 8em;
 }
 .menu1 {
   background-color: #FFFFFF;
   color: #FF0000;
   font-family: sans-serif;
   font-size: 120%;
   left: 0;
   margin: 0;
   position: absolute;
   top: 3em;
 }
 .menu2 {
   background-color: #FFFFFF;
   color: #FF0000;
   font-family: sans-serif;
   font-size: 120%;
   left: 10em;
   margin: 0;
   position: absolute;
   top: 3em;
 }
 #box {
   left: 5em;
   position: absolute;
   top: 5em;
 }

]]></code>
						<description>
							<p>When style sheets are applied, the data are displayed in two columns of "Products" and "Locations." When the style sheets are not applied, the text appears in a definition list which maintains the structure and reading order. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item diff="del"> <!-- broken link -->
								<p diff="del"> <loc href="http://css-discuss.incutio.com/wiki/Main_Page">CSS-Discuss Home Page</loc> </p>
							</item>
							<item diff="del"> <!-- broken link -->
								<p diff="del"> <loc href="http://css-discuss.incutio.com/wiki/Css_Layouts">CSS-Discuss on CSS Layouts</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="F1"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For content which uses CSS for positioning
							</p>
						<olist>
							<item>
								<p>Remove the style information from the document or turn off use of style sheets in the user agent.</p>
							</item>
							<item>
								<p>Check that the structural relations and the meaning of the content are preserved.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C7">
				<short-name>Using CSS to hide a portion of the link text </short-name>
				<applicability>
					<p>All technologies that support CSS .</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs" />
					<success-criterion idref="navigation-mechanisms-link" />
				</applies-to>
				<description>
					<p>The objective of this technique is to supplement the link text by adding additional text that describes the unique function of the link but styling the additional text so that it is not rendered on the screen by user agents that support CSS. When information in the surrounding context is needed to interpret the displayed link text, this technique provides a complete description of the link's input function while permitting the less complete text to be displayed.</p>
					<p>This technique works by creating a CSS selector to target text that is to be hidden. The rule set for the selector places the text to be hidden in a 1-pixel box with overflow hidden, and positions the text outside of the viewport. This ensures the text does not display on screen but remains accessible to assistive technologies such as screen readers and braille displays. Note that the technique does not use <code><![CDATA[visibility:hidden]]></code> or <code><![CDATA[display:none]]></code> properties, since these can have the unintentional effect of hiding the text from assistive technology in addition to preventing on-screen display.</p>
					<note>
						<p>This technique to hide link text has been advocated by some screen reader users and corporate Web authors. It has proved effective on some Web sites. Other screen reader users and accessibility experts don't recommend this as a general technique because the results can be overly chatty and constrain the ability of the experienced screen reader user to control the verbosity. The working group believes the technique can be useful for Web pages that do not have repetitive content in the hidden text areas.</p>
						<p>This technique can be used in combination with a style switching technique to present a page that is a <loc href="conforming-alternate-versiondef" linktype="glossary">conforming alternate version</loc> for non-conforming content. Refer to <specref
							ref="C29"/> and <loc href="conformance" locn-note="uc-conforming-alt-versions-head"
							linktype="understanding">Understanding Conforming Alternate Versions</loc> for more information. </p>
					</note>
				</description>
				<examples>
					<p>The following examples use the CSS selector and rule set below:</p>
					<code role="html401"><![CDATA[
a span {
height: 1px;
width: 1px;
position: absolute;
overflow: hidden;
top: -10px;
}
]]></code>
					<eg-group>
						<description>
							<p>This example describes a news site that has a series of short synopsis of stories followed by a link that says "full story". Hidden link text describes the purpose of the link.</p>
						</description>
						<code role="html401"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"> 
<head>
<meta http-equiv="Content-Type" content="text/xhtml; charset=UTF-8" /> 
<link href="access.css" rel="stylesheet" type="text/css" />
<title>Hidden Link Text</title>
</head>
<body> 
<p>Washington has announced plans to stimulate economic growth.
  <a href="#"> <span>Washington stimulates economic growth </span>
  Full Story</a></p>
</body>
</html>
]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>This example describes a resource that has electronic books in different formats. The title of each book is followed by links that say "HTML" and "PDF." Hidden text describes the purpose of each link.</p>
						</description>
						<code role="html401"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"> 
<head>
<meta http-equiv="Content-Type" content="text/xhtml; charset=UTF-8" /> 
<link href="access.css" rel="stylesheet" type="text/css" />
<title>Hidden Link Text </title>
</head>
<body>
<dl>
<dt>Winnie the Pooh </dt>
   <dd><a href="winnie_the_pooh.html">
      <span>Winnie the Pooh </span>HTML</a></dd>
   <dd><a href="winnie_the_pooh.pdf">
         <span>Winnie the Pooh </span>PDF</a></dd>
<dt>War and Peace</dt>
    <dd><a href="war_and_peace.html">
      <span>War and Peace </span>HTML</a></dd> 
    <dd><a href="war_and_peace.pdf">
      <span>War and Peace </span>PDF</a></dd>
</dl>
</body>
</html>
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://www.rnib.org.uk/professionals/webaccessibility/wacblog/Lists/Categories/Category.aspx?Name=Hidden%20barriers">Hidden barriers - out of sight</loc></p>
							</item>
							<item>
								<p><loc href="http://webaim.org/techniques/css/invisiblecontent/">CSS in Action: Invisible Content Just for Screen Reader Users</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G91"/>
					<!--<relatedtech idref="H30"/>-->
					<relatedtech idref="H33"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each <code><![CDATA[anchor]]></code> element using this technique:
							</p>
						<olist>
							<item>
								<p>Check that an element has been defined that confines its display to a pixel and positions text outside the display with overflow hidden</p>
							</item>
							<item>
								<p>Check that the element of that class is included in the content of the <code><![CDATA[anchor]]></code>
								</p>
							</item>
							<item>
								<p>Check that the combined content of the <code><![CDATA[anchor]]></code> describes the purpose of the link</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C8">
				<short-name>Using CSS letter-spacing to control spacing within a word</short-name>
				<applicability>
					<p>All technologies that support CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-sequence" />
					<success-criterion idref="visual-audio-contrast-text-presentation" />
					<success-criterion idref="visual-audio-contrast-text-images" />
				</applies-to>
				<description>
					<p>The objective of this technique is to demonstrate how the visual appearance of spacing in text may be enhanced via style sheets while still maintaining meaningful text sequencing. The CSS <code><![CDATA[letter-spacing]]></code> property helps developers control the amount of white space between characters. This is recommended over adding blank characters to control the spacing, since the blank characters can change the meaning and pronunciation of the word.</p>
				</description>
				<examples>
					<eg-group>
						<head>Separating characters in a word </head>
						<description>
							<p>The following CSS would add the equivalent of a space between each character in a level-2 heading:</p>
						</description>
						<code role="html401"><![CDATA[
h2
{
	letter-spacing: 1em;
}
]]></code>
						<description>
							<p>So for the markup:</p>
						</description>
						<code role="html401"><![CDATA[
<h2>Museum</h2>
]]></code>
						<description>
							<p>the rendered result might look something like:</p>
						</description>
						<code role="html401"><![CDATA[
M u s e u m
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.w3.org/TR/1998/REC-CSS2-19980512/text.html#spacing-props">CSS 2.0: Letter and word spacing</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="F1"/>
					<relatedtech idref="F32"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each word that appears to have non-standard spacing between characters:
							</p>
						<olist>
							<item>
								<p>Check whether the CSS <code><![CDATA[letter-spacing]]></code> property was used to control spacing.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C9">
				<short-name>Using CSS to include decorative images</short-name>
				<applicability>
					<p> Any technology that can use CSS to include images. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="sufficient"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to provide a mechanism to add purely
                        decorative images and images used for visual formatting to Web content
                        without requiring additional markup within the content. This makes it
                        possible for assistive technologies to ignore the non-text content. Some
                        user agents can ignore or turn off CSS at the user's request, so that
                        background images included with CSS simply "disappear" and do not interfere
                        with display settings such as enlarged fonts or high contrast settings. </p>
					<p>Background images can be included with the following CSS properties:</p>
					<ulist>
						<item>
							<p> <code><![CDATA[background]]></code>, </p>
						</item>
						<item>
							<p> <code><![CDATA[background-image]]></code>, </p>
						</item>
						<item>
							<p>
								<code><![CDATA[content]]></code>, combined with the <code><![CDATA[:before]]></code> and
                                    <code><![CDATA[:after]]></code> pseudo-elements, </p>
						</item>
						<item>
							<p> <code><![CDATA[list-style-image]]></code>. </p>
						</item>
					</ulist>
					<p>Note: This technique is not appropriate for any image that conveys
                        information or provides functionality, or for any image primarily intended
                        to create a specific sensory experience.</p>
				</description>
				<examples>
					<eg-group>
						<head>Background image for an HTML page </head>
						<description>
							<p> The stylesheet for a Web page specifies a background image for the
                                whole page.</p>
						</description>
						<code><![CDATA[…
  <style type="text/css">
    body { background: #ffe url('/images/home-bg.jpg') repeat; }
  </style>
</head>
<body>
...
]]></code>
					</eg-group>
					<eg-group>
						<head>Background image with CSS for image rollovers </head>
						<description>
							<p> The stylesheet for a Web page uses the CSS <code><![CDATA[background]]></code>
                                property to create a decorative rollover effects when a user hovers
                                the mouse pointer over a link. </p>
						</description>
						<code><![CDATA[a:hover { background: #ffe url('/images/hover.gif') repeat; color: #000;
  text-decoration: none;
}]]></code>
					</eg-group>
					<eg-group>
						<head>Background images with CSS to create rounded corners on
                            tabs or other elements </head>
						<description>
							<p> The styleseet for a Web page uses the CSS <code><![CDATA[background]]></code>
                                property to create rounded corners on elements. </p>
						</description>
						<code><![CDATA[…
  <style type="text/css">
    div#theComments { width:600px; }
    div.aComment { background: url('images/middle.gif') repeat-y left top; 
    margin:0 0 30px 0; }
    div.aComment blockquote { background: url('images/top.gif') no-repeat left top; 
    margin:0; padding:8px 16px; }
    div.aComment div.submitter { background:#fff url('images/bottom.gif') no-repeat left top; 
    margin:0; padding-top:30px; }
  </style>
</head>
<body>
  <div id="theComments">
    <div class="aComment">
      <blockquote>
        <p>Hi John, I really like this technique and I'm gonna use it on my own Website!</p>
      </blockquote>
      <div class="submitter">
        <cite><a href="http://example.com/">anonymous coward</a> from Elbonia</cite>
      </div>
    </div>
    <div class="aComment">
…
 </div>
</div>
…]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> The <loc href="http://www.w3.org/TR/1998/REC-CSS2-19980512/colors.html#propdef-background">background property in the CSS 2.0 specification</loc> </p>
							</item>
							<item>
								<p> The <loc href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/global.html#adef-background">HTML 4.01 specification</loc> states that the
                                        <code><![CDATA[background]]></code> attribute of the <code><![CDATA[body]]></code>
                                    element is deprecated </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C30"/>
					<relatedtech idref="F3"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check for the presence of decorative images </p>
							</item>
							<item>
								<p> Check that they are included with CSS </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If #1 is true, then #2 is true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C12">
				<short-name>Using percent for font sizes</short-name>
				<applicability>
					<p>CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" />
					<success-criterion idref="visual-audio-contrast-text-presentation" />
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
					<success-criterion idref="visual-audio-contrast-text-images" />
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="7-">
						<p>When font size is specified in any absolute units of measurement, such as points or pixels, the Text Size menu commands in Internet Explorer 7 and earlier do not resize the text.</p>
					</ua-issue>
					<ua-issue name="windows" version="general">
						<p>When High Contrast Mode has been set from the Accessibility Control Panel on Windows, IE6 increases the size of the page text as if a percentage change had been set for the outermost window via CSS. Standard CSS layout behavior causes relative scaling to be multiplied, so the scaling of text within elements will be different in subtle ways. Firefox and IE7 do not change the scaling of the content based on the system settings in a way that affects CSS layout, so this effect does not occur in those browsers.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to specify text font size proportionally so that user agents can scale content effectively. If a font-size is specified for the <el>body</el> element, all other elements inherit that value, unless overridden by a more specific selector.</p>
				</description>
				<examples>
					<eg-group>
						<head>Percent font sizes in CSS</head>
						<description>
							<p>This example defines the font size for the <el>strong</el> element so that its text will always be larger than the surrounding text, in whatever context it is used. Assuming that headings and paragraphs use different font sizes, the emphasized words in this example will each be larger than their surrounding text.</p>
						</description>
						<code><![CDATA[
strong {font-size: 120%}

...

<h1>Letting the <strong>user</strong> control text size</h1>
<p>Since only the user can know what size text works for him, 
it is <strong>very</strong> important to let him configure the text size.  
…]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/fonts.html">Cascading Style Sheets, Level 2 (CSS2), Fonts</loc> </p>
							</item>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/fonts.html#font-size-props">CSS 2 Font Size Property</loc> </p>
							</item>
							<item diff="del"> <!-- broken link -->
								<p diff="del"> <loc href="http://css-discuss.incutio.com/wiki/Using_Percentages">CSS-Discuss Font Size Using Percentages</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C13"/>
					<relatedtech idref="C14"/>
				</related-techniques>
				<tests diff="chg">
					<procedure>
						<olist>
							<item>
								<p>Check that the value of the CSS property that defines the font size is a percentage.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C13">
				<short-name>Using named font sizes</short-name>
				<applicability>
					<p>CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" />
					<success-criterion idref="visual-audio-contrast-text-presentation" />
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
					<success-criterion idref="visual-audio-contrast-text-images" />
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="7-">
						<p>When font size is given in absolute units of measurement, such as points or pixels, the Text Size menu commands in Internet Explorer 7 and earlier do not resize the text.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to specify a named font size that expresses the relative font size desired. These values provide hints so that the user agent can choose a font-size relative to the inherited font-size.</p>
				</description>
				<examples>
					<eg-group>
						<head>Named font sizes in CSS</head>
						<description>
							<p>This example selects a larger font size for <el>strong</el> elements so that their text will always be larger than the surrounding text, in whatever context they are used. Assuming that headings and paragraphs use different font sizes, the emphasized words in this example will each be larger than their surrounding text.</p>
						</description>
						<code><![CDATA[
strong {font-size: larger}

...

<h1>Letting the <strong>user</strong> control text size</h1>
<p>Since only the user can know what size text works for him, 
it is <strong>very</strong> important to let him configure the text size.  
…]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/fonts.html">Cascading Style Sheets, Level 2 (CSS2), Fonts</loc> </p>
							</item>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/fonts.html#font-size-props">CSS 2 Font Size Property</loc> </p>
							</item>
							<item diff="del"> <!-- broken link -->
								<p diff="del"> <loc href="http://css-discuss.incutio.com/wiki/Using_Keywords">CSS-Discuss Font Size Using Keywords</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C12"/>
					<relatedtech idref="C14"/>
				</related-techniques>
				<tests diff="chg">
					<procedure>
						<olist>
							<item>
								<p>Check that the value of the CSS property that defines the font size is one of <code><![CDATA[xx-small]]></code>, <code><![CDATA[xx-small]]></code>, <code><![CDATA[x-small]]></code>, <code><![CDATA[small]]></code>, <code><![CDATA[medium]]></code>, <code><![CDATA[large]]></code>, <code><![CDATA[x-large]]></code>, <code><![CDATA[xx-large]]></code>, <code><![CDATA[xsmaller]]></code>, or <code><![CDATA[larger]]></code>.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C14">
				<short-name>Using em units for font sizes</short-name>
				<applicability>
					<p>CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" />
					<success-criterion idref="visual-audio-contrast-text-presentation" />
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
					<success-criterion idref="visual-audio-contrast-text-images" />
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="6">
						<p>In Internet Explorer 6, using ems for font sizes will cause the text to grow more than using % or named font sizes. So, text-size/largest, might cause the text to grow more than 200% and have clipping problems.</p>
					</ua-issue>
					<ua-issue name="IE" version="7-">
						<p>When font size is given in absolute units of measurement, such as points or pixels, the Text Size menu commands in Internet Explorer 7 and earlier do not resize the text.</p>
					</ua-issue>
					<ua-issue name="IE" version="7">
						<p>Internet Explorer 7 only changes the text size when the style rule that applies to the text is defined within a style element; when using inline styles, that is, using an element's <att>style</att> attribute, the text size change is not supported.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to specify text font size in <code><![CDATA[em]]></code> units so that user agents can scale content effectively. Since the em is a property of the font, it scales as the font changes size. If a font-size is specified for the <el>body</el> element, all other elements inherit that value, unless overridden by a more specific selector.</p>
				</description>
				<examples>
					<eg-group>
						<head>Em font sizes in CSS</head>
						<description>
							<p>This example defines the font size for <code><![CDATA[strong]]></code> element so that its text will always be larger than the surrounding text, in whatever context it is used. Assuming that headings and paragraphs use different font sizes, the strong words in this example will each be larger than their surrounding text.</p>
						</description>
						<code><![CDATA[
strong {font-size: 1.6em}

...

<h1>Letting the <strong>user</strong> control text size</h1>
<p>Since only the user can know what size text works for him, 
it is <strong>very</strong> important to let him configure the text size.  </p>
…]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/fonts.html">Cascading Style Sheets, Level 2 (CSS2), Fonts</loc> </p>
							</item>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/fonts.html#font-size-props">CSS 2 Font Size Property</loc> </p>
							</item>
							<item diff="del"> <!-- broken link -->
								<p diff="del"> <loc href="http://css-discuss.incutio.com/wiki/Using_Ems">CSS-Discuss Font Size Using Ems</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C12"/>
					<relatedtech idref="C13"/>
				</related-techniques>
				<tests diff="chg">
					<procedure>
						<olist>
							<item>
								<p>Check that the value of the CSS property that defines the font size is expressed in <code><![CDATA[em]]></code> units.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C15">
				<!-- This technique was combined with C16 -->
				<short-name>Using CSS to change the presentation of a user interface component when it receives focus</short-name>
				<applicability>
					<p>CSS, HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-without-color" />
					<success-criterion idref="navigation-mechanisms-focus-visible" />
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Internet Explorer 6.0 and earlier versions for Windows do not support dynamic pseudo-classes for any elements except hyperlinks. Internet Explorer 7 does not support :focus styles for elements other than hyperlinks. Include the :active CSS pseudo class to achieve the same effect as :focus in Internet Explorer for (X)HTML links (a element). </p>
					</ua-issue>
					<ua-issue name="" version="">
						<p>Firefox 1.5, Firefox 2.0 and SeaMonkey 1.1 for Windows support dynamic pseudo-classes for text input fields, text areas, radio buttons, check boxes, select elements, submit/reset buttons, and button elements. However, setting different colors or borders when a radio button or a check box receives focus is not supported. </p>
					</ua-issue>
					<ua-issue name="" version="">
						<p>Opera 9.02 for Windows supports dynamic pseudo-classes for text input fields, text areas, radio buttons, check boxes, select elements, submit/reset buttons, but not for button elements. </p>
					</ua-issue>
					<ua-issue name="" version="">
						<p>Firefox 2.0, Opera 9.02 and SeaMonkey 1.1 for Windows also support adjacent sibling selectors for form labels. Firefox 1.5, Internet Explorer 6.0 and earlier versions for Windows do not support adjacent sibling selectors for form labels. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to demonstrate how visual appearance may be enhanced via style sheets to provide visual feedback when an interactive element has focus or when a user hovers over it using a pointing device. Highlighting the element that has focus or is hovered over can provide information such as the fact that the element is interactive or the scope of the interactive element. </p>
					<p>Providing visual feedback may be possible through more than one mode. Usually, it is attained through using a mouse to hover over the element or a keyboard to tab to the element. </p>
				</description>
				<examples>
					<eg-group>
						<head>Link elements</head>
						<description>
							<p>In this example, mouse and keyboard focus indicators have been applied to the link elements. CSS has been used to apply a background color when the link elements receive focus. </p>
							<p>Here is the content to be displayed:</p>
						</description>
						<code role="xhtml"><![CDATA[
<ul id="mainnav">
  <li class="page_item">Home</li>
  <li class="page_item"><a href="/services">Services</a></li>
  <li class="page_item"><a href="/projects">Projects</a></li>
  <li class="page_item"><a href="/demos">Demos</a></li>
  <li class="page_item"><a href="/about-us">About us</a></li>
  <li class="page_item"><a href="/contact-us">Contact us</a></li>
  <li class="page_item"><a href="/links">Links</a></li>
</ul>]]></code>
						<description>
							<p>Here is the CSS that changes the background color for the above elements when they receive mouse or keyboard focus:</p>
						</description>
						<code role="css"><![CDATA[
#mainnav a:hover, #mainnav a:active, #mainnav a:focus {
  background-color: #DCFFFF;
  color:#000066;
}]]></code>
					</eg-group>
					<eg-group>
						<head>Highlighting elements that receive focus</head>
						<description>
							<p>In this example, the :focus pseudo-class is used to change the style applied to input fields when they receive focus by changing the background color. </p>
						</description>
						<code role="xhtml"><![CDATA[
<html>
  <head>
    <style type="text/css">
      input.text:focus {
        background-color: #7FFF00; 
        color: #000;
      }
      input[type=checkbox]:focus + label, input[type=radio]:focus + label {
        background-color: #FF6; 
        color: #000; 
      }
    </style>
  </head>
  <body>
    <form method="post" action="form.php">
      <p><label for="fname">Name: </label>
        <input class="text" type="text" name="fname" id="fname" />
      </p>
      <p>
        <input type="radio" name="sex" value="male" id="sm" /> <label for="sm">Male</label><br />
        <input type="radio" name="sex" value="female" id="sf" /> <label for="sf">Female</label>
      <p>
    </form>
  </body>
</html>

            ]]></code>
						<description>
							<p>Here is a working example of this code: <loc href="focus-pseudo-class.html" linktype="examples">Example of highlighting elements that receive focus</loc>.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/selector.html#dynamic-pseudo-classes">CSS 2.0: 5.11.3 The dynamic pseudo-classes: :hover, :active, and :focus</loc>
								</p>
							</item>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/selector.html#adjacent-selectors">CSS 2.0: 5.7 Adjacent sibling selectors</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<tests>
					<procedure>
						<p>For each element able to attain focus: </p>
						<olist>
							<item>
								<p>Using a mouse, hover over the element. </p>
							</item>
							<item>
								<p>Check that the background or border changes color. </p>
							</item>
							<item>
								<p>Move the mouse away from the object before attempting keyboard focus. </p>
							</item>
							<item>
								<p>Using a keyboard, tab to the element.</p>
							</item>
							<item>
								<p>Check that the background or border changes color.</p>
							</item>
							<item>
								<p>Check that the background or border changes in color are removed when the element loses focus.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #2, #5 and #6 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C17">
				<short-name>Scaling form elements which contain text</short-name>
				<applicability>
					<p>(X)HTML, CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" />
					<!--success-criterion idref="visual-audio-contrast-visual-presentation"/-->
				</applies-to>
				<description>
					<p>The objective of this technique is to ensure text-based form controls resize when text size is changed in the user agent. This will allow users to enter text and read what they have entered in input boxes because the text is displayed at the size required by the user.</p>
					<p>Text-based form controls include input boxes (text and textarea) as well as buttons.</p>
				</description>
				<examples>
					<eg-group>
						<head>A Contact Form</head>
						<description>
							<p>A Contact Us form has some introductory information and then form controls for users to enter their first name, last name, telephone number and email address. All of the text and form controls have been implemented in a scalable way. This includes specifying a font size for the form controls themselves because the font size is not inherited in Internet Explorer.</p>
							<p>The XHTML component:</p>
						</description>
						<code role="xhtml"><![CDATA[<h1>Contact Us</h1>
<p>Please provide us with your details and we will contact you as soon as we can. Note that all of the form fields are required.</p>
<label for="fname">First Name</label><input type="text" name="fname" id="fname" /><br />
<label for="lname">Last Name</label><input type="text" name="lname" id="lname" /><br />
<label for="phone">Telephone</label><input type="text" name="phone" id="phone" /><br />
<label for="email">Email</label><input type="text" name="email" id="email" /><br />
<input type="submit" name="Submit" value="Submit" id="Submit" />]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code role="css"><![CDATA[h1 { font-size: 2em; }
            p, label, input { font-size: 1em; }]]></code>
						<description>
							<p>Here is a working example of this code: <loc href="input-resize.html" linktype="examples">Example of resizing input with CSS</loc>.</p>
						</description>
					</eg-group>
					<eg-group>
						<head>Radio button</head>
						<description>
							<p>This example works in IE with its text size feature. However, it doesn't scale in Firefox 2.0.</p>
							<p>The XHTML component:</p>
						</description>
						<code role="xhtml"><![CDATA[<input type="radio" name="r1" value="r1" id="r1" class="geomsize" />
<input type="checkbox" name="c1" id="c1" value="c1" class="geomsize" />]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code role="css"><![CDATA[input.geomsize {
width: 1.2em;
height: 1.2em;}]]></code>
						<description>
							<p>Here is a working example of this code: <loc href="radio-checkbox-resize.html" linktype="examples">Example of resizing radio buttons and checkboxes with CSS</loc>.</p>
						</description>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Enter some text into text-based form controls that receive user entered text.</p>
							</item>
							<item>
								<p>Increase the text size of the content by 200%.</p>
							</item>
							<item>
								<p>Check that the text in text-based form controls has increased by 200%.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#3 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C18">
				<short-name>Using CSS margin and padding rules instead of spacer images for layout design</short-name>
				<applicability>
					<p>All technologies that support CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="6+">
						<p>On the Microsoft Windows platform, Internet Explorer 5, Internet Explorer 5.5, Internet Explorer 6.0 in "quirks mode" and Internet Explorer 7 in "quirks mode" use a box model that deviates from the W3C CSS specification: in these browser versions, right and left padding, and right and left borders do not increase the total width of an element, so the space for the content inside such an element will be narrower. (This behavior is known as the "box model bug".) Internet Explorer 5.5 on Mac OS, and Internet Explorer 6 and 7 on Windows in "standards compliant mode" use the box model defined in the W3C CSS specification.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>Web designers sometimes use spacer images (usually 1x1 pixel, transparent GIFs) for better control over layout, for example in tables or to indent a paragraph. However, Cascading Style Sheets (CSS) allow sufficient control over layout to replace spacer images. The CSS properties for margins and padding can be used on their own or in combination to control the layout. The margin properties ('margin-top', 'margin-right', 'margin-bottom', 'margin-left', and the shorthand 'margin') can be used on any element that is displayed as a block; they add space at the outside of an element. The padding properties ('padding-top', 'padding-right', 'padding-bottom', 'padding-left', and the shorthand 'padding') can be used on any element; they add space inside the element.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following example consists of two parts: the CSS code, which specifies a margin on all sides of the table, and padding for the table cells; and the HTML code for the table, which does not contain spacer images and is not nested inside another table.</p>
						</description>
						<code role="xhtml"><![CDATA[
              
              table { margin: .5em; border-collapse: collapse; } 
              td, th { padding: .4em; border: 1px solid #000; }
            
            ...
            
              <table summary="Titles, authors and publication dates of books in Web development category">
                <caption>Books in the category 'Web development'</caption>
                <thead>
                  <tr>
                    <th>Title</th>
                    <th>Author</th>
                    <th>Date</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>How to Think Straight About Web Standards</td>
                    <td>Andrew Stanovich</td>
                    <td>1 April 2007</td>
                  </tr>
                </tbody>
              </table>
            
            ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://www.w3.org/TR/1998/REC-CSS2-19980512/box.html#margin-properties">Margin properties: 'margin-top', 'margin-right', 'margin-bottom', 'margin-left', and 'margin' in the CSS2 specification</loc></p>
							</item>
							<item>
								<p><loc href="http://www.w3.org/TR/1998/REC-CSS2-19980512/box.html#padding-properties">Padding properties: 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', and 'padding' in the CSS2 specification</loc></p>
							</item>
							<item>
								<p><loc href="http://veerle-v2.duoh.com/blog/comments/a_css_styled_table_version_2/">A CSS styled table version 2</loc></p>
							</item>
							<item>
								<p><loc href="http://en.wikipedia.org/wiki/Internet_Explorer_box_model_bug">IE box model bug</loc></p>
							</item>
							<item>
								<p><loc href="http://www.456bereastreet.com/archive/200612/internet_explorer_and_the_css_box_model/">Internet Explorer and the CSS box model </loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<tests/>
			</technique>
			<technique id="C19">
				<short-name>Specifying alignment either to the left OR right in CSS</short-name>
				<applicability>
					<p>All technologies that support CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
				</applies-to>
				<description>
					<p>This technique describes how to align blocks of text either left or right by setting the CSS <code><![CDATA[text-align]]></code> property.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>In the following example, text is aligned left. In the style sheet, define the class:</p>
						</description>
						<code><![CDATA[p.left {text-align: left}]]></code>
						<description>
							<p>In the content call the up the class.</p>
						</description>
						<code><![CDATA[<p class="left"> Lorem ipsum dolor sit …</p>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>In the following example, text is aligned right.</p>
						</description>
						<code><![CDATA[p.right {text-align: right}]]></code>
						<description>
							<p>In the content call the up the class.</p>
						</description>
						<code><![CDATA[<p class="right"> Lorem ipsum dolor sit …</p>]]></code>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that the text is aligned either left or right.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C20">
				<short-name>Using relative measurements to set column widths so that lines can average 80 characters or less when the browser is resized</short-name>
				<applicability>
					<p>CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" />
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
				</applies-to>
				<description>
					<p>The purpose of this technique is to ensure that CSS is used in a way that allows users to view content in such a way that line length can average 80 characters or less. This makes it possible for users with certain reading or vision disabilities that have trouble keeping their place when reading long lines of text to view and interact with the content more efficiently. This technique also allows for column width to grow wider as font sizes increase, which will reduce the possibility of clipping as the text size increases..</p>
					<p>
            Note that this technique does not require authors to use CSS to limit the width of lines of text to less than 80 characters in the default view. Rather, the recommendation to use relative measurements in CSS layouts helps to ensure that authors do not set column widths in such a way that makes it impossible for users to view content with line lengths of 80 characters or less. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>In this example the <el>div</el> width is set in ems in the stylesheet.</p>
							<note>
								<p>The CSS property <code><![CDATA[max-width]]></code> is not supported in versions of Internet Explorer 6 and below.</p>
							</note>
						</description>
						<code><![CDATA[#main_content {max-width: 70em}]]></code>
						<description>
							<p>And the text block would be placed inside the <el>div</el> in the content</p>
						</description>
						<code><![CDATA[
<div id="main_content"> 
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing ...</p>
</div>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>In this example the <el>div</el> width is set in percent in the stylesheet</p>
						</description>
						<code><![CDATA[#main_content {width: 90%}]]></code>
						<description>
							<p>And the text block would be placed inside the <el>div</el> in the content</p>
						</description>
						<code><![CDATA[
<div id="main_content"> 
  <p>Lorem ipsum dolor sit amet, consectetur adipisicing ...</p>
</div>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/box.html">CSS 2 Box Model</loc> </p>
							</item>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/visuren.html">CSS 2 Visual formatting Model</loc> </p>
							</item>
							<item>
								<p> <loc href="http://www.w3.org/TR/CSS2/visudet.html">CSS 2 Visual formatting Model Details</loc> </p>
							</item>
							<item diff="del"> <!-- broken link -->
								<p diff="del"> <loc href="http://css-discuss.incutio.com/wiki/Css_Layouts">CssLayouts</loc> </p>
							</item>
							<item>
								<p> <loc href="http://www.456bereastreet.com/archive/200504/about_fluid_and_fixed_width_layouts/">About fluid and fixed width layouts</loc> </p>
							</item>
							<item>
								<p> <loc href="http://cookiecrook.com/AIR/2003/train/accessiblecss.php">Accessible CSS</loc> </p>
							</item>
							<item>
								<p> <loc href="http://www.maxdesign.com.au/articles/em/">Ideal line length for content</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Test to see that the columns are defined in relative units.</p>
							</item>
							<item>
								<p>Check to see that line length can be set to 80 characters or less by resizing the browser window.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1 and #2 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C21">
				<short-name>Specifying line spacing in CSS</short-name>
				<applicability>
					<p>All technologies that support CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
				</applies-to>
				<description>
					<p>Many people with cognitive disabilities have trouble tracking lines of text when a block of text is single spaced. Providing spacing between 1.5 to 2 allows them to start a new line more easily once they have finished the previous one.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>Setting the element to 1.5 line height. In the style sheet set the characteristics of the element.</p>
						</description>
						<code><![CDATA[p { line-height: 150%; }]]></code>
						<description>
							<p>In the content the element will now be 1.5 line height, throughout the document.</p>
						</description>
						<code><![CDATA[<p> Lorem ipsum dolor sit …  </p>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>Setting a class to 1.5 line height (space-and-a-half line spacing). In the stylesheet, define the class.</p>
						</description>
						<code><![CDATA[p.tall {line-height:150%}]]></code>
						<description>
							<p diff="chg">In the content, call up the class = "left".</p>
						</description>
						<code><![CDATA[<p class="tall"> Lorem ipsum dolor sit …  </p>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>Setting a class to double-spaced line height. In the stylesheet, define the class.</p>
						</description>
						<code><![CDATA[p.tall {line-height:200%}]]></code>
						<description>
							<p diff="chg">In the content, call up the class = "right".</p>
						</description>
						<code><![CDATA[<p class="tall"> Lorem ipsum dolor sit …  </p>]]></code>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Open content in a browser.</p>
							</item>
							<item>
								<p>Check that the spacing between lines in blocks of text is between 1.5 and 2.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Test Procedure #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C22">
				<short-name>Using CSS to control visual presentation of text</short-name>
				<applicability>
					<p>All technologies that support CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" />
					<success-criterion idref="visual-audio-contrast-scale" />
					<success-criterion idref="visual-audio-contrast-text-presentation" />
					<success-criterion idref="visual-audio-contrast-text-images" />
				</applies-to>
				<description>
					<p>The objective of this technique is to demonstrate how CSS can be used to control the visual presentation of text. This will allow users to modify, via the user agent, the visual characteristics of the text to meet their requirement. The text characteristics include aspects such as size, color, font family and relative placement.</p>
					<p>CSS benefits accessibility primarily by separating document structure from presentation. Style sheets were designed to allow precise control - outside of markup - of character spacing, text alignment, object position on the page, audio and speech output, font characteristics, etc. By separating style from markup, authors can simplify and clean up the markup in their content, making it more accessible at the same time.</p>
					<p>Text within images has several accessibility problems, including the inability to:</p>
					<ulist>
						<item>
							<p>be scaled according to settings in the browser</p>
						</item>
						<item>
							<p>be displayed in colors specified by settings in the browser or rules in user-defined style sheets</p>
						</item>
						<item>
							<p>honor operating system settings, such as high contrast</p>
						</item>
					</ulist>
					<p>It is better to use real text for the text portion of these elements, and a combination of semantic markup and style sheets to create the appropriate visual presentation. For this to work effectively, choose fonts that are likely to be available on the user's system and define fallback fonts for users who may not have the first font that is specified. Newer machines and user agents often smooth or anti-alias all text, so it is likely that your headings and buttons will look nice on these systems without resorting to images of text.</p>
					<p>The following CSS properties are useful to style text and avoid the need for text in images:</p>
					<ulist>
						<item>
							<p>The <code><![CDATA[font-family]]></code> property is used to display the code aspect in a monospace font family.</p>
						</item>
						<item>
							<p>The <code><![CDATA[text-align]]></code> property is used to display the text to the right of the viewport.</p>
						</item>
						<item>
							<p>The <code><![CDATA[font-size]]></code> property is used to display the text in a larger size.</p>
						</item>
						<item>
							<p>The <code><![CDATA[font-style]]></code> property is used to display text in italics.</p>
						</item>
						<item>
							<p>The <code><![CDATA[font-weight]]></code> property is used to set how thick or thin characters in text should be displayed.</p>
						</item>
						<item>
							<p>The <code><![CDATA[color]]></code> property is used to display the color of text or text containers.</p>
						</item>
						<item>
							<p>The <code><![CDATA[line-height]]></code> property is used to display the line height for a block of text.</p>
						</item>
						<item>
							<p>The <code><![CDATA[text-transform]]></code> property is used to control the case of letters in text.</p>
						</item>
						<item>
							<p>The <code><![CDATA[letter-spacing]]></code> property is used to control the spacing of letters in text.</p>
						</item>
						<item>
							<p>The <code><![CDATA[background-image]]></code> property can be used to display text on a non-text background.</p>
						</item>
						<item>
							<p>The <code><![CDATA[first-line]]></code> pseudo class can be used to modify the presentation of the first line in a block of text.</p>
						</item>
						<item>
							<p>The <code><![CDATA[:first-letter]]></code> pseudo class can be used to modify the presentation of the first letter in a block of text.</p>
						</item>
						<item>
							<p>The <code><![CDATA[:before]]></code> and <code><![CDATA[:after]]></code> pseudo classes can be used to insert decorative non-text content before or after blocks of text.</p>
						</item>
					</ulist>
				</description>
				<examples>
					<eg-group>
						<head>Using CSS font-family to control the font family for text</head>
						<description>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p>The Javascript method to convert a string to uppercase is <code>toUpperCase()</code>.</p>
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
code { font-family:"Courier New", Courier, monospace }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS text-align to control the placement (alignment) of text</head>
						<description>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p class="right">This text should be to the right of the viewport.</p>  
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.right { text-align: right; }
]]></code>
					</eg-group>
					<eg-group>
						<head> Using CSS font-size to control the size of text</head>
						<description>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p>09 <strong class="largersize">March</strong> 2008</p>  
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
strong.largersize { font-size: 1.5em; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS color to control the color of text</head>
						<description>
							<note>
								<p>The style used in this example is not used to convey information, structure or relationships.</p>
							</note>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p>09 <em class="highlight">March</em> 2008</p>  
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.highlight{ color: red; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS font-style to italicize text</head>
						<description>
							<note>
								<p>The style used in this example is not used to convey information, structure or relationships.</p>
							</note>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p>The article is available in the <a href="http://www.example.com" class="featuredsite">Endocrinology 
Blog</a>.</p>
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.featuredsite{ font-style:italic; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS font-weight to control the font weight of the text</head>
						<description>
							<note>
								<p>The style used in this example is not used to convey information, structure or relationships.</p>
							</note>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p>This deal is available <span class="highlight">now!</span></p> 
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.highlight { font-weight:bold; color:#990000; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS text-transform to control the case of text</head>
						<description>
							<note>
								<p>The style used in this example is not used to convey information, structure or relationships.</p>
							</note>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p>09 <span class="caps">March</span> 2008</p>  
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.caps { text-transform:uppercase; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS line-height to control spacing between lines of text</head>
						<description>
							<p>The CSS <code><![CDATA[line-height]]></code> property is used to display the line height for the paragraph at twice the height of the font.</p>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p>Concern for man and his fate must always form the<br />  
chief interest of all technical endeavors. <br />
Never forget this in the  midst of your diagrams and equations. </p>
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
p { line-height:2em; }
]]></code>
						<description>
							<p>The CSS <code><![CDATA[line-height]]></code> property is used to display the line height for the text at less than the height of the font. The second line of text is positioned after the first line of text and visually appears as though the text is part of the first line but dropped a little.</p>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<h1 class="overlap"><span class="upper">News</span><br />
<span class="byline">today</span></h1>
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.overlap { line-height:0.2em;  }
.upper { text-transform:uppercase; }
.byline { color:red; font-style:italic; font-weight:bold; padding-left:3em; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS letter-spacing to space text</head>
						<description>
							<p>The CSS <code><![CDATA[letter-spacing]]></code> property is used to display the letters farther apart in the heading.</p>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<h1 class="overlap"><span class="upper">News</span><br />
<span class="byline">today</span></h1>
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.overlap { line-height:0.2em;  }
.upper { text-transform:uppercase; }
.byline { color:red; font-style:italic; font-weight:bold; padding-left:3em; letter-spacing:-0.1em; }
]]></code>
						<description>
							<p>The CSS <code><![CDATA[letter-spacing]]></code> property is used to display the letters closer together in the second line of text.</p>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<h1 class="upper2">News</h1>
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.upper2 { text-transform:uppercase; letter-spacing:1em; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS background-image to layer text and images</head>
						<description>
							<p>The CSS <code><![CDATA[font-style]]></code> property is used to display the textual component of a banner and <code><![CDATA[background-image]]></code> property is used to display a picture behind the text.</p>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<div id="banner"><span id="bannerstyle1">Welcome</span> 
<span id="bannerstyle2">to your local city council</span></div>
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
#banner { 
  color:white; 
  background-image:url(banner-bg.gif); 
  background-repeat:no-repeat; 
  background-color:#003399; 
  width:29em; 
}

#bannerstyle1 { 
  text-transform:uppercase; 
  font-weight:bold; 
  font-size:2.5em;
}

#bannerstyle2 { 
  font-style:italic; 
  font-weight:bold; 
  letter-spacing:-0.1em;
  font-size:1.5em; 
}]]></code>
					</eg-group>
					<eg-group>
						<head>Using CSS first-line to control the presentation of the first line of text</head>
						<description>
							<p>The CSS <code><![CDATA[:first-line]]></code> pseudo class is used to display the first line of text in a larger, red font.</p>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p class="startline">Once upon a time...<br />
...in a land far, far away...  </p>  
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.startline:first-line { font-size:2em; color:#990000; }
]]></code>
					</eg-group>
					<eg-group>
						<head> Using CSS first-letter to control the presentation of the first letter of text</head>
						<description>
							<p>The CSS <code><![CDATA[:first-letter]]></code> pseudo class is used to display the first letter in a larger font size, red and vertically aligned in the middle.</p>
							<p>The XHTML component:</p>
						</description>
						<code><![CDATA[
<p class="startletter">Once upon a time...</p>  
]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code><![CDATA[
.startletter:first-letter { font-size:2em; color:#990000; vertical-align:middle; }
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://www.w3.org/TR/CSS21/">CSS2.1 Specification</loc></p>
							</item>
							<item>
								<p><loc href="http://www.w3.org/Style/CSS/learning">Learning CSS</loc></p>
							</item>
							<item>
								<p><loc href="http://www.w3.org/TR/CSS-access">CSS and Accessibility</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C8"/>
					<relatedtech idref="C12"/>
					<relatedtech idref="C13"/>
					<relatedtech idref="C14"/>
					<relatedtech idref="C21"/>
					<relatedtech idref="SCR34"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check whether CSS properties were used to control the visual presentation of text </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C23">
				<short-name>Specifying text and background colors of secondary content such as banners, features and navigation in CSS while not specifying text and background colors of the main content</short-name>
				<applicability>
					<p>Pages that use CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
				</applies-to>
				<ua-issues>
					<ua-issue name="general" version="">
						<p>Most browsers allow the user to change the color settings to override the Web page's CSS and HTML color schemes. This is supported by all versions of Internet Explorer, Firefox, Mozilla, Netscape, and Opera after version 6. </p>
					</ua-issue>
					<ua-issue name="firefox" version="all">
						<p>When specified colors are overridden in Netscape and versions of Firefox before Firefox 3.0, most Javascript pop-up boxes and drop-down menus become unusable. Pop-up boxes gain a transparent background, superimposing the text of the box on the text of the page, and drop-down menus either become transparent or gain a dark-grey background. </p>
					</ua-issue>
					<ua-issue name="IE" version="6">
						<p>Internet Explorer 6 will not override background colors unless the same background color has also been selected in the system settings. </p>
					</ua-issue>
					<ua-issue name="Safari" version="all">
						<p>There are no color settings in Safari so it is not possible to over-ride specified colors. Similarly where colors are not specified Safari displays the page in black text on a white background, ignoring any color preferences from within the system settings.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>Some Web pages use colors to identify different groupings. The objective of this technique is to allow users to select specific color combinations for the text and background of the main content while retaining visual clues to the groupings and organization of the web page. When a user overrides the foreground and background colors of all the text on a page, visual clues to the grouping and organization of the Web page may be lost, making it much more difficult to understand and use. </p>
					<p>When an author does not specify the colors of the text and background of the main content, it is possible to change the colors of those regions in the browser without the need to override the colors with a user style sheet. Specifying the text and background colors of secondary content means that the browser will not override those colors.</p>
					<p>With this technique the author uses the default text color and background color of the main area. As a result the colors are completely determined by the user agent via the user's color preferences. The user can ensure that the color selection best meets his needs and provides the best reading experience. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>An HTML Web page uses CSS to specify the text and background colors of all secondary content such as navigation bars, menu bars, and the table of contents. Neither the text color nor background of the main content is specified. The user sets their own color preferences in the browser so that they view the main content in colors and contrasts that work well for them. The distinction between the separate sections of the page are still visually obvious. </p>
						</description>
					</eg-group>
					<eg-group>
						<description>
							<p>A music magazine has an article that is blue text on a white background. The site provides a link near the beginning of the page which assigns a different style sheet to the page. The new style sheet does not have any colors specified for the text or background.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item diff="del">
								<p diff="del"><loc href="http://www.bbc.co.uk/accessibility/win/seeing/colour/browser/sub_3.shtml">BBC's Web page with instructions how to change the browser colors in most browsers</loc></p>
								<ednote><edtext>This page redirects to a page indicating the resource is no longer available. If a replacement URL isn't found it will be removed.</edtext></ednote>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G148"/>
					<relatedtech idref="G156"/>
					<relatedtech idref="G175"/>
					<relatedtech idref="C25"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Change the text, link and background colors in the browser settings so they are different from the default color and different from those specified in the secondary content.</p>
								<note>
									<p>Do not select the option that tells the browser to ignore the colors specified in the page. </p>
								</note>
							</item>
							<item>
								<p>Check that the main content uses the new text, link and background colors. </p>
							</item>
							<item>
								<p>Check that the colors of the text, links and backgrounds in the secondary content has not changed. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #2 and #3 are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C24">
				<short-name>Using percentage values in CSS for container sizes</short-name>
				<applicability>
					<p>Pages that use CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
				</applies-to>
				<description>
					<p>The objective of this technique is to enable users to increase the size of text without having to scroll horizontally to read that text. To use this technique, an author specifies the width of text containers using percent values. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A newspaper has content in the middle of the window. The width of the container for the content is specified in page percentages, so that when a person with low vision increases the font size the text reflows inside the browser window at the new size and there is no need to scroll horizontally. </p>
						</description>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="C20"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that all container widths are specified as percentage values. </p>
							</item>
							<item>
								<p>Increase the text size to 200%. </p>
							</item>
							<item>
								<p>Check to make sure that horizontal scrolling is not required to read any line of text. </p>
							</item>
							<item>
								<p>Check that all text is still visible on the page. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1, #3, and #4 are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C25">
				<short-name>Specifying borders and layout in CSS to delineate areas of a Web page while not specifying text and text-background colors</short-name>
				<applicability>
					<p>Pages that use CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Most browsers allow the user to change the color settings to override Web author's CSS and HTML color schemes. This includes IE, all versions of Firefox, Mozilla, and Opera after version 6.</p>
					</ua-issue>
					<ua-issue name="Firefox" version="1.5+">
						<p>When specified colors are overridden in Netscape and versions of Firefox before Firefox 3.0, most Javascript pop-up boxes and drop-down menus become unusable. Pop-up boxes gain a transparent background, superimposing the text of the box on the text of the page, and drop-down menus either become transparent or gain a dark-grey background.</p>
					</ua-issue>
					<ua-issue name="IE" version="6">
						<p>IE 6 will not override background colors in the browser unless the same background color has also been selected in the system settings.</p>
					</ua-issue>
					<ua-issue name="Safari" version="all">
						<p>There are no color settings in Safari so it is not possible to over-ride specified colors. Similarly where colors are not specified Safari displays the page in black text on a white background, ignoring any color preferences from within the system settings.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The intent of this technique is to specify borders and layout using CSS and leave text and background colors to render according to the user's browser and/or operating system settings <phrase>(Please see above note in relation to Safari)</phrase>. This allows users to view the text in the colors they require while maintaining other aspects of the layout and page design such as columns of text, borders around sections or vertical lines between a menu and main content area. It will also prevent some display issues in some browsers when pages contain Javascript pop-up boxes or drop-down menus and have the colors overridden.</p>
					<p>Borders and layout indicators help many people with cognitive disabilities, as does flexibility over the text and background colors. Sometimes these two needs are in conflict when the user has to over-ride the author's color selection of text and background in the browser and the browser also removes the borders and the intended layout. This can mean the page is displayed in a single column with one block of content below the other, which can result in unnecessary whitespace and long lines of text. It can also mean that pop-up boxes gain a transparent background, superimposing the text of the box on the text of the page, and drop-down menus either become transparent or gain a dark-grey background. When a Web author does not specify the colors of any text and background, while specifying border colors and layout, it is possible, in most popular browsers, to change the text and background colors without affecting the other (author-specified) CSS declarations. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A Web page is designed using HTML. CSS is used to specify border colors around discrete areas of the page and to layout the content so that the menu floats to the left of the main content area. Neither the text color nor background is specified. The user sets their own colors in the browser. They can view the page in colors and contrasts that work well for them without disrupting the layout. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item diff="del">
								<p diff="del"><loc href="http://www.bbc.co.uk/accessibility/win/seeing/colour/browser/sub_3.shtml">BBC's Web page with instructions how to change the browser colors in most browsers</loc></p>
								<ednote><edtext>This page redirects to a page indicating the resource is no longer available. If a replacement URL isn't found it will be removed.</edtext></ednote>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G17"/>
					<relatedtech idref="G18"/>
					<relatedtech idref="G145"/>
					<relatedtech idref="G148"/>
					<relatedtech idref="G156"/>
					<relatedtech idref="C23"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Open the Web page in a browser that allows users to change colors of HTML content. </p>
							</item>
							<item>
								<p>Change the text, link and background colors in the browser settings so they are different than those currently set in the browser. </p>
								<note>
									<p>Make sure that you do not select the option that tells the browser to ignore the colors specified in the page.</p>
								</note>
							</item>
							<item>
								<p>Return to the page and check that it is displaying the page in the new text, link and background colors. </p>
							</item>
							<item>
								<p>Check that any borders are still displayed and that the layout is retained. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #3 and Check #4 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C26">
				<short-name>Providing options within the content to switch to a layout that does not require the user to scroll horizontally to read a line of text</short-name>
				<applicability>
					<p>Pages that use CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation" />
				</applies-to>
				<description>
					<p>There may be situations where an author needs to use a layout that requires horizontal scrolling. In that case, it is sufficient to provide options within the content that switch to a layout that does not require the user to scroll horizontally to read a line of text. This may be achieved using standard style switching technology. </p>
					<p>It should be noted that it is also sufficient to lay out the content in such a way that horizontal scrolling is required to access content, but that it is not necessary to scroll horizontally in order to read a line of text.</p>
					<p>For instance, a spreadsheet that requires horizontal scrolling is acceptable if no horizontal scrolling is necessary for each column individually. (i.e., scrolling is only necessary to see other columns, but not for the left or right edges of each individual column. I find it hard to formulate this in a completely unambiguous way.) </p>
					<note>
						<p>This technique can be used in combination with a style switching technique to present a page that is a <loc href="conforming-alternate-versiondef" linktype="glossary">conforming alternate version</loc> for non-conforming content. Refer to <specref
							ref="C29"/> and <loc href="conformance" locn-note="uc-conforming-alt-versions-head"
							linktype="understanding">Understanding Conforming Alternate Versions</loc> for more information. </p>
					</note>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A real estate company has an online annual report that has an identical layout to that of their print version, and as such, requires horizontal scrolling to read a line of text. A control is on the page that switches the stylesheet and provides a layout that does not require horizontal scrolling. </p>
						</description>
					</eg-group>
					<eg-group>
						<description>
							<p>A financial spreadsheet is online. It includes text explaining changes in the housing market in January. Off-screen to the right, there is a column with an explanation of changes to the market in September. The user can horizontally scroll to the September area and read each line of text without any further scrolling when the window size is maximized. </p>
						</description>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="C20"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Open the content that requires horizontal scrolling on a full screen window. </p>
							</item>
							<item>
								<p>Check that there is an option within the content to switch to a layout that does not require the user to scroll horizontally to read a line of text. </p>
							</item>
							<item>
								<p>Activate the option. </p>
							</item>
							<item>
								<p>Check to make sure that horizontal scrolling is not required to read any line of text. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #2 and #4 are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C27">
				<short-name>Making the DOM order match the visual order</short-name>
				<applicability>
					<p>CSS used with HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-sequence" />
					<success-criterion idref="navigation-mechanisms-focus-order" />
				</applies-to>
				<description>
					<p>The objective of this technique is to ensure that the order of content in the source code is the same as the visual presentation of the content. The order of content in the source code can be changed by the author to any number of visual presentations with CSS. Each order may be meaningful in itself but may cause confusion for assistive technology users. This could be due to the user switching off the author-specified presentation, by accessing the content directly from the source code (such as with a screen reader), or by interacting with the content with a keyboard. If a blind user, who reads the page with a screen reader that follows the source order, is working with a sighted user who reads the page in visual order, they may be confused when they encounter information in different orders. A user with low vision who uses a screen magnifier in combination with a screen reader may be confused when the reading order appears to skip around on the screen. A keyboard user may have trouble predicting where focus will go next when the source order does not match the visual order. </p>
					<p>There may also be situations where the visually presented order is necessary to the overall understanding of the page, and if the source order is presented differently, it may be much more difficult to understand. </p>
					<p>When the source order matches the visual order, everyone will read the content and interact with it in the same (correct) order. </p>
					<note>
						<p>The <att>tabindex</att> attribute in HTML has two functions. One is to make an element focusable and the other is to assign the element a position in the focus order. A <att>tabindex</att> of 0 makes an element focusable, but adds it to the focus order in the order of source elements. The focus order will follow positive values of tabindex in ascending order. Setting <att>tabindex</att> values that result in an order different from the order of elements in the Document Object Model (DOM) can mean the order is incorrect for users of assistive technologies. This is largely because the tabindex property is specified in the HTML or XHTML and not the CSS. This may change in future specifications. It may also differ from the visual presentation order. </p>
					</note>
				</description>
				<examples>
					<ulist>
						<item>
							<p>An online newspaper has placed a navigation bar visually in the top left corner of the page directly below its initial logo. In the source code, the navigation elements appear after the elements encoding the logo. </p>
						</item>
					</ulist>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://www.microsoft.com/download/en/details.aspx?id=18359" diff="chg">Microsoft Internet Explorer Developer Toolbar</loc>. Allows examination of script-generated DOM in Microsoft Internet Explorer.</p>
							</item>
							<item>
								<p><loc href="http://getfirebug.com/">Firebug</loc>. Allows examination of script-generated DOM in Firefox.</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H4"/>
					<relatedtech idref="G57"/>
					<relatedtech idref="G59"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Visually examine the order of the content in the Web page as it is presented to the end user.</p>
							</item>
							<item>
								<p>Examine the elements in the DOM using a tool that allows you to see the DOM. </p>
							</item>
							<item>
								<p>Ensure that the the order of the content in the source code sections match the visual presentation of the content in the Web page. (e.g., for an English language page the order is from top to bottom and from left to right.) " </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Step #3 is true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C28">
				<short-name>Specifying the size of text containers using em units</short-name>
				<applicability>
					<p>CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" />
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="6">
						<p>In Internet Explorer 6, Windows High Contrast Mode will resize percent-based fonts in nested tables to be too large. Firefox and later versions of IE do not resize fonts in High Contrast Mode, and don't have this issue. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to specify the width and/or height of containers, that contain text or that will accept text input, in <code><![CDATA[em]]></code> units. This will allow user agents that support text resizing to resize the text containers in line with changes in text size settings. </p>
					<p>The width and/or height of text containers that have been specified using other units risk text cropping because it falls outside the container boundaries when the text size has been increased. </p>
					<p>The containers generally control the placement of text within the Web page and can include layout elements, structural elements and form controls. </p>
				</description>
				<examples>
					<eg-group>
						<head> Em units for sizes for layout container containing text </head>
						<description>
							<p>In this example, a <el>div</el> element, with <att>id</att> value of "nav_menu", is used to position the navigation menu along the left-hand side of the main content area of the Web page. The navigation menu consists of a list of text links, with <att>id</att> value of "nav_list." The text size for the navigation links and the width of the container are specified in <code><![CDATA[em]]></code> units. </p>
						</description>
						<code><![CDATA[
#nav_menu { width: 20em; height: 100em }

#nav_list { font-size: 100%; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Em units for text-based form controls </head>
						<description>
							<p>In this example, <el>input</el> elements that contain text or accept text input by the user have been given the class name "form1." CSS rules are used to define the font size in <code><![CDATA[percent]]></code> units and width for these elements in <code><![CDATA[em]]></code> units. This will allow the text within the form control to resize in response to changes in text size settings without being cropped (because the width of the form control itself also resizes according to the font size). </p>
						</description>
						<code><![CDATA[
input.form1 { font-size: 100%; width: 15em; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Em units in dropdown boxes </head>
						<description>
							<p>In this example, <el>select</el> elements have been given the class name "pick." CSS rules are used to define the font size in <code><![CDATA[percent]]></code> units and width in <code><![CDATA[em]]></code> units. This will allow the text within the form control to resize in response to changes in text size settings without being cropped. </p>
						</description>
						<code><![CDATA[
input.pick { font-size: 100%; width: 10em; }
]]></code>
					</eg-group>
					<eg-group>
						<head>Em units for non-text-based form controls </head>
						<description>
							<p>In this example, <el>input</el> elements that define checkboxes or radio buttons have been given the class name "choose." CSS rules are used to define the width and height for these elements in em units. This will allow the form control to resize in response to changes in text size settings. </p>
						</description>
						<code><![CDATA[
input.choose { width: 1.2em; height: 1.2em; }
]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="C12"/>
					<relatedtech idref="C14"/>
					<relatedtech idref="C17"/>
					<relatedtech idref="C20"/>
				</related-techniques>
				<tests>
					<procedure>
						<ulist>
							<item>
								<p>Identify containers that contain text or allow text input.</p>
							</item>
							<item>
								<p>Check the container's width and/or height are specified in <code><![CDATA[em]]></code> units.</p>
							</item>
						</ulist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C29">
				<short-name>Using a style switcher to provide a conforming alternate version</short-name>
				<applicability>
					<p>CSS used with client-side or server-side scripting. </p>
				</applicability>
				<applies-to>
					<conformance-criterion idref="cc1" relationship="sufficient"/>
				</applies-to>
				<description>
					<p>When some aspect of the default presentation of a Web page does not meet a Success Criterion, it is possible to meet that requirement using the "Alternate Version" clause in the conformance requirements (Conformance Requirement 1). For some requirements, invoking a style switcher via a link or control on the page that can adjust the presentation so that all aspects of the page conform at the level claimed allows authors to avoid having to provide multiple versions of the same information.</p>
					<p>The objective of this technique is to demonstrate how CSS can be used in combination with scripting to provide conforming alternate versions of a Web page. In this technique, an author provides alternative views of the content by providing controls that adjust the CSS that is used to control the visual presentation of content. Controls provided within the Web page allow users to select or modify the presentation in a way that meets the success criterion at the level claimed. This makes it possible for different visual presentations to be selected by users in situations such as the following:</p>
					<ulist>
						<item>
							<p>the user may not be able to adjust browser or operating system settings, due to a lack of familiarity or rights </p>
						</item>
						<item>
							<p>the text is provided in a manner that does not respond to browser or operating system settings (such as text within an image) </p>
						</item>
						<item>
							<p>the default presentation of the content does not include sufficient contrast for some users </p>
						</item>
					</ulist>
					<p>For this technique to be used successfully, three things must be true. </p>
					<olist>
						<item>
							<p>The link or control on the original page must itself meet the success criteria to be met via the alternate presentation. For example, if a style switcher is used to provide increased font sizes and the control is presented using a small font, users may not be able to activate the control and view the alternate presentation. </p>
						</item>
						<item>
							<p>The new page must contain all the same information and functionality as the original page. </p>
						</item>
						<item>
							<p>The new page must conform to all of the Success Criteria for the desired level of conformance. For example, an alternate stylesheet can not be used to meet one requirement if it causes a different requirement to no longer conform. </p>
						</item>
					</olist>
					<p>When using a style switcher, it is important to consider the following challenges and limitations: </p>
					<ulist>
						<item>
							<p>The number and type of changes that a user can make is limited to the scope of the controls provided by the author of the Web page. A variety of presentation and preferences should be provided in order to address the needs of as wide an audience as possible. However, it is also important for authors to consider interactions between preferences and the complexity for users that might result from providing large numbers of options to users.</p>
						</item>
						<item>
							<p>Maintaining the user's preference from one page to the next may be achieved by storing a cookie on the user's machine (see Resources section for more information) or by including their preferences in a profile saved on the Web server by passing a query string parameter, or by other means. </p>
						</item>
						<item>
							<p>The technical method used to implement a style switcher may be subject to the support and availability of one or more technologies on the user's machine (for example, many client-side solutions require support for both JavaScript and CSS). Unless these technologies are relied upon for conformance, authors should consider using server-side technologies where client-side support and availability of technologies can not be assured. Alternatively, the use of techniques which ensure that content will transform gracefully when one or more of the technologies used are not available can be an effective way to enhance pages when support for these technologies is not relied upon for conformance.</p>
						</item>
					</ulist>
				</description>
				<examples>
					<eg-group>
						<head>Using a JavaScript control to apply a different external CSS file </head>
						<description>
							<p>This example is of a page that provides links to change text and background colors for the page via JavaScript. The links should only be inserted if JavaScript is supported by and available on the user's system. Otherwise, selecting the links will not result in the desired changes. This can be achieved by using script to insert the links themselves (which means that the links would only be present when scripting is supported and available). </p>
							<p>The following code shows the JavaScript-dependent color-change links and a snippet of other content in the Web page, the associated style sheet rules, and the JavaScript that changes the style sheet in use when a color-change link is selected. </p>
							<p>The example applies only to the current page view. In a production environment, it would be advisable to save this preference in a cookie or server-side user profile, so that users would only have to make the selection once per site. </p>
							<p>The XHTML components:</p>
						</description>
						<code><![CDATA[
In <head> section:

  <link href="main.css" rel="stylesheet" type="text/css" />
  <link id="currentCSS" href="defaultColors.css" rel="stylesheet" type="text/css" />

In <body> section:

<div id="colorswitch">
<p>Change colors:</p>
  <ul class="inline">
    <li><a href="#" onClick="javascript:changeColors('altColors1.css');return false;" 
      id="altColors1">dark blue on white</a></li>
    <li><a href="#" onClick="javascript:changeColors('altColors2.css');return false;" 
      id="altColors2">yellow on black</a></li>
    <li><a href="#" onClick="javascript:changeColors('altColors3.css');return false;" 
      id="altColors3">black on pale yellow</a></li>
    <li><a href="#" onClick="javascript:changeColors('altColors4.css');return false;" 
      id="altColors4">black on white</a></li>
    <li><a href="#" onClick="javascript:changeColors('defaultColors.css');return false;" 
      id="default">Reset to default</a></li>
  </ul>
</div>
<div id="mainbody">
  <h1>Conference report</h1>
  <p>Last week's conference presented an impressive line-up of speakers...</p>
</div>

]]></code>
						<description>
							<p>The CSS components:</p>
						</description>
						<code><![CDATA[
In main.css:

body{ font-family: Geneva, Arial, Helvetica, sans-serif; margin: 2em; }

#mainbody { 
    padding: 1em; 
}

#colorswitch {
    float: right; 
    width: 12em; 
    border: 1px #000066 solid; 
    padding:0 1em 1em 1em; margin:0;
}

#colorswitch p { 
    padding-top:.5em; 
    font-weight:bold;
}

In defaultColors.css:

body, p { 
    color:#000000; 
    background-color:#FFFFFF; 
}

h1, h2, h3 {
        color:#990000; 
        background-color:#FFFFFF;
}

In altColors1.css:

body, h1, h2, h3, p, a { 
    color:#000066; 
    background-color:#FFFFFF; 
}

In altColors2.css:

body, h1, h2, h3, p, a { 
    color:#FFFF33; 
       background-color:#000000; 
}

In altColors3.css:

body, h1, h2, h3, p, a { 
    color:#000000; 
    background-color:#FFFF99; 
}

In altColors4.css:

body, h1, h2, h3, p, a { 
    color:#000000; 
    background-color:#FFFFFF; 
}
  ]]></code>
						<description>
							<p>The JavaScript components:</p>
						</description>
						<code><![CDATA[
function changeColors (newCSS)
{
  document.getElementById('currentCSS').href = newCSS; 
}
]]></code>
						<description>
							<p>A working example of this code, <loc
								xmlns:xlink="http://www.w3.org/1999/xlink" href="ex1/index.html"
								linktype="examples">Using a JavaScript control to apply a different external CSS file</loc>, is available.</p>
						</description>
					</eg-group>
					<eg-group>
						<head>Using a client-side JavaScript to change a CSS property </head>
						<description>
							<p>This example can be used for simple changes to a section of content and may be less practical for complex sites or pages. The example uses a client-side JavaScript to change the class name to visually present the user's color selection (from a defined set of options) as a background for highlighting specific content. </p>
							<note>
								<p>The following code includes JavaScript calls within the XHTML code to aid understanding of the technique. However, the author is encouraged to use current best practice for including JavaScript (see resources for more information about Unobtrusive JavaScript and progressive enhancement). </p>
							</note>
							<p>The XHTML components:</p>
						</description>
						<code><![CDATA[
<h1>Product comparison</h1>
<p>The products you selected to compare are listed below. 
Any differences between the products are highlighted and italicized.</p>
<p class="inlinePara">Change hightlight color: </p>
<ul class="inline">
  <li><a href="#" onClick="changeColor('hghltLightYellow');return false;" 
    class="hghltLightYellow">light yellow</a></li>
  <li><a href="#" onClick="changeColor('hghltBrightYellow');return false;" 
    class="hghltBrightYellow">bright yellow</a></li>
  <li><a href="#" onClick="changeColor('hghltLightBlue');return false;" 
    class="hghltLightBlue">light blue</a></li>
  <li><a href="#" onClick="changeColor('hghltBrightBlue');return false;" 
    class="hghltBrightBlue">bright blue</a></li>
  <li><a href="#" onClick="changeColor('hghltLightRed');return false;" 
    class="hghltLightRed">light red</a></li>
  <li><a href="#" onClick="changeColor('hghltDrkRed');return false;" 
    class="hghltDrkRed">dark red</a></li>
</ul>
<table width="400" border="1">
  <tr>
    <td> </td>
    <th scope="col">Product 1</th>
    <th scope="col">Product 2</th>
  </tr>
  <tr>
    <th scope="row">Aspect 1</th>
    <td>Yes</td>
    <td>Yes</td>
  </tr>
  <tr>
    <th scope="row">Aspect 2</th>
    <td class="hghltLightYellow">Yes</td>
    <td class="hghltLightYellow">No</td>
  </tr>
  <tr>
    <th scope="row">Aspect 3</th>
    <td>Yes</td>
    <td>Yes</td>
  </tr>
</table>

]]></code>
						<description>
							<p>The CSS components:</p>
						</description>
						<code><![CDATA[
body { color:#000000; background-color:#FFFFFF; }

.hghltLightYellow { color: #000000; background-color: #FFFF99; font-style:oblique; }
.hghltBrightYellow { color: #000000; background-color: #FFFF00; font-style:oblique; }
.hghltLightBlue { color: #000000; background-color: #33FFFF; font-style:oblique; }
.hghltBrightBlue { color: #FFFFFF; background-color: #0000FF; font-style:oblique; }
.hghltLightRed { color: #000000; background-color: #FF6266; font-style:oblique; }
.hghltDrkRed { color: #FFFFFF; background-color: #993300; font-style:oblique; }

.inlinePara {display:inline; }
.inline {display: inline; margin-left:0px; padding-left:0px; line-height:3em; }
.inline li { display:inline; }
.inline li a {padding: 0.5em 1em; border: 2px solid #000000; }

]]></code>
						<description>
							<p>The JavaScript components:</p>
						</description>
						<code><![CDATA[
function changeColor(hghltColor)
{
  // collects table data cells into an array
 
 var els = document.getElementsByTagName('td');

  // for each item in the array, look for a class name starting with "hghlt"
  // if found, change the class value to the current selection
  // note that this script assumes the  'td' class attribute is only used for highlighting

  for (var i=0; i<els.length; i++)
  {
    if (els[i].className.indexOf("hghlt") == 0) { els[i].className = hghltColor; }
  }
}

]]></code>
						<description>
							<p>A working example of this code, <loc
								xmlns:xlink="http://www.w3.org/1999/xlink" href="ex2/index.html"
								linktype="examples">Using a client-side JavaScript to change a CSS property</loc>, is available.</p>
						</description>
					</eg-group>
					<eg-group>
						<head>Using PHP $_GET to apply a different external CSS file </head>
						<description>
							<p>This simple example uses PHP $_GET to assign one of two available external style sheets. Similar functionality could be achieved using a variety of PHP features. The example applies only to the current page view. In a production environment, it would be advisable to save this preference in a cookie or server-side user profile, so that users would only have to make the selection once per site. </p>
							<p>The following code is PHP, but a similar approach would work with a variety of server-side technologies. </p>
							<p>The PHP and XHTML components: </p>
						</description>
						<code><![CDATA[
At the beginning of the PHP page:

<?php
$thestyle = $_GET['set'];
if ($thestyle == "style1")
	{
	$thestyle = "style2";
	}
else
	{
	$thestyle = "style1";
	}
?>

In the <head> section:

   <link rel="stylesheet" type="text/css" media="screen" href="<?php echo($thestyle);?>.css" >

In <body> section:

<?php
if ($thestyle == "style1") {
	echo "<a href=\"index.php?set=style1\">Switch to Style Sheet Two</a>";
	}
else {
	echo "<a href=\"index.php?set=style2\">Switch to Style Sheet One</a>";
	}
?>

<div id="mainbody">
  <h1>Conference report</h1>
  <p>Last week's conference presented an impressive line-up of speakers...</p>
</div>

]]></code>
						<description>
							<p>The CSS components: </p>
						</description>
						<code><![CDATA[
In style1.css:

  body, p { color:#000000; background-color:#FFFFFF; }
  h1, h2, h3 {color:#990000; background-color:#FFFFFF; }

In style2.css:

  body, h1, h2, h3, p, a { color:#FFFF00; background-color:#000000; }

]]></code>
						<description>
							<p>A working example of this code, <loc
								xmlns:xlink="http://www.w3.org/1999/xlink" href="ex3/index.php"
								linktype="examples">Using PHP $_GET to apply a different external CSS file</loc>, is available.</p>
						</description>
					</eg-group>
					<eg-group>
						<head>Using JSP to provide an alternative style sheet </head>
						<description>
							<p>The example below uses two files </p>
							<ulist>
								<item>
									<p>a Java Server Page (JSP) with the form and the the form processing code, and </p>
								</item>
								<item>
									<p>an include file with functions used by the previous page and in other pages use the same style. </p>
								</item>
							</ulist>
							<p>The server-side code outputs a normal link element for the stylesheet that the user chooses and link elements with "alternate stylesheet" for the other styles. The code can thus be used as a fallback for the client-side code in the second example. </p>
							<p>The JSP page with the form: </p>
						</description>
						<code><![CDATA[
 <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
 %><%@include file="_jsp/styleswitch.jsp"%><?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
 <head>
   <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
   <title>Change Style</title>
   <%
     String fStyle = "";
     String styleName = "style";
     String defaultStyle = "default";
     Cookie[] cookies = request.getCookies();
 
     // get style from post request parameters
     if (request.getMethod().equals("POST") && request.getParameter("styleSelect") != null) {
       fStyle = request.getParameter("styleSelect");
       // code that validates user input (security) not shown
       
       if (fStyle.equals("nostyle")) { // user prefers no author style
       } else { // user requests author style
         out.println(createStyleLinks(fStyle).toString());
       }
       
       storeStylePreferenceCookie(request, response, fStyle);
     } else if (request.getMethod().equals("GET")) { 
     // GET request; get style from cookie; else default style links
       // get style from cookie
       if (cookies != null) {
         // get style from cookies
         fStyle = getStyleFromCookies(cookies);
 
         if ( !fStyle.equals("NULL_STYLE") ) { // user requests author style
             out.println(createStyleLinks(fStyle).toString());
         } else { // no cookie for style; process request for style preference
           // default style links
           out.println(createStyleLinks(defaultStyle).toString());
         }
       } else { // GET request without cookies: default styles
         out.println(createStyleLinks(defaultStyle).toString());
       }//end else cookies
     }
   %>
 </head>
 <body id="home">
   <form action="_styleSwitch.jsp" method="post" id="styleswitchform" name="styleswitchform">
     <p><label for="styleSelect">Select style: </label>
       <select id="styleSelect" name="styleSelect">
         <option value="default">Default (shades of green)</option>
         <option value="wonb">White on black</option>
         <option value="bonw">Black on white</option>
       </select>
       <input type="submit" value="Change Style" />
     </p>
   </form>
 </body>
 </html>
 ]]></code>
						<description>
							<p>The styleswitcher.jsp file included in the previous file: </p>
						</description>
						<code><![CDATA[
 <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
 <%!
   /**
    * Get the links (link elements) to the CSS files based on cookies, ...
   */
   private String getStyleLinks(HttpServletRequest request) {
     String styleLinks = "";
     Cookie[] cookies = request.getCookies();
     String defaultStyle = "default";
     String tempStyle = "";
     // GET request; get style from cookie; else default style links
     // get style from cookie
     if (cookies != null) {
       // get style from cookies
       tempStyle = getStyleFromCookies(cookies);
 
       if ( tempStyle.equals("NULL_STYLE") ) { 
         // no cookie for style; process request for style preference
         // default style links
         styleLinks = createStyleLinks(defaultStyle).toString();
       } else { // user requests author style
         styleLinks = createStyleLinks(tempStyle).toString();
       }
     } else { // GET request without cookies: default styles
       styleLinks = createStyleLinks(defaultStyle).toString();
     }//end else cookies
     
     return styleLinks;
   }
 
   /**
    * Get style cookie from request
   */
   private String getStyleFromCookies( Cookie[] cookies ) {
     String fStyle = "NULL_STYLE";
     for (int i = 0; i < cookies.length; i++) {
       Cookie cookie = cookies[i];
       String name = cookie.getName();
       
       if ( name.equals("style") ) {
         fStyle = cookie.getValue();
         // code that validates cookie value (security) not shown
       }
     }
     return fStyle;
   }
 
   /**
    * Store the style preference in a persistent cookie
   */
   private void storeStylePreferenceCookie(HttpServletRequest request, 
     HttpServletResponse response, String theStyle) {
     final int ONE_YEAR = 60 * 60 * 24 * 365;
     Cookie styleCookie = new Cookie("style", theStyle);
     styleCookie.setMaxAge(ONE_YEAR);
     response.addCookie(styleCookie);
   }
 
   /**
    * Create the link elements for the stylesheets
   */
   private StringBuffer createStyleLinks(String prefStyle) {
     StringBuffer theStyleLinks = new StringBuffer();
     //two-dimensional array with identifiers (adding '.css' gives the name of the CSS file) 
     // and strings for the title attribute of the link element
    // the identifiers must correspond to the in the "value" attributes in the "option"
    // elements in the style switcher form
     String [] [] styles = {
       { "default", "Default style"},
       { "wonb", "White on black"},
       { "bonw", "Black on white"}
     };
 
     // loop over 2dim array: if styles[i][1] matches prefStyle, 
     // output as normal, else as alternate stylesheet
     for (int i = 0; i < styles.length; i++) {
       if ( styles[i][0].equals(prefStyle) ) { // output pref stylesheet as normal stylesheet
         theStyleLinks.append("<link rel=\"stylesheet\" href=\"_css/").append(styles[i][0])
           .append(".css\" title=\"").append(styles[i][1]).append("\" type=\"text/css\" />").append("\n");
       } else { // output other stylesheets as alternate stylesheets
         theStyleLinks.append("<link rel=\"alternate stylesheet\" href=\"_css/")
           .append(styles[i][0]).append(".css\" title=\"").append(styles[i][1])
           .append("\" type=\"text/css\" />").append("\n");
       }
     } // end for loop
 
     return theStyleLinks;
   }
 %>
 ]]></code>
						<description>
							<p>Other JSP pages can use this code by means of the following include and scriptlet code:</p>
						</description>
						<code><![CDATA[
 <%@include file="_jsp/styleswitch.jsp"%><% out.println(getStyleLinks(request)); %>
 ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item diff="del"> <!-- broken link -->
								<p diff="del"><loc href="http://css-discuss.incutio.com/wiki/Style_Switching">StyleSwitching  - css-discuss</loc></p>
							</item>
							<item>
								<p><loc href="http://www.456bereastreet.com/archive/200608/build_your_own_php_style_sheet_switcher/">Build your own PHP style sheet switcher</loc></p>
							</item>
						</ulist>
					</see-also>
					<see-also>
						<head>Using cookies</head>
						<p>A user's selection can be made persistent across pages, and from one visit to another, by storing information on the user's computer via a cookie. This functionality requires cookies to be supported by and allowed on the user's computer. Cookies can be created, read, modified and erased by using client-side scripts, such as Javascript, or by server-side scripts, such as CGI scripts. Reliance on client-side technologies will require the support and availability of the technology on the user's computer in addition to supporting and allowing cookies. </p>
						<p>Information on creating and using cookies can be found on the web. Here are some suggestions: </p>
						<ulist>
							<item>
								<p><loc href="http://www.quirksmode.org/js/cookies.html">JavaScript - Cookies</loc></p>
							</item>
							<item>
								<p><loc href="http://webdesign.about.com/od/cookies/a/aa083198.htm">Write Your First HTTP Cookie</loc></p>
							</item>
							<item>
								<p><loc href="http://www.w3schools.com/ASP/asp_cookies.asp">ASP Cookies</loc></p>
							</item>
							<item>
								<p><loc href="http://www.ruby-doc.org/docs/ProgrammingRuby/html/web.html">Programming Ruby</loc></p>
							</item>
						</ulist>
						<p>It is recommended that authors test for cookie support and provide an extra control if cookies are not supported. This extra control should include information about the persistence of the selection, such as "Apply selection to all pages". The message or page presented to the user in response to selecting the extra control provides information about the cookie requirement and their options for solving it. In the event that the user is unable to turn cookie support on, include a statement about what this will mean for them if they choose to continue to browse the site and provide information about how they can adjust their user agent to achieve similar results. </p>
						<p>For example, "Your browser is not configured to accept cookies. On this site, cookies are required in order to apply your selected changes across all of the pages of the site. To find out how to enable cookies on your computer, visit <loc href="http://support.google.com/websearch/bin/answer.py?hl=en&amp;answer=35851" diff="chg">How to Enable Cookies</loc>. Note that this may require administrative rights for the computer you are using. Without cookie support, your settings will not persist to include other pages on this site. We are endeavoring to provide this functionality without relying on your computer's capability. In the meantime, you will be able to select the change for each page that you visit." </p>
					</see-also>
					<see-also>
						<head>Progressive Enhancement and Unobtrusive Javascript</head>
						<p>Current best practice for implementing JavaScript in an HTML or XHTML page is to use it in a way that separates the behavior of content from its structure and presentation. The terms 'Progressive Enhancement' and 'Unobtrusive JavaScript' are often used to describe scripts that enhance or improve the functionality of a page, yet transform gracefully so that content continues to function even when JavaScript is not supported.</p>
						<p>Here are some suggested starting points for more information: </p>
						<ulist>
							<item>
								<p><loc href="http://www.alistapart.com/articles/behavioralseparation">Behavioral Separation</loc></p>
							</item>
							<item>
								<p><loc href="http://en.wikipedia.org/wiki/Unobtrusive_JavaScript">Wikipedia: Unobtrusive JavaScript</loc></p>
							</item>
							<item>
								<p><loc href="http://javascript.about.com/library/blunobtrusive.htm">About.com: Unobtrusive JavaScript</loc></p>
							</item>
							<item>
								<p><loc href="http://en.wikipedia.org/wiki/Progressive_enhancement">Progressive enhancement</loc></p>
							</item>
							<item>
								<p><loc href="http://domscripting.com/blog/display/41">Hijax </loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G140"/>
					<relatedtech idref="G174"/>
					<relatedtech idref="G178"/>
					<relatedtech idref="G188"/>
					<relatedtech idref="G189"/>
					<relatedtech idref="G191"/>
					<relatedtech idref="C7"/>
					<relatedtech idref="C22"/>
					<relatedtech idref="C26"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that the Web page contains controls that allow users to select alternate presentations. </p>
							</item>
							<item>
								<p>Check that the control changes the presentation. </p>
							</item>
							<item>
								<p>Verify that the resulting page is a conforming alternate version for the original page. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All of the above checks are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="C30">
				<short-name>Using CSS to replace text with images of text and providing user interface controls to switch</short-name>
				<applicability>
					<p>Any technology that supports CSS. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-text-presentation" />
					<success-criterion idref="visual-audio-contrast-text-images" />
				</applies-to>
				<description>
					<p>The objective of this technique is to demonstrate how CSS can be used to replace structured HTML text with images of text in a way that makes it possible for users to view content according to their preferences. To use this technique, an author starts by creating an HTML page that uses semantic elements to mark up the structure of the page. The author then designs two or more stylesheets for that page. One stylesheet presents the HTML text as text and the second uses CSS features to replace some of the HTML text with images of text. Finally, through the use of server-side or client-side scripting, the author provides a control that allows the user to switch between the available views. </p>
					<p>This technique can be used to meet Success Criterion 1.4.5 or 1.4.9 if a presentation that does not include images of text is available and as long as the user interface control that is provided to allow users to switch to an alternate presentation meets the relevant criteria. Where possible, authors should deliver the presentation that does not include images of text as the default presentation. In addition, the control used to switch should be located near the beginning of the page. </p>
					<p>A variety of "image replacement" techniques have been developed to address a variety of user agent, configuration and compatibility with assistive technology issues (See resources for more information). While there are a variety of approaches authors may use to replace text, it is important to consider compatibility with assistive technology, whether the technique will work correctly if scripting, CSS, images (or combinations of these) are turned off. Since it can be difficult to find a single solution that works in all cases, this technique recommends the use of a control that allows users to switch to a presentation that does not include an image replacement technique. </p>
					<note>
						<p>This technique can be used in combination with a style switching technique to present a page that is a <loc href="conforming-alternate-versiondef" linktype="glossary">conforming alternate version</loc> for non-conforming content. Refer to <specref
							ref="C29"/> and <loc href="conformance" locn-note="uc-conforming-alt-versions-head"
							linktype="understanding">Understanding Conforming Alternate Versions</loc> for more information.</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A design studio site uses a style switcher to allow users to view two presentations of their home page. For the default version, the heading text is replaced with images of text. A control on the page allows users to switch to a version that presents the headings as text. </p>
							<p>The CSS component: </p>
						</description>
						<code><![CDATA[...
<div id="Header"> 
  <h1><span>Pufferfish Design Studio</span></h1> 
  <h2><span>Surprising Identity and Design Solutions</span></h2> 
  </div> 
...
]]></code>
						<description>
							<p>The CSS for the presentation that includes images of text follows. Note that the CSS uses positioning to place the contents of the heading elements offscreen so that the text remains available to screen reader users.</p>
						</description>
						<code><![CDATA[...
#Header h1 {
	background-image: url(pufferfish-logo.png);
	height: 195px;
	width: 290px;
	background-repeat: no-repeat;
	margin-top: 0;
	position: absolute;
	}
#Header h1 span {
	position: absolute;
        left: -999em;
	}
#Header h2 {
	background-image: url(beauty.png);
	background-repeat: no-repeat;
	height: 234px;
	width: 33px;
	margin-left: 8px;
	position: absolute;
	margin-top: 250px;
	}
#Header h2 span {
	position: absolute;
        left: -999em;
	}
	]]></code>
						<description>
							<p>The CSS for the presentation that does not include images of text. </p>
						</description>
						<code><![CDATA[...
#Header h1 {
	font: normal 200%/100% Garamond, "Times New Roman", serif;
	margin-bottom: 0;
	color: #000099;
	background: #ffffff;
	}

#Header h2 {
	font: normal 160%/100% Garamond, "Times New Roman", serif;
	margin-bottom: 0;
	color: #336600;
	background: #ffffff;
	}
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://moronicbajebus.com/playground/cssplay/image-replacement/">Image Replacement—No Span</loc></p>
							</item>
							<!-- BBC: Broken link, commenting out item><p><loc href="http://www.kryogenix.org/code/browser/lir/">Another image replacement technique</loc></p></item-->
							<item>
								<p><loc href="http://wellstyled.com/css-replace-text-by-image.html">Replacing Text By An Image</loc></p>
							</item>
							<item>
								<p><loc href="http://www.alistapart.com/articles/fir/">Facts and Opinion About Fahrner Image Replacement</loc></p>
							</item>
							<item>
								<p><loc href="http://www.digital-web.com/articles/in_defense_of_fahrner_image_replacement/">In Defense of Fahrner Image Replacement</loc></p>
							</item>
							<item>
								<p><loc href="http://en.wikipedia.org/wiki/Fahrner_Image_Replacement">Fahrner Image Replacement</loc></p>
							</item>
							<item>
								<p><loc href="http://www.w3.org/TR/CSS2/colors.html#background-properties">CSS2: 14.2.1 Background properties: 'background-color', 'background-image', 'background-repeat', 'background-attachment', 'background-position', and 'background'</loc></p>
							</item>
							<item>
								<p><loc href="http://wiki.novemberborn.net/sifr/">sIFR</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C29"/>
					<relatedtech idref="F3"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that the Web page includes a control that allows users to select an alternate presentation. </p>
							</item>
							<item>
								<p>Check that when the control is activated the resulting page includes text (programmatically determined text) wherever images of text had been used. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> All of the above checks are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
		</div1>
	</body>
	<back>
		<div1 id="placeholders">
			<!-- note: this can be updated using /misc/id-list.xslt (requires cut and paste)-->
			<head/>
			<p id="UNKNOWN">place holder for idref</p>
			<p id="cc1">placeholder for cc1</p>
			<p id="cc2">placeholder for cc2</p>
			<p id="cc3">placeholder for cc3</p>
			<p id="cc4">placeholder for cc4</p>
			<p id="cc5">placeholder for cc5</p>
			<p id="text-equiv">placeholder for text-equiv</p>
			<p id="text-equiv-all">placeholder for text-equiv-all</p>
			<p id="media-equiv">placeholder for media-equiv</p>
			<p id="media-equiv-av-only-alt">placeholder for media-equiv-av-only-alt</p>
			<p id="media-equiv-captions">placeholder for media-equiv-captions</p>
			<p id="media-equiv-audio-desc">placeholder for media-equiv-audio-desc</p>
			<p id="media-equiv-real-time-captions">placeholder for media-equiv-real-time-captions</p>
			<p id="media-equiv-audio-desc-only">placeholder for media-equiv-audio-desc-only</p>
			<p id="media-equiv-sign">placeholder for media-equiv-sign</p>
			<p id="media-equiv-extended-ad">placeholder for media-equiv-extended-ad</p>
			<p id="media-equiv-text-doc">placeholder for media-equiv-text-doc</p>
			<p id="media-equiv-live-audio-only">placeholder for media-equiv-live-audio-only</p>
			<p id="content-structure-separation">placeholder for content-structure-separation</p>
			<p id="content-structure-separation-programmatic">placeholder for content-structure-separation-programmatic</p>
			<p id="content-structure-separation-sequence">placeholder for content-structure-separation-sequence</p>
			<p id="content-structure-separation-understanding">placeholder for content-structure-separation-understanding</p>
			<p id="visual-audio-contrast">placeholder for visual-audio-contrast</p>
			<p id="visual-audio-contrast-without-color">placeholder for visual-audio-contrast-without-color</p>
			<p id="visual-audio-contrast-dis-audio">placeholder for visual-audio-contrast-dis-audio</p>
			<p id="visual-audio-contrast-contrast">placeholder for visual-audio-contrast-contrast</p>
			<p id="visual-audio-contrast-scale">placeholder for visual-audio-contrast-scale</p>
			<p id="visual-audio-contrast-text-presentation">placeholder for visual-audio-contrast-text-presentation</p>
			<p id="visual-audio-contrast7">placeholder for visual-audio-contrast7</p>
			<p id="visual-audio-contrast-noaudio">placeholder for visual-audio-contrast-noaudio</p>
			<p id="visual-audio-contrast-visual-presentation">placeholder for visual-audio-contrast-visual-presentation</p>
			<p id="visual-audio-contrast-text-images">placeholder for visual-audio-contrast-text-images</p>
			<p id="keyboard-operation">placeholder for keyboard-operation</p>
			<p id="keyboard-operation-keyboard-operable">placeholder for keyboard-operation-keyboard-operable</p>
			<p id="keyboard-operation-trapping">placeholder for keyboard-operation-trapping</p>
			<p id="keyboard-operation-all-funcs">placeholder for keyboard-operation-all-funcs</p>
			<p id="time-limits">placeholder for time-limits</p>
			<p id="time-limits-required-behaviors">placeholder for time-limits-required-behaviors</p>
			<p id="time-limits-pause">placeholder for time-limits-pause</p>
			<p id="time-limits-no-exceptions">placeholder for time-limits-no-exceptions</p>
			<p id="time-limits-postponed">placeholder for time-limits-postponed</p>
			<p id="time-limits-server-timeout">placeholder for time-limits-server-timeout</p>
			<p id="seizure">placeholder for seizure</p>
			<p id="seizure-does-not-violate">placeholder for seizure-does-not-violate</p>
			<p id="seizure-three-times">placeholder for seizure-three-times</p>
			<p id="navigation-mechanisms">placeholder for navigation-mechanisms</p>
			<p id="navigation-mechanisms-skip">placeholder for navigation-mechanisms-skip</p>
			<p id="navigation-mechanisms-title">placeholder for navigation-mechanisms-title</p>
			<p id="navigation-mechanisms-focus-order">placeholder for navigation-mechanisms-focus-order</p>
			<p id="navigation-mechanisms-refs">placeholder for navigation-mechanisms-refs</p>
			<p id="navigation-mechanisms-mult-loc">placeholder for navigation-mechanisms-mult-loc</p>
			<p id="navigation-mechanisms-descriptive">placeholder for navigation-mechanisms-descriptive</p>
			<p id="navigation-mechanisms-focus-visible">placeholder for navigation-mechanisms-focus-visible</p>
			<p id="navigation-mechanisms-location">placeholder for navigation-mechanisms-location</p>
			<p id="navigation-mechanisms-link">placeholder for navigation-mechanisms-link</p>
			<p id="navigation-mechanisms-headings">placeholder for navigation-mechanisms-headings</p>
			<p id="meaning">placeholder for meaning</p>
			<p id="meaning-doc-lang-id">placeholder for meaning-doc-lang-id</p>
			<p id="meaning-other-lang-id">placeholder for meaning-other-lang-id</p>
			<p id="meaning-idioms">placeholder for meaning-idioms</p>
			<p id="meaning-located">placeholder for meaning-located</p>
			<p id="meaning-supplements">placeholder for meaning-supplements</p>
			<p id="meaning-pronunciation">placeholder for meaning-pronunciation</p>
			<p id="consistent-behavior">placeholder for consistent-behavior</p>
			<p id="consistent-behavior-receive-focus">placeholder for consistent-behavior-receive-focus</p>
			<p id="consistent-behavior-unpredictable-change">placeholder for consistent-behavior-unpredictable-change</p>
			<p id="consistent-behavior-consistent-locations">placeholder for consistent-behavior-consistent-locations</p>
			<p id="consistent-behavior-consistent-functionality">placeholder for consistent-behavior-consistent-functionality</p>
			<p id="consistent-behavior-no-extreme-changes-context">placeholder for consistent-behavior-no-extreme-changes-context</p>
			<p id="minimize-error">placeholder for minimize-error</p>
			<p id="minimize-error-identified">placeholder for minimize-error-identified</p>
			<p id="minimize-error-cues">placeholder for minimize-error-cues</p>
			<p id="minimize-error-suggestions">placeholder for minimize-error-suggestions</p>
			<p id="minimize-error-reversible">placeholder for minimize-error-reversible</p>
			<p id="minimize-error-context-help">placeholder for minimize-error-context-help</p>
			<p id="minimize-error-reversible-all">placeholder for minimize-error-reversible-all</p>
			<p id="ensure-compat">placeholder for ensure-compat</p>
			<p id="ensure-compat-parses">placeholder for ensure-compat-parses</p>
			<p id="ensure-compat-rsv">placeholder for ensure-compat-rsv</p>
			<p id="G1">placeholder for G1</p>
			<p id="G4">placeholder for G4</p>
			<p id="G5">placeholder for G5</p>
			<p id="G8">placeholder for G8</p>
			<p id="G9">placeholder for G9</p>
			<p id="G10">placeholder for G10</p>
			<p id="G11">placeholder for G11</p>
			<p id="G13">placeholder for G13</p>
			<p id="G14">placeholder for G14</p>
			<p id="G15">placeholder for G15</p>
			<p id="G17">placeholder for G17</p>
			<p id="G18">placeholder for G18</p>
			<p id="G19">placeholder for G19</p>
			<p id="G21">placeholder for G21</p>
			<p id="G53">placeholder for G53</p>
			<p id="G54">placeholder for G54</p>
			<p id="G55">placeholder for G55</p>
			<p id="G56">placeholder for G56</p>
			<p id="G57">placeholder for G57</p>
			<p id="G58">placeholder for G58</p>
			<p id="G59">placeholder for G59</p>
			<p id="G60">placeholder for G60</p>
			<p id="G61">placeholder for G61</p>
			<p id="G62">placeholder for G62</p>
			<p id="G63">placeholder for G63</p>
			<p id="G64">placeholder for G64</p>
			<p id="G65">placeholder for G65</p>
			<p id="G68">placeholder for G68</p>
			<p id="G69">placeholder for G69</p>
			<p id="G70">placeholder for G70</p>
			<p id="G71">placeholder for G71</p>
			<p id="G73">placeholder for G73</p>
			<p id="G74">placeholder for G74</p>
			<p id="G75">placeholder for G75</p>
			<p id="G76">placeholder for G76</p>
			<p id="G78">placeholder for G78</p>
			<p id="G79">placeholder for G79</p>
			<p id="G80">placeholder for G80</p>
			<p id="G81">placeholder for G81</p>
			<p id="G82">placeholder for G82</p>
			<p id="G83">placeholder for G83</p>
			<p id="G84">placeholder for G84</p>
			<p id="G85">placeholder for G85</p>
			<p id="G86">placeholder for G86</p>
			<p id="G87">placeholder for G87</p>
			<p id="G88">placeholder for G88</p>
			<p id="G89">placeholder for G89</p>
			<p id="G90">placeholder for G90</p>
			<p id="G91">placeholder for G91</p>
			<p id="G92">placeholder for G92</p>
			<p id="G93">placeholder for G93</p>
			<p id="G94">placeholder for G94</p>
			<p id="G95">placeholder for G95</p>
			<p id="G96">placeholder for G96</p>
			<p id="G97">placeholder for G97</p>
			<p id="G98">placeholder for G98</p>
			<p id="G99">placeholder for G99</p>
			<p id="G100">placeholder for G100</p>
			<p id="G101">placeholder for G101</p>
			<p id="G102">placeholder for G102</p>
			<p id="G103">placeholder for G103</p>
			<p id="G105">placeholder for G105</p>
			<p id="G107">placeholder for G107</p>
			<p id="G108">placeholder for G108</p>
			<p id="G110">placeholder for G110</p>
			<p id="G111">placeholder for G111</p>
			<p id="G112">placeholder for G112</p>
			<p id="G115">placeholder for G115</p>
			<p id="G117">placeholder for G117</p>
			<p id="G120">placeholder for G120</p>
			<p id="G121">placeholder for G121</p>
			<p id="G122">placeholder for G122</p>
			<p id="G123">placeholder for G123</p>
			<p id="G124">placeholder for G124</p>
			<p id="G125">placeholder for G125</p>
			<p id="G126">placeholder for G126</p>
			<p id="G127">placeholder for G127</p>
			<p id="G128">placeholder for G128</p>
			<p id="G130">placeholder for G130</p>
			<p id="G131">placeholder for G131</p>
			<p id="G133">placeholder for G133</p>
			<p id="G134">placeholder for G134</p>
			<p id="G135">placeholder for G135</p>
			<p id="G136">placeholder for G136</p>
			<p id="G138">placeholder for G138</p>
			<p id="G139">placeholder for G139</p>
			<p id="G140">placeholder for G140</p>
			<p id="G141">placeholder for G141</p>
			<p id="G142">placeholder for G142</p>
			<p id="G143">placeholder for G143</p>
			<p id="G144">placeholder for G144</p>
			<p id="G145">placeholder for G145</p>
			<p id="G146">placeholder for G146</p>
			<p id="G147">placeholder for G147</p>
			<p id="G148">placeholder for G148</p>
			<p id="G149">placeholder for G149</p>
			<p id="G150">placeholder for G150</p>
			<p id="G151">placeholder for G151</p>
			<p id="G152">placeholder for G152</p>
			<p id="G153">placeholder for G153</p>
			<p id="G155">placeholder for G155</p>
			<p id="G156">placeholder for G156</p>
			<p id="G157">placeholder for G157</p>
			<p id="G158">placeholder for G158</p>
			<p id="G159">placeholder for G159</p>
			<p id="G160">placeholder for G160</p>
			<p id="G161">placeholder for G161</p>
			<p id="G162">placeholder for G162</p>
			<p id="G163">placeholder for G163</p>
			<p id="G164">placeholder for G164</p>
			<p id="G165">placeholder for G165</p>
			<p id="G166">placeholder for G166</p>
			<p id="G167">placeholder for G167</p>
			<p id="G168">placeholder for G168</p>
			<p id="G169">placeholder for G169</p>
			<p id="G170">placeholder for G170</p>
			<p id="G171">placeholder for G171</p>
			<p id="G172">placeholder for G172</p>
			<p id="G173">placeholder for G173</p>
			<p id="G174">placeholder for G174</p>
			<p id="G175">placeholder for G175</p>
			<p id="G176">placeholder for G176</p>
			<p id="G177">placeholder for G177</p>
			<p id="G178">placeholder for G178</p>
			<p id="G179">placeholder for G179</p>
			<p id="G180">placeholder for G180</p>
			<p id="G181">placeholder for G181</p>
			<p id="G182">placeholder for G182</p>
			<p id="G183">placeholder for G183</p>
			<p id="G184">placeholder for G184</p>
			<p id="G185">placeholder for G185</p>
			<p id="G186">placeholder for G186</p>
			<p id="G187">placeholder for G187</p>
			<p id="G188">placeholder for G188</p>
			<p id="G189">placeholder for G189</p>
			<p id="G190">placeholder for G190</p>
			<p id="G191">placeholder for G191</p>
			<p id="G192">placeholder for G192</p>
			<p id="G193">placeholder for G193</p>
			<p id="G194">placeholder for G194</p>
			<p id="G195">placeholder for G195</p>
			<p id="G196">placeholder for G196</p>
			<p id="G197">placeholder for G197</p>
			<p id="G198">placeholder for G198</p>
			<p id="H2">placeholder for H2</p>
			<p id="H4">placeholder for H4</p>
			<p id="H24">placeholder for H24</p>
			<p id="H25">placeholder for H25</p>
			<p id="H27">placeholder for H27</p>
			<p id="H28">placeholder for H28</p>
			<p id="H30">placeholder for H30</p>
			<p id="H32">placeholder for H32</p>
			<p id="H33">placeholder for H33</p>
			<p id="H34">placeholder for H34</p>
			<p id="H35">placeholder for H35</p>
			<p id="H36">placeholder for H36</p>
			<p id="H37">placeholder for H37</p>
			<p id="H39">placeholder for H39</p>
			<p id="H40">placeholder for H40</p>
			<p id="H42">placeholder for H42</p>
			<p id="H43">placeholder for H43</p>
			<p id="H44">placeholder for H44</p>
			<p id="H45">placeholder for H45</p>
			<p id="H46">placeholder for H46</p>
			<p id="H48">placeholder for H48</p>
			<p id="H49">placeholder for H49</p>
			<p id="H50">placeholder for H50</p>
			<p id="H51">placeholder for H51</p>
			<p id="H53">placeholder for H53</p>
			<p id="H54">placeholder for H54</p>
			<p id="H56">placeholder for H56</p>
			<p id="H57">placeholder for H57</p>
			<p id="H58">placeholder for H58</p>
			<p id="H59">placeholder for H59</p>
			<p id="H60">placeholder for H60</p>
			<p id="H62">placeholder for H62</p>
			<p id="H63">placeholder for H63</p>
			<p id="H64">placeholder for H64</p>
			<p id="H65">placeholder for H65</p>
			<p id="H67">placeholder for H67</p>
			<p id="H69">placeholder for H69</p>
			<p id="H70">placeholder for H70</p>
			<p id="H71">placeholder for H71</p>
			<p id="H73">placeholder for H73</p>
			<p id="H74">placeholder for H74</p>
			<p id="H75">placeholder for H75</p>
			<p id="H76">placeholder for H76</p>
			<p id="H77">placeholder for H77</p>
			<p id="H78">placeholder for H78</p>
			<p id="H79">placeholder for H79</p>
			<p id="H80">placeholder for H80</p>
			<p id="H81">placeholder for H81</p>
			<p id="H82">placeholder for H82</p>
			<p id="H83">placeholder for H83</p>
			<p id="H84">placeholder for H84</p>
			<p id="H85">placeholder for H85</p>
			<p id="H86">placeholder for H86</p>
			<p id="H87">placeholder for H87</p>
			<p id="H88">placeholder for H88</p>
			<p id="H89">placeholder for H89</p>
			<p id="H90">placeholder for H90</p>
			<p id="H91">placeholder for H91</p>
			<p id="SCR1">placeholder for SCR1</p>
			<p id="SCR2">placeholder for SCR2</p>
			<p id="SCR14">placeholder for SCR14</p>
			<p id="SCR16">placeholder for SCR16</p>
			<p id="SCR18">placeholder for SCR18</p>
			<p id="SCR19">placeholder for SCR19</p>
			<p id="SCR20">placeholder for SCR20</p>
			<p id="SCR21">placeholder for SCR21</p>
			<p id="SCR22">placeholder for SCR22</p>
			<p id="SCR24">placeholder for SCR24</p>
			<p id="SCR26">placeholder for SCR26</p>
			<p id="SCR27">placeholder for SCR27</p>
			<p id="SCR28">placeholder for SCR28</p>
			<p id="SCR29">placeholder for SCR29</p>
			<p id="SCR30">placeholder for SCR30</p>
			<p id="SCR31">placeholder for SCR31</p>
			<p id="SCR32">placeholder for SCR32</p>
			<p id="SCR33">placeholder for SCR33</p>
			<p id="SCR34">placeholder for SCR34</p>
			<p id="SCR35">placeholder for SCR35</p>
			<p id="SCR36">placeholder for SCR36</p>
			<p id="SCR37">placeholder for SCR37</p>
			<p id="SVR1">placeholder for SVR1</p>
			<p id="SVR2">placeholder for SVR2</p>
			<p id="SVR3">placeholder for SVR3</p>
			<p id="SVR4">placeholder for SVR4</p>
			<p id="SM1">placeholder for SM1</p>
			<p id="SM2">placeholder for SM2</p>
			<p id="SM6">placeholder for SM6</p>
			<p id="SM7">placeholder for SM7</p>
			<p id="SM11">placeholder for SM11</p>
			<p id="SM12">placeholder for SM12</p>
			<p id="SM13">placeholder for SM13</p>
			<p id="SM14">placeholder for SM14</p>
			<p id="T1">placeholder for T1</p>
			<p id="T2">placeholder for T2</p>
			<p id="T3">placeholder for T3</p>
			<p id="ARIA1">placeholder for ARIA1</p>
			<p id="ARIA2">placeholder for ARIA2</p>
			<p id="ARIA3">placeholder for ARIA3</p>
			<p id="ARIA4">placeholder for ARIA4</p>
			<p id="F1">placeholder for F1</p>
			<p id="F2">placeholder for F2</p>
			<p id="F3">placeholder for F3</p>
			<p id="F4">placeholder for F4</p>
			<p id="F7">placeholder for F7</p>
			<p id="F8">placeholder for F8</p>
			<p id="F9">placeholder for F9</p>
			<p id="F10">placeholder for F10</p>
			<p id="F12">placeholder for F12</p>
			<p id="F13">placeholder for F13</p>
			<p id="F14">placeholder for F14</p>
			<p id="F15">placeholder for F15</p>
			<p id="F16">placeholder for F16</p>
			<p id="F17">placeholder for F17</p>
			<p id="F19">placeholder for F19</p>
			<p id="F20">placeholder for F20</p>
			<p id="F22">placeholder for F22</p>
			<p id="F23">placeholder for F23</p>
			<p id="F24">placeholder for F24</p>
			<p id="F25">placeholder for F25</p>
			<p id="F26">placeholder for F26</p>
			<p id="F30">placeholder for F30</p>
			<p id="F31">placeholder for F31</p>
			<p id="F32">placeholder for F32</p>
			<p id="F33">placeholder for F33</p>
			<p id="F34">placeholder for F34</p>
			<p id="F36">placeholder for F36</p>
			<p id="F37">placeholder for F37</p>
			<p id="F38">placeholder for F38</p>
			<p id="F39">placeholder for F39</p>
			<p id="F40">placeholder for F40</p>
			<p id="F41">placeholder for F41</p>
			<p id="F42">placeholder for F42</p>
			<p id="F43">placeholder for F43</p>
			<p id="F44">placeholder for F44</p>
			<p id="F46">placeholder for F46</p>
			<p id="F47">placeholder for F47</p>
			<p id="F48">placeholder for F48</p>
			<p id="F49">placeholder for F49</p>
			<p id="F50">placeholder for F50</p>
			<p id="F52">placeholder for F52</p>
			<p id="F54">placeholder for F54</p>
			<p id="F55">placeholder for F55</p>
			<p id="F58">placeholder for F58</p>
			<p id="F59">placeholder for F59</p>
			<p id="F60">placeholder for F60</p>
			<p id="F61">placeholder for F61</p>
			<p id="F62">placeholder for F62</p>
			<p id="F63">placeholder for F63</p>
			<p id="F65">placeholder for F65</p>
			<p id="F66">placeholder for F66</p>
			<p id="F67">placeholder for F67</p>
			<p id="F68">placeholder for F68</p>
			<p id="F69">placeholder for F69</p>
			<p id="F70">placeholder for F70</p>
			<p id="F71">placeholder for F71</p>
			<p id="F72">placeholder for F72</p>
			<p id="F73">placeholder for F73</p>
			<p id="F74">placeholder for F74</p>
			<p id="F75">placeholder for F75</p>
			<p id="F76">placeholder for F76</p>
			<p id="F77">placeholder for F77</p>
			<p id="F78">placeholder for F78</p>
			<p id="F79">placeholder for F79</p>
			<p id="F80">placeholder for F80</p>
			<p id="F81">placeholder for F81</p>
			<p id="F82">placeholder for F82</p>
			<p id="F83">placeholder for F83</p>
			<p id="F84">placeholder for F84</p>
			<p id="F85">placeholder for F85</p>
			<p id="F86">placeholder for F86</p>
			<p id="F87">placeholder for F87</p>
			<p id="F88">placeholder for F88</p>
			<p id="F89">placeholder for F89</p>
		</div1>
		<div1 id="references">
			<head>References</head>
			<blist>
				<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="CSS1" key="CSS1">"Cascading Style Sheets, level 1," B. Bos, H. Wium Lie, eds., W3C Recommendation 17 Dec 1996, revised 11 Jan 1999. Available at <loc href="http://www.w3.org/TR/REC-CSS1/">http://www.w3.org/TR/REC-CSS1/</loc>.</bibl>
				<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="CSS2" key="CSS2">"Cascading Style Sheets, level 2," B. Bos, H. Wium Lie, C. Lilley, and I. Jacobs, eds., W3C Recommendation 12 May 1998. Available at <loc href="http://www.w3.org/TR/CSS2/">http://www.w3.org/TR/CSS2/</loc>.</bibl>
				<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="CSS21" key="CSS21">"Cascading Style Sheets, level 2 revision 1,"  B. Bos, T. Çelik,  I. Hickson,   H. Wium Lie, eds., W3C Candidate Recommendation 25 February 2004.  Available at:  <loc href="http://www.w3.org/TR/CSS21/">http://www.w3.org/TR/CSS21/</loc> </bibl>
				<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="CSS3" key="CSS3">
					<titleref href="http://www.w3.org/Style/CSS/current-work#table">[CSS 2.1 and CSS 3] Roadmap</titleref>, CSS WG's table of modules and publication dates.</bibl>
				<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="HTML4" key="HTML4">"HTML 4.01 Specification," D. Raggett, A. Le Hors, I. Jacobs, eds.,  W3C Recommendation 24 December 1999. Available at <loc href="http://www.w3.org/TR/html401/">http://www.w3.org/TR/html401/</loc> </bibl>
				<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="WCAG20"
					key="WCAG20">"Web Content Accessibility Guidelines 2.0,"  B. Caldwell, M. Cooper, L. Guarino Reid, and G. Vanderheiden, eds., W3C Working Draft 11 December 2007. This W3C Working Draft is available at <loc href="http://www.w3.org/TR/2007/WD-WCAG20-20071211/">http://www.w3.org/TR/2007/WD-WCAG20-20071211/</loc>.  The latest version of WCAG 2.0 is available at <loc href="http://www.w3.org/TR/WCAG20/">http://www.w3.org/TR/WCAG20/</loc> </bibl>
				<bibl xmlns:xlink="http://www.w3.org/1999/xlink" id="XHTML1"
					key="XHTML1">"XHTML 1.0 The Extensible HyperText Markup Language (Second Edition)," S. Pemberton, et al.,  W3C Recommendation 26 January 2000, revised 1 August 2002. Available at:  <loc href="http://www.w3.org/TR/xhtml1/">http://www.w3.org/TR/xhtml1/</loc>.</bibl>
			</blist>
		</div1>
	</back>
</spec>
