<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec SYSTEM "xmlspec.dtd">
<spec status="final" w3c-doctype="wgnote">
	<header>
		<title>Failures</title>
		<w3c-designation>WCAG20-FAILURE-TECHS</w3c-designation>
		<w3c-doctype>W3C Working Group Note</w3c-doctype>
		<pubdate>
			<day>3</day>
			<month>January</month>
			<year>2012</year>
		</pubdate>
		<publoc> <loc
			href="http://www.w3.org/WAI/GL/WCAG20/sources/server-tech-src.xml">http://www.w3.org/WAI/GL/WCAG20/sources/server-tech-src.xml</loc> </publoc>
		<latestloc>
			<loc href="http://www.w3.org/WAI/GL/WCAG20/sources/server-tech-src.xml">http://www.w3.org/WAI/GL/WCAG20/sources/server-tech-src.xml</loc>
		</latestloc>
		<authlist>
			<author>
				<name>Ben Caldwell</name>
				<affiliation>Trace R&amp;D Center </affiliation>
			</author>
		</authlist>
		<status>
			<p/>
		</status>
		<abstract>
			<p>Placeholder - actual abstract text for WCAG20-TECHS is included in the XSLT,
                techs-merge.xslt. This file contains the XML for general techniques and can be used
                in conjunction with techs-sample-output.xsl to check that techniques will output
                correctly. </p>
		</abstract>
		<langusage>
			<language id="en-US"/>
		</langusage>
		<revisiondesc>
			<p/>
		</revisiondesc>
	</header>
	<body>
		<!-- techniques -->
		<div1 role="failures" id="failures">
			<head>Common Failures</head>
			<technique id="F1">
				<short-name>Failure of Success Criterion 1.3.2 due to changing the meaning of content by
                    positioning information with CSS</short-name>
				<applicability>
					<p>All technologies that support CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-sequence" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes the failure condition that results when CSS, rather than
                        structural markup, is used to modify the visual layout of the content, and
                        the modified layout changes the meaning of the content. Using the
                        positioning properties of CSS2, content may be displayed at any position on
                        the user's viewport. The order in which items appear on a screen may be
                        different than the order they are found in the source document. Assistive
                        technologies rely on the source code or other programmatically determined
                        order to render the content in the correct sequence. Thus, it is important
                        not to rely on CSS to visually position content in a specific sequence if this sequence results in a meaning that is different from the programmatically determined reading order. 
          </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>The following example demonstrates how CSS has been improperly used
                                to create a set of columns. In addition, the text appears visually
                                in the browser in a different order than in the markup. </p>
							<p>In this example a class is defined for each object that is being
                                positioned. When style sheets are applied, the text appears in two
                                columns. Elements of class "menu1" (Products) and "menu2"
                                (Locations) appear as column headings. "Telephones, Computers, and
                                Portable MP3 Players" are listed under Products and "Idaho" and
                                "Wisconsin" are listed under Locations (note the different order for
                                Idaho and Wisconsin in the source code order). </p>
							<p>Since appropriate structural elements have not been used, when style
                                sheets are not applied, all of the text appears in one line in the
                                source order, "Products Locations Telephones Computers Portable MP3
                                Players Wisconsin Idaho." </p>
							<p>Here is the HTML content:</p>
						</description>
						<code role="html401"><![CDATA[
<div class="box">      
     <span class="menu1">Products</span>       
     <span class="menu2">Locations</span>       
     <span class="item1">Telephones</span>       
     <span class="item2">Computers</span>       
     <span class="item3">Portable MP3 Players</span>       
     <span class="item5">Wisconsin</span>       
     <span class="item4">Idaho</span>
</div>
]]></code>
						<description>
							<p>Here are the styles for the above content:</p>
						</description>
						<code role="html401"><![CDATA[
.menu1 { 
     position: absolute; 
     top: 3em; 
     left: 0em;     
     margin: 0px; 
     font-family: sans-serif;     
     font-size: 120%; 
     color: red; 
     background-color: white 
}        
.menu2 { 
     position: absolute; 
     top: 3em; 
     left: 10em;     
     margin: 0px; 
     font-family: sans-serif;     
     font-size: 120%; 
     color: red; 
     background-color: white 
}      
.item1 { 
     position: absolute; 
     top: 7em; 
     left: 0em; 
     margin: 0px 
}      
.item2 { 
     position: absolute; 
     top: 8em; 
     left: 0em; 
     margin: 0px 
}      
.item3 { 
     position: absolute; 
     top: 9em; 
     left: 0em; 
     margin: 0px 
}      
.item4 { 
     position: absolute; 
     top: 7em; 
     left: 14em; 
     margin: 0px 
}      
.item5 { 
     position: absolute; 
     top: 8em; left: 14em; 
     margin: 0px 
}      
#box { 
     position: absolute; 
     top: 5em; 
     left: 5em 
} 
]]></code>
						<description>
							<p>A better solution for this content would be to use more meaningful
                                elements, such as a table or a definition list.</p>
							<ulist>
								<item>
									<p> <loc href="cssposfailure.html" linktype="examples">Example
                                            of CSS positioning failure</loc>
									</p>
								</item>
								<item>
									<p> <loc href="cssposfailurenostyle.html" linktype="examples">Example of CSS positioning failure with styles
                                        removed</loc>
									</p>
								</item>
							</ulist>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="C6"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For content which uses CSS for positioning: </p>
						<olist>
							<item>
								<p>Remove the style information from the document or turn off use of
                                    style sheets in the user agent.</p>
							</item>
							<item>
								<p>Check that the reading order of the content is correct and the
                                    meaning of the content is preserved.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F2">
				<short-name>Failure of Success Criterion 1.3.1 due to using changes in text presentation to convey information without using the appropriate markup or text</short-name>
				<applicability>
					<p>All technologies that support images or presentation markup.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
				</applies-to>
				<description>
					<p>This document describes a failure that occurs when a change in the appearance of text conveys meaning without using appropriate semantic markup. This failure also applies to images of text that are not enclosed in the appropriate semantic markup.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Using CSS to style the <el>p</el> element to look like a heading</head>
						<description>
							<p>The author intended to make a heading but didn't want the look of the default HTML heading. So they used CSS to style the P element to look like a heading and they called it a heading. But they failed to use the proper HTML heading element. Therefore, the Assisitive Technology could not distinguish it as a heading.</p>
						</description>
						<code role="html401"><![CDATA[
 <style type="text/css">
 .heading1{
        font-family: Times, serif;
        font-size:200%;
        font-weight:bold;
 }
 </style>

 <p class="heading1">Introduction</p>
 <p>This introduction provides detailed information about how to use this 
 ........
 </p>
]]></code>
						<description>
							<note>
								<p>In this case, the proper approach would be to use CSS to style the <el>H1</el> element in HTML.</p>
							</note>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head>Images of text used as headings where the images are not marked up with heading tags</head>
						<description>
							<p>Chapter1.gif is an image of the words, "Chapter One" in a Garamond font sized at 20 pixels. This is a failure because at a minimum the img element should be enclosed within a header element. A better solution would be to eliminate the image and to enclose the text within a header element which has been styled using CSS.</p>
						</description>
						<code role="html401"><![CDATA[
<img src="Chapter1.gif" alt="Chapter One">
 
<p>Once upon a time in the land of the Web.....
</p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Using CSS to visually emphasize a phrase or word without conveying that emphasis semantically</head>
						<description>
							<p>The following example fails because the information conveyed by using the CSS <code><![CDATA[font-weight]]></code> property to change to a bold font is not conveyed through semantic markup or stated explicitly in the text.</p>
							<p>Here is a CSS class to specify bold:</p>
						</description>
						<code role="html401"><![CDATA[
.yell {
  font-weight:bold;
  text-transform: uppercase;
}
]]></code>
						<description>
							<p>And here is the corresponding HTML:</p>
						</description>
						<code role="html401"><![CDATA[
<p>
 "I said, <span class="yell">no</span>, not before dinner!", 
 was the exasperated response when Timmy asked his mother for the 
 fourth time for an ice cream cone. 
 </p>
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H42"/>
					<relatedtech idref="H49"/>
					<relatedtech idref="G115"/>
					<relatedtech idref="G117"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>For images of text:</p>
								<olist>
									<item>
										<p>Check if any images of text are used to convey structural information of the document.</p>
									</item>
									<item>
										<p>Check that the proper semantic structure (e.g., HTML headings) is used with the text to convey the information.</p>
									</item>
								</olist>
							</item>
							<item>
								<p>For styled text that conveys information:</p>
								<olist>
									<item>
										<p>Check if there is any styled text that conveys structural information.</p>
									</item>
									<item>
										<p>Check that in addition to styling, the proper semantic structure is used with the text to convey the information.</p>
									</item>
								</olist>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #1.1 is true, then #1.2 is true.</p>
							</item>
							<item>
								<p>If check #2.1 is true, then #2.2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F3">
				<short-name>Failure of Success Criterion 1.1.1 due to using CSS to include images that convey
                    important information</short-name>
				<applicability>
					<p> All technologies that support CSS. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
				</applies-to>
				<description>
					<p> The CSS background-image property provides a way to include images in the
                        document with CSS without any reference in the HTML code. The CSS
                        background-image property was designed for decorative purposes and it is not
                        possible to associate text alternatives with images that are included via
                        CSS. Text alternatives are necessary for people who cannot see images that
                        convey important information. Therefore, it is a failure to use this
                        property to add images to convey important information. <phrase diff="add">This failure would apply equally in a case where the background image was declared in the HTML style attribute, as well as in a case where the background image declaration was created dynamically in a client script (see example 3 below).</phrase></p>
					<note>
						<p>Embedding information into a background image can also cause problems for people who use alternate backgrounds in order to increase legibility and for users of high contrast mode in some operating systems. These users, would lose the information in the background image due to lack of any alternative text.</p>
					</note>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p> In the following example, part of the content is contained in an
                                image that is presented by CSS alone. In this example, the image
                                TopRate.png is a 180 by 200 pixel image that contains the text,
                                "19.3% APR Typical Variable." </p>
						</description>
						<code><![CDATA[ The CSS contains: 
p#bestinterest {
  padding-left: 200px;
  background: transparent url(/images/TopRate.png) no-repeat top left;
}]]></code>
						<description>
							<p> It is used in this excerpt: </p>
						</description>
						<code><![CDATA[ 
<p id="bestinterest">
  Where else would you find a better interest rate?
</p>]]></code>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p> A book distributor uses background images to provide icons against a
                                list of book titles to indicate whether they are new, limited,
                                in-stock, or out of stock. </p>
							<p>The CSS contains: </p>
						</description>
						<code><![CDATA[
ul#booklist li {
  padding-left: 20px;
}

ul#booklist li.new {
  background: transparent url(new.png) no-repeat top left; 
}
                            
ul#booklist li.limited {
  background: transparent url(limited.png) no-repeat top left; 
}
                            
ul#booklist li.instock {
  background: transparent url(instock.png) no-repeat top left; 
}

ul#booklist li.outstock {
  background: transparent url(outstock.png) no-repeat top left; 
}]]></code>
						<description>
							<p>It is used in this excerpt: </p>
						</description>
						<code><![CDATA[
<ul id="booklist">
  <li class="new">Some book</li>
  <li class="instock">Some other book</li>
  <li class="limited">A book we desperately want to get rid of</li>
  ...
  <li class="outstock">A book you actually want </li>
</ul>]]></code>
					</eg-group>
					<eg-group role="failure" diff="add">
						<head/>
						<description>
							<p>Using the code from example 1, the same background image is declared in the HTML style attribute:</p>
							<codeblock><![CDATA[<p id="bestinterest" style="background: transparent url(/images/TopRate.png) no-repeat top left;" >
Where else would you find a better interest rate?
<p>]]></codeblock>
							<p>In the following code, the background image declaration is created in a client script:</p>
							<codeblock><![CDATA[<script type="text/javascript">
var newP = document.createElement('p');
var newPText = document.createTextNode('Where else would you find a better interest rate?');
newP.appendChild(newPText);
newP.style.background = 'transparent url(/images/TopRate.png) no-repeat top left';
document.body.appendChild(newP);
</script> ]]></codeblock>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H37"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Examine all images added to the content via CSS<phrase diff="add">, HTML style attributes, or dynamically in script as background images</phrase>. </p>
							</item>
							<item>
								<p> Check that the images do not convey important information. </p>
							</item>
							<item>
								<p>If an image does convey important information,  the information is
                provided to assistive technologies and is also available when the CSS image is
                not displayed.  </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #2 and step #3 are both false, then this failure condition applies and the content fails this Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F4">
				<short-name>Failure of Success Criterion 2.2.2 due to using text-decoration:blink without a
                    mechanism to stop it in less than five seconds</short-name>
				<applicability>
					<p>Cascading Style Sheets.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-pause" relationship="failure"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="*">
						<p>The <code><![CDATA[blink]]></code> value of the <code><![CDATA[text-decoration]]></code> property
                            is not supported by Internet Explorer. It is supported in
                            Netscape/Mozilla family browsers. Not tested in others (e.g., Safari,
                            Opera).</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>CSS defines the <code><![CDATA[blink]]></code> value for the <code><![CDATA[text-decoration]]></code>
                        property. When used, it causes any text in elements with this property to
                        blink at a predetermined rate. This cannot be interrupted by the user, nor
                        can it be disabled as a user agent preference. The blinking continues as
                        long as the page is displayed. Therefore, content that uses
                            <code><![CDATA[text-decoration:blink]]></code> fails the Success Criterion because
                        blinking can continue for more than three seconds.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>A product list page uses the <code><![CDATA[text-decoration:blink]]></code> style
                                on an element to draw attention to sale prices. This fails the
                                Success Criterion because users cannot control the blink.</p>
						</description>
						<code><![CDATA[
<p>My Great Product <span style="text-decoration:blink">Sale! $44,995!</span></p>
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc
									href="http://www.w3.org/TR/CSS2/text.html#propdef-text-decoration">CSS 2 text-decoration property</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="SCR22"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine inline styles, internal stylesheets, and external
                                    stylesheets for the <code><![CDATA[text-decoration]]></code> property with a
                                    value of "blink".</p>
							</item>
							<item>
								<p>If the property is used, determine if the ID, class, or element
                                    identified by selectors on which this property is defined are
                                    used in the document.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1 and step #2 are true, the content fails the success
                                criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F7">
				<short-name>Failure of Success Criterion 2.2.2 due to an object or applet, such as Java or Flash,
                    that has blinking content without a mechanism to pause the content that blinks
                    for more than five seconds</short-name>
				<applicability>
					<p>Technologies that support blinking content within an object, applet, or a
                        plug-in.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-pause" relationship="failure"/>
				</applies-to>
				<description>
					<p>When content that is rendered by a plug-in or contained in an applet blinks,
                        there may be no way for the user agent to pause the blinking. If neither the
                        plug-in, applet, nor the content itself provides a mechanism to pause the
                        content, the user may not have sufficient time to read the content between
                        blinks or it may be so distracting that the user will not be able to read
                        other content on the page.</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p>An applet displays an advertisement on a news site. The applet blinks
                                key words in the advertisement in order to call the user's attention
                                to it. The blinking cannot be paused through any user agent settings
                                and the applet does not provide a mechanism to stop it.</p>
						</item>
					</ulist>
				</examples>
				<related-techniques>
					<relatedtech idref="SCR22"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each page that has blinking content in a plugin or applet:</p>
						<olist>
							<item>
								<p>Determine if the content continues to blink for longer than 5
                                    seconds.</p>
							</item>
							<item>
								<p>Determine if there is a means to pause the blinking content.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1 is true and step #2 is false, the content fails the success
                                    criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F8">
				<short-name>Failure of Success Criterion 1.2.2 due to captions omitting some dialogue or important
                    sound effects</short-name>
				<applicability>
					<p> Applies to all technologies. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="media-equiv-captions" relationship="failure"/>
				</applies-to>
				<description>
					<p> This describes a failure condition for all techniques involving captions. If
                        the "caption" does not include all of the dialogue (either verbatim or in
                        essence) as well as all important sounds then the 'Captions' are not real
                        captions. </p>
					<p> NOTE: Captions sometimes simplify the spoken text both to make it easier to
                        read and to avoid forcing the viewer to read at very high speed. This is
                        standard procedure and does not invalidate a caption. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p> Examples of text streams that are not captions include: </p>
							<ulist>
								<item>
									<p>text that contains the dialogue (possibly simplified dialogue) but that does not describe important sounds 
                  </p>
								</item>
								<item>
									<p> text that omits dialogue during portions of the material </p>
								</item>
							</ulist>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> View the material with captioning turned on. </p>
							</item>
							<item>
								<p> Check that all dialogue is accompanied by a caption. </p>
							</item>
							<item>
								<p> Check that all important sounds are captioned. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 and check #3 are false, then this failure condition applies and the content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F9">
				<short-name>Failure of Success Criterion 3.2.5 due to changing the context when the user removes
                    focus from a form element</short-name>
				<applicability>
					<p>General. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-no-extreme-changes-context" relationship="failure"/>
				</applies-to>
				<description>
					<p>This document describes a failure that occurs when removing focus from a form
                        element, such as by moving to the next element, causes a change of context.
                    </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p> The user is going through the form filling out the fields in order.
                                When he moves from the third field to the forth, the form submits.
                            </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<related-techniques>
					<relatedtech idref="F37"/>
					<relatedtech idref="F60"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Find all form elements. </p>
							</item>
							<item>
								<p> Go through them in order. </p>
							</item>
							<item>
								<p> Check if the form submits when you move from one field to the
                                    next. </p>
							</item>
							<item>
								<p> Check if moving from one field to the next launches any new
                                    windows. </p>
							</item>
							<item>
								<p> Check if moving from one field to the next navigates to another
                                    screen. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #3, step #4, or step #5 is true, then this failure condition applies and
                                    the content fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F10">
				<short-name>Failure of Success Criterion 2.1.2 and Conformance Requirement 5 due to combining multiple content formats in a way
                    that traps users inside one format type</short-name>
				<applicability>
					<p>Applies when content creates a situation where the user can enter the content
                        using the keyboard, but cannot exit the content using the keyboard.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="keyboard-operation-trapping" relationship="failure"/>
					<conformance-criterion idref="cc5" relationship="failure"/>
				</applies-to>
				<description>
					<p>When content includes multiple formats, one or more user agents or plug-ins
                        are often needed in order to successfully present the content to users. For
                        example, a page that includes XHTML, SVG, SMIL and XForms may require a
                        browser to load as many as three different plug-ins in order for a user to
                        successfully interact with the content. Some plug-ins create a common
                        situation in which the keyboard focus can become "stuck" in a
                        plug-in, leaving a keyboard-only user with no way to return to the
                        other content. </p>
				</description>
				<examples>
					<ulist>
						<item>
							<p> <emph role="bold">A plug-in traps the user </emph>A user tabs into a
                                plug-in and is unable to return to content outside the plug-in
                                content with the keyboard. The user has to restart their browser in
                                order to regain control and navigate to a new page and is unable to
                                access any content that appears beyond the plug-in content. </p>
						</item>
					</ulist>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G21"/>
					<relatedtech idref="SCR20"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Using a keyboard, navigate through the content. </p>
							</item>
							<item>
								<p> Check to see that the keyboard focus is not "trapped" and it is
                                    possible to move keyboard focus out of the plug-in content
                                    without closing the user agent or restarting the system. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If the keyboard focus becomes "trapped," then this failure
                                    condition applies and content fails the Success Criterion and conformance requirement 5. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F12">
				<short-name>Failure of Success Criterion 2.2.5 due to having a session time limit without a mechanism
                    for saving user's input and re-establishing that information upon
                    re-authentication</short-name>
				<applicability>
					<p>Sites that require user login to submit input and that terminate the session
                        after a some period of inactivity.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-server-timeout" relationship="failure"/>
				</applies-to>
				<description>
					<p>Web servers that require user authentication usually have a session mechanism
                        in which a session times out after a period of inactivity from the user.
                        This is sometimes done for security reasons, to protect users who are
                        assumed to have left their computer exposed in a state where someone could
                        do something harmful to them such as transfer bank funds or make an
                        unauthorized purchase. A user with a disability may actually still be
                        working to complete the form as it may take him or her longer to complete
                        the form than would normally be expected. Upon re-authentication, if the
                        state of the user's session is not restored, including all data that had
                        been previously entered into the form, he or she will have to start over.
                        And for these users, it is likely that the session will time out again
                        before they can complete the form. This sets up a situation where a user who
                        needs more time to complete the form can never complete it.</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p>A user submits a form on an authenticated site after their login has
                                expired. On submitting the form, they are prompted to log in again,
                                and then taken to a general welcome page. The data is not processed
                                and they must try again.</p>
						</item>
						<item>
							<p>A user submits a form on an authenticated site after their login has
                                expired. On submitting the form, they are prompted to log in again,
                                and then taken back to the page they were on just before the login,
                                which in this case contains the form they attempted to submit.
                                However, the form is not populated with the data they just entered,
                                and they must re-enter it.</p>
						</item>
					</ulist>
				</examples>
				<related-techniques>
					<relatedtech idref="G105"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>On a site where authentication is required, user input is collected, and
                            which ends the user's session after a known period of inactivity:</p>
						<olist>
							<item>
								<p>Provide user input as required but allow the session to time out,
                                    then submit the form.</p>
							</item>
							<item>
								<p>When requested, re-authenticate with the server.</p>
							</item>
							<item>
								<p>Determine if the function is performed using the previously
                                    submitted data.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #3 is false, the site fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F13">
				<short-name>Failure of Success Criterion 1.1.1 and 1.4.1 due to having a text alternative that does not
                    include information that is conveyed by color differences in the image</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
					<success-criterion idref="visual-audio-contrast-without-color" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe the failure that occurs when
                        an image uses color differences to convey information, but the text alternative for the
                        image does not convey that information. This can cause problems for people
                        who are blind or colorblind because they will not be able to perceive the
                        information conveyed by the color differences.</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p>A bar chart of sales data is provided as an image. The chart includes
                                yearly sales figures for four employees in the Sales Department. The
                                text alternative for the image says, "The following bar chart
                                displays the yearly sales figures for the Sales Department. Mary
                                sold 3.1 Million; Fred, 2.6 Million; Bob, 2.2 Million; and Andrew,
                                3.4 Million. The red bars indicate sales that were below the yearly
                                quota". This text alternative fails to provide the information which
                                is conveyed by the color red in the image. The alternative should
                                indicate which people did not meet the sales quota rather than
                                relying on color.</p>
						</item>
					</ulist>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G94"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For all images in the content that convey information by way of color differences: </p>
						<olist>
							<item>
								<p>Check that the information conveyed by color differences is not included in
                                    the text alternative for the image.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1 is true, then this failure condition applies and
                                    content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F14">
				<short-name>Failure of Success Criterion 1.3.3 due to identifying content only by its shape or
                    location</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-understanding" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to show how identifying content only by
                        its visual shape or location makes content difficult to understand and operate.
                        When only visual identification or location is used, users with visual
                        disabilities may find it difficult to locate content since they cannot see
                        the screen or may perceive only a small portion of the screen at one time.
                        Also, location of content can vary if page layout varies due to variations
                        in font, window, or screen size.</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p>The navigation instructions for a site state, "To go to next page,
                                press the button to the right. To go back to previous page, press
                                the button to the left." </p>
						</item>
						<item>
							<p>A user is reading a news article in an on-line newspaper. The article
                                contains an illustration and additional links for more information.
                                Within the text of the article is a statement, "Please see sidebar
                                to the left of the illustration for links to additional
                                information." An assistive technology user would have difficulty
                                finding the illustration and the sidebar. Some alternatives would be
                                to include the list of links within the text; to provide an in-page
                                link within the text which links to the sidebar; to provide a
                                heading for the sidebar which can be used for navigation and refer
                                to the heading in the instructions.</p>
						</item>
						<item>
							<p>A user is completing an on-line survey. There are three buttons at
                                the bottom of the survey form. The instructions state, "Press the
                                square button to exit the survey without saving, Press the triangle
                                button to save in-progress survey results. You may return later to
                                complete the survey. Press the round button to submit the survey
                                results." A screen reader user or a user unable to distinguish shapes cannot determine which button is
                                square, triangular, or round. The buttons must have additional
                                information to indicate their functions or their shapes.</p>
						</item>
					</ulist>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G96"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the Web page for textual references to content within the
                                    Web page. </p>
							</item>
							<item>
								<p>Check that the references do not rely on only the visual shape or
                                    location of the content.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F15">
				<short-name>Failure of Success Criterion 4.1.2 due to implementing custom controls that do not use
                    an accessibility API for the technology, or do so incompletely</short-name>
				<applicability>
					<p> Applies to all technologies that support an accessibility API. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-rsv" relationship="failure"/>
				</applies-to>
				<description>
					<p> When standard controls from accessible technologies are used, they usually
                        are programmed in a way that uses and supports the accessibility API. If
                        custom controls are created, however, then it is up to the programmer to be
                        sure that the newly created control supports the accessibility API. If this
                        is not done, then assistive technologies will not be able to understand what
                        the control is or how to operate it or may not even know of its existence.
                    </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>A music player is designed with custom controls that look like
                                musical notes that are stretched for volume, tone etc. The
                                programmer does not make the new control support the Accessibility
                                API. As a result - the controls cannot be identified or controlled
                                from AT. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc
									href="http://msdn.microsoft.com/en-us/library/ms696082.aspx">Active Accessibility Checker (AccExplorer)</loc> </p>
							</item>
							<item>
								<p> <loc
									href="http://java.sun.com/developer/earlyAccess/jaccesshelper/">JAVA Accessibility Helper</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Using the accessibility checker for the technology (or if
                                    that is not available, inspect the code or test with an
                                    assistive technology), check the controls to see if they support
                                    the accessibility API. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #1 is false, then this failure condition applies and the
                                    content fails this Success Criterion </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F16">
				<short-name>Failure of Success Criterion 2.2.2 due to including scrolling content where movement is not essential to the activity without also including a mechanism to pause and restart the content</short-name>
				<applicability>
					<p>All technologies that support visual movement or scrolling.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-pause" relationship="failure"/>
				</applies-to>
				<description>
					<p>In this failure technique, there is moving or scrolling content that cannot
                        be paused and resumed by users. In this case, some users with low vision or
                        cognitive disabilities will not be able to perceive the content.</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p>A page has a scrolling news ticker without a mechanism to pause it.
                                Some users are unable to read the scrolling content.</p>
						</item>
					</ulist>
				</examples>
				<related-techniques>
					<relatedtech idref="G4"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>On a page with moving or scrolling content,</p>
						<olist>
							<item>
								<p>Check that a mechanism is provided in the Web page or user agent
                                    to pause moving or scrolling content.</p>
							</item>
							<item>
								<p>Use the pause mechanism to pause the moving or scrolling
                                content.</p>
							</item>
							<item>
								<p>Check that the moving or scrolling has stopped and does not
                                    restart by itself.</p>
							</item>
							<item>
								<p>Check that a mechanism is provided in the Web page or user agent
                                    to restart the paused content.</p>
							</item>
							<item>
								<p>Use the restart mechanism provided to restart the moving
                                content.</p>
							</item>
							<item>
								<p>Check that the movement or scrolling has resumed from the point
                                    where it was stopped.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If  step #1, step #3, step #4, or step #6 are false, then the content fails the success
                                    criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F17">
				<short-name>Failure of Success Criterion 1.3.1 and 4.1.1 due to insufficient information in DOM to determine
                    one-to-one relationships (e.g., between labels with same id) in HTML</short-name>
				<applicability>
					<p> Applies to the Document Object Model (DOM) for HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
					<success-criterion idref="ensure-compat-parses" relationship="failure"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to ensure that Web pages can be
                        interpreted consistently by user agents, including assistive technology. If
                        it is ambiguous, different user agents including assistive technologies
                        could present different information to their users. Users of assistive
                        technology for example may have different information presented to them than
                        users of other mainstream user agents. Some elements and attributes in
                        markup languages are required to have unique values, and if this requirement
                        is not honored, the result can be irregular or not uniquely resolvable
                        content. For example, when id attribute values are not unique, they are
                        particularly problematic when referenced by labels, headers in data tables,
                        or used as fragment identifiers, as user agents do not have enough
                        information to  determine essential relationships (i.e., to determine
                        which label goes with which item). </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<ulist>
								<item>
									<p> A label element whose for attribute value is an idref that
                                        points to a non-existent id </p>
								</item>
								<item>
									<p> An id attribute value that is not unique. </p>
								</item>
								<item>
									<p> An accesskey attribute value that is not unique </p>
								</item>
							</ulist>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check for id and accesskey values which are not unique within
                                    the document. </p>
							</item>
							<item>
								<p> Check that attribute values that have an idref value have a
                                    corresponding id value. </p>
							</item>
							<item>
								<p>For tables that use the axis attribute, check that all values
                                    listed in the axis attribute have a corresponding id value in a
                                    table header cell in the same table.</p>
							</item>
							<item>
								<p>For client-side image maps, check that the value of the usemap
                                    attribute has a corresponding id value if the usemap attribute
                                    is not a URI.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1, step #3 or step #4 is true or step #2 is false, then this failure
                                    condition applies and the content fails the success
                                criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F19">
				<short-name>Failure of Conformance Requirement 1 due to not providing a method for the user to find the alternative conforming version of a non-conforming Web page</short-name>
				<applicability>
					<p> Sites that provide alternative, WCAG conforming versions of nonconforming
                        primary content.</p>
				</applicability>
				<applies-to>
					<conformance-criterion idref="cc1" relationship="failure"/>
				</applies-to>
				<description>
					<p> This failure technique describes the situation in which an alternate, conforming version of the content is provided, but there is no direct way for a user to tell that it is available or where to find it. Such content fails the Success Criterion because the user cannot find the conforming version.</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p> A link or a search takes a user directly to one of the nonconforming
                                pages in the Web site. There is neither an indication that an
                                alternate page is available, nor a path to the alternate page from
                                the nonconforming page. </p>
						</item>
						<item>
							<p> Nonconforming pages on the Web site inform the user that a
                                conforming version is available and provide a link to the home page.
                                However, the user must search the site for the conforming version of
                                the page, so the functionality does not meet the requirements of the
                                Success Criterion. </p>
						</item>
						<item>
							<p> A user is able to use the nonconforming Web site for most pages. But
                                when the user is not able to access a particular page, there is no
                                way to find the conforming version of the page. </p>
						</item>
					</ulist>
				</examples>
				<related-techniques>
					<relatedtech idref="G136"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Identify a nonconforming page that has an alternative conforming
                                    version. </p>
							</item>
							<item>
								<p> Determine if the nonconforming page provides a link to the
                                    conforming version. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<olist>
							<item>
								<p> If step #2 is false, the content fails the Success Criterion. </p>
							</item>
						</olist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F20">
				<short-name>Failure of Success Criterion 1.1.1 and 4.1.2 due to not updating text alternatives when
                    changes to non-text content occur</short-name>
				<applicability>
					<p> Applies to all technologies. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
					<success-criterion idref="ensure-compat-rsv" relationship="failure"/>
				</applies-to>
				<description>
					<p> The objective of this failure condition is to address situations where the
                        non-text content is updated, but the text alternative is not updated at the
                        same time. If the text in the text alternative cannot still be used in
                        place of the non-text content without losing information or function, then
                        it fails because it is no longer a text alternative for the non-text
                        content. </p>
				</description>
				<examples>
					<ulist>
						<item>
							<p> <emph role="bold">Failure Example 1:</emph> A Sales chart is updated
                                to October results, but the text alternative still describes
                                September results. </p>
						</item>
						<item>
							<p> <emph role="bold">Failure Example 2:</emph> Pictures on a home page
                                change daily, but text alternatives are not updated at the same
                                time. </p>
						</item>
						<item>
							<p> <emph role="bold">Failure Example 3:</emph> The source attribute of
                                images on a page is updated periodically using script, but the text
                                alternatives are not updated at the same time. </p>
						</item>
					</ulist>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check each text alternative to see if it is describing content
                                    other than the currently-displayed non-text content. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #1 is true then the text alternative is not up to date with
                                    current item, this failure condition applies, and content fails
                                    these Success Criteria. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F22">
				<short-name>Failure of Success Criterion 3.2.5 due to opening windows that are not requested by the
                    user</short-name>
				<applicability>
					<p>General </p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-no-extreme-changes-context" relationship="failure"/>
				</applies-to>
				<description>
					<p> Failure due to opening new windows when the user does not expect them. New
                        windows take the focus away from what the user is reading or doing. This is
                        fine when the user has interacted with a piece of User Interface and expects
                        to get a new window, such as an options dialogue. The failure comes when
                        pop-ups appear unexpectedly. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p>When a user navigates to a page, a new window appears over the
                                existing user agent window, and the focus is moved to the new
                                window.</p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p> A user clicks on a link, and a new window appears. The original link
                                has no associated text saying that it will open a new window. </p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>A user clicks on the body of a page and a new window appears. No
                                indication that the area that was clicked has functionality is
                                present. </p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>A user clicks on undecorated text within the page and a new window
                                appears. The page has no visible indication that the area is functional.    </p>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="SCR24"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Load the Web page. </p>
							</item>
							<item>
								<p> Check if new (additional) windows open. </p>
							</item>
							<item>
								<p> Find every actionable element, such as links and buttons, in the
                                    Web page. </p>
							</item>
							<item>
								<p> Activate each element. </p>
							</item>
							<item>
								<p> Check if activating the element opens a new window. </p>
							</item>
							<item>
								<p> Check if elements that open new windows have associated text
                                    saying that will happen. The text can be displayed in the link,
                                    or available through a hidden association such as an HTML title
                                    attribute. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #2 is true, the failure condition applies and the content
                                    fails the Success Criterion </p>
							</item>
							<item>
								<p> If step #5 is true and step #6 is false, the failure condition applies and
                                    the content fails the Success Criterion </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F23">
				<short-name>Failure of  1.4.2 due to playing a sound longer than 3 seconds where
                    there is no mechanism to turn it off</short-name>
				<applicability>
					<p> Applies to all technologies except those for voice interaction. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-dis-audio" relationship="failure"/>
				</applies-to>
				<description>
					<p> This describes a failure condition for Success Criteria involving sound. If sound does not
                        turn off automatically within 3 seconds and there is no way to turn the
                        sound off then Success Criterion 1.4.2 would not be met. Sounds that play over 3 seconds
                        when there is no mechanism to turn off the sound included in the content
                        would fall within this failure condition. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<ulist>
								<item>
									<p> A site that plays continuous background music </p>
								</item>
							</ulist>
						</description>
					</eg-group>
					<eg-group>
						<description>
							<ulist>
								<item>
									<p> A site with a narrator that lasts more than 3 seconds before
                  	stopping, and there is no mechanism to stop it. </p>
								</item>
							</ulist>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check that there is a way in a Web page to turn off any sound that
                                    plays automatically for more than three seconds.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #1 is not true then content fails Success Criterion 1.4.2
                                </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F24">
				<short-name>Failure of Success Criterion 1.4.3, 1.4.6 and 1.4.8 due to specifying foreground colors without
                    specifying background colors or vice versa</short-name>
				<applicability>
					<p> All technologies that allow user agents to control foreground and background
                        colors through personal stylesheets or other means. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-contrast" relationship="failure"/>
					<success-criterion idref="visual-audio-contrast7" relationship="failure"/>
					<success-criterion idref="visual-audio-contrast-visual-presentation" relationship="failure"/>
				</applies-to>
				<description>
					<p>Users with vision loss or cognitive, language and learning challenges often prefer specific foreground and background color combinations. In some cases, individuals with low vision will find it much easier to see a Web page that has white text on a black background, and they may have set their user agent to present this contrast. Many user agents make it possible for authors to choose a preference about the foreground or background colors they would like to see without overriding all author-specified styles. This makes it possible for users to view pages where colors have not been specified by the author in their preferred color combination.</p>
					<p>Unless an author specifies both foreground and background colors, then they (the author) can no longer guarantee that the user will get a contrast that meets the contrast requirements. If, for example, the author specifies, that text should be grey, then it may override the settings of the user agent and render a page that has grey text (specified by the author) on a light grey background (that was set by the user in their user agent). This principle also works in reverse. If the author forces the background to be white, then the white background specified by the author could be similar in color to the text color preference expressed by the user in their user agent settings, thus rendering the page unusable to the user. Because an author can not predict how a user may have configured their preferences, if the author specifies a foreground text color then they should also specify a background color which has sufficient contrast with the foreground and vice versa.</p>
					<p>It is not necessary that the foreground and background colors both be defined on the same CSS rule. Since CSS color properties inherit from ancestor elements, it is sufficient if both foreground and background colors are defined either directly or through inheritance by the time that color is applied to a given element.</p>
					<note>
						<p>
                Best practice is to include all states of the text. For example, text, link text, visited link text, link text with hover and keyboard focus, etc.</p>
					</note>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Specifying only background color with <att>bgcolor</att> in HTML </head>
						<description>
							<p>In the example below the background color is defined on the body
                                element, however the foreground color is not defined. Therefore, the
                                example fails the Success Criterion.</p>
						</description>
						<code><![CDATA[   
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
      <html>
          <head>
              <title>A study of population dynamics</title>
          </head>
          <body bgcolor="white">
              <p> ... document body...</p>
          </body>
  </html>]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Specifying only foreground color with <att>color</att> in HTML </head>
						<description>
							<p>In the example below the foreground color is defined on the body
                                element, however the background color is not defined. Therefore, the
                                example fails the Success Criterion. </p>
						</description>
						<code><![CDATA[
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<html>
<head>
 <title>A study of population dynamics</title>

</head>
<body color="white">
  <p>... document body...</p>
</body>
</html>]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Specifying only background color with CSS</head>
						<description>
							<p>In the example below the background color is defined on the CSS
                                stylesheet, however the foreground color is not defined. Therefore,
                                the example fails the Success Criterion.</p>
						</description>
						<code><![CDATA[
  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<html>
<head>
 <title>Setting the canvas background</title>
    <style type="text/css">

       body {background-color:white}
    </style>
  </head>
  <body>
    <p>My background is white.</p>
  </body>
</html>]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Specifying only foreground color with CSS</head>
						<description>
							<p>In the example below the foreground color is defined on the CSS
                                stylesheet, however the background color is not defined. Therefore,
                                the example fails the Success Criterion. </p>
						</description>
						<code><![CDATA[
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<html>
<head>
 <title>Setting the canvas background</title>
    <style type="text/css">
       body {color:white}
    </style>
  </head>

  <body>
    <p>My foreground is white.</p>
  </body>
</html>]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Specifying foreground color of link text with CSS</head>
						<description>
							<p>In the example below the link text (foreground) color is defined on
                                the body element. However, the background color is not defined.
                                Therefore, the example fails the Success Criterion. </p>
						</description>
						<code><![CDATA[
  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" 
    "http://www.w3.org/TR/html4/strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<html>
<head>
 <title>A study of population dynamics</TITLE>
 <style type="text/css">
  a:link { color: red }
  a:visited { color: maroon }
  a:active { color: fuchsia }
 </style>

</head>
<body>
  <p>... document body... <a href="foo.htm">Foo</a></p>
</body>
</html>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc
									href="http://www.w3.org/TR/CSS2/cascade.html#inheritance">Assigning property values, Cascading, and Inheritance</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C23"/>
					<relatedtech idref="C25"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the code of the Web page.</p>
							</item>
							<item>
								<p>Check to see if an author-specified foreground color is present</p>
							</item>
							<item>
								<p>Check to see if an author-specified background color is present</p>
							</item>
						</olist>
						<note>
							<p>
                Color and background color may be specified at any level in the cascade of preceding selectors, by external stylesheets or through inheritance rules.
              </p>
							<p>
                Background color may also be specified using a background image with the CSS property 'background-image' or with the CSS property 'background' (with the URI of the image, e.g., 'background: url("images/bg.gif")'). With background images, it is still necessary to specify a background color, because users may have images turned off in their browser. But the background image and the background color need to be checked. </p>
						</note>
					</procedure>
					<expected-results>
						<p>If step #2 is true but step #3 is false, OR if step #3 is true but step #2 is false then this
                            failure condition applies and content fails these Success Criteria.</p>
					</expected-results>
				</tests>
			</technique>
			<technique id="F25">
				<short-name>Failure of Success Criterion 2.4.2 due to the title of a Web page not identifying the
                    contents</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-title" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes a failure condition when the Web page has a title, but the
                        title does not identify the contents or purpose of the Web page. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>Examples of text that are not titles include: </p>
							<ulist>
								<item>
									<p>Authoring tool default titles, such as </p>
									<ulist>
										<item>
											<p>"Enter the title of your HTML document here," </p>
										</item>
										<item>
											<p>"Untitled Document" </p>
										</item>
										<item>
											<p>"No Title" </p>
										</item>
										<item>
											<p>"Untitled Page" </p>
										</item>
										<item>
											<p>"New Page 1"</p>
										</item>
									</ulist>
								</item>
								<item>
									<p>Filenames that are not descriptive in their own right, such
                                        as "report.html" or "spk12.html"</p>
								</item>
								<item>
									<p>Empty text</p>
								</item>
								<item>
									<p>Filler or placeholder text</p>
								</item>
							</ulist>
						</description>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>A site generated using templates includes the same title for each
                                page on the site. So the title cannot be used to distinguish among
                                the pages.</p>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H25"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check whether the title of each Web page identifies the contents
                                    or purpose of the Web page .</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F26">
				<short-name>
          Failure of Success Criterion 1.3.3 due to using a graphical symbol alone to convey information</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-understanding" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to show how using a graphical symbol to convey information can make content difficult to comprehend. A graphical symbol may be an image, an image of text or a pictorial or decorative character symbol (glyph) which imparts information nonverbally. Examples of graphical symbols include an image of a red circle with a line through it, a "smiley" face, or a glyph which represents a check mark, arrow, or other symbol but is not the  character with that meaning. Assistive technology users may have difficulty determining the meaning of the graphical symbol. If a graphical symbol is used to convey information, provide an alternative using features of the technology or use a different mechanism that can be marked with an alternative to represent the graphical symbol. For example, an image with a text alternative can be used instead of the glyph.  
          </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Glyphs Used to Indicate Status</head>
						<description>
							<p>
                A shopping cart uses two simple glyphs to indicate whether an item is available for immediate shipment. A check mark indicates that the item is in stock and ready to ship. An "x" mark indicates that the item is currently on back order and not available for immediate shipment. An assistive technology user could not determine the status of the current item. </p>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H37"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the page for non-text marks that convey information. </p>
							</item>
							<item>
								<p>Check whether there are other means to determine the information
                                    conveyed by the non-text marks.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F30">
				<short-name>Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not
                    alternatives (e.g., filenames or placeholder text)</short-name>
				<applicability>
					<p> Applies to all technologies. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
					<success-criterion idref="media-equiv-av-only-alt" relationship="failure"/>
				</applies-to>
				<description>
					<p> This describes a failure condition for all techniques involving text
                        alternatives. If the text in the "text alternative" cannot be used in place
                        of the non-text content without losing information or function then it fails
                        because it is not, in fact, an alternative to the non-text content. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p> Examples of text that are not text alternatives include: </p>
							<ulist>
								<item>
									<p> placeholder text such as " " or "spacer" or "image" or
                                        "picture" etc that are put into the 'text alternative'
                                        location on images or pictures. </p>
								</item>
								<item>
									<p> programming references that do not convey the information or
                                        function of the non-text content such as "picture 1",
                                        "picture 2" or "0001", "0002" or "Intro#1", "Intro#2". </p>
								</item>
								<item>
									<p> filenames that are not valid text alternatives in their own
                                        right such as "Oct.jpg" or "Chart.jpg" or
                                        "sales\\oct\\top3.jpg" </p>
								</item>
							</ulist>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check each text alternative to see if it is not actually a text
                                    alternative for the non-text content. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #1 is true then this failure condition applies and content
                                    fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F31">
				<short-name>Failure of Success Criterion 3.2.4 due to using two different labels for the same function on different Web pages within a set of Web pages </short-name>
				<applicability>
					<p> Applies to all technologies. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-consistent-functionality" relationship="failure"/>
				</applies-to>
				<description>
					<p> Components that have the same function in different Web pages are more
                        easily recognized if they are labeled consistently. If the naming is not
                        consistent, some users may get confused. </p>
					<note>
						<p>Text alternatives that are "consistent" are not always "identical." For
                            instance, you may have an graphical arrow at the bottom of a Web page
                            that links to the next Web page. The text alternative may say "Go to
                            page 4." Naturally, it would not be appropriate to repeat this exact
                            text alternative on the next Web page. It would be more appropriate to
                            say "Go to page 5". Although these text alternatives would not be
                            identical, they would be consistent, and therefore would not be failures
                            for this Success Criterion.</p>
					</note>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p> One of the most common examples of using inconsistent labels for
                                components with the same function is to use a button that says
                                "search" in one page and to use a button that says "find" on another
                                page when they both serve the identical function. </p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>An online authoring tool that uses a button with "Save page" on one
                                page and "Save" on another page, in both cases for the same
                                function. </p>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> In a set of Web pages, find components with the same function
                                    that are repeated in multiple Web pages. </p>
							</item>
							<item>
								<p> For each component with the same function found in step #1, check
                                    that the naming is consistent. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p> If step #2 is false then this failure condition applies and content fails
                            the Success Criterion. </p>
					</expected-results>
				</tests>
			</technique>
			<technique id="F32">
				<short-name>Failure of Success Criterion 1.3.2 due to using white space characters to control
                    spacing within a word</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-sequence" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe how using white space characters, such as space, tab, line break, or carriage return, to format individual words visually can be a failure to present meaningful sequences properly. When blank characters are inserted to control letter spacing within a word, they may change the interpretation of the word or cause it not to be programmatically recognized as a single word. 
          </p>
					<p>Inserting white space characters into an initialism is not an example of this
                        failure, since the white space does not change the interpretation of the
                        initialism and may make it easier to understand.</p>
					<p>The use of white space between words for visual formatting is not a failure,
                        since it does not change the interpretation of the words.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Failure due to adding white space in the middle of a word</head>
						<description>
							<p>This example has white spaces within a word to space out the letters
                                in a heading. Screen readers may read each letter individually
                                instead of the word "Welcome."</p>
						</description>
						<code role="html401"><![CDATA[
<h1>W e l c o m e</h1>
]]></code>
						<description>
							<p>&amp;nbsp; can also be used to add white space, producing similar
                                failures:</p>
						</description>
						<code role="html401"><![CDATA[
<h1>H&nbsp;E&nbsp;L&nbsp;L&nbsp;O</h1>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>White space in the middle of a word changing its meaning</head>
						<description>
							<p>In Japanese, Han characters (Kanji) may have multiple readings that
                                mean very different things. In this example, the word is read
                                incorrectly because screen readers may not recognize these
                                characters as a word because of the white space between the
                                characters. The characters mean "Tokyo," but screen readers say
                                "Higashi Kyo".</p>
						</description>
						<code role="html401"><![CDATA[
<h1>東　京</h1>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Using line break characters to format vertical text</head>
						<description>
							<p>In the row header cell of a data table containing Japanese text,
                                authors often create vertical text by using line break characters.
                                However screen readers are not able to read the words in vertical
                                text correctly because the line breaks occur within the word. In the
                                following example, "東京都"(Tokyo-to) will be read "Higashi Kyo
                                Miyako".</p>
						</description>
						<code role="html401"><![CDATA[
<table>
<caption>表1.　都道府県別一覧表</caption>
<tr>
<td></td>
<th scope="col">（見出しセル 1.）</th>
<th scope="col">（見出しセル 2.）</th>
</tr>
<tr>
<th scope="row">東<br />京<br />都</th>
<td>（データセル 1.）</td>
<td>（データセル 2.）</td>
</tr>
・・・・・・
</table>
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="C8"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each word that appears to have non-standard spacing between
                            characters: </p>
						<olist>
							<item>
								<p>Check whether any words in the text of the content contain white
                                    space characters .</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1 is true, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F33">
				<short-name>Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to
                    create multiple columns in plain text content</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
					<success-criterion idref="content-structure-separation-sequence" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe how using white space
                        characters, such as space, tab, line break, or carriage return, to format columns of
                        data in text content is a failure to use structure properly. Assistive
                        technologies will interpret content in the reading order of the current
                        language. Using white space characters to create multiple columns does not
                        provide the information in a natural reading order. Thus, the assistive
                        technology user will not be presented with the information in an
                        understandable manner.</p>
					<p>Plain text is not suitable for displaying multiple columns of text. Modify
                        the content to present the data in a different layout. Alternatively, use a
                        technology that provides structural elements to represent columnar data.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>The following example incorrectly uses white space characters to
                                format a paragraph into a two column format.</p>
						</description>
						<code role="html401"><![CDATA[
Web Content Accessibility Guidelines      including blindness and low vision, 
2.0 (WCAG 2.0) covers a wide range of     deafness and hearing loss, learning 
issues and recommendations for making     difficulties, cognitive limitations, limited 
Web content more accessible. This         movement, speech difficulties, and 
document contains principles,             others. Following these guidelines will 
guidelines, Success Criteria, benefits,   also make your Web content more 
and examples that define and explain      accessible to the vast majority of users, 
the requirements for making Web-based     including older users. It will also enable
information and applications accessible.  people to access Web content using 
"Accessible" means usable to a wide       many different devices - including a 
range of people with disabilities,        wide variety of assistive technologies.
]]></code>
						<description>
							<p>If this table was to be interpreted and spoken by a screen reader it
                                would speak the following lines:</p>
							<ulist>
								<item>
									<p>Web Content Accessibility Guidelines including blindness and
                                        low vision,</p>
								</item>
								<item>
									<p>2.0 (WCAG 2.0) covers a wide range of deafness and hearing
                                        loss, learning</p>
								</item>
								<item>
									<p>issues and recommendations for making difficulties, cognitive
                                        limitations, limited</p>
								</item>
								<item>
									<p>Web content more accessible. This movement, speech
                                        difficulties, and</p>
								</item>
								<item>
									<p>(additional lines eliminated for brevity) </p>
								</item>
							</ulist>
							<p>If the text were reflowed, or changed from a fixed to a variable
                                font, or increased in size until lines no longer fit on the page,
                                similar interpretation issues would arise in the visual
                                presentation.</p>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the document for data or information presented in
                                    columnar format.</p>
							</item>
							<item>
								<p>Check whether the columns are created using white space
                                    characters to lay out the information.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #2 is true, then this failure condition applies and the
                                    content fails these Success Criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F34">
				<short-name>Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to
                    format tables in plain text content</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
					<success-criterion idref="content-structure-separation-sequence" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe how using white space
                        characters, such as space, tab, line break, or carriage return, to format tables in text
                        content is a failure to use structure properly. When tables are created in
                        this manner there is no way to indicate that a cell is intended to be a
                        header cell, no way to associate the table header cells with the table data
                        cells, or to navigate directly to a particular cell in a table.</p>
					<p>In addition, assistive technologies will interpret content in the reading
                        order of the current language. Using white space to organize data in a
                        visual table does not provide the information in a natural reading order in
                        the source of the document. Thus, the assistive technology user will not be
                        presented with the information in a logical reading order.</p>
					<p>Plain text is not suitable for displaying complex information like tables
                        because the structure of the table cannot be perceived. Rather than using
                        visual formatting to represent tabular relations, 
            tabular information would need to be presented using a different technology or presented linearly. (See Presenting tabular information in plain text)</p>
					<!-- BBC: The above should link to the undrafted technique by the same name in 1.3.1-->
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>The following example incorrectly uses white space to format a Menu
                                as a visual table.</p>
						</description>
						<code role="html401"><![CDATA[
Menu
         Breakfast        Lunch           Dinner

Monday   2 fried eggs    tomato soup     garden salad
         bacon           hamburger       Fried Chicken
         toast           onion rings     green beans
                         Oatmeal cookie  mashed potatoes

Tuesday   Pancakes       vegetable soup  Caesar salad
          sausage        hot dogs        Spaghetti with meatballs
          orange juice   potato salad    Italian bread
                         brownie         ice cream
]]></code>
						<description>
							<p>If this table was to be interpreted and spoken by a screen reader it
                                would speak the following lines:</p>
							<ulist>
								<item>
									<p>Menu</p>
								</item>
								<item>
									<p>Breakfast Lunch Dinner</p>
								</item>
								<item>
									<p>Monday 2 fried eggs tomato soup garden salad</p>
								</item>
								<item>
									<p>bacon hamburger Fried Chicken</p>
								</item>
								<item>
									<p>toast onion rings green beans</p>
								</item>
								<item>
									<p>Oatmeal cookie mashed potatoes</p>
								</item>
							</ulist>
							<p>This reading order does not make sense since there is no structure in
                                the table for the assistive technology to identify it as a table. If
                                the text were reflowed, or changed from a fixed to a variable font,
                                or increased in size until lines no longer fit on the page, similar
                                issues would arise in the visual presentation.</p>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H51"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the document for visually formatted tables.</p>
							</item>
							<item>
								<p>Check whether the tables are created using white space characters
                                    to layout the tabular data.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #2 is true, then this failure condition applies and the
                                    content fails these Success Criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F36">
				<short-name>Failure of Success Criterion 3.2.2 due to automatically submitting a form and
                    presenting new content without prior warning when the last field in the form is
                    given a value</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-unpredictable-change" relationship="failure"/>
				</applies-to>
				<description>
					<p>Forms are frequently designed so that they submit automatically when the user
                        has filled in all the fields, or when focus leaves the last field. There are
                        two problems with this approach. First is that a disabled user who needs
                        more context may move focus away from the field to the directions on how to
                        fill in the form, or to other text, accidentally submitting the form. The
                        other is that, with some form elements, the value of the field changes as
                        each item is navigated with the keyboard, again accidentally submitting the
                        form. It is better to rely on the standard form behavior of the submit
                        button and enter key. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p> This failure example submits a form when the user leaves the last
                                field of a three-field telephone number form. The form will submit
                                if the user leaves the field after editing it, even navigating
                                backwards in the tab order. Developers should not use this method to
                                submit a form, and should instead use a submit button, or rely on
                                the form's default behavior of submitting when the user hits enter
                                in a text field. </p>
						</description>
						<code><![CDATA[ 
<form method="get" id="form1">
  <input type="text" name="text1" size="3" maxlength="3"> - 
  <input type="text" name="text2" size="3" maxlength="3"> - 
  <input type="text" name="text3" size="4" maxlength="4" onchange="form1.submit();">
</form> ]]></code>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>This is a  example that submits a form when the user
                                selects an option from the menu when there is no warning of this behavior in advance. The form will submit as soon as an item from the menu is selected. A user using a keyboard will not be able to navigate past the first item in the menu. Blind users and users with hand tremors can easily make a mistake on which item on the dropdown menu to choose and they are taken to the wrong destination before they can correct it.  </p>
						</description>
						<code><![CDATA[ 
<form method="get" id="form2">
 <input type="text" name="text1">
  <select name="select1" onchange="form2.submit();">
    <option>one</option>
    <option>two</option>
    <option>three</option>
    <option>four</option>
  </select>
</form>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Enter data in all fields on page starting at top. </p>
							</item>
							<item>
								<p> Enter data in last field and exit from it (tab out of it).</p>
							</item>
							<item>
								<p> Check whether leaving the last field causes change of
                                context.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #3 is true, then this failure condition applies and content
                                    fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F37">
				<short-name>Failure of Success Criterion 3.2.2 due to launching a new window without prior warning
                    when the status of a radio button, check box or select list is changed</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-unpredictable-change" relationship="failure"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="6">
						<p>Internet Explorer 6 also triggers the onclick event when a radio button
                            with onclick receives focus; adding other event handlers (onxxx
                            attributes) to prevent this does not work. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p> This document describes a failure that occurs when changing the status of a
                        radio button, a check box or an item in a select list causes a new window to
                        open. It is possible to use scripting to create an <code><![CDATA[input]]></code>
                        element that causes a change of context (submit the form, open a new page, a
                        new window) when the element is selected. Developers can instead use a
                        submit button (see <loc
						href="G80" linktype="general">Providing a submit
                            button to initiate a change of context</loc>) or clearly indicate the
                        expected action. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p> The example below fails the Success Criterion because it processes
                                the form when a radio button is selected instead of using a submit
                                button. </p>
						</description>
						<code><![CDATA[  
<script type="text/JavaScript"> 
  function goToMirror(theInput) {
   var mirrorSite = "http://download." + theInput.value + "/"; 
   window.open(mirrorSite); 
  }
</script>
  …
<form name="mirror_form" id="mirror_form" action="" method="get">
       <p>Please select a mirror download site:</p> 
       <p> 
       <input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_belnet" value="belnet.be" /> 
       <label for="mirror_belnet">belnet (<abbr>BE</abbr>)</label><br /> 
       <input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_surfnet" value="surfnet.nl" /> 
       <label for="mirror_surfnet">surfnet (<abbr>NL</abbr>)</label><br /> 
       <input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_puzzle" value="puzzle.ch" /> 
       <label for="mirror_puzzle">puzzle (<abbr>CH</abbr>)</label><br /> 
       <input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_voxel" value="voxel.com" /> 
       <label for="mirror_voxel">voxel (<abbr>US</abbr>)</label><br /> 
       </p> 
</form>]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Find each form in a page. </p>
							</item>
							<item>
								<p> For each form control that is a radio button, check box or an
                                    item in a select list, check if changing the status of the
                                    control launches a new window. </p>
							</item>
							<item>
								<p> For each new window resulting from step 2, check if the user is
                                    warned in advance. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p> If step #3 is false, then this failure condition applies and content
                            fails the Success Criterion. </p>
					</expected-results>
				</tests>
			</technique>
			<technique id="F38">
				<short-name>Failure of Success Criterion 1.1.1 due to omitting the alt-attribute for non-text
                    content used for decorative purposes only in HTML</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
				</applies-to>
				<description>
					<p> This describes a failure condition for text alternatives for images that
                        should be ignored by AT. If there is no alt attribute at all assistive
                        technologies are not able to ignore the non-text content. The alt attribute
                        must be <phrase diff="chg">provided</phrase> and have a null value (i.e., <code><![CDATA[alt=""]]></code> or
                            <code><![CDATA[alt=" "]]></code>) to avoid a failure of this Success Criterion. </p>
					<note>
						<p>Although <code><![CDATA[alt=" "]]></code> is valid, <code><![CDATA[alt=""]]></code> is
                            recommended. </p>
					</note>
				</description>
				<examples>
					<ulist>
						<item>
							<p>Failure Example 1: Decorative images that have no <att>alt</att>
                                attribute </p>
						</item>
					</ulist>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Identify any <code><![CDATA[img]]></code> and <code><![CDATA[applet]]></code> elements
                                    that are used for purely decorative content; </p>
							</item>
							<item>
								<p> Check that the <code><![CDATA[alt]]></code> attribute for these elements
                                    exists. </p>
							</item>
							<item>
								<p> Check that the <code><![CDATA[alt]]></code> attribute for these elements is
                                    null. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> if step #2 or step #3 is false, this failure condition applies and
                                    content fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F39">
				<short-name>Failure of Success Criterion 1.1.1 due to providing a text alternative that is not null (e.g., alt="spacer" or alt="image") for images that should be ignored by assistive technology</short-name>
				<applicability>
					<p> Applies to HTML and XHTML. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
				</applies-to>
				<description>
					<p>This technique describes a failure condition for images that should
            be ignored by assistive technologies. A text alternative for an image
            should convey the meaning of the image. When an image is used for decoration,
            spacing or other purpose that is not part of the meaningful content
            in the page then the image has no meaning and should be ignored by
            assistive technologies. </p>
					<p>Providing a null text alternative (i.e., <code><![CDATA[alt=""]]></code> or <code><![CDATA[alt=" "]]></code>)
            will allow assistive technology to ignore the image and avoid a failure
            of this Success Criterion. </p>
					<note>
						<p>Although <code><![CDATA[alt=" "]]></code> is valid, <code><![CDATA[alt=""]]></code> is
            recommended. </p>
					</note>
				</description>
				<examples>
					<eg-group>
						<head>Decorative images that have no <att>alt</att> attribute</head>
						<description>
							<p>An image is used to create a blank space between content, where the
                spacing itself is not meaningful to the content. The image has an alt
                text value of "spacer". This image fails the Success Criterion
                because the text alternative does not serve an equivalent purpose.
                The image is meant to be ignored but its alternative text "spacer" is
                announced by screen readers and displayed in some alternate color schemes. </p>
						</description>
						<code xml:space="preserve"><![CDATA[<div>Tree type: <img src="spacer.gif" width="100" height="1" alt="spacer"/>Cedrus deodara</div>
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H37"/>
					<relatedtech idref="C9"/>
					<relatedtech idref="F38"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Identify any img elements that are used for decoration, spacing
              or other purpose that is not part of the meaningful content in the
              page </p>
							</item>
							<item>
								<p> Check that the alt attribute for these elements is null. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step #2 is false, this failure condition applies and the content
              fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F40">
				<short-name>Failure of Success Criterion 2.2.1 and 2.2.4 due to using meta redirect with a time limit
        </short-name>
				<applicability>
					<p> All pages</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-required-behaviors" relationship="failure"/>
					<success-criterion idref="time-limits-postponed" relationship="failure"/>
				</applies-to>
				<description>
					<p> <code><![CDATA[meta]]></code>
						<code><![CDATA[http-equiv]]></code> of {time-out}; url=... is often used to
                        automatically redirect users. When this occurs after a time delay, it is an
                        unexpected change of context that may interrupt the user.</p>
					<p>It is acceptable to use the <code><![CDATA[meta]]></code> element to create a redirect
                        when the time-out is set to zero, since the redirect is instant and will not
                        be perceived as a change of context. However, it is preferable to use
                        server-side methods to accomplish this. See <loc
						href="SVR1" linktype="server">Implementing automatic redirects on the server side
                            instead of on the client side</loc>.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p> The page below is a failure because it will redirect to the URI
                                http://www.example.com/newpage after a time limit of 5 seconds.</p>
						</description>
						<code><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
   <head>     
      <title>Do not use this!</title>     
      <meta http-equiv="refresh"
      content="5; url=http://www.example.com/newpage" />   
   </head>   
   <body>     
      <p>       
         If your browser supports Refresh, you'll be       
         transported to our        
         <a href="http://www.example.com/newpage">new site</a>        
         in 5 seconds, otherwise, select the link manually.     
      </p>   
   </body> 
</html>
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc
									href="http://www.w3.org/TR/html401/struct/global.html#h-7.4.4">HTML 4.01 META element</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<!--
Related techniques
<ulist>
    <item><p>
        <loc href="">Using meta refresh to create an instant client-side redirect</loc>
    </p></item>
</ulist>
-->
				<tests>
					<procedure>
						<olist>
							<item>
								<p> View a page. </p>
							</item>
							<item>
								<p> Check that the page does not redirect after a time-out. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<olist>
							<item>
								<p>If check #2 is false, this failure condition applies and content fails the Success Criterion.</p>
							</item>
						</olist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F41">
				<short-name>Failure of Success Criterion 2.2.1, 2.2.4, and 3.2.5 due to using meta refresh with a
                    time-out</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-required-behaviors" relationship="failure"/>
					<success-criterion idref="time-limits-postponed" relationship="failure"/>
					<!-- Bruces raises concern this mapping could mislead people, should expand technique to clarify -->
					<success-criterion idref="consistent-behavior-no-extreme-changes-context" relationship="failure"/>
				</applies-to>
				<description>
					<p> <code><![CDATA[meta]]></code>
						<code><![CDATA[http-equiv]]></code> of refresh is often used to periodically refresh
                        pages or to redirect users to another page. If the time interval is too
                        short, people who are blind will not have enough time to make their screen
                        readers read the page before the page refreshes unexpectedly and causes the
                        screen reader to begin reading at the top. Sighted users may also be
                        disoriented by the unexpected refresh.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p> This is a deprecated example that changes the user's page at regular
                                intervals. Content developers should not use this technique to
                                simulate "push" technology. Developers cannot predict how much time
                                a user will require to read a page; premature refresh can disorient
                                users. Content developers should avoid periodic refresh and allow
                                users to choose when they want the latest information. (The number
                                in the <code><![CDATA[content]]></code> attribute is the refresh interval in
                                seconds.)</p>
						</description>
						<code><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">   
  <head>     
    <title>HTML Techniques for WCAG 2.0</title>     
    <meta http-equiv="refresh" content="60" />   
  </head>   
  <body>
    ...     
  </body> 
</html>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>This is a deprecated example that redirects the user to another page
                                after a number of seconds. Content developers are recommended to
                                user server-side redirects instead. (The number in the
                                <code><![CDATA[content]]></code> attribute is the refresh interval in
                            seconds.)</p>
						</description>
						<code><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">   
  <head>     
    <title>The Tudors</title>     
    <meta http-equiv="refresh" content="10;URL='http://example.com/'" />   
  </head>   
  <body>
    <p>This page has moved to a <a href="http://example.com/">
    example.com</a>. Please note that we now have our own 
    domain name and will redirect you in a few seconds. Please update 
    your links and bookmarks.</p>
  </body> 
</html>]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="SVR1"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Find <code><![CDATA[meta]]></code> elements in the document. </p>
							</item>
							<item>
								<p> For each <code><![CDATA[meta]]></code> element, check if it contains the
                                    attribute <code><![CDATA[http-equiv]]></code> with value "refresh"
                                    (case-insensitive) and the <code><![CDATA[content]]></code> attribute with a
                                    number (representing seconds) greater than 0. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step 2 is true then this failure condition applies and content
                                    fails these Success Criteria. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F42">
				<short-name>Failure of Success Criterion 1.3.1 and 2.1.1 due to using scripting events to emulate links in a way that is not programmatically determinable</short-name>
				<applicability>
					<p>HTML and XHTML with Scripting.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
					<success-criterion idref="keyboard-operation-keyboard-operable" relationship="failure"/>
					<success-criterion idref="keyboard-operation-all-funcs" relationship="failure"/>
					<!--success-criterion idref="ensure-compat-rsv"/-->
				</applies-to>
				<description>
					<p>This failure occurs when JavaScript event handlers are attached to elements
                        to ''emulate links''. A control or link created in this  manner cannot be tabbed to from the keyboard and does not gain keyboard focus like other controls and/or links.
            If scripting events are used to emulate links, user
                        agents including assistive technology may not be able to identify the links
                        in the content as links. They may not be recognized as interactive controls
                        by assistive technology, or they may be recognized as interactive controls
                        but still not recognized as links. Such elements do not appear in the links
                        list generated by user agents or assistive technology.</p>
					<p>The <code><![CDATA[<a href>]]></code> and <code><![CDATA[<area>]]></code>
                        elements are intended to mark up links.</p>
					<p>Attaching event handlers to elements that are not normally interactive, such
                        as <code><![CDATA[span]]></code> and <code><![CDATA[div]]></code>, can be quite disorienting to
                        users. Even if care is taken to provide keyboard access to such elements,
                        users may have a difficult time discovering that there are interactive
                        controls in the content or understanding what type of behavior to expect
                        from them. For example, users may not know which keystrokes are supported by
                        the script to activate the element. Additionally, these elements do not
                        generate the same operating system events as interactive elements, so
                        assistive technology may not be notified when the user activates them.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Scripting a <code><![CDATA[<span>]]></code> element</head>
						<description>
							<p>Scripted event handling is added to a <code><![CDATA[span]]></code> element so
                                that it functions as a link when clicked with a mouse. Assistive
                                technology does not recognize this element as a link.</p>
						</description>
						<code role="html401"><![CDATA[
<span onclick="this.location.href='newpage.html'">
    Fake link
</span>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Scripting an <code><![CDATA[<img>]]></code> element</head>
						<description>
							<p>Scripted event handling is added to an <code><![CDATA[img]]></code> element so
                                that it functions as a link when clicked with a mouse. Assistive
                                technology does not recognize this element as a link.</p>
						</description>
						<code role="html401"><![CDATA[
   src="go.gif" 
   alt="go to the new page" 
   onclick="this.location.href='newpage.html'"
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Scripting an <code><![CDATA[<img>]]></code> element, with keyboard
                            support</head>
						<description>
							<p>Scripted event handling is added to an <code><![CDATA[img]]></code> element so
                                that it functions as a link. In this example, the link functionality
                                can be invoked with the mouse or via the Enter key if the user agent
                                includes the element in the tab chain. Nevertheless, the element
                                will not be recognized as a link.</p>
						</description>
						<code role="html401"><![CDATA[
function doNav(url)
{
   window.location.href = url;
}

function doKeyPress(url)
{
   //if the enter key was pressed
   if (window.event.type == "keypress" &&
       window.event.keyCode == 13)
   {
      doNav(url);
   }
}
]]></code>
						<description>
							<p>The markup for the image is:</p>
						</description>
						<code role="html401"><![CDATA[
<p>
	<img src="bargain.jpg"
		tabindex="0" 
		alt="View Bargains"
		onclick="doNav('viewbargains.html');"
		onkeypress="doKeyPress('viewbargains.html');"
	>
</p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Scripting a <code><![CDATA[<div>]]></code> element</head>
						<description>
							<p>This example uses script to make a <code><![CDATA[div]]></code> element behave
                                like a link. Although the author has provided complete keyboard
                                access and separated the event handlers from the markup to enable
                                repurposing of the content, the <code><![CDATA[div]]></code> element will not be
                                recognized as a link by assistive technology.</p>
						</description>
						<code role="html401"><![CDATA[
window.onload = init;

function init()
{
	var objAnchor = document.getElementById('linklike');

	objAnchor.onclick = function(event){return changeLocation(event,
'surveyresults.html');};
	objAnchor.onkeypress = function(event){return changeLocation(event,
'surveyresults.html');};
}

function changeLocation(objEvent, strLocation)
{
	var iKeyCode;

	if (objEvent && objEvent.type == 'keypress')
	{
		if (objEvent.keyCode)
			iKeyCode = objEvent.keyCode;
		else if (objEvent.which)
			iKeyCode = objEvent.which;

		if (iKeyCode != 13 && iKeyCode != 32)
			return true;
	}

	window.location.href = strLocation;
}
]]></code>
						<description>
							<p>The markup for the <code><![CDATA[div]]></code> element is:</p>
						</description>
						<code role="html401"><![CDATA[
<div id="linklike">
View the results of the survey.
</div>
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA) Version 1.0</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G115"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check whether there are JavaScript event handlers on an element
                                    that emulates a link.</p>
							</item>
							<item>
								<p>Check whether the programmatically determined role of the element
                                    is <emph>link</emph>.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #1 is true and check #2 is false, then this failure
                                    condition applies and content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F43">
				<short-name>Failure of Success Criterion 1.3.1 due to using structural markup in a way that does
                    not represent relationships in the content</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe a failure that occurs when
                        structural markup is used to achieve a presentational effect, but indicates
                        relationships that do not exist in the content. This is disorienting to
                        users who are depending on those relationships to navigate the content or to
                        understand the relationship of one piece of the content to another. Note
                        that the use of HTML tables for layout is not an example of this failure as
                        long as the layout table does not include improper structural markup such as
                            <code><![CDATA[<th>]]></code> or <code><![CDATA[<caption>]]></code>
                        elements.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>A heading used only for visual effect</head>
						<description>
							<p>In this example, a heading element is used to display an address in a
                                large, bold font. The address does not identify a new section of the
                                document, however, so it should not be marked as a heading.</p>
						</description>
						<code role="html401"><![CDATA[
<p>Interested in learning more? Write to us at</p> 
<h4>3333 Third Avenue, Suite 300 · New York City</h4>

<p>And we'll send you the complete informational packet absolutely Free!</p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Using heading elements for presentational effect</head>
						<description>
							<p>In this example, heading markup is used in two different ways: to
                                convey document structure and to create visual effects. The
                                <code><![CDATA[h1]]></code> and <code><![CDATA[h2]]></code> elements are used appropriately
                                to mark the beginning of the document as a whole and the beginning
                                of the abstract. However, the <code><![CDATA[h3]]></code> and <code><![CDATA[h4]]></code>
                                elements between the title and the abstract are used only for visual
                                effect — to control the fonts used to display the authors' names and
                                the date.</p>
						</description>
						<code role="html401"><![CDATA[
<h1>Study on the Use of Heading  Elements in Web Pages</h1>
<h3>Joe Jones and Mary Smith<h3>
<h4>March 14, 2006</h4>
<h2>Abstract</h2>
<p>A study was conducted in early 2006 ...
</p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Using <code><![CDATA[blockquote]]></code> elements to provide additional
                            indentation</head>
						<description>
							<p>The following example uses <code><![CDATA[blockquote]]></code> for text that is
                                not a quotation to give it prominence by indenting it when displayed
                                in graphical browsers.</p>
						</description>
						<code role="html401"><![CDATA[
<p>After extensive study of the company Web site, the task force 
identified the following common problem.</p>

<blockquote>
<p>The use of markup for presentational effects made Web 
pages confusing to screen reader users.</p>
</blockquote>

<p>The committee lists particular examples of the problems 
introduced by this practice below.</p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Using the <code><![CDATA[fieldset]]></code> and <code><![CDATA[legend]]></code> elements to
                            give a border to text</head>
						<code role="html401"><![CDATA[
<fieldset>
<legend>Bargain Corner</legend>
<p>Buy today, and save 20%</p>
</fieldset>
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="F46"/>
					<relatedtech idref="G115"/>
					<relatedtech idref="H39"/>
					<relatedtech idref="H42"/>
					<relatedtech idref="H73"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that each element's semantic meaning is appropriate for the
                                    content of the element.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #1 is false, then this failure condition applies and the
                                    content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F44">
				<short-name>Failure of Success Criterion 2.4.3 due to using tabindex to create a tab order that
        	does not preserve meaning and operability</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-focus-order" relationship="failure"/>
				</applies-to>
				<description>
					<p>This document describes a failure that occurs when the tab order does not
                        follow logical relationships and sequences in the content.</p>
					<p>Focusable elements like links and form elements have a <code><![CDATA[tabindex]]></code>
                        attribute. The elements receive focus in ascending order of the value of the
                            <code><![CDATA[tabindex]]></code> attribute. When the values of the
                        <code><![CDATA[tabindex]]></code> attribute are assigned in a different order than the
                        relationships and sequences in the content, the tab order no longer follows
                        the relationships and sequences in the content.</p>
					<p>One of the most common causes of this failure occurs when editing a page
                        where <code><![CDATA[tabindex]]></code> has been used. It is easy for the tab order and
                        the content order to fall out of correspondence when the content is edited
                        but the <code><![CDATA[tabindex]]></code> attributes are not updated to reflect the
                        changes to the content.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>The following example incorrectly uses tabindex to specify an
                                alternative tab order:</p>
						</description>
						<code role="html401" diff="chg"><![CDATA[
<ol>
   <li><a href="main.html" tabindex="1">Homepage</a></li>
   <li><a href="chapter1.html" tabindex="4">Chapter 1</a></li>
   <li><a href="chapter2.html" tabindex="3">Chapter 2</a></li>
   <li><a href="chapter3.html" tabindex="2">Chapter 3</a></li>
</ol>
]]></code>
						<description>
							<p>If this list is navigated by the tab key, the list is navigated in
                                the order Homepage, chapter 3, chapter 2, chapter 1, which does not
                                follow the sequence in the content.</p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>The tab order has been set explicitly in a Web page by providing
                                    <code><![CDATA[tabindex]]></code> attributes for all fields. Later, the page
                                is modified to add a new field in the middle of the page, but the
                                author forgets to add a <code><![CDATA[tabindex]]></code> attribute to the new
                                field. As a result, the new field is at the end of the tab
                            order.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc
									href="http://www.w3.org/TR/html4/interact/forms.html#adef-tabindex">Tabbing navigation</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H4"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>If <code><![CDATA[tabindex]]></code> is used, check that the tab order
                                    specified by the <code><![CDATA[tabindex]]></code> attributes follows
                                    relationships in the content.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #1 is false, then this failure condition applies and
                                    content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F46">
				<short-name>Failure of Success Criterion 1.3.1 due to using <code><![CDATA[th]]></code> elements,
                    <code><![CDATA[caption]]></code> elements, or non-empty <code><![CDATA[summary]]></code> attributes in
                    layout tables</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe a failure that occurs when a
                        table used only for layout includes either <code><![CDATA[th]]></code> elements, a
                            <code><![CDATA[summary]]></code> attribute, or a <code><![CDATA[caption]]></code> element. This
                        is a failure because it uses structural (or semantic) markup only for
                        presentation. The intent of the HTML and XHTML table elements is to present data. </p>
					<p>Although not commonly used in a layout table, the following structural markup would also be failures of Success Criterion 1.3.1 if used in a layout table: </p>
					<ulist>
						<item>
							<p> <att>headers</att> attributes </p>
						</item>
						<item>
							<p> <att>scope</att> attributes 
              </p>
						</item>
					</ulist>
					<p>Assistive technologies use the structure of an HTML or XHTML table to present data to
                        the user in a logical manner. The <code><![CDATA[th]]></code> element is used to mark
                        the column and row headers of the table. A screen reader uses the
                        information in <code><![CDATA[th]]></code> elements to speak the header information that
                        changes as the user navigates the table. The summary attribute on the
                            <code><![CDATA[table]]></code> element provides a textual description of the table
                        that describes its purpose and function. Assistive technologies make the
                            <code><![CDATA[summary]]></code> attribute information available to users. The
                            <code><![CDATA[caption]]></code> element is part of the table and identifies the
                        table.</p>
					<p>
            Although WCAG 2 does not prohibit the use of layout tables, CSS-based layouts are recommended in order to retain the defined semantic meaning of the HTML table elements and to conform to the coding practice of separating presentation from content. 
            When a table is used
                        for layout purposes the <code><![CDATA[th]]></code> element should not be used. Since
                        the table is not presenting data there is no need to mark any cells as
                        column or row headers. Likewise, there is no need for an additional
                        description of a table which is only used to layout content. Do not include
                        a <code><![CDATA[summary]]></code> attribute and do not use the <code><![CDATA[summary]]></code>
                        attribute to describe the table as, for instance, "layout table". When
                        spoken, this information does not provide value and will only distract users
                        navigating the content via a screen reader. Empty <code><![CDATA[summary]]></code>
                        attributes are acceptable on layout tables, but not recommended.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>Here is a simple example that uses a table to layout content in a
                                three column format. The navigation bar is in the left column, the
                                main content in the middle column, and an additional sidebar is on
                                the right. At the top is a page title. The example marks the page
                                title as <code><![CDATA[<th>]]></code>, and provides a summary
                                attribute indicating that the table is a layout table.</p>
						</description>
						<code role="html401"><![CDATA[
 <table summary="layout table">
 <tr>
   <th colspan=3>Page Title</th>
 </tr>
 <tr>
   <td><div>navigation content</div></td>
   <td><div>main content</div></td>
   <td><div>right sidebar content</div></td>
 </tr>
 <tr>
   <td colspan=3>footer</td>
 </tr>
 </table>
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H39"/>
					<relatedtech idref="H51"/>
					<relatedtech idref="H73"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the source code of the HTML or XHTML document for the
                                    <code><![CDATA[table]]></code> element</p>
							</item>
							<item>
								<p>If the table is used only to visually lay out elements within the
                                    content </p>
								<olist>
									<item>
										<p>Check that the table does not contain any <code><![CDATA[th]]></code>
                                            elements.</p>
									</item>
									<item>
										<p>Check that the <code><![CDATA[table]]></code> element does not
                                            contain a non-empty summary attribute.</p>
									</item>
									<item>
										<p>Check that the <code><![CDATA[table]]></code> element does not
                                            contain a <code><![CDATA[caption]]></code> element.</p>
									</item>
								</olist>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If any check above is false, then this failure condition applies
                                    and the content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F47">
				<short-name>Failure of Success Criterion 2.2.2 due to using the blink element</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-pause" relationship="failure"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="*">
						<p>The <code><![CDATA[blink]]></code> element is not supported by Internet Explorer 6 on Windows. It is supported in Netscape/Mozilla family of user agents and Opera on Windows.           </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The <code><![CDATA[blink]]></code> element, while not part of the official HTML or XHTML
                        specification, is supported by many user agents. It causes any text inside
                        the element to blink at a predetermined rate. This cannot be interrupted by
                        the user, nor can it be disabled as a preference. The blinking continues as
                        long as the page is displayed. Therefore, content that uses
                        <code><![CDATA[blink]]></code> fails the Success Criterion because blinking can continue
                        for more than three seconds.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>A product list page uses the <code><![CDATA[blink]]></code> element to draw
                                attention to sale prices. This fails the Success Criterion because
                                users cannot control the blink.</p>
						</description>
						<code><![CDATA[
<p>My Great Product <blink>Sale! $44,995!</blink></p>
]]></code>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine code for the presence of the <code><![CDATA[blink]]></code>
                                element.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If #1 is true, the content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F48">
				<short-name>Failure of Success Criterion 1.3.1 due to using the <code><![CDATA[pre]]></code> element to markup
                    tabular information</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
				</applies-to>
				<description>
					<p>This document describes a failure caused by use of the HTML <code><![CDATA[pre]]></code>
                        element to markup tabular information. The <code><![CDATA[pre]]></code> element
                        preserves only visual formatting. If the <code><![CDATA[pre]]></code> element is used to
                        markup tabular information, the visually implied logical relationships
                        between the table cells and the headers are lost if the user cannot see the
                        screen or if the visual presentation changes significantly.</p>
					<p>Instead, the HTML <code><![CDATA[table]]></code> element is intended to present tabular
                        data. Assistive technologies use the structure of an HTML table to present
                        data to the user in a logical manner. This structure is not available when
                        using the <code><![CDATA[pre]]></code> element.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>A schedule formatted with tabs between columns </head>
						<code role="html401"><![CDATA[
 <pre>
 	Monday	Tuesday	Wednesday	Thursday	Friday
 8:00-
 9:00	Meet with Sam				
 9:00-
 10:00			Dr. Williams	Sam again	Leave for San Antonio
 </pre>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Election results displayed using preformatted text</head>
						<code role="html401"><![CDATA[
 <pre>
   CIRCUIT COURT JUDGE BRANCH 3
                                                  W
                                                   R
                                          M R E     I
                                           A . L     T
                                     M L    R   B     E
                                      I A    Y   E     -
                                       K N        R     I
                                        E G        T     N
                                       -----   -----   -----
0001 TOWN OF ALBION WDS 1-2               22      99       0
0002 TOWN OF BERRY WDS 1-2                52     178       0
0003 TOWN OF BLACK EARTH                  16      49       0
0004 TOWN OF BLOOMING GROVE WDS 1-3       44     125       0
0005 TOWN OF BLUE MOUNDS                  33     117       0
0006 TOWN OF BRISTOL WDS 1-3             139     639       1
0007 TOWN OF BURKE WDS 1-4                80     300       0
0008 TOWN OF CHRISTIANA WDS 1-2           22      50       0

 </pre>
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H51"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check to see if the <code><![CDATA[pre]]></code> element is used</p>
							</item>
							<item>
								<p>For each occurrence of the <code><![CDATA[pre]]></code> element, check
                                    whether the enclosed information is tabular.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is true, then this failure condition applies and the
                                    content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F49">
				<short-name>
          Failure of Success Criterion 1.3.2 due to using an HTML layout table that does not make sense when linearized  </short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-sequence" relationship="failure"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Early screen readers literally read Web content from the screen, which
                            lead to problems when tables were used for layout where one table cell
                            was meant to be read in its entirety before reading the next table cell.
                            Today's screen readers work with the underlying markup, which means that
                            they do read a table cell in its entirety before moving on to the next
                            cell, but layout tables may still inadvertently introduce problems with
                            the natural reading order of the content.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>Although WCAG 2 does not prohibit the use of layout tables, CSS-based layouts are recommended in order to retain the defined semantic meaning of the HTML <el>table</el> elements and to conform to the coding practice of separating presentation from content. If a layout table is used, however, it is important that the content make sense when linearized.
          </p>
					<p>This failure occurs when a meaningful sequence of content conveyed through
                        presentation is lost because HTML tables used to control the visual
                        placement of the content do not “linearize" correctly. Tables present
                        content in two visual dimensions, horizontal and vertical. However, screen
                        readers present this two-dimensional content in linear order of the content
                        in the source, beginning with the first cell in the first row and ending
                        with the last cell in the last row. The screen reader reads the table from
                        top to bottom, reading the entire contents of each row before moving to the
                        next row. The complete content of each cell in each row is spoken—including
                        the complete content of any table nested within a cell. This is called
                        linearization.</p>
					<p>Suppose that a Web page is laid out using a table with 9 columns and 22 rows.
                        The screen reader speaks the content of the cell at Column 1, Row 1 followed
                        by the cells in columns 2, 3, 4 and so on to column 9. However, if any cell
                        contains a nested table, the screen reader will read the entire nested table
                        before it reads the next cell in the original (outer) table. For example, if
                        the cell at column 3, row 6 contains a table with 6 columns and 5 rows, all
                        of those cells will be read before Column 4, Row 6 of the original (outer)
                        table. As a result, the meaningful sequence conveyed through visual
                        presentation may not be perceivable when the content is spoken by a screen
                        reader.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>A layout table that does not linearize correctly</head>
						<description>
							<p>An advertisement makes clever use of visual positioning, but changes
                                meaning when linearized.</p>
						</description>
						<code role="html401"><![CDATA[
<table>
<tr>
  <td ><img src="logo.gif" alt="XYZ mountaineering"></td>
  <td rowspan="2" valign="bottom">top!</td>
</tr>
<tr>
  <td>XYZ gets you to the</td>
</tr>
</table>]]></code>
						<description>
							<p>The reading order from this example would be: </p>
							<ulist>
								<item>
									<p>XYZ mountaineering top! </p>
								</item>
								<item>
									<p>XYZ gets you to the</p>
								</item>
							</ulist>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head>A layout table that separates a meaningful sequence when linearized</head>
						<description>
							<p>A Web page from a museum exhibition positions a navigation bar
                                containing a long list of links on the left side of the page. To the
                                right of the navigation bar is an image of one of the pictures from
                                the exhibition. To the right of the image is the kind of "placard"
                                text you'd see on the wall next to the object if you were at the
                                museum. Below that text is a heading that says "Description," and
                                below that heading is a description of the image. The image, placard
                                text, Description heading, and text of the description form a
                                meaningful sequence.</p>
							<p>A layout table is used to position the elements of the page. The
                                links in the navigation bar are split into different cells in the
                                leftmost column.</p>
						</description>
						<code role="html401"><![CDATA[
<table>
<tr>
	<td><a href="#">Link 1</a></td>
	<td rowspan="20"><img src="img.png" alt="Museum Picture"></td>
	<td rowspan="6"><img src="placard.png" alt="Placard text"></td> 
</tr> 
<tr>
	<td><a href="#">Link 2</a></td>
</tr>
<tr>
	<td><a href="#">Link 3</a></td>
</tr>
<tr>
	<td><a href="#">Link 4</a></td>
</tr>
<tr>
	<td><a href="#">Link 5</a></td>
</tr>
<tr>
	<td><a href="#">Link 6</a></td>
</tr>
<tr>
	<td><a href="#">Link 7</a></td>
	<td rowspan="2"><h2>Image Heading</h2></td> 
</tr> 
<tr>
	<td><a href="#">Link 8</a></td>
</tr>
<tr>
	<td><a href="#">Link 9</a></td>
	<td rowspan="12">Description of the image</td> 
</tr> 
<tr>
	<td><a href="#">Link 10</a></td>
</tr>
 ...
<tr>
	<td><a href="#">Link 20</a></td>
</tr>
</table>
]]></code>
						<description>
							<p>The reading order from this example would be: </p>
							<ulist>
								<item>
									<p>Link 1</p>
								</item>
								<item>
									<p>Image</p>
								</item>
								<item>
									<p>Placard Text</p>
								</item>
								<item>
									<p>Link 2</p>
								</item>
								<item>
									<p>Link 3</p>
								</item>
								<item>
									<p>Link 4</p>
								</item>
								<item>
									<p>Link 5</p>
								</item>
								<item>
									<p>Link 6</p>
								</item>
								<item>
									<p>Link 7</p>
								</item>
								<item>
									<p>Image Heading</p>
								</item>
								<item>
									<p>Link 8</p>
								</item>
								<item>
									<p>Link 9</p>
								</item>
								<item>
									<p>Link 10</p>
								</item>
								<item>
									<p>...</p>
								</item>
								<item>
									<p>Link 20</p>
								</item>
							</ulist>
							<p>Because the navigation bar links are interleaved with the content
                                describing the image, screen readers cannot present the content in a
                                meaningful sequence corresponding to the sequence presented
                                visually.</p>
						</description>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="C6"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Linearize the content in either of the following ways: </p>
								<ulist>
									<item>
										<p>Present the content in source code order</p>
									</item>
									<item>
										<p>Remove the table markup from around the content</p>
									</item>
								</ulist>
							</item>
							<item>
								<p>Check that the linear reading order matches any meaningful
                                    sequence conveyed through presentation.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F50">
				<short-name>Failure of Success Criterion 2.2.2 due to a script that causes a blink effect without a
                    mechanism to stop the blinking at 5 seconds or less</short-name>
				<applicability>
					<p>Technologies that support script-controlled blinking of content.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-pause" relationship="failure"/>
				</applies-to>
				<description>
					<p>Scripts can be used to blink content by toggling the content's visibility on and off at regular intervals. It is a failure for the script not to include a mechanism to stop the blinking at 5 seconds or earlier. See <loc
						href="SCR22" linktype="script">Using scripts to control blinking and stop it in five seconds or less</loc> for information about how to modify the technique to stop the blinking.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>The following example uses script to blink content, but the blink
                                continues indefinitely rather than stopping after five seconds.</p>
						</description>
						<code><![CDATA[
...
<script type="text/javascript">
<!--
// blink "on" state
function show()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "visible";
	settime-out("hide()", 450);
}
// blink "off" state
function hide()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "hidden";
	settime-out("show()", 450);
}
// kick it off
show();
//-->
</script>
...
<span id="blink1">This content will blink</span>
]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="SCR22"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each instance of blinking content:</p>
						<olist>
							<item>
								<p>Determine if the blinking stops in 5 seconds or less.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p>If #1 is false, then the content fails the Success Criterion.</p>
					</expected-results>
				</tests>
			</technique>
			<technique id="F52">
				<short-name>Failure of Success Criterion 3.2.1 and 3.2.5 due to opening a new window as soon as a new page is loaded</short-name>
				<applicability>
					<p>Applies when scripting is used to open new windows. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-receive-focus" relationship="failure"/>
					<success-criterion idref="consistent-behavior-no-extreme-changes-context" relationship="failure"/>
				</applies-to>
				<description>
					<p> Some Web sites open a new window when a page is loaded, to advertise a
                        product or service. The objective of this technique is to ensure that pages
                        do not disorient users by opening up one or more new windows that automatically attain focus as soon as a
                        page is loaded. </p>
				</description>
				<examples>
					<note>
						<p>There are multiple methods by which this failure may be triggered. Two
                            common examples that are supported differently in various versions of
                            user agents are listed as examples below. </p>
					</note>
					<eg-group role="failure">
						<head/>
						<description>
							<p>The following example is commonly used in HTML 4.01 to open new
                                windows when pages are loaded.</p>
						</description>
						<code><![CDATA[
window.onload = showAdvertisement;
 function showAdvertisement()
 {
  window.open('advert.html', '_blank', 'height=200,width=150');
 }]]></code>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>The following example commonly used in XHTML to open new windows when
                                pages are loaded.</p>
						</description>
						<code><![CDATA[
if (window.addEventListener) { 
    window.addEventListener("load", showAdvertisement, true);
}
if (window.attachEvent) {
    window.attachEvent("onload", showAdvertisement);
}
function showAdvertisement()
{
window.open('noscript.html', '_blank', 'height=200,width=150');
}]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<related-techniques>
					<relatedtech idref="G107"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> load a new page </p>
							</item>
							<item>
								<p> check to see whether a new window has been opened as a result of
                                    loading the new page </p>
							</item>
							<item>
								<p>Check to see whether the new window is automatically given focus </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If step 2 and step 3 are true, then this failure condition applies and
                                    content fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F54">
				<short-name>Failure of Success Criterion 2.1.1 due to using only pointing-device-specific event
                    handlers (including gesture) for a function</short-name>
				<applicability>
					<p>Technologies that have event handlers specific to pointing devices.</p>
					<p> User Agent and Assistive Technology Support Notes</p>
					<ulist>
						<item>
							<p> None listed. </p>
						</item>
					</ulist>
				</applicability>
				<applies-to>
					<success-criterion idref="keyboard-operation-keyboard-operable" relationship="failure"/>
					<success-criterion idref="keyboard-operation-all-funcs" relationship="failure"/>
				</applies-to>
				<description>
					<p>When pointing device-specific event handlers are the only mechanism available
                        to invoke a function of the content, users with no vision (who cannot use
                        devices such as mice that require eye-hand coordination) as well as users
                        who must use alternate keyboards or input devices that act as keyboard
                        emulators will be unable to access the function of the content. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>The following example is of an image that responds to a mouse click
                                to go to another page. This is a failure because the keyboard cannot
                                be used to move to the next page. <code><![CDATA[ 
<p><img onmousedown="nextPage();" src="nextarrow.gif" 
alt="Go to next page"></p>]]></code> </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<related-techniques>
					<relatedtech idref="SCR20"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check to see whether pointing-device-specific event handlers are
                                    the only means to invoke scripting functions.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If any are found, then this failure condition applies and content
                                    fails the Success Criterion. </p>
							</item>
						</ulist>
						<!--<p>Test n.n will fail the test (<code>onMouseDown</code> is used and  keyboard-specific event handler is not used)</p>
            <p>
              <code><![CDATA[   
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01  
  Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <title>Script has device dependent event handler (onmousedown)</title>
  </head>
  <body>
    <p>
      <a onMouseDown="window.location.href='nextpage.html';">mouse-only link</a>
    </p>
  </body>
</html>]]></code>
            </p>
            <p>Test n.n will fail the test (<code>onMouseOver</code> is used and  keyboard-specific event handler is not used)</p>
            <p>
              <code><![CDATA[ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01  
         Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
         <html> 
         <head> 
         <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
         <title>Script has device dependent event handler (onmouseover)</title> 
         </head> 
         <body> 
         <p><a onMouseOver="this.value='this will not work with the keyboard';">mouse-only link</a></p> 
         </body> 
         </html> ]]></code>
            </p>-->
					</expected-results>
				</tests>
			</technique>
			<technique id="F55">
				<short-name>
          Failure of Success Criteria 2.1.1, 2.4.7, and 3.2.1 due to using script to remove focus when focus is received</short-name>
				<applicability>
					<p>Applies to all content that supports script.</p>
					<p> User Agent and Assistive Technology Support Notes</p>
					<ulist>
						<item>
							<p> None listed. </p>
						</item>
					</ulist>
				</applicability>
				<applies-to>
					<success-criterion idref="keyboard-operation-keyboard-operable" relationship="failure"/>
					<success-criterion idref="keyboard-operation-all-funcs" relationship="failure"/>
					<success-criterion idref="navigation-mechanisms-focus-visible" relationship="failure"/>
					<success-criterion idref="consistent-behavior-receive-focus" relationship="failure"/>
				</applies-to>
				<description>
					<p>Content that normally receives focus when the content is accessed by keyboard may have this focus removed by scripting. This is sometimes done when designer considers the system focus indicator to be unsightly.  However, the system focus indicator is an important part of accessibility for keyboard users.  In addition, this practice removes focus from the content entirely, which means that the content can only be operated by a pointing device such as a mouse.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<code><![CDATA[<input type="submit" onFocus="this.blur();"> ]]></code>
					</eg-group>
					<eg-group role="failure">
						<code><![CDATA[<a onFocus="this.blur()" href="Page.html"><img src="myImage.gif"></a> ]]></code>
					</eg-group>
					<eg-group role="failure">
						<code><![CDATA[<a href="link.html" onfocus="if(this.blur)this.blur();">Link Phrase</a> ]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Use the keyboard to verify that you can get to all interactive
                                    elements using the keyboard. </p>
							</item>
							<item>
								<p> Check that when focus is placed on each element, focus remains
                                    there until user moves it. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If #2 is false then this failure condition applies and content
                                    fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F58">
				<short-name>Failure of Success Criterion 2.2.1 due to using server-side techniques to automatically
                    redirect pages after a time-out</short-name>
				<applicability>
					<ulist>
						<item>
							<p> Any server-side scripting language </p>
						</item>
						<item>
							<p> Content does not meet the exceptions in the Success Criterion for
                                permitted time limits. </p>
						</item>
					</ulist>
				</applicability>
				<applies-to>
					<success-criterion idref="time-limits-required-behaviors" relationship="failure"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="6.0">
						<p> The Refresh header is not defined in HTTP/1.1 or HTTP/1.0, but it is
                            widely supported by browsers (tested in Firefox 1.0 and IE 6 on
                            Windows).</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p> Server-side scripting languages allow developers to set the non-standard
                        HTTP header "Refresh" with a time-out (in seconds) and a URI to which the
                        browser is redirected after the specified time-out. If the time interval is
                        too short, people who are blind will not have enough time to make their
                        screen readers read the page before the page refreshes unexpectedly and
                        causes the screen reader to begin reading at the top. Sighted users may also
                        be disoriented by the unexpected refresh.</p>
					<p>The HTTP header that is set is <code><![CDATA[Refresh: {time in seconds}; url={URI of
                            new location}]]></code>. It is also possible to omit the URI and obtain a
                        periodically refreshing page, which causes the same problem. The HTTP header
                        that is set is <code><![CDATA[Refresh: {time in seconds}]]></code>.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p> The following example is a failure because a timed server-side
                                redirect is implemented in Java Servlets or JavaServer Pages
                            (JSP).</p>
						</description>
						<code><![CDATA[
public void doGet (HttpServletRequest request, HttpServletResponse response)
      throws IOException, ServletException {
        response.setContentType("text/html");
	PrintWriter out = response.getWriter();
	response.setHeader("Refresh", "10; URL=TargetPage.html");
	out.println("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"
	 \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
	out.println("<html><head><title>Redirect</title></head><body>");
	out.println("<p>This page will redirect you in 10 seconds.</p>");
	out.println("</body></html>");
  }
]]></code>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>The following example is a failure because a timed server-side
                                redirect is implemented in Active Server Pages (ASP) with VBScript.</p>
						</description>
						<code><![CDATA[
 <% @Language = "VBScript" %>
 <% option explicit 
 Response.Clear
 Response.AddHeader "Refresh", "5; URL=TargetPage.htm"
 %><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
 …
 <!--HTML code for content that is shown before the redirect is triggered-->
 ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.ietf.org/rfc/rfc1945.txt">Hypertext
                                        Transfer Protocol -- HTTP/1.0 (IETF Request for Comments
                                        1945)</loc> (plain text) </p>
							</item>
							<item>
								<p> <loc href="http://www.ietf.org/rfc/rfc2616.txt">Hypertext
                                        Transfer Protocol -- HTTP/1.1 (IETF Request for Comments
                                        2616)</loc> (plain text) </p>
							</item>
							<!-- BBC Commented out as it redirects to netscape.aol.com item>
                <p>
                  <loc href="http://wp.netscape.com/assist/net_sites/pushpull.html">An Exploration of Dynamic Documents</loc> by Netscape
                                    describes the nonstandard Refresh header that was introduced
                                    with Netscape Navigator 1.1. </p>
              </item-->
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="F40"/>
					<relatedtech idref="F41"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> When a Web page is rendered, check to see if it automatically
                                    redirects to another page after some period of time without the
                                    user taking any action. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If such a redirect is found then this failure condition applies
                                    and content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F59">
				<short-name>Failure of Success Criterion 4.1.2 due to using script to make div or span a user
                    interface control in HTML</short-name>
				<applicability>
					<p> HTML and XHTML with scripting </p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-rsv" relationship="failure"/>
				</applies-to>
				<description>
					<p> This failure demonstrates how using generic HTML elements to create user
                        interface controls can make the controls inaccessible to assistive
                        technology. Assistive technologies rely on knowledge of the role and current
                        state of a component in order to provide that information to the user. Many
                        HTML elements have well defined roles, such as links, buttons, text fields,
                        etc. Generic elements such as <code><![CDATA[div]]></code> and <code><![CDATA[span]]></code> do not
                        have any predefined roles. When these generic elements are used to create
                        user interface controls in HTML the assistive technology may not have the
                        necessary information to describe and interact with the control. </p>
					<p> See the resources section below for links to specifications which describe
                        mechanisms to provide the necessary role and state information to create
                        fully accessible user interface controls. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following example fails because it creates a checkbox using a
                                span and an image.</p>
						</description>
						<code><![CDATA[
  <p> 
  <span  onclick="toggleCheckbox('chkbox')"> 
  <img src="unchecked.gif"  id="chkbox" alt=""> Include Signature 
  </span> 
  </p>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p> Here is the scripting code which changes the image source when the
                                    <code><![CDATA[span]]></code> is clicked with the mouse. </p>
						</description>
						<code><![CDATA[ 
  var CHECKED = "check.gif"; 
  var UNCHECKED = "unchecked.gif"; 
  function toggleCheckbox(imgId) { 
  var theImg = document.getElementById(imgId); 
  if ( theImg.src.lastIndexOf(CHECKED)!= -1 ) { 
  theImg.src = UNCHECKED; 
  // additional code to implement unchecked action 
  } 
  else { 
  theImg.src = CHECKED; 
  // additional code to implement checked action 
  } 
  } ]]></code>
						<description>
							<p> A checkbox created in this manner will not work with assistive
                                technology since there is no information that identifies it as a
                                checkbox. In addition, this example is also not operable from the
                                keyboard and would fail guideline 2.1. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc
									href="http://www.w3.org/WAI/PF/roadmap/DHTMLRoadmap040506.html">Dynamic Accessible Web Content Roadmap</loc> </p>
							</item>
							<item>
								<p> <loc
									href="http://wiki.codetalks.org/wiki/index.php/Main_Page">Accessible DHTML</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="F42"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Examine the source code for elements which have event handlers
                                    assigned within the markup or via scripting. </p>
							</item>
							<item>
								<p> If those elements are acting as user interface controls, check
                                    that the role of the control is defined. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p>If check #2 is false and the created user interface control does not have
                            role information, this failure condition applies. </p>
					</expected-results>
				</tests>
			</technique>
			<technique id="F60">
				<short-name>Failure of Success Criterion 3.2.5 due to launching a new window when a user enters
                    text into an input field</short-name>
				<applicability>
					<p>General</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-no-extreme-changes-context" relationship="failure"/>
				</applies-to>
				<description>
					<p>This document describes a failure that occurs when a new window is created in
                        response to a user filling in a text field for other than error reporting.
                    </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p> This is a deprecated example showing a failure: A user is filling in
                                his mailing address. When he fills in his postal code, a new window
                                opens containing advertisements for services available in his city.
                            </p>
						</description>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<p>This example is acceptable: A user is filling in his mailing address
                                in a form. When he fills in the postal code field, a script runs to
                                validate that it is a valid postal code. If the value is not valid,
                                a window opens with instructions on how to fill in the field. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<related-techniques>
					<relatedtech idref="F37"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Find all text input form fields </p>
							</item>
							<item>
								<p> Change the value in each form field </p>
							</item>
							<item>
								<p> Check if new windows open </p>
							</item>
							<item>
								<p> For any new windows that open, check if they contain an error
                                    message and a button that closes the window returning focus to
                                    the initiating form element. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If #3 is true and #4 is false then failure condition applies and
                                    the content fails this Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F61">
				<short-name>Failure of Success Criterion 3.2.5 due to complete change of main content through an
                    automatic update that the user cannot disable from within the content</short-name>
				<applicability>
					<p>General </p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-no-extreme-changes-context" relationship="failure"/>
				</applies-to>
				<description>
					<p> This document describes a failure that occurs when the content <phrase diff="chg">in the main <loc href="viewportdef" linktype="glossary">viewport</loc></phrase> viewport is automatically updated, and <phrase diff="chg">there there is no option for a user to disable</phrase> this behavior. </p>
					<p diff="add">Two procedures are presented below to test for the existence of a failure against Success Criterion 3.2.5. Procedure 1 is the preferred procedure and assumes that content authors have access to the code that generates the viewport content.</p>
					<p diff="add">However there may be instances where this may not be possible (eg: in certain content management systems, application environments such as django or ruby-on-rails, or content generated through scripting languages such as AJAX or PHP that are generated by third parties.) To that end, the second procedure is supplied to allow testing in these instances. Note that timeframes are indicative only, and that any change after any amount of time should be treated as a failure if the test otherwise does not pass the other step evaluations. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p>A news site automatically refreshes itself to ensure that it has the
                                newest headlines. There is no option to disable this behavior. </p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>A slideshow fills the entire viewport and advances to the next slide
                                automatically. There is no stop button. </p>
						</description>
					</eg-group>
					<eg-group role="failure" diff="add">
						<head/>
						<description>
							<p>A search engine automatically generates results and dynamically updates content based on user input. There is no option to disable this behavior.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<related-techniques/>
				<tests diff="add">
					<procedure>
						<olist>
							<item><p>Open the source code in an appropriate editing tool.</p></item>
								<item><p>Examine the source code thoroughly.</p></item>
								<item><p>Confirm that content is dynamically generated or the code will trigger a change of context for the viewport on an event or after a time period.</p></item>
								<item><p>Confirm that there does not exist an appropriate mechanism for users to disable this behavior. </p></item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item><p>If both checks 3 and 4 are true, then this failure condition applies and the content fails this Success Criterion</p></item>
						</ulist>
					</expected-results>
				</tests>
				<tests diff="chg">
					<procedure>
						<olist>
							<item>
								<p> Open the content in the viewport. </p>
							</item>
							<item>
								<p> Leave the content open for  a length of time 10 times what a user could reasonably be expected to keep the viewport open for. For instance, a site's web analytics may indicate that average user visits last 1 hour and most return users visit once per day. 24 hours could be considered an appropriate length of time for the procedure.</p>
							</item>
							<item>
								<p> Check if there has been a change in context during this time.</p>
							</item>
							<item>
								<p> Confirm that the content does not contain a mechanism by which to disable automatic changes. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If both 3 and 4 are true, then this failure condition applies and the content fails this Success Criterion.  </p>
							</item>
						</ulist>
						<note><p>Regardless of the time span used at step 2 of the procedure, if step 3 tests true after any length of time, then step 4 must be confirmed and the expected results evaluated as at 1.</p></note>
					</expected-results>
				</tests>
			</technique>
			<technique id="F62">
				<short-name>Failure of Success Criterion 1.3.1 and 4.1.1 due to insufficient information in DOM to determine
                    specific relationships in XML</short-name>
				<applicability>
					<p> Applies to the Document Object Model (DOM) for XML. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
					<success-criterion idref="ensure-compat-parses" relationship="failure"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to ensure that Web pages can be
                        interpreted consistently by user agents, including assistive technology. If
                        specific relationships in a Web page are ambiguous, different user agents,
                        including assistive technologies, could present different information to
                        their users. Users of assistive technology, for example, may have different
                        information presented to them than users of other mainstream user agents.
                        Some elements and attributes in markup languages are required to have unique
                        values, and if this requirement is not honored, the result can be irregular
                        or not uniquely resolvable content. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<ulist>
								<item>
									<p> An id attribute value that is not unique. </p>
								</item>
								<item>
									<p> An SVG document uses <code><![CDATA[id]]></code> attributes on
                                            <code><![CDATA[title]]></code> elements (for alternative text) in
                                        order to reuse in other locations in the document. However,
                                        one of the <code><![CDATA[title]]></code> elements has an id that is
                                        also used elsewhere in the document, so the document is
                                        ambiguous. </p>
								</item>
								<item>
									<p> A DAISY document uses the <code><![CDATA[imgref]]></code> attribute on
                                        the <code><![CDATA[caption]]></code> element to link captions with
                                        images. However, <code><![CDATA[imgref]]></code> attribute value does
                                        not refer to the <code><![CDATA[id]]></code> attribute of the
                                        <code><![CDATA[img]]></code> element to which it belongs, so the user
                                        agent cannot find the caption for that image. </p>
								</item>
							</ulist>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check that all id values within the document (as defined by the
                                    schema) are unique. </p>
							</item>
							<item>
								<p> Check that elements or attributes that refer to unique
                                    identifiers inside the same document have a corresponding id
                                    value. </p>
							</item>
						</olist>
						<p> Note that for XML document types defined by a DTD, this refers to
                            attributes of type ID, IDREF or IDREFS. For XML document types defined
                            by a W3C XML Schema, this refers to elements or attributes of type ID,
                            IDREF or IDREFS. (For compatibility, the types ID, IDREF and IDREFS
                            should only be used on attributes, but using them for elements is
                            possible, according to <loc
							href="http://www.w3.org/TR/xmlschema-2/#terminology">XML Schema Part
                                2: Datatypes Second Edition</loc>.) For other schema languages,
                            check the corresponding mechanisms for specifying IDs and references to
                            IDs. </p>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> If #1 or #2 is false, then this failure condition applies and
                                    the content fails the Success Criterion. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F63">
				<short-name>Failure of Success Criterion 2.4.4 due to providing link context only in content that is not related to the link</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes a failure condition when the context needed for understanding the purpose of a link is located in content that is not programmatically determined link context.  If the context for the link is not in the same sentence, paragraph, list item, or table cell as the link, then the user will not be able to find out where the link is going with any ease. If the user must leave the link to search for the context, the context is not programmatically determined link context and this failure condition occurs.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>A News Service</head>
						<description>
							<p>
A news service lists the first few sentences of an article in a paragraph. The next paragraph contains the link "Read More...". Because the link is not in the same paragraph as the lead sentence, the user cannot easily discover what the link will let him read more about.
</p>
						</description>
						<code><![CDATA[
<p>A British businessman has racked up 2 million flyer miles and plans to 
travel on the world's first commercial tourism flights to space.</p>

<p><a href="ff.html">Read More...</a></p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Downloading a Free Player</head>
						<description>
							<p>An audio site provides links to where its player can be downloaded. The information about what would be downloaded by the link is in the preceding row of the layout table, which is not programmatically determined context for the link.</p>
						</description>
						<code><![CDATA[
 <table>
   <tr> 
       <td>Play music from your browser</td>
   </tr>
   <tr>
       <td>
       <a href="http://www.example.com/download.htm">
       <img src="download.jpg" width="165" height="32" alt="Download now"></a>
       </td>
   </tr>
 </table>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Using a Definitions List</head>
						<description>
							<p>
                In HTML and XHTML, definition lists provide a programmatic association between the term and its definition. So theoretically, a link provided in a definition could use the definition term as its context. However, support is particularly bad for definitions lists, and there would be no way for users of today's assistive technology to discover the context using a definition list alone. Definition lists are a useful mechanism for providing associative relationships, but at this moment in time could not be considered sufficient for <loc
								href="navigation-mechanisms-refs" linktype="guideline">Success Criterion 2.4.2</loc>.</p>
						</description>
						<code><![CDATA[
<dl>
    <dt>Harry Potter and the Chamber of Secrets</dt>
    <dd>Story of a boy with magical powers who has to face Lord Voldemort.</dd>
    <dd><a href="potter.php?id=123">Buy now</a></dd>
    <dt>Harry Potter and the Goblet of Fire</dt>
    <dd>Harry finds himself selected as an underaged competitor in a dangerous multi-wizardry school competition.</dd>
    <dd><a href="potter.php?id=124">Buy now</a></dd>
    <dt>Harry Potter and the Prisoner of Azkaban</dt>
    <dd>
Something wicked this way comes. It's Harry's third year at Hogwarts; 
not only does he have a new "Defense Against the Dark Arts" teacher, 
but there is also trouble brewing. Convicted murderer Sirius Black has 
escaped the Wizards' Prison and is coming after Harry.
    </dd>
    <dd><a href="potter.php?id=125">Buy now</a></dd>
</dl>            
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>
Locate content needed to understand how link text describes the purpose of the link.
    </p>
							</item>
							<item>
								<p>
Check whether the content is contained in the same sentence, paragraph, list item, or table cell, or in the preceding heading.
    </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>
If check 2 is false, the content fails the Success Criterion.
    </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F65">
				<short-name>Failure of Success Criterion 1.1.1 due to omitting the alt attribute on img elements, area elements, and input elements of type "image"</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes a failure condition for text alternatives on images. If there is no alt attribute, then assistive technologies are not able to identify the image or to convey its purpose to the user.</p>
					<p>
Some Assistive Technology might attempt to compensate for the missing alt text by reading the file name of the image. But it is insufficient to rely simply on the file name for many reasons. For example, file names may not be descriptive (e.g., images/nav01.gif), and technology specifications do not require descriptive file names. Some assistive technology may not read the file name if alt text is absent.
</p>
				</description>
				<examples>
					<eg-group>
						<head>Missing <code><![CDATA[alt]]></code> text</head>
						<description>
							<p>In the code example below, the person using a screen reader would not know the purpose of the image.</p>
						</description>
						<code role="html401"><![CDATA[
<img src="../images/animal.jpg" />
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="H67"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>
identify any <code><![CDATA[img]]></code>, <code><![CDATA[area]]></code> and <code><![CDATA[input]]></code> elements of type "image" 
    </p>
							</item>
							<item>
								<p>
check that the <code><![CDATA[alt]]></code> attribute for these elements exists.
    </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is false, this failure condition applies and content fails the Success Criterion.
    </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F66">
				<short-name>Failure of Success Criterion 3.2.3 due to presenting navigation links in a different relative order on different pages</short-name>
				<applicability>
					<p>Applies to all technologies</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-consistent-locations" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes a failure condition for  all techniques involving navigation mechanisms that are repeated on multiple Web pages within a set of Web pages (Success Criterion 3.2.3). If the mechanism presents the order of links in a different order on two or more pages, then the failure is triggered.
</p>
				</description>
				<examples>
					<eg-group>
						<head>An XHTML menu presenting a series of links that are in a different relative order on two different pages</head>
						<description>
							<p>Examples of a navigation mechanism that presents links in a different order.</p>
							<p> <emph role="bold">Page 1 Menu</emph> </p>
						</description>
						<code role="html401"><![CDATA[
<div id="menu"> 
    <a href="Brazil.htm">Brazil</a><br />
    <a href="Canada.htm">Canada</a><br />
    <a href="Germany.htm">Germany</a><br />
    <a href="Poland.htm">Poland</a> 
</div>
]]></code>
						<description>
							<p> <emph role="bold">Page 2 Menu</emph> </p>
						</description>
						<code role="html401"><![CDATA[
<div id="menu"> 
    <a href="Canada.htm">Canada</a><br />
    <a href="Brazil.htm">Brazil</a><br />
    <a href="Germany.htm">Germany</a><br />
    <a href="Poland.htm">Poland</a> 
</div>
]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>
Check to see if a navigation mechanism is being used on more than one Web page.
    </p>
							</item>
							<item>
								<p>
Check the default presentation of the navigation mechanism on each page to see if the list of links are in the same relative order on each Web page.
    </p>
							</item>
						</olist>
						<note>
							<p>"Same relative order" means that secondary navigation items may be in between the link items on some pages. They can be present without affecting the outcome of this test.</p>
						</note>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>
If #1 is true and #2 is false, then this failure condition applies and content fails the Success Criterion.
    </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F67">
				<short-name>Failure of Success Criterion 1.1.1 and 1.2.1 due to providing long descriptions for non-text content that does not serve the same purpose or does not present the same information</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
					<success-criterion idref="media-equiv-av-only-alt" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe the failure that occurs when the long description for non-text content does not serve the same purpose or does not present the same information as the non-text content.  This can cause problems for people who cannot interpret the non-text content because they rely on the long description to provide the necessary information conveyed by the non-text content.  Without a long description that provides complete information, a person may not be able to comprehend or interact with the Web page.
</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p>An image showing the locations of venues for events at the Olympic Games displayed on a street map. The image also contains an icon for each type of sporting event held at each venue.  The long description states, "Map showing the location of each Olympic venue.  Skating, hockey and curling are held at the Winter Park Ice Arena, Downhill skiing and jumping are held at Snow Mountain, Gymnastics is held at the JumpUp Arena, Cross Country Skiing is held at the Kilometer Forest".  While this description provides useful information, it does not convey the same information as the image because it provides no specific location information such as the address or the distance of each location from some fixed point.  Note that long descriptions do not always need to be in prose form; sometimes the information may best be presented in a table or other alternate format.
    </p>
						</item>
					</ulist>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G73"/>
					<relatedtech idref="G74"/>
					<relatedtech idref="F13"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For all non-text content that requires a long description</p>
						<olist>
							<item>
								<p>Check that the long description serves the same purpose or presents the same information as the non-text content.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1 is false, then this failure condition applies and the content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F68">
				<short-name>Failure of Success Criterion 1.3.1 and 4.1.2 due to the association of label and user interface controls not being programmatically determinable</short-name>
				<applicability>
					<p>HTML and XHTML controls that use visible labels</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
					<success-criterion idref="ensure-compat-rsv" relationship="failure"/>
				</applies-to>
				<description>
					<p>This failure describes a problem that occurs when no label element is used to explicitly associate a form control with a label where the visual design uses a label.</p>
					<note>
						<p>Elements that use explicitly-associated labels are:
							</p>
						<ulist>
							<item>
								<p> <code><![CDATA[input type="text"]]></code> </p>
							</item>
							<item>
								<p> <code><![CDATA[input type="checkbox"]]></code> </p>
							</item>
							<item>
								<p> <code><![CDATA[input type="radio"]]></code> </p>
							</item>
							<item>
								<p> <code><![CDATA[input type="file"]]></code> </p>
							</item>
							<item>
								<p> <code><![CDATA[input type="password"]]></code> </p>
							</item>
							<item>
								<p> <code><![CDATA[textarea]]></code> </p>
							</item>
							<item>
								<p> <code><![CDATA[select]]></code> </p>
							</item>
						</ulist>
						<p>The <att>label</att> element is <emph role="bold">not</emph> used for the following because labels for these elements are provided via the value attribute (for Submit and Reset buttons), the alt attribute (for image buttons), or element content itself (button).  </p>
						<ulist>
							<item>
								<p>Submit and Reset buttons (<code><![CDATA[input type="submit"]]></code> or <code><![CDATA[input type="reset"]]></code>)</p>
							</item>
							<item>
								<p>Image buttons (<code><![CDATA[input type="image"]]></code>)</p>
							</item>
							<item>
								<p>Hidden input fields (<code><![CDATA[input type="hidden"]]></code>)</p>
							</item>
							<item>
								<p>Script buttons (<code><![CDATA[button]]></code> elements or <code><![CDATA[<input type="button">]]></code>)</p>
							</item>
						</ulist>
					</note>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p>The following example demonstrates a form that visually presents labels for form controls, but does not use the <el>label</el> element to associate them with their controls. The code example below is a failure because assistive technology may not be able to determine which <el>label</el> goes with which control.</p>
						</description>
						<code role="html401"><![CDATA[
<form>
 First name: 
 <input type="text" name="firstname">
 <br />
 Last name: 
 <input type="text" name="lastname">
 <br />
 I have a dog <input type="checkbox" name="pet" value="dog" />
 I have a cat <input type="checkbox" name="pet" value="cat" />
</form>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>In the following code examples, the names associated with the text input
controls are not properly determined by assistive technology.
              </p>
						</description>
						<code role="html401"><![CDATA[
<form action="..." method="post">
<p>
<label>
   First Name
   <input type="text" name="firstname">
</label>
<label>
   <input type="text" name="lastname">
   Last Name
</label>
</p>
</form>
]]></code>
						<code role="html401"><![CDATA[
<form action="..." method="post"> 
<p> 
<label>First Name </label>
<input type="text" name="firstname"> 
<label>Last Name</label> 
<input type="text" name="lastname"> 
</p> 
</form>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>The search text box does in the following code example not have a name.  The name can be supplied with either the title attribute or with a label element hidden with CSS.
              </p>
						</description>
						<code role="html401"><![CDATA[
<input type="text" value="Type your search here"><input type="submit" type="submit" value="Search">
]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="H44"/>
					<relatedtech idref="H65"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For all <code><![CDATA[input]]></code> elements of type <code><![CDATA[radio]]></code>, <code><![CDATA[checkbox]]></code>, <code><![CDATA[text]]></code>, <code><![CDATA[file]]></code> or <code><![CDATA[password]]></code>, for all <code><![CDATA[textareas]]></code>, and for all <code><![CDATA[select]]></code> elements in the Web page:
							</p>
						<olist>
							<item>
								<p>Check that the visual design uses a text label that identifies the purpose of the control</p>
							</item>
							<item>
								<p>Check that a <el>label</el> element associates the text with all <el>input</el> elements of type <attval>radio</attval>, <attval>checkbox</attval>, <attval>text</attval>, <attval>file</attval> or <attval>password</attval>, for all <el>textarea</el> elements, and for all <el>select</el> elements</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #1 is true and check #2 is false, then this failure condition applies and the content fails these Success Criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F69">
				<short-name>Failure of Success Criterion 1.4.4 when resizing visually rendered text up to 200 percent causes the text, image or controls to be clipped, truncated or obscured</short-name>
				<applicability>
					<p>HTML, XHTML and CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure condition is to describe a problem that occurs when changing the size of text causes text to be clipped, truncated, or obscured, so that it is no longer available to the user. In general, this failure occurs when there is no way for a user agent's layout engine to honor all the layout hints in the HTML at the new font size. Some of the ways in which this can occur include:</p>
					<ulist>
						<item>
							<p>Setting the <code><![CDATA[overflow]]></code> property of the enclosing element to <code><![CDATA[hidden]]></code>
							</p>
						</item>
						<item>
							<p>Using absolutely positioned content</p>
						</item>
						<item>
							<p>Creating popups that aren't big enough for their content at the new font size</p>
						</item>
					</ulist>
					<!--<p diff="add">This failure applies to both text resize and zoom resize, and support for either is sufficient to avoid the failure. </p>-->
					<note diff="add"><p>The Working Group has discovered many misunderstandings about how to test this failure. We are planning to revise this failure in a future update. Until then, if the content passes the success criterion using any of the listed sufficient techniques, then it does not meet this failure.</p></note>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p>The font size is set in a scalable way, but the container is set to a fixed pixel size. A gray border shows the boundaries of the text container. When the text is resized, it spills out of its container, and obsures the next paragraph.</p>
						</description>
						<code role="css"><![CDATA[
<div style="font-size:100%; width:120px; height:100px; border: thin solid gray;> 
  Now is the time for all good men to come to the aid of their country. 
</div>
<p>Now is the time for all good men to come to the aid of their country.</p>
]]></code>
						<description>
							<p>Illustration of example 1:</p>
							<graphic source="working-examples/F69/F69-obscured.gif"
								alt="Example showing text that spills outside of its container, obscuring other text on the page."/>
							<!--<note diff="add"><p>This example would fail only in environments which do not support zoom functionality.</p></note>-->
						</description>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>This example is identical to the last one, except that the container is set to clip the text. The text is no longer bleeding into the next paragraph, but now it is truncated. This is also a failure.</p>
						</description>
						<code role="css"><![CDATA[
<div style="font-size:100%; width:120px; height:100px; overflow: hidden; border: thin solid gray;>
 Now is the time for all good men to come to the aid of their country. 
</div>
<p>Now is the time for all good men to come to the aid of their country.</p>
]]></code>
						<description>
							<p>Illustration of example 2:</p>
							<graphic source="working-examples/F69/F69-truncated.gif"
								alt="Example showing text that truncated due to resized text."/>
							<!--<note diff="add"><p>This example would fail only in environments which do not support zoom functionality.</p></note>-->
						</description>
					</eg-group>
					<!--
					<eg-group role="failure" diff="add">
						<description>
							<p>The page uses frame but scrolling is set to "no". When the page size is increased using zoom, the content is hidden. </p>
							<codeblock><![CDATA[<frameset rows="30%,*">
  <frame src="frameScrollingNo.html" scrolling=”no”>
  <frame src="main.html" >
</frameset>]]></codeblock>
							<p>The section where scrolling is set to "no" gets truncated when the screen size is increased using browser zoom function, as shown in the image below.</p>
							<p><image><img source="working-examples/F69/frame_no-scrollbars.png"/><alt>Illustration of example 3: Frame with no scrollbars</alt></image></p>
						</description>
					</eg-group>
					-->
				</examples>
				<related-techniques/>
				<tests>
					<procedure>
						<note diff="add"><p>The Working Group has discovered many misunderstandings about how to test this failure. We are planning to revise this failure in a future update. Until then, if the content passes the success criterion using any of the listed sufficient techniques, then it does not meet this failure.</p></note>
						<olist>
							<item>
								<p>Increase the text size of the content by 200%.</p>
							</item>
							<item>
								<p>Check that no text is clipped, truncated, or obscured.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is false, then the failure condition applies and the content fails these Success Criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F70">
				<short-name>Failure of Success Criterion 4.1.1 due to incorrect use of start and end tags or attribute markup</short-name>
				<applicability>
					<p>Markup languages: HTML, XHTML, and other SGML or XML-based technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-parses" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure is to identify examples of markup errors in element tags that could cause assistive technology to be unable to generate a satisfactory model of the page. Different user agents may implement different heuristics to recover from errors, resulting in inconsistent presentations of the page between user agents.</p>
					<p>Some common types of problems with start and end tags that lead to this failure condition (though this is not an exhaustive list):</p>
					<ulist>
						<item>
							<p>Opening and closing tags that are missing the opening &lt; and closing &gt; brackets.</p>
						</item>
						<item>
							<p>Closing tag missing the initial / to indicate it is a closing tag.</p>
						</item>
						<item>
							<p>Attribute values that have an opening quote but not a closing quote. Attribute values must be either fully quoted or, in some markup languages, may be unquoted.</p>
						</item>
						<item>
							<p>Lack of whitespace between attributes.</p>
						</item>
						<item>
							<p>Unquoted attribute values that have whitespace in the value.</p>
						</item>
						<item>
							<p>Failure to provide a closing element tag for elements that do not accept empty-element syntax.</p>
						</item>
					</ulist>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Missing angle brackets in XHTML</head>
						<description>
							<p>The following code fails because the opening tag is missing an angle bracket, and the intended boundary of the tag is unclear.</p>
						</description>
						<code role="xhtml"><![CDATA[
<p This is a paragraph</p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Missing slash on closing tag in XHTML</head>
						<description>
							<p>The following code fails because the closing tag is missing the slash, making it look like it is in fact another opening tag.</p>
						</description>
						<code role="xhtml"><![CDATA[
<p>This is a paragraph<p>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Unbalanced attribute quoting</head>
						<description>
							<p>The following code fails because the attribute value is missing the closing quote, which makes the boundary of the attribute-value pair unclear.</p>
						</description>
						<code role="xhtml"><![CDATA[
<input title="name type="text">
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Lack of whitespace between attributes</head>
						<description>
							<p>The following code fails because the there is not whitespace between attributes, which makes the boundary between attribute-value pairs unclear.</p>
						</description>
						<code role="xhtml"><![CDATA[
<input title="name"type="text">
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Unquoted attribute with whitespace value</head>
						<description>
							<p>The following code fails because an attribute value is not quoted and contains whitespace, which makes the boundary of the attribute-value pair unclear.</p>
						</description>
						<code role="xhtml"><![CDATA[
<input title=Enter name here type=text>
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Missing end tags in XHTML</head>
						<description>
							<p>The following code fails because the closing tag of the first paragraph is missing, making it unclear whether the second paragraph is a child or sibling of the first.</p>
						</description>
						<code role="xhtml"><![CDATA[
<p>This is a paragraph
<p>This is another paragraph</p>
]]></code>
					</eg-group>
				</examples>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check the source code of pages implemented in markup languages.</p>
							</item>
							<item>
								<p>Check whether any opening tags, closing tags or attributes are malformed.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is true, then the failure condition applies and the content does not meet this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F71">
				<short-name>Failure of Success Criterion 1.1.1 due to using text look-alikes to represent text without providing a text alternative</short-name>
				<applicability>
					<p>Any technology.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure condition is to avoid substituting characters whose glyphs look similar to the intended character, for that intended character. The Unicode character set defines thousands of characters, covering dozens of writing systems. While the glyphs for some of these characters may look like the glyphs for other characters in visual presentation, they are not processed the same by text-to-speech tools.</p>
					<p>For example, the characters U+0063 and U+03F2 both look like the letter "c", yet the first is from the Western alphabet and the second from the Greek alphabet and not used in Western languages. The characters U+0033 and U+04E0 both look like the number "3", yet the second is actually a letter from the Cyrillic alphabet.</p>
					<note>
						<p>This failure also applies to the use of character entities. It is the incorrect character used because of its glyph representation that comprises a failure, not the mechanism by which that character is implemented.</p>
					</note>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Characters </head>
						<description>
							<p>The following word looks, in browsers with appropriate font support, like the English word "cook", yet is composed of the string U+03f2 U+043E U+03BF U+006B, only one of which is a letter from the Western alphabet. This word will not be processed meaningfully, and a text alternative is not provided.</p>
						</description>
						<code role="xhtml"><![CDATA[
ϲоοk
]]></code>
					</eg-group>
					<eg-group role="failure">
						<head>Character entities</head>
						<description>
							<p>The following example, like the one above, will look like the English word "cook" when rendered in browsers with appropriate font support. In this case, the characters are implemented with character entities, but the word will still not be processed meaningfully, and a text alternative is not provided.</p>
						</description>
						<code role="xhtml"><![CDATA[
&#x03F2;&#x043E;&#x03BF;&#x006B;
]]></code>
						<description>
							<p>Working Example: "ϲоοk"</p>
						</description>
					</eg-group>
				</examples>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check the characters or character entities used to represent text.</p>
							</item>
							<item>
								<p>If the characters used do not match the appropriate characters for the displayed glyphs in the human language of the content, then look-alike glyphs are being used.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If look-alike glyphs are used, and there is not a text alternative for any range of text that uses look-alike glyphs, then the content does not meet the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F72">
				<short-name>Failure of Success Criterion 1.1.1 due to using ASCII art without providing a text alternative</short-name>
				<applicability>
					<p>Any technology.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure condition is to avoid the use of <loc
						href="asciiartdef" linktype="glossary">ASCII art</loc> when a text alternative is not provided. Although ASCII art is implemented as a character string, its meaning comes from the pattern of glyphs formed by a visual presentation of that string, not from the text itself. Therefore ASCII art is non-text content and requires a text alternative. Text alternatives, or links to them, should be placed near the ASCII art in order to be associated with it.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head> ASCII Art chart without a text alternative </head>
						<description>
							<p>The following ASCII art chart lacks a text alternative and therefore does not meet Success Criterion 1.1.1. Note this failure example does in fact cause this page to fail, but you may <loc
								href="#F72-related-techs">skip over the example</loc>.</p>
						</description>
						<code role="xhtml"><![CDATA[
<pre>
  %   __ __ __ __ __ __ __ __ __ __ __ __ __ __   
100 |             *                             |
 90 |                *  *                       |
 80 |          *           *                    |
 70 |             @           *                 |
 60 |          @                 *              |
 50 |       *        @              *           |
 40 |                   @              *        |
 30 |    *  @              @  @           *     |
 20 |                                           |
 10 |    @                       @  @  @  @     |
      0  5 10 15 20 25 30 35 40 45 50 55 60 65 70
      Flash frequency (Hz)
</pre>
]]></code>
					</eg-group>
				</examples>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Access a page with ASCII art.</p>
							</item>
							<item>
								<p>For each instance of ASCII art, check that it has a text alternative.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is false, then this failure condition applies and the content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F73">
				<short-name>Failure of Success Criterion 1.4.1 due to creating links that are not visually evident without color vision</short-name>
				<applicability>
					<p>Any technology.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-without-color" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure is to avoid situations in which people who cannot perceive color differences cannot identify links. Link underlines or some other non-color visual distinction are required. While some links may be visually evident from page design and context, such as navigational links, links within text are often visually understood only from their own display attributes. Removing the underline and leaving only the color difference for such links would be a failure because there would be no other visual indication (besides color) that it is a link.</p>
					<note>
						<p>If the non-color cue only happens when the mouse hovers over the link or when the link receives focus, it is still a failure.</p>
						<p>If the link is a different color and bold it would not fail because the boldness is not color dependent.</p>
					</note>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p>A Web page includes a large number of links within the body text. The links are styled so that they do not have underlines and are very similar in color to the body text. This would be a failure because users would be unable to differentiate the links from the body text.</p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<head/>
						<description>
							<p>The following code is an example of removing the underline from a link in a sentence or paragraph without providing another visual cue besides color.</p>
						</description>
						<code role="css"><![CDATA[
<head>
<style type="text/css">
p a:link {text-decoration: none}
p a:visited {text-decoration: none}
p a:active {text-decoration: none}
p a:hover {text-decoration: underline; color: red;}
</style>
</head>

<body>

<p>To find out more about the <a href="rain_in_spain.htm">rain in spain</a>there are many resources.</p>

</body>
]]></code>
						<description>
							<note>
								<p>If the visual cue is only provided on hover (as in the example above), it would still fail.
</p>
							</note>
						</description>
					</eg-group>
				</examples>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that each link within text that is part of a sentence or paragraph (or other area where they could be mistaken as non-linked text) in the page is underlined or otherwise visually identifiable (i.e., bolded, italicized) as a link without relying on color (hue).</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #1 is false, then this failure condition applies and the content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F74">
				<short-name>Failure of  Success Criterion 1.2.2 and 1.2.8 due to not labeling a synchronized media alternative to text as an alternative</short-name>
				<applicability>
					<p>Pages that provide synchronized media alternatives to text.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="media-equiv-captions" relationship="failure"/>
					<success-criterion idref="media-equiv-text-doc" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure is to avoid situations in which synchronized media alternatives are not labeled with the text for which they are alternatives. Synchronized media alternatives provide enhanced access to users for whom synchronized media is a more effective format than text. Since they are alternatives to text, they do not need themselves to have redundant text alternatives. However, they need to be clearly labeled with the text for which they substitute, so users can find them and so users who normally expect text alternatives to synchronized media know not to look for them.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>Synchronized media alternatives provided elsewhere on page</head>
						<description>
							<p>A page with instructions to complete a tax form provides a prose description of the fields to complete, data to provide, etc. Additionally, a synchronized media alternative provides spoken instructions, with video of a person completing the section being discussed in the audio. Although both versions are provided on the page, the synchronized media version is provided elsewhere on the page and is not clearly labeled with the part of the text for which it is a substitute. This makes it difficult for users encountering the text to find it, and users encountering the video do not know where its text alternative is.</p>
						</description>
					</eg-group>
				</examples>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check pages that provide synchronized media alternatives to text.</p>
							</item>
							<item>
								<p>Check that synchronized media is clearly labeled with the text for which it is an alternative.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is false, then this failure condition applies and the content fails these Success Criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F75">
				<short-name>Failure of Success Criterion 1.2.2 by providing synchronized media without captions when the synchronized media presents more information than is presented on the page</short-name>
				<applicability>
					<p>Any technology.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="media-equiv-captions" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure is to avoid situations in which synchronized media alternatives provide more information than the text for which they are alternatives, but do not provide their own text alternatives to provide access to the extra information. Synchronized media alternatives provide enhanced access to users for whom synchronized media is a more effective format than text. Since they are alternatives to text, they do not need themselves to have redundant text alternatives in the form of captions, audio descriptions or full text alternatives. However, if they provide more information than the text for which they are an alternative, then they are not just alternatives but are synchronized media content in their own right. In this case they are subject to the full requirements of <loc
						href="media-equiv-captions" linktype="guideline">Success Criterion 1.2.2</loc> to provide captions and to <loc
						href="media-equiv-audio-desc" linktype="guideline">Success Criterion 1.2.</loc> and <loc
						href="media-equiv-audio-desc-only" linktype="guideline">1.2.5</loc>.</p>
				</description>
				<examples/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check for captions on synchronized media alternatives.</p>
							</item>
							<item>
								<p>Check that the synchronized media alternative does not provide more information than is presented on the page in text.</p>
								<note>
									<p>Synchronized media alternatives often use different words to present what is on the page but it should not present new information on the topic of the page.</p>
								</note>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #2 is false, then this failure condition applies and the content fails these Success Criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F76">
				<short-name>Failure of Success Criterion 3.2.2 due to providing instruction material about the change of context by change of setting in a user interface element at a location that users may bypass</short-name>
				<applicability>
					<p>Applies to all technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-unpredictable-change" relationship="failure"/>
				</applies-to>
				<description>
					<p>Without prior instruction, unexpected change of context due to change of user interface setting can sometimes confuse users.  Users must receive instruction prior to such encounter.  Providing the instruction in a way in which the user may not have the opportunity to review may leave opportunity for confusion.</p>
					<p>Failure examples:</p>
					<ulist>
						<item>
							<p>Not providing instruction on the Web page preceding the user interface element that causes change of context by change of setting.</p>
						</item>
						<item>
							<p>Not providing instruction at a part of the process prior to the step where they may encounter such change of context, in case of a multi-step process in which users must go through particular steps to reach the user interface element where change of setting would cause a change of context.</p>
						</item>
						<item>
							<p>Not providing mandatory instruction about the change of context in the case of intranet Web application.</p>
						</item>
					</ulist>
				</description>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Find occurrence of change of context due to change of user interface setting</p>
							</item>
							<item>
								<p>Find instructional material that all users must review prior encountering of the change of context.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If #1 is true and #2 is false, then this failure condition applies and content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F77">
				<short-name>Failure of Success Criterion 4.1.1 due to duplicate values of type ID</short-name>
				<applicability>
					<p>Any XML-based markup languages including HTML 4.01 and XHTML 1.x.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-parses" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes a failure condition where duplicate ID errors are known to cause problems for assistive technologies when they are trying to interact with content. Duplicate values of type ID can be problematic for user agents that rely on this attribute to accurately convey relationships between different parts of content to users. For example, a screen reader may use ID values to identify the applicable header content for a data cell within a data table, or an input control to which a given label applies. If these values are not unique, the screen reader will be unable to programmatically determine which headers are associated with the data cell or which control is associated with which label or name.</p>
					<p>Checking that ID attribute values are unique within a document can be done by validating the document against its schema, because the schema defines which attributes contain document-wide unique identifiers.</p>
					<note>
						<p>In most markup languages, ID values are attribute values, for example in HTML and XHTML.</p>
						<p>XML documents that use only the <code><![CDATA[xml:id]]></code> attribute as an ID attribute, parsing the XML document with a validating parser that supports the <loc
							href="http://www.w3.org/TR/2005/REC-xml-id-20050909/">xml:id specification</loc> is sufficient.</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>An author uses an online validation service to check that all id attribute values are unique.</p>
						</description>
					</eg-group>
					<eg-group>
						<description>
							<p>A developer utilizes features in their authoring tool to ensure that id attribute values are unique.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc href="http://www.w3.org/TR/2005/REC-xml-id-20050909/">xml:id Version 1.0</loc> - W3C Recommendation 9 September 2005.</p>
							</item>
							<item>
								<p>Extensible Markup Language (XML) 1.0 (Fourth Edition): <loc
									href="http://www.w3.org/TR/REC-xml/#id">Validity constraint: ID</loc> </p>
							</item>
							<item>
								<p>HTML 4.01: <loc
									href="http://www.w3.org/TR/html4/struct/global.html#adef-id">id attribute</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G108"/>
					<relatedtech idref="H75"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that all values of type ID are unique in the Web page</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If Step #1 is false, then this failure condition applies and the content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F78">
				<short-name>Failure of Success Criterion 2.4.7 due to styling element outlines and borders in a way that removes or renders non-visible the visual focus indicator</short-name>
				<applicability>
					<p>Any technology</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-focus-visible" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes a failure condition that occurs when the user agent's default visual indication of keyboard focus is turned off or rendered non-visible by other styling on the page without providing an author-supplied visual focus indicator. Turning off the focus indicator instructs the user agent not to present the focus indicator. Other styling may make it difficult to see the focus indicator even though it is present, such as outlines that look the same as the focus outline, or thick borders that are the same color as the focus indicator so it cannot be seen against them.</p>
				</description>
				<examples>
					<eg-group>
						<head>The focus indicator is turned off with CSS</head>
						<description>
							<p>The following CSS example will remove the default focus indicator, which fails the requirement to provide a visible focus indicator.</p>
						</description>
						<code role="css"><![CDATA[:focus {outline: none}]]></code>
					</eg-group>
					<eg-group>
						<head>The outline of elements is visually similar to the focus indicator</head>
						<description>
							<p>The following CSS example will create an outline around links that looks the same as the focus indicator. This makes it impossible for users to determine which one in fact has the focus, even though the user agent does draw the focus indicator.</p>
						</description>
						<code role="css"><![CDATA[a {outline: thin dotted black}]]></code>
					</eg-group>
					<eg-group>
						<head>Elements have a border that occludes the focus indicator</head>
						<description>
							<p>The following CSS example creates a border around links that does not have enough contrast for the focus indicator to be seen when drawn on top of it. In this case the focus indicator is drawn just ouside the border, but as both are black and the border is thicker than the focus indicator, it no longer meets the definition of "visible".</p>
						</description>
						<code role="css"><![CDATA[a {border: medium solid black}]]></code>
					</eg-group>
				</examples>
				<resources/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Set the focus to all focusable elements on a page.</p>
							</item>
							<item>
								<p>Check that the focus indicator is visible.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F79">
				<short-name>Failure of Success Criterion 4.1.2 due to the focus state of a user interface component not being programmatically determinable or no notification of change of focus state available</short-name>
				<applicability>
					<p>All technologies</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-rsv" relationship="failure"/>
				</applies-to>
				<description>
					<p>Whether a user interface component has focus is a particularly important facet of its state. Many types of assistive technology rely on tracking the current keyboard focus. Screen readers will move the user's point of regard to the focused user interface component, and screen magnifiers will change the display of the content so that the focused component is visible. If assistive technology is not notified when focus moves to a new component, the user will become confused when they attempt to interact with the wrong component.</p>
					<p>While user agents usually handle this functionality for standard controls, custom-scripted user interface components are responsible for using accessibility APIs to make focus information and notifications available.</p>
				</description>
				<examples>
					<p>A custom menu displays menu items by rendering them explicitly, handling mouse and key events directly and highlighting the currently selected menu item. The programmer does not expose the menu item that has focus via the Accessibility API, so assistive technology can only determine that focus is somewhere within the menu and cannot determine which menu item has focus.</p>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> <loc
									href="http://msdn.microsoft.com/en-us/library/ms696082.aspx">Accessible Explorer and Accessible Event Watcher</loc> </p>
							</item>
							<item>
								<p> <loc
									href="http://java.sun.com/developer/earlyAccess/jaccesshelper/">Java Accessibility Helper</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Using the accessibility checker for the technology (or if that is not available, inspect the code or test with an assistive technology), check the controls to see if they expose the focus state through the accessibility API. </p>
							</item>
							<item>
								<p>Using the accessibility checker for the technology (or if that is not available, inspect the code or test with an assistive technology), check whether assistive technology is notified when focus moves from one control to another.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If Check #1 or Check #2 is false, then this failure condition applies and the content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F80">
				<short-name>Failure of Success Criterion 1.4.4 when text-based form controls do not resize when visually rendered text is resized up to 200%</short-name>
				<applicability>
					<p>HTML, XHTML, and CSS</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-scale" relationship="failure"/>
				</applies-to>
				<description>
					<p>The objective of this failure condition is to describe a problem that occurs when changing the size of text does not cause the text-based form controls to resize accordingly. This means that the user may have difficulty entering text and being able to read what they have entered because the text is not displayed at the text size required by the user.</p>
					<p>Text-based form controls include input boxes (text and textarea) as well as buttons.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>A Contact Form</head>
						<description>
							<p>A Contact Us form has some introductory information and then form controls for users to enter their first name, last name, telephone number and email address. The heading, introductory text and form control labels have been implemented in a scalable way but the form controls themselves have not.</p>
							<p>The XHTML component:</p>
						</description>
						<code role="xhtml"><![CDATA[ <h1>Contact Us</h1>
 <p>Please provide us with your details and we will contact you as soon as we can. Note that all of the form fields are required.</p>
 <label for="fname">First Name</label><input type="text" name="fname" id="fname" /><br />
 <label for="lname">Last Name</label><input type="text" name="lname" id="lname" /><br />
 <label for="phone">Telephone</label><input type="text" name="phone" id="phone" /><br />
 <label for="email">Email</label><input type="text" name="email" id="email" /><br />
 <input type="submit" name="Submit" value="Submit" id="Submit" />]]></code>
						<description>
							<p>The CSS component:</p>
						</description>
						<code role="css"><![CDATA[ h1 { font-size: 2em; }
 p, label { font-size: 1em; }
 input {font-size: 12pt}]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Enter some text into text-based form controls that receive user entered text. </p>
							</item>
							<item>
								<p>Increase the text size of the content by 200%.</p>
							</item>
							<item>
								<p>Check that the text in text-based form controls has increased by 200%.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If check #3 is false, then the failure condition applies and the content fails these Success Criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F81">
				<short-name>Failure of Success Criterion 1.4.1 due to identifying required or error fields using color differences only</short-name>
				<applicability>
					<p>All technologies</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-without-color" relationship="failure"/>
				</applies-to>
				<description>
					<p>This objective of this technique is to describe the failure that occurs when a required field or an error field is marked with color differences only, without an alternate way to identify the required field or error field. This can cause problems for people who are blind or colorblind, because they may not be able to perceive the color differences that indicate which field is required or which field is causing an error.</p>
				</description>
				<examples>
					<ulist>
						<item>
							<p>A user is completing an online form, and the phone number field is required. To indicate that the phone number field is required, the label "Phone Number" is displayed in a color different from the color used for optional fields, without any other indication that "Phone Number" is a required field. A blind or colorblind user may not be able to identify that "Phone Number" is a required field.</p>
						</item>
						<item>
							<p>A user submits an online form and leaves a required field blank, resulting in an error. The form field that caused the error is indicated by red text only, without an additional non-color indication that the field caused an error.</p>
						</item>
					</ulist>
					<note>
						<p>In both examples, the color could be used without failure if the text was sufficiently different in visual presentation (e.g. bold or in a different font) that it would be easily differentiated from the surrounding text if the color were removed. It would also not fail if the color chosen had sufficient luminosity difference (lightness) from the other text that it would be easily be seen as different if viewed in black and white.  In these cases - the information would not be displayed in color (hue) alone but also in "presentation" or "lightness" respectively. </p>
					</note>
				</examples>
				<tests>
					<procedure>
						<p>For all required fields or error fields in the Web page that are identified using color differences:</p>
						<olist>
							<item>
								<p>Check that an non-color way to identify the required field or error field is provided.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #1 is false, then this failure condition applies and content fails the Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F82">
				<short-name>Failure of Success Criterion 3.3.2 by visually formatting a set of phone number fields but not including a text label</short-name>
				<applicability>
					<p>Any technology</p>
				</applicability>
				<applies-to>
					<success-criterion idref="minimize-error-cues" relationship="failure"/>
				</applies-to>
				<description>
					<p>This failure ensures that people with visual or cognitive disabilities will recognize phone number fields and understand what information to provide to fill in the fields. Phone numbers are frequently formatted in fixed, distinctive ways, and authors may feel that just providing visual formatting of the fields will be sufficient to identify them. However, even if all the fields have programmatically determined names, a text label must also identify the set of fields as a phone number.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<head/>
						<description>
							<p>In the United States, phone numbers are broken into a three digit area code, a three digit prefix, and a four digit extension. A web page creates fixed length text input fields for the three parts of the phone number, surrounding the first field with parenthesis and separating the second and third fields with a dash. Because of this formatting, some users recognize the fields as a phone number. However, there is no text label for the phone number on the web page. This is because the label for each field will be the closest preceding text, so the three fields would be labeled "(", ")" , and "-" respectively.</p>
						</description>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>For each set of phone number fields in the web page that represents a single phone number, check that the set of fields are labeled with a visible text label that is positioned near the set of phone number fields.</p>
							</item>
							<item>
								<p>For each set of phone number fields in the Web page that represent a single phone number, instructions are provided about how to fill in the fields.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If both check #1 and check #2 are false, then this failure condition applies and the content fails this success criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F83">
				<short-name>Failure of Success Criterion 1.4.3 and 1.4.6 due to using background images that do not provide sufficient contrast with foreground text (or images of text)</short-name>
				<applicability>
					<p>Any technology</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-contrast" relationship="failure"/>
					<success-criterion idref="visual-audio-contrast7" relationship="failure"/>
				</applies-to>
				<description>
					<p>This failure occurs when people with low vision are not able to read text that is displayed over a background image. When there is not sufficient contrast between the background image and the text, features of the background image can be confused with the text making it difficult to accurately read the text.</p>
					<p>To satisfy Success Criterion 1.4.3 and 1.4.6, there must be sufficient contrast between the text and its background. For pictures, this means that there would need to be sufficient contrast between the text and those parts of the image that are most like the text and behind the text. </p>
				</description>
				<examples>
					<eg-group>
						<head>Failure Example 1</head>
						<description>
							<p>Black text overlays an image with black lines. The lines cross behind the letters making F's look like E's etc.</p>
						</description>
					</eg-group>
					<eg-group>
						<head>Failure Example 2</head>
						<description>
							<p>Black text overlays an image with with dark gray areas. Wherever the text crosses a dark gray area the contrast is so bad that the text cannot be read.</p>
						</description>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> <emph role="bold">Quickcheck:</emph> First do a quick check to see if the contrast between the text and the area of the image that is darkest (for dark text) or lightest (for light text) meets or exceeds that required by the Success Criterion (1.4.3 or 1.4.5). If the contrast meets or exceeds the specified contrast, then there is no failure. </p>
							</item>
							<item>
								<p>If the Quickcheck is false, then check to see if the background behind each letter has sufficient contrast with the letter.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If Quickcheck is false and #2 is false as well then this failure condition applies and the content fails the contrast Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F84">
				<short-name>Failure of Success Criterion 2.4.9 due to using a non-specific link such as "click here" or "more" without a mechanism to change the link text to specific text.</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-link" relationship="failure"/>
				</applies-to>
				<description>
					<p>This failure describes a common condition where links such as "click here" or "more" are used as anchor elements where you need to have the surrounding text to understand their purpose and where there isn't any mechanism to make the destination clear by itself, such as a button to expand the link text.</p>
					<p>Many blind people who use screen readers call up a dialog box that has a list of links from the page. They use this list of links to decide where they will go. But if many of the links in that list simply say "click here" or "more" they will be unable to use this feature in their screen reader, which is a core navigation strategy. That's why it's a failure of 2.4.9 to not provide any way of allowing them to know the destination from the link text alone. It is also true for people who tab through links. If all they hear as they tab through the document is "click here, click here, click here etc." they will become confused. </p>
				</description>
				<examples>
					<eg-group>
						<code><![CDATA[<a href="file110.htm">Click here</a> for more information on the Rocky Mountains.]]></code>
					</eg-group>
					<eg-group>
						<code><![CDATA[<h2>News headlines</h2>
The middle east peace meetings have yielded fruitful dialogue. 
<a href="r4300.htm">read more</a>]]></code>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine each link on the page.</p>
							</item>
							<item>
								<p>Check to see if it has non-descript link text such as "click here" or "more" whose purpose can be determined from the surrounding text but not from the link text alone.</p>
							</item>
							<item>
								<p>Check to see if there is a mechanism on the page which turns all non-descript links on the page into descriptive links.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If step #2 is true AND #3 is false, then this failure condition applies and content fails the success criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F85">
				<short-name>Failure of Success Criterion 2.4.3 due to using dialogs or menus that are not adjacent to their trigger control in the sequential navigation order</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-focus-order" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes the failure condition that results when a Web page opens a dialog or menu interface component embedded on the page in a way that makes it difficult for a keyboard user to operate because of its position in the sequential navigation order. When the user opens the dialog or menu embedded on the page by activating a button or link, his next action will be to interact with the dialog or menu. If the dialog or menu is not adjacent to the trigger control in the sequential navigation order, it will be difficult for the keyboard user to operate the dialog or menu.</p>
				</description>
				<examples>
					<eg-group>
						<head>Dialog or menu embedded on the page is added to the end of the sequential navigation order</head>
						<description>
							<p>When a DHTML menu or dialog is activated, it is created dynamically, positioned visually near the trigger, and appended to the end of the DOM. Because it is appended to the end of the DOM, it is at the end of the sequential navigation order. The user must tab through the rest of the web page before he can interact with the dialog or menu.</p>
						</description>
					</eg-group>
					<eg-group>
						<head>Dismissing a menu embedded on the page sets focus to the document</head>
						<description>
							<p>When a DHTML menu is dismissed, it is removed or hidden from the web page and focus is set to the document. The user must tab from the beginning of the navigation sequence to reach the point from which the menu was opened.</p>
						</description>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="SCR26"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each menu or dialog embedded on a Web page that is opened via a trigger control:</p>
						<olist>
							<item>
								<p>Activate the trigger control via the keyboard.</p>
								<ulist>
									<item>
										<p>Check whether focus is in the menu or dialog.</p>
									</item>
									<item>
										<p>Check whether advancing the focus in the sequential navigation order puts focus in the menu or dialog.</p>
									</item>
								</ulist>
							</item>
							<item>
								<p>Dismiss the menu or dialog.</p>
								<ulist>
									<item>
										<p>Check whether focus is on the trigger control.</p>
									</item>
									<item>
										<p>Check whether advancing the focus backwards in the sequential navigation order puts focus in the trigger control.</p>
									</item>
								</ulist>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If both points under step 1 are false, then this failure condition applies and the content fails this success criterion.</p>
							</item>
							<item>
								<p>If both points under step 2 are false, then this failure condition applies and the content fails this success criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F86">
				<short-name>Failure of Success Criterion 4.1.2 due to not providing names for each part of a multi-part form field, such as a US telephone number</short-name>
				<applicability>
					<p>General</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-rsv" relationship="failure"/>
				</applies-to>
				<description>
					<p>This describes a failure condition of Success Criterion 4.1.2 where some or all of the parts of multi-part form field do not have names. Often there is a label for the multi-part field, which is either programatically associated with the first part, or not programatically associated with any parts.</p>
					<note>
						<p>A name does not necessarily have to be visible, but is visible to assistive technologies.</p>
					</note>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>A US telephone number consists of a 3-digit area code, a 3-digit prefix, and a 4-digit suffix. They are typically formatted as follows ([area code]) [prefix]-[suffix], such as (206) 555-1212. Often, forms asking for a telephone number will include 3 separate fields, but with a single label, such as:</p>
						</description>
						<code><![CDATA[Phone number: 
(<input type="text" size="3">) <input type="text" size="3">-<input type="text" size="4">]]></code>
						<description>
							<p>The failure occurs when there is not a name for each of the 3 fields in the Accessibility API. A user with assistive technology will experience these as three undefined text fields. Some assistive technologies will read the punctuation as identification for the text fields, which can be even more confusing. In the case of a 3-field US phone number, some assistive technologies would name the fields "(", ")" and "-", which is not very useful.</p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>The same US telephone number. In this case, the label is not programatically associated with any of the parts. </p>
						</description>
						<code><![CDATA[Phone number: (<input type="text" size="3">) <input type="text" size="3">-<input type="text" size="4">]]></code>
						<description>
							<p> A user with assistive technology will experience these as three undefined text fields. </p>
						</description>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>The same US telephone number. In this case, the label is programatically associated with the first part.</p>
						</description>
						<code><![CDATA[<label for="area">Phone number:</label> 
(<input id="area" type="text" size="3">) <input type="text" size="3">-<input type="text" size="4">]]></code>
						<description>
							<p>A user with assistive technology will be led to believe that the first field is for the entire phone number, and will experience the second and third fields as undefined text fields.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p diff="chg"><loc
									href="http://msdn.microsoft.com/en-us/library/ms695716.aspx">Microsoft Active Accessibility 2.0 SDK</loc>. Includes Inspect32.exe and other MSAA tools.</p>
							</item>
							<item>
								<p diff="chg"><loc href="http://developer.gnome.org/atk/unstable/">Gnome Accessibility Toolkit documentation</loc></p>
							</item>
							<item diff="del">
								<p diff="del"><loc
									href="http://library.gnome.org/devel/accessibility-devel-guide/nightly/gtest.html">Gnome Accessibility QA documentation and tools</loc> </p>
								<ednote>
									<edtext>This link redirects to http://developer.gnome.org/accessibility-devel-guide/nightly/gtest.html which is 404. It will be removed if a replacement URL isn't found.</edtext>
								</ednote>
							</item>
							<item>
								<p><loc
									href="http://www.microsoft.com/download/en/details.aspx?id=18359" diff="chg">Microsoft Internet Explorer Developer Toolbar</loc>. Allows examination of script-generated DOM in Microsoft Internet Explorer.</p>
							</item>
							<item>
								<p><loc href="http://getfirebug.com/">Firebug</loc>. Allows examination of script-generated DOM in Firefox.</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<!-- the following were not yet aproved when this tech. was published: 
            -Modeling custom user interfaces in HTML semantics (HTML, CSS, Script) This is a new technique
            - Using CSS to hide label elements when visible text labels cannot be used (CSS) (this is new technique)  -->
					<relatedtech idref="H44"/>
					<relatedtech idref="H71"/>
					<relatedtech idref="H65"/>
				</related-techniques>
				<tests>
					<procedure>
						<p><emph role="bold">General Procedure:</emph></p>
						<olist>
							<item>
								<p>Install a tool that allows you to view the accessibility API for your platform (see Resources section)</p>
							</item>
							<item>
								<p>Find each form control</p>
							</item>
							<item>
								<p>Check that the name property for each control is populated</p>
							</item>
						</olist>
						<p><emph role="bold">Alternative Procedure for HTML and XHTML:</emph></p>
						<olist>
							<item>
								<p>Find each <code><![CDATA[input]]></code>, <code><![CDATA[select]]></code>, and <code><![CDATA[textarea]]></code> element in the HTML source</p>
							</item>
							<item>
								<p>Check that there is a title attribute on the element</p>
							</item>
							<item>
								<p>Check that there is an associated <code><![CDATA[label]]></code> element</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p><emph role="bold">General Procedure:</emph></p>
						<ulist>
							<item>
								<p>If check #3 is false, then the failure condition applies and the content fails this success criterion.</p>
							</item>
						</ulist>
						<p><emph role="bold">Alternative Procedure for HTML and XHTML:</emph></p>
						<ulist>
							<item>
								<p>If checks #2 and #3 are false, then the failure condition applies and the content fails the success criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F87">
				<short-name>Failure of Success Criterion 1.3.1 due to inserting non-decorative content by using :before and :after pseudo-elements and the 'content' property in CSS</short-name>
				<applicability>
					<p>All technologies that support CSS.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="IE" version="7-">
						<p><code><![CDATA[:before]]></code> and <code><![CDATA[:after]]></code> are not supported by IE7 and lower</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The CSS <code><![CDATA[:before]]></code> and <code><![CDATA[:after]]></code> pseudo-elements specify the location of content before and after an element's document tree content. The <code><![CDATA[content]]></code> property, in conjunction with these pseudo-elements, specifies what is inserted. For users who need to customize or turn off style information in order to view content according to their needs, assistive technologies may not be able to access the information that is inserted using CSS. Therefore, it is a failure to use these properties to insert non-decorative content.</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>In the following example, <code><![CDATA[:before]]></code> and <code><![CDATA[:after]]></code> are used to indicate speaker changes and to insert quotation marks in a screenplay.</p>
							<p>The CSS contains:</p>
						</description>
						<code role="css"><![CDATA[ p.jim:before {	content: "Jim: " }
p.mary:before { content: "Mary: " }

q:before { content: open-quote }
q:after  { content: close-quote }]]></code>
						<description>
							<p>It is used in this excerpt:</p>
						</description>
						<code role="html401"><![CDATA[ <p class="jim">
 <q>Do you think he's going to make it?</q>
</p>
<p class="mary">
 <q>It's not looking good.</q>
</p>]]></code>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>In this example, <code><![CDATA[:before]]></code> is used to differentiate facts from opinions.</p>
							<p>The CSS contains:</p>
						</description>
						<code role="css"><![CDATA[ p.fact:before { content: "Fact: "; font-weight: bold; }
 p.opinion:before { content: "Opinion: "; font-weight: bold; }]]></code>
						<description>
							<p>It is used in this excerpt:</p>
						</description>
						<code role="html401"><![CDATA[ <p class="fact">
 The defendant was at the scene of the crime when it occurred. 
</p>
<p class="opinion">
 The defendant committed the crime. 
</p>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://www.w3.org/TR/CSS21/generate.html">CSS 2.1: Generated content, automatic numbering, and lists</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="F3"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine all content inserted through use of the :before and :after pseudo-elements and the <code><![CDATA[content]]></code> property</p>
							</item>
							<item>
								<p>Verify that the content is decorative.</p>
							</item>
							<item>
								<p>If the inserted content is not decorative, check that the information is provided to assistive technologies and is also available when CSS is turned off.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If checks #2 or #3 are false, then this failure condition applies and the content fails this Success Criterion.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F88">
				<short-name>Failure of Success Criterion 1.4.8 due to using text that is justified (aligned to both the left and the right margins)</short-name>
				<applicability>
					<p>All technologies.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation" relationship="failure"/>
				</applies-to>
				<description>
					<p>Many people with cognitive disabilities have a great deal of trouble with blocks of text that are justified (aligned to both the left and the right margins). The spaces between words create "rivers of white" running down the page, which can make the text difficult for some people to read. This failure describes situations where this confusing text layout occurs. The best way to avoid this problem is not to create text layout that is fully justified (aligned to both the left and the right margins).</p>
				</description>
				<examples>
					<eg-group role="failure">
						<description>
							<p>In the following example of a failure, the HTML <att>align</att> attribute is used to create justified text.</p>
						</description>
						<code role="html"><![CDATA[ 
<p align="justify">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Vestibulum sit amet pede. Phasellus 
nec sem id mauris vehicula tincidunt. Morbi ac arcu. Maecenas vehicula velit et orci. Donec 
ullamcorper porttitor velit. Sed arcu lorem, cursus sit amet, auctor eu, convallis ut, purus. 
Vivamus imperdiet accumsan nunc. Maecenas pellentesque nunc a libero. Vestibulum ante ipsum 
primis in faucibus orci luctus et ultrices posuere cubilia Curae; Curabitur pharetra commodo 
justo. Nulla facilisi. Phasellus nulla lacus, tempor quis, tincidunt ac, rutrum et, mauris.
</p>]]></code>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>In this example of a failure, the CSS <code><![CDATA[text-align]]></code> property is used to create justified text.</p>
						</description>
						<code role="css"><![CDATA[ 
...
p {text-align: justify}

...

<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Vestibulum sit amet pede. Phasellus 
nec sem id mauris vehicula tincidunt. Morbi ac arcu. Maecenas vehicula velit et orci. Donec 
ullamcorper porttitor velit. Sed arcu lorem, cursus sit amet, auctor eu, convallis ut, purus. 
Vivamus imperdiet accumsan nunc. Maecenas pellentesque nunc a libero. Vestibulum ante ipsum 
primis in faucibus orci luctus et ultrices posuere cubilia Curae; Curabitur pharetra commodo 
justo. Nulla facilisi. Phasellus nulla lacus, tempor quis, tincidunt ac, rutrum et, mauris.</p>]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="C22"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Open the page in a common browser.</p>
							</item>
							<item>
								<p>Verify that content is not justified (aligned to both the left and the right margins).</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If test procedure #2 is false, then this failure condition applies and the content fails to meet Success Criterion 1.4.8.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="F89">
				<short-name>Failure of Success Criteria 2.4.4, 2.4.9 and 4.1.2 due to using null alt on an image where the image is the only content in a link</short-name>
				<applicability>
					<p>Content that contains links.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs" relationship="failure"/>
					<success-criterion idref="navigation-mechanisms-link" relationship="failure"/>
					<success-criterion idref="ensure-compat-rsv" relationship="failure"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Different assistive technologies employ different repair strategies when dealing with links that lack text alternatives. For HTML, they may use the <att>title</att> attribute of the anchor, if present, or they may use the value of the <att>src</att> attribute of the <att>img</att> element. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>This failure condition occurs when a link contains only non-text content, such as an image, and the non-text content has been implemented in a way that it can be ignored by assistive technology. Because a link is an interactive control, the user can tab to it and activate it. Since there is no text content within the link to be used as the name, assistive technology employs a variety of repair techniques to find some name to use for the link.</p>
					<p>Often, both text and images are used on a page to link to the same target. This introduces a "stuttering" effect when two <phrase diff="chg">adjacent</phrase> links have the same name, and authors attempt to eliminate the redundancy by providing a null alt attribute for the image. Unfortunately, this often makes the problem worse. <loc
						href="H2" linktype="html">H2: Combining adjacent image and text links for the same resource</loc> is the recommended approach to reduce the number of separate links and the undesirable redundancy. </p>
				</description>
				<examples>
					<eg-group role="failure">
						<head>HTML Search Results</head>
						<description>
							<p>A search site returns search results that include both a text link and an image link to the match site. The image has a null <att>alt</att> attribute, since the result already contains a link with a text description. However, the screen reader does not ignore the image link but uses heuristics to find some text that might describe the purpose of the link. For example, the screen reader might announce, "football dot gif Football Scorecard." </p>
						</description>
						<code role="xhtml1"><![CDATA[ <a href="scores.html">
   <img src="football.gif" alt="" />
 </a>
 <a href="scores.html">
   Football Scoreboard
 </a>
}]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://webaim.org/techniques/alttext/">Appropriate Use of Alternative Text, Functional Images</loc></p>
							</item>
							<item>
								<p><loc href="http://jimthatcher.com/webcourse2.htm">Text Alternatives for Images (alt-text)</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H2"/>
					<relatedtech idref="H30"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check whether the link contains only non-text content.</p>
							</item>
							<item>
								<p>Check whether the non-text content has been implemented in a way that it can be ignored by assistive technology.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If all checks are true, then this failure condition applies and the content fails the success criteria.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
		</div1>
	</body>
	<back>
		<div1 id="placeholders">
			<!-- note: this can be updated using /misc/id-list.xslt (requires cut and paste)-->
			<head/>
			<p id="UNKNOWN">place holder for idref</p>
			<p id="cc1">placeholder for cc1</p>
			<p id="cc2">placeholder for cc2</p>
			<p id="cc3">placeholder for cc3</p>
			<p id="cc4">placeholder for cc4</p>
			<p id="cc5">placeholder for cc5</p>
			<p id="text-equiv">placeholder for text-equiv</p>
			<p id="text-equiv-all">placeholder for text-equiv-all</p>
			<p id="media-equiv">placeholder for media-equiv</p>
			<p id="media-equiv-av-only-alt">placeholder for media-equiv-av-only-alt</p>
			<p id="media-equiv-captions">placeholder for media-equiv-captions</p>
			<p id="media-equiv-audio-desc">placeholder for media-equiv-audio-desc</p>
			<p id="media-equiv-real-time-captions">placeholder for media-equiv-real-time-captions</p>
			<p id="media-equiv-audio-desc-only">placeholder for media-equiv-audio-desc-only</p>
			<p id="media-equiv-sign">placeholder for media-equiv-sign</p>
			<p id="media-equiv-extended-ad">placeholder for media-equiv-extended-ad</p>
			<p id="media-equiv-text-doc">placeholder for media-equiv-text-doc</p>
			<p id="media-equiv-live-audio-only">placeholder for media-equiv-live-audio-only</p>
			<p id="content-structure-separation">placeholder for content-structure-separation</p>
			<p id="content-structure-separation-programmatic">placeholder for content-structure-separation-programmatic</p>
			<p id="content-structure-separation-sequence">placeholder for content-structure-separation-sequence</p>
			<p id="content-structure-separation-understanding">placeholder for content-structure-separation-understanding</p>
			<p id="visual-audio-contrast">placeholder for visual-audio-contrast</p>
			<p id="visual-audio-contrast-without-color">placeholder for visual-audio-contrast-without-color</p>
			<p id="visual-audio-contrast-dis-audio">placeholder for visual-audio-contrast-dis-audio</p>
			<p id="visual-audio-contrast-contrast">placeholder for visual-audio-contrast-contrast</p>
			<p id="visual-audio-contrast-scale">placeholder for visual-audio-contrast-scale</p>
			<p id="visual-audio-contrast-text-presentation">placeholder for visual-audio-contrast-text-presentation</p>
			<p id="visual-audio-contrast7">placeholder for visual-audio-contrast7</p>
			<p id="visual-audio-contrast-noaudio">placeholder for visual-audio-contrast-noaudio</p>
			<p id="visual-audio-contrast-visual-presentation">placeholder for visual-audio-contrast-visual-presentation</p>
			<p id="visual-audio-contrast-text-images">placeholder for visual-audio-contrast-text-images</p>
			<p id="keyboard-operation">placeholder for keyboard-operation</p>
			<p id="keyboard-operation-keyboard-operable">placeholder for keyboard-operation-keyboard-operable</p>
			<p id="keyboard-operation-trapping">placeholder for keyboard-operation-trapping</p>
			<p id="keyboard-operation-all-funcs">placeholder for keyboard-operation-all-funcs</p>
			<p id="time-limits">placeholder for time-limits</p>
			<p id="time-limits-required-behaviors">placeholder for time-limits-required-behaviors</p>
			<p id="time-limits-pause">placeholder for time-limits-pause</p>
			<p id="time-limits-no-exceptions">placeholder for time-limits-no-exceptions</p>
			<p id="time-limits-postponed">placeholder for time-limits-postponed</p>
			<p id="time-limits-server-timeout">placeholder for time-limits-server-timeout</p>
			<p id="seizure">placeholder for seizure</p>
			<p id="seizure-does-not-violate">placeholder for seizure-does-not-violate</p>
			<p id="seizure-three-times">placeholder for seizure-three-times</p>
			<p id="navigation-mechanisms">placeholder for navigation-mechanisms</p>
			<p id="navigation-mechanisms-skip">placeholder for navigation-mechanisms-skip</p>
			<p id="navigation-mechanisms-title">placeholder for navigation-mechanisms-title</p>
			<p id="navigation-mechanisms-focus-order">placeholder for navigation-mechanisms-focus-order</p>
			<p id="navigation-mechanisms-refs">holder for navigation-mechanisms-refs</p>
			<p id="navigation-mechanisms-mult-loc">placeholder for navigation-mechanisms-mult-loc</p>
			<p id="navigation-mechanisms-descriptive">placeholder for navigation-mechanisms-descriptive</p>
			<p id="navigation-mechanisms-focus-visible">placeholder for navigation-mechanisms-focus-visible</p>
			<p id="navigation-mechanisms-location">placeholder for navigation-mechanisms-location</p>
			<p id="navigation-mechanisms-link">placeholder for navigation-mechanisms-link</p>
			<p id="navigation-mechanisms-headings">placeholder for navigation-mechanisms-headings</p>
			<p id="meaning">placeholder for meaning</p>
			<p id="meaning-doc-lang-id">placeholder for meaning-doc-lang-id</p>
			<p id="meaning-other-lang-id">placeholder for meaning-other-lang-id</p>
			<p id="meaning-idioms">placeholder for meaning-idioms</p>
			<p id="meaning-located">placeholder for meaning-located</p>
			<p id="meaning-supplements">placeholder for meaning-supplements</p>
			<p id="meaning-pronunciation">placeholder for meaning-pronunciation</p>
			<p id="consistent-behavior">placeholder for consistent-behavior</p>
			<p id="consistent-behavior-receive-focus">placeholder for consistent-behavior-receive-focus</p>
			<p id="consistent-behavior-unpredictable-change">placeholder for consistent-behavior-unpredictable-change</p>
			<p id="consistent-behavior-consistent-locations">placeholder for consistent-behavior-consistent-locations</p>
			<p id="consistent-behavior-consistent-functionality">placeholder for consistent-behavior-consistent-functionality</p>
			<p id="consistent-behavior-no-extreme-changes-context">placeholder for consistent-behavior-no-extreme-changes-context</p>
			<p id="minimize-error">placeholder for minimize-error</p>
			<p id="minimize-error-identified">placeholder for minimize-error-identified</p>
			<p id="minimize-error-cues">placeholder for minimize-error-cues</p>
			<p id="minimize-error-suggestions">placeholder for minimize-error-suggestions</p>
			<p id="minimize-error-reversible">placeholder for minimize-error-reversible</p>
			<p id="minimize-error-context-help">placeholder for minimize-error-context-help</p>
			<p id="minimize-error-reversible-all">placeholder for minimize-error-reversible-all</p>
			<p id="ensure-compat">placeholder for ensure-compat</p>
			<p id="ensure-compat-parses">placeholder for ensure-compat-parses</p>
			<p id="ensure-compat-rsv">placeholder for ensure-compat-rsv</p>
			<p id="G1">placeholder for G1</p>
			<p id="G4">placeholder for G4</p>
			<p id="G5">placeholder for G5</p>
			<p id="G8">placeholder for G8</p>
			<p id="G9">placeholder for G9</p>
			<p id="G10">placeholder for G10</p>
			<p id="G11">placeholder for G11</p>
			<p id="G13">placeholder for G13</p>
			<p id="G14">placeholder for G14</p>
			<p id="G15">placeholder for G15</p>
			<p id="G17">placeholder for G17</p>
			<p id="G18">placeholder for G18</p>
			<p id="G19">placeholder for G19</p>
			<p id="G21">placeholder for G21</p>
			<p id="G53">placeholder for G53</p>
			<p id="G54">placeholder for G54</p>
			<p id="G55">placeholder for G55</p>
			<p id="G56">placeholder for G56</p>
			<p id="G57">placeholder for G57</p>
			<p id="G58">placeholder for G58</p>
			<p id="G59">placeholder for G59</p>
			<p id="G60">placeholder for G60</p>
			<p id="G61">placeholder for G61</p>
			<p id="G62">placeholder for G62</p>
			<p id="G63">placeholder for G63</p>
			<p id="G64">placeholder for G64</p>
			<p id="G65">placeholder for G65</p>
			<p id="G68">placeholder for G68</p>
			<p id="G69">placeholder for G69</p>
			<p id="G70">placeholder for G70</p>
			<p id="G71">placeholder for G71</p>
			<p id="G73">placeholder for G73</p>
			<p id="G74">placeholder for G74</p>
			<p id="G75">placeholder for G75</p>
			<p id="G76">placeholder for G76</p>
			<p id="G78">placeholder for G78</p>
			<p id="G79">placeholder for G79</p>
			<p id="G80">placeholder for G80</p>
			<p id="G81">placeholder for G81</p>
			<p id="G82">placeholder for G82</p>
			<p id="G83">placeholder for G83</p>
			<p id="G84">placeholder for G84</p>
			<p id="G85">placeholder for G85</p>
			<p id="G86">placeholder for G86</p>
			<p id="G87">placeholder for G87</p>
			<p id="G88">placeholder for G88</p>
			<p id="G89">placeholder for G89</p>
			<p id="G90">placeholder for G90</p>
			<p id="G91">placeholder for G91</p>
			<p id="G92">placeholder for G92</p>
			<p id="G93">placeholder for G93</p>
			<p id="G94">placeholder for G94</p>
			<p id="G95">placeholder for G95</p>
			<p id="G96">placeholder for G96</p>
			<p id="G97">placeholder for G97</p>
			<p id="G98">placeholder for G98</p>
			<p id="G99">placeholder for G99</p>
			<p id="G100">placeholder for G100</p>
			<p id="G101">placeholder for G101</p>
			<p id="G102">placeholder for G102</p>
			<p id="G103">placeholder for G103</p>
			<p id="G105">placeholder for G105</p>
			<p id="G107">placeholder for G107</p>
			<p id="G108">placeholder for G108</p>
			<p id="G110">placeholder for G110</p>
			<p id="G111">placeholder for G111</p>
			<p id="G112">placeholder for G112</p>
			<p id="G115">placeholder for G115</p>
			<p id="G117">placeholder for G117</p>
			<p id="G120">placeholder for G120</p>
			<p id="G121">placeholder for G121</p>
			<p id="G122">placeholder for G122</p>
			<p id="G123">placeholder for G123</p>
			<p id="G124">placeholder for G124</p>
			<p id="G125">placeholder for G125</p>
			<p id="G126">placeholder for G126</p>
			<p id="G127">placeholder for G127</p>
			<p id="G128">placeholder for G128</p>
			<p id="G130">placeholder for G130</p>
			<p id="G131">placeholder for G131</p>
			<p id="G133">placeholder for G133</p>
			<p id="G134">placeholder for G134</p>
			<p id="G135">placeholder for G135</p>
			<p id="G136">placeholder for G136</p>
			<p id="G138">placeholder for G138</p>
			<p id="G139">placeholder for G139</p>
			<p id="G140">placeholder for G140</p>
			<p id="G141">placeholder for G141</p>
			<p id="G142">placeholder for G142</p>
			<p id="G143">placeholder for G143</p>
			<p id="G144">placeholder for G144</p>
			<p id="G145">placeholder for G145</p>
			<p id="G146">placeholder for G146</p>
			<p id="G147">placeholder for G147</p>
			<p id="G148">placeholder for G148</p>
			<p id="G149">placeholder for G149</p>
			<p id="G150">placeholder for G150</p>
			<p id="G151">placeholder for G151</p>
			<p id="G152">placeholder for G152</p>
			<p id="G153">placeholder for G153</p>
			<p id="G155">placeholder for G155</p>
			<p id="G156">placeholder for G156</p>
			<p id="G157">placeholder for G157</p>
			<p id="G158">placeholder for G158</p>
			<p id="G159">placeholder for G159</p>
			<p id="G160">placeholder for G160</p>
			<p id="G161">placeholder for G161</p>
			<p id="G162">placeholder for G162</p>
			<p id="G163">placeholder for G163</p>
			<p id="G164">placeholder for G164</p>
			<p id="G165">placeholder for G165</p>
			<p id="G166">placeholder for G166</p>
			<p id="G167">placeholder for G167</p>
			<p id="G168">placeholder for G168</p>
			<p id="G169">placeholder for G169</p>
			<p id="G170">placeholder for G170</p>
			<p id="G171">placeholder for G171</p>
			<p id="G172">placeholder for G172</p>
			<p id="G173">placeholder for G173</p>
			<p id="G174">placeholder for G174</p>
			<p id="G175">placeholder for G175</p>
			<p id="G176">placeholder for G176</p>
			<p id="G177">placeholder for G177</p>
			<p id="G178">placeholder for G178</p>
			<p id="G179">placeholder for G179</p>
			<p id="G180">placeholder for G180</p>
			<p id="G181">placeholder for G181</p>
			<p id="G182">placeholder for G182</p>
			<p id="G183">placeholder for G183</p>
			<p id="G184">placeholder for G184</p>
			<p id="G185">placeholder for G185</p>
			<p id="G186">placeholder for G186</p>
			<p id="G187">placeholder for G187</p>
			<p id="G188">placeholder for G188</p>
			<p id="G189">placeholder for G189</p>
			<p id="G190">placeholder for G190</p>
			<p id="G191">placeholder for G191</p>
			<p id="G192">placeholder for G192</p>
			<p id="G193">placeholder for G193</p>
			<p id="G194">placeholder for G194</p>
			<p id="G195">placeholder for G195</p>
			<p id="G196">placeholder for G196</p>
			<p id="G197">placeholder for G197</p>
			<p id="G198">placeholder for G198</p>
			<p id="H2">placeholder for H2</p>
			<p id="H4">placeholder for H4</p>
			<p id="H24">placeholder for H24</p>
			<p id="H25">placeholder for H25</p>
			<p id="H27">placeholder for H27</p>
			<p id="H28">placeholder for H28</p>
			<p id="H30">placeholder for H30</p>
			<p id="H32">placeholder for H32</p>
			<p id="H33">placeholder for H33</p>
			<p id="H34">placeholder for H34</p>
			<p id="H35">placeholder for H35</p>
			<p id="H36">placeholder for H36</p>
			<p id="H37">placeholder for H37</p>
			<p id="H39">placeholder for H39</p>
			<p id="H40">placeholder for H40</p>
			<p id="H42">placeholder for H42</p>
			<p id="H43">placeholder for H43</p>
			<p id="H44">placeholder for H44</p>
			<p id="H45">placeholder for H45</p>
			<p id="H46">placeholder for H46</p>
			<p id="H48">placeholder for H48</p>
			<p id="H49">placeholder for H49</p>
			<p id="H50">placeholder for H50</p>
			<p id="H51">placeholder for H51</p>
			<p id="H53">placeholder for H53</p>
			<p id="H54">placeholder for H54</p>
			<p id="H56">placeholder for H56</p>
			<p id="H57">placeholder for H57</p>
			<p id="H58">placeholder for H58</p>
			<p id="H59">placeholder for H59</p>
			<p id="H60">placeholder for H60</p>
			<p id="H62">placeholder for H62</p>
			<p id="H63">placeholder for H63</p>
			<p id="H64">placeholder for H64</p>
			<p id="H65">placeholder for H65</p>
			<p id="H67">placeholder for H67</p>
			<p id="H69">placeholder for H69</p>
			<p id="H70">placeholder for H70</p>
			<p id="H71">placeholder for H71</p>
			<p id="H73">placeholder for H73</p>
			<p id="H74">placeholder for H74</p>
			<p id="H75">placeholder for H75</p>
			<p id="H76">placeholder for H76</p>
			<p id="H77">placeholder for H77</p>
			<p id="H78">placeholder for H78</p>
			<p id="H79">placeholder for H79</p>
			<p id="H80">placeholder for H80</p>
			<p id="H81">placeholder for H81</p>
			<p id="H82">placeholder for H82</p>
			<p id="H83">placeholder for H83</p>
			<p id="H84">placeholder for H84</p>
			<p id="H85">placeholder for H85</p>
			<p id="H86">placeholder for H86</p>
			<p id="H87">placeholder for H87</p>
			<p id="H88">placeholder for H88</p>
			<p id="H89">placeholder for H89</p>
			<p id="H90">placeholder for H90</p>
			<p id="H91">placeholder for H91</p>
			<p id="C6">placeholder for C6</p>
			<p id="C7">placeholder for C7</p>
			<p id="C8">placeholder for C8</p>
			<p id="C9">placeholder for C9</p>
			<p id="C12">placeholder for C12</p>
			<p id="C13">placeholder for C13</p>
			<p id="C14">placeholder for C14</p>
			<p id="C15">placeholder for C15</p>
			<p id="C16">placeholder for C16</p>
			<p id="C17">placeholder for C17</p>
			<p id="C18">placeholder for C18</p>
			<p id="C19">placeholder for C19</p>
			<p id="C20">placeholder for C20</p>
			<p id="C21">placeholder for C21</p>
			<p id="C22">placeholder for C22</p>
			<p id="C23">placeholder for C23</p>
			<p id="C24">placeholder for C24</p>
			<p id="C25">placeholder for C25</p>
			<p id="C26">placeholder for C26</p>
			<p id="C27">placeholder for C27</p>
			<p id="C28">placeholder for C28</p>
			<p id="C29">placeholder for C29</p>
			<p id="C30">placeholder for C30</p>
			<p id="SCR1">placeholder for SCR1</p>
			<p id="SCR2">placeholder for SCR2</p>
			<p id="SCR14">placeholder for SCR14</p>
			<p id="SCR16">placeholder for SCR16</p>
			<p id="SCR18">placeholder for SCR18</p>
			<p id="SCR19">placeholder for SCR19</p>
			<p id="SCR20">placeholder for SCR20</p>
			<p id="SCR21">placeholder for SCR21</p>
			<p id="SCR22">placeholder for SCR22</p>
			<p id="SCR24">placeholder for SCR24</p>
			<p id="SCR26">placeholder for SCR26</p>
			<p id="SCR27">placeholder for SCR27</p>
			<p id="SCR28">placeholder for SCR28</p>
			<p id="SCR29">placeholder for SCR29</p>
			<p id="SCR30">placeholder for SCR30</p>
			<p id="SCR31">placeholder for SCR31</p>
			<p id="SCR32">placeholder for SCR32</p>
			<p id="SCR33">placeholder for SCR33</p>
			<p id="SCR34">placeholder for SCR34</p>
			<p id="SCR35">placeholder for SCR35</p>
			<p id="SCR36">placeholder for SCR36</p>
			<p id="SCR37">placeholder for SCR37</p>
			<p id="SVR1">placeholder for SVR1</p>
			<p id="SVR2">placeholder for SVR2</p>
			<p id="SVR3">placeholder for SVR3</p>
			<p id="SVR4">placeholder for SVR4</p>
			<p id="SM1">placeholder for SM1</p>
			<p id="SM2">placeholder for SM2</p>
			<p id="SM6">placeholder for SM6</p>
			<p id="SM7">placeholder for SM7</p>
			<p id="SM11">placeholder for SM11</p>
			<p id="SM12">placeholder for SM12</p>
			<p id="SM13">placeholder for SM13</p>
			<p id="SM14">placeholder for SM14</p>
			<p id="T1">placeholder for T1</p>
			<p id="T2">placeholder for T2</p>
			<p id="T3">placeholder for T3</p>
			<p id="ARIA1">placeholder for ARIA1</p>
			<p id="ARIA2">placeholder for ARIA2</p>
			<p id="ARIA3">placeholder for ARIA3</p>
			<p id="ARIA4">placeholder for ARIA4</p>
		</div1>
	</back>
</spec>
