<?xml version="1.0" encoding="UTF-8"?>
<spec status="int-review" w3c-doctype="review" role="editors-copy">
   <header>
      <title>Techniques for WCAG 2.0</title>
      <subtitle>Techniques and Failures for Web Content Accessibility Guidelines 2.0</subtitle>
      <w3c-designation>WD-WCAG20-TECHS</w3c-designation>
      <w3c-doctype>W3C Working Draft</w3c-doctype>
      <pubdate>
         <day/>
         <month>May-October</month>
         <year>2008</year>
      </pubdate>
      <publoc>
         <loc href="http://www.w3.org/WAI/GL/WCAG20//WD-WCAG20-TECHS-20080505/">http://www.w3.org/WAI/GL/WCAG20//WD-WCAG20-TECHS-20080505/</loc>
      </publoc>
      <altlocs>
         <loc href="complete.html">Single file version</loc>
         <loc href="complete-diff.html">Single file diff-marked version showing revisions since 30 April 2008</loc>
      </altlocs>
      <latestloc>
         <loc href="http://www.w3.org/TR/WCAG20-TECHS/">http://www.w3.org/TR/WCAG20-TECHS/</loc>
      </latestloc>
      <prevlocs>
         <loc href="http://www.w3.org/TR/2007/WD-WCAG20-TECHS-20080430/">http://www.w3.org/TR/2007/WD-WCAG20-TECHS-20080430/</loc>
      </prevlocs>
      <authlist>
         <author role="current">
            <name>Ben Caldwell</name>
            <affiliation>Trace R&amp;D Center, University of
Wisconsin-Madison</affiliation>
         </author>
         <author role="current">
            <name>Michael Cooper</name>
            <affiliation>W3C</affiliation>
         </author>
         <author role="current">
            <name>Loretta Guarino Reid</name>
            <affiliation>Google, Inc.</affiliation>
         </author>
         <author role="current">
            <name>Gregg Vanderheiden</name>
            <affiliation>Trace R&amp;D Center, University of
Wisconsin-Madison</affiliation>
         </author>
         <author role="past">
            <name>Wendy Chisholm</name>
            <affiliation>(until July 2006 while at W3C)</affiliation>
         </author>
         <author role="past">
            <name>John Slatin</name>
            <affiliation>(until June 2006 while at Accessibility Institute, University of Texas at
Austin)</affiliation>
         </author>
      </authlist>
      <status>
         <p>
            <emph>This section describes the status of this document at the time of its  publication. Other documents may supersede this document. A list of current  W3C publications and the latest revision of this technical report can be  found in the <loc href="http://www.w3.org/TR/">W3C technical reports index</loc> at <loc href="http://www.w3.org/TR/">http://www.w3.org/TR/</loc>.</emph>
         </p>
         <p>This is a Public Working Draft of "Techniques for WCAG 2.0". These techniques are produced by the <loc href="http://www.w3.org/WAI/GL/">Web Content Accessibility Guidelines Working Group</loc> to provide guidance about how to conform to the <loc href="http://www.w3.org/TR/2008/CR-WCAG20-20080430/">Web Content Accessibility Guidelines 2.0 Candidate Recommendation</loc> (WCAG  2.0). Techniques are referenced from <loc href="http://www.w3.org/TR/2008/WD-UNDERSTANDING-WCAG20-20080430/">Understanding WCAG 2.0</loc> and <loc href="http://www.w3.org/WAI/WCAG20/quickref/20080430/">How to Meet WCAG 2.0</loc>. Please note that the contents of this document are informative  (they provide guidance), and not normative (they do not set requirements for conforming to WCAG 2.0).</p>
         <p>This Working Draft provides additional techniques to clarify existing WCAG 2.0 success criteria and to support new success criteria. Some techniques have been clarified or changed in response to comments received. Information about the relationship of success criteria is primarily indicated in <loc href="http://www.w3.org/TR/2008/WD-UNDERSTANDING-WCAG20-20080430/">Understanding WCAG 2.0</loc>, but advisory information is included in techniques as well.A summary of changes is available in the form of a <loc href="complete-diff.html">version of  Techniques for WCAG 2.0 with changes marked inline</loc> (all elements combined into one file). </p>
         <p>One of the requirements for WCAG 2.0 to advance to Proposed Recommendation is that all sufficient techniques for each Success Criterion listed in Understanding WCAG 2.0 contain test procedures. 
        		This means that all 
        		sufficient techniques will need to be documented, with no placeholder technique titles with a "future link" designation. Any sufficient techniques not documented by the time WCAG 2.0 advances to Proposed Recommendation will be removed. Materials from the public to assist in documenting these techniques are particularly welcomed. 
        		Please use the <loc href="http://www.w3.org/WAI/GL/WCAG20/TECHS-SUBMIT/">Techniques Submission Form</loc> to submit techniques. </p>
         <p>Other comments on this document are also welcomed during the Candidate Recommendation period of WCAG 2.0. Your  comments on this Working Draft will help the WCAG Working Group improve the  document before it is published as a Working Group Note when WCAG 2.0  becomes a W3C Recommendation. While comments are not required in a particular time frame, the WCAG Working Group expects to have collected all implementations by <emph role="bold">30 June 2008</emph> and comments are most useful if they arrive by that time. The Working Group requests that comments be made using  the provided <loc href="http://www.w3.org/WAI/WCAG20/comments/">online comment form</loc>. If this is not possible, comments  can also be sent to <loc href="mailto:public-comments-wcag20@w3.org">public-comments-wcag20@w3.org</loc>. The <loc href="http://lists.w3.org/Archives/Public/public-comments-wcag20/">archives for the public comments list</loc> are publicly available.  Archives of the <loc href="http://lists.w3.org/Archives/Public/w3c-wai-gl/">WCAG WG mailing list discussions</loc> are also publicly available.</p>
         <p>This document has been produced as part of the W3C <loc href="http://www.w3.org/WAI/">Web Accessibility Initiative</loc> (WAI). The goals of the WCAG Working Group are discussed in the <loc href="http://www.w3.org/WAI/GL/new-charter-2000.html">WCAG Working Group charter</loc>. The WCAG Working Group is part of the <loc href="http://www.w3.org/WAI/Technical/Activity">WAI Technical Activity</loc>.</p>
         <p>Publication as a Working Draft does not imply endorsement by the W3C  Membership. This is a draft document and may be updated, replaced or  obsoleted by other documents at any time. It is inappropriate to cite  this document as other than work in progress.</p>
         <p> This document was produced by a group operating under the <loc href="http://www.w3.org/Consortium/Patent-Policy-20040205/">5 February 2004 W3C Patent Policy</loc>. The group does not expect this document to become a W3C Recommendation. W3C maintains a <loc role="disclosures" href="http://www.w3.org/2004/01/pp-impl/35422/status">public list of any patent disclosures</loc> made in connection with the deliverables of the group; that page also includes instructions for disclosing a patent. An individual who has actual knowledge of a patent which the individual believes contains <loc href="http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential">Essential Claim(s)</loc> must disclose the information in accordance with <loc href="http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure">section 6 of the W3C Patent Policy</loc>.</p>
      </status>
      <abstract>
         <p>"Techniques and Failures for WCAG 2.0"  provides information to Web content developers who wish to  satisfy the success criteria of <loc href="http://www.w3.org/TR/2007/WD-WCAG20-20070517/">Web Content Accessibility Guidelines 2.0</loc> (WCAG 2.0). Techniques are specific authoring practices that may be used in support of the WCAG 2.0 success criteria. This document provides "General Techniques" that describe basic practices that are applicable to any technology, and technology-specific techniques that provide information applicable to specific technologies. Currently, technology-specific techniques are available for HTML, CSS,  ECMAScript, SMIL, ARIA, and Web servers. The World Wide Web Consortium  only documents techniques for non-proprietary technologies; the WCAG Working Group hopes vendors of other technologies will provide similar techniques to describe how to conform to WCAG 2.0 using those technologies. Use of the techniques provided in this document makes it easier for Web  content to demonstrate conformance to WCAG 2.0 success criteria than if  these techniques are not used.</p>
         <p>Besides the techniques provided in this document, there may be other techniques that  can be used to  implement conformance to WCAG 2.0. The WCAG WG encourages submission of such techniques so they can be considered for  inclusion in this document, in order to make the set of techniques maintained by the  WCAG WG as comprehensive as possible.  Please submit techniques for  consideration using the "<loc href="http://www.w3.org/WAI/GL/WCAG20/TECHS-SUBMIT/">Techniques Submission Form</loc>."</p>
         <p>This document is part of a series of documents published by the W3C Web  Accessibility Initiative (WAI) to support WCAG 2.0.</p>
      </abstract>
      <langusage>
         <language id="en-US"/>
      </langusage>
      <revisiondesc>
         <p>
            <loc href="/WAI/GL/WCAG20/change-history.html">History of Changes to WCAG 2.0 Working Drafts</loc>
         </p>
      </revisiondesc>
   </header>
   <front>
      <div1 id="intro">
         <head>Introduction to Techniques for WCAG 2.0</head>
         <div2 id="suff-adv-techs" role="normal">
            <p>This document is part of a series of documents published by the W3C Web Accessibility Initiative (WAI) to support WCAG 2.0 <bibref ref="WCAG20"/>. It includes a variety of techniques which include specific authoring practices and examples for developing more accessible Web content. As well, it lists failures, which describe common mistakes that are considered failures of WCAG 2.0 Success Criteria.</p>
            <p>In order to make the set of techniques maintained by the WCAG WG as comprehensive as possible, the WCAG WG encourages submission of new techniques so they can be considered for inclusion in this document. Please submit techniques for consideration using the "<loc href="/WAI/GL/WCAG20/TECHS-SUBMIT/">Techniques Submission Form</loc>."</p>
            <head>Sufficient and Advisory Techniques</head>
            <p>Rather than having technology specific techniques in WCAG 2.0, the guidelines and success criteria themselves have been written in a technology neutral fashion. In order to provide guidance and examples for meeting the guidelines using specific technologies (for example HTML) the working group has identified <emph role="bolditalic">sufficient techniques</emph> for each Success Criterion that are sufficient to meet that Success Criterion. The list of sufficient techniques is maintained in the "Understanding WCAG 2.0" (and mirrored in the WCAG 2.0 Quick Reference). In this way it is possible to update the list as new techniques are discovered, and as Web Technologies and Assistive Technologies progress.</p>
            <p>Note that all techniques are <loc href="informativedef" linktype="glossary">informative</loc>. The "sufficient techniques" are
considered sufficient by the WCAG Working Group to meet the success criteria. However, it is not necessary to use these particular techniques. If techniques are used other than those listed by the Working Group, then some other method for establishing the technique's ability to meet the success criteria would be needed</p>
            <p>Most success criteria have multiple sufficient techniques listed. Any of the listed sufficient techniques can be used to meet the Success Criterion. There may be other techniques which are not documented by the working group that could also meet the Success Criterion. As new sufficient techniques are identified they will be added to the listing.</p>
            <p>In addition to the sufficient techniques, there are a number of <emph role="bolditalic">advisory techniques</emph> that can enhance accessibility, but did not qualify as sufficient techniques because are not sufficient to meet the full requirements of the success criteria, they are not testable, and/or are good and effective techniques in some circumstances but not effective or helpful in others. These are listed as advisory techniques and are right below the sufficient techniques. Authors are encouraged to use these techniques wherever appropriate to increase accessibility of their Web pages.</p>
         </div2>
         <div2 id="intro-tech-types" role="normal">
            <head>Technique Collections</head>
            <p>The following list includes links to a series of techniques document collections. </p>
            <ul>
               <li>
                  <a href="complete.html">Techniques for WCAG 2.0 (includes all techniques and failures as a single file)</a>
               </li>
               <li>
                  <p>
                     <a href="general.html">General Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="html.html">HTML and XHTML Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="css.html">CSS Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="client-side-script.html">Client-side Scripting Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="server-side-script.html">Server-side Scripting Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="smil.html">SMIL Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="text.html">Plain Text Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="aria.html">ARIA Techniques</a>
                  </p>
               </li>
               <li>
                  <p>
                     <a href="failures.html">Common Failures</a>
                  </p>
               </li>
            </ul>
         </div2>
      </div1>
   </front>
   <body>
      <div1 id="general">
         <head>General Techniques</head>
         <technique id="G1">
            <short-name>Adding a link at the top of each page that goes directly to the main content area</short-name>
            <applicability>
               <p>All technologies that contain links</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a mechanism to bypass blocks of material that are repeated on multiple Web pages by skipping directly to the main content of the Web page. The first interactive item in the Web page is a link to the beginning of the main content. Activating the link sets focus beyond the other content to the main content. This technique is most useful when a Web page has one main content area, rather than a set of content areas that are equally important.
          </p>
               <note>
                  <p>
              Visible links are necessary for those navigating with a keyboard including switch users, those using techniques that generate keyboard strokes slowly, screen magnification software users, screen reader users working with sighted colleagues, keyboard only users and those navigating using voice recognition software. 
            </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>An online newspaper</head>
                  <description>
                     <p>An on-line newspaper contains many sections of information: a search function, a corporate banner, sidebars, minor stories, how to contact the newspaper, etc. The lead story is located in the middle of the page. The first link that the user reaches when tabbing through the page is titled "Skip to Lead Story". Activating the link moves visual focus to the story. Pressing tab again takes the user to the first link in the main story.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A "Skip to main content" link</head>
                  <description>
                     <p>A Web page includes a variety of navigation techniques on each page: a bread crumb trail, a search tool, a site map, and a list of related resources. The first link on the page is titled "Skip to Main Content". A user activates the link to skip over the navigation tools. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jimthatcher.com/skipnav.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Skip Navigation Links</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G123"/>
               <relatedtech idref="G124"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that a link is the first focusable control on the Web page.</p>
                     </item>
                     <item>
                        <p>Check that the description of the link communicates that it links to the main content.</p>
                     </item>
                     <item>
                        <p>Check that the link is either always visible or visible when it has keyboard focus.
                </p>
                     </item>
                     <item>
                        <p>Check that activating the link moves the focus to the main content.</p>
                     </item>
                     <item>
                        <p>Check that after activating the link, the keyboard focus has moved to the main content</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G4">
            <short-name>Allowing the content to be paused and restarted from where it was paused</short-name>
            <applicability>
               <p>Any technology that includes moving or scrolling content.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a way to pause movement or scrolling of content. If the user needs to pause the movement, to reduce distraction or to have time to read it, they can do so, and then restart it as needed. This mechanism can be provided either through interactive controls that conform to WCAG or through keyboard shortcuts. If keyboard shortcuts are used, they are documented.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A site contains a scrolling news banner at the top of the page. Users who need more time to read it can press the Escape key to pause the scrolling. Pressing Escape again restarts it.</p>
                  </item>
                  <item>
                     <p>A Web page contains a link labeled "How to tie a shoe" which links to a Flash animation. Text  immediately preceding the link informs the user that pressing the spacebar will pause the animation and restart it again.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <p>On a page with moving or scrolling content,</p>
                  <olist>
                     <item>
                        <p>Use the mechanism provided in the Web page or by the user agent to pause the moving or scrolling content.</p>
                     </item>
                     <item>
                        <p>Check that the moving or scrolling has stopped and does not restart by itself.</p>
                     </item>
                     <item>
                        <p>Use the mechanism provided to restart the moving content.</p>
                     </item>
                     <item>
                        <p>Check that the movement or scrolling has resumed from the point where it was stopped.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 and #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G5">
            <short-name>Allowing users to complete an activity without any time limit</short-name>
            <applicability>
               <p>This technique applies to any technologies or methods supporting the implementation of an activity which does not require timed interaction for its functionality.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-no-exceptions"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide users with all the time they need to complete an activity. This technique involves providing a specified activity which does not require timed interaction. Users are allowed as much time as they need to interact with the activity.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An interactive exam for a course provides all questions on one Web page. Users can take as much time as they need to complete it.</p>
                  </item>
                  <item>
                     <p>In an interactive game, users can take as much time as they like on their turn instead of having to complete their move within a limited amount of time.</p>
                  </item>
                  <item>
                     <p>In an online auction, each bidder can submit only one bid rather than submitting multiple competitive bids based on timing. The bidding is open for a full day, providing enough time for anyone to complete the simple bid form. Once bidding is closed, the best bid wins.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www-128.ibm.com/developerworks/webservices/library/ws-restvsoap/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Resource-Oriented vs. Activity-Oriented Web Services</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.useit.com/alertbox/designmistakes.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Top Ten Web Design Mistakes of 2005</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Determine if any timed interactions are present.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#1 is false.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G8" diff="chg">
            <short-name>Providing a movie with extended audio descriptions</short-name>
            <applicability>
               <p> Any technology that supports audio and video. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
               <success-criterion idref="media-equiv-audio-desc-only"/>
               <success-criterion idref="media-equiv-extended-ad"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a second version of video content that provides extended audio desciptions. One of the difficult things about creating traditional audio descriptions is that the narrator sometimes has to provide a lot of information during very short pauses in dialogue. Extended audio description temporarily pauses the audio and video to allow critical information to be delivered when pauses in dialogue are insufficient for adequate description.</p>
               <p>Providing a second version of the movie with extended audio descriptions will make this content accessible for blind people who need to hear not only the dialogue but also the context and other aspects of the video that are not communicated by the characters' dialogue alone, and for which there is insufficient time during the natural dialogue. </p>
               <p> Because it disrupts viewing for those who do not need the additional description, techniques that allow you to turn the feature on and off are often provided. Alternately, versions with and without the additional description can be provided. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>An alternate version of an online video of a family escaping from a burning building, there is a continuous dialogue between the husband and wife about where the children are. Meanwhile, in the background, a wall caves in, which is important information in the story because it will block their exit from that part of the building. The video track halts (same frame is repeated) while a narrator gives the details about the wall falling and the video continues. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A training film has narrative that runs almost continuously throughout. An alternate version is available for people who have difficulty viewing the video portion. The alternate version freezes the video and provides audio description of key information. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible SMIL Templates</loc> 
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/strategies/XAD.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Extended Audio Description</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G78"/>
               <relatedtech idref="G69"/>
               <relatedtech idref="SM1"/>
               <relatedtech idref="SM2"/>
               <relatedtech idref="SM6"/>
               <relatedtech idref="SM7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Open the version of the movie that includes extended audio descriptions. </p>
                     </item>
                     <item>
                        <p>Check that the video halts for extended audio description when there is not enough space to include necessary narration between the natural dialogue. </p>
                     </item>
                     <item>
                        <p>Check that the necessary information is in the audio description. </p>
                     </item>
                     <item>
                        <p diff="add">If the alternate version(s) are on a separate page, check for the availability of link(s) to allow the user to get to the other versions.<issue id="i2662" status="open">
                              <p>2662</p>
                           </issue>
                        </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G9">
            <short-name>Creating captions for live synchronized media</short-name>
            <applicability>
               <p> Applies to all technologies that present Audio Visual information </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-real-time-captions"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to allow users who cannot hear to be able
                        to access real-time synchronized media broadcasts. It is more difficult to create
                        accurate real-time captions because there is little time to correct mistakes
                        or to listen a second time or consult someone to be sure the words are
                        accurately reproduced. It is also harder to simplify or paraphrase
                        information if it is flowing too quickly. </p>
               <p> Real-time typing text entry techniques exist using stenographic and rapid
                        typing technologies. Re-voicing speech-to-text (where a person listens to
                        speech and then carefully re-voices it into a computer trained to their
                        speech) is used today for telephone relay services and may be used in the
                        future for captioning. Eventually speech-to-text with correction will be
                        possible. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Example 1: A television studio uses a real-time captioning service
                                to create captions for its evening news online. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://webaim.org/products/captioncaster/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CaptionCaster</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G87"/>
               <relatedtech idref="G93"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> a procedure and policy are in place to ensure that captions are
                                    delivered in real-time </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #1 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G10">
            <short-name>Creating components using a technology that supports the accessibility
                    API features of the platforms on which the user agents will be run to expose the
                    names and roles, allow user-settable properties to be directly set, and provide
                    notification of changes</short-name>
            <applicability>
               <p> programming technologies that have standard components that are programmed
                        to interface with accessibility APIs </p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to allow assistive technology to
                        understand Web content so that it can convey equivalent information to the
                        user through an alternate user interface. </p>
               <p> Sometimes content is not created using markup language but rather using a
                        programming language or tools. In many cases, these technologies have
                        interface components that are already programmed to interface with
                        accessibility APIs. If and author uses these components and fills in the
                        properties (e.g. name, etc) the resulting user interface components in the
                        content will be accessible to assistive technology. </p>
               <p> However, if an author wants to create a user interface component that is new
                        and they cannot use standard components, then they need to be sure to add
                        the accessibility provisions themselves - and implement them in a way that
                        is compatible with the accessibility API. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Example 1: A Web page uses java to create an applet. A group of
                                authors wants to create an entirely new type of interface component
                                so they cannot use existing Java objects. They use Java swing classes
                                to create their component because the Java swing classes already
                                have provisions for connecting to different accessibility APIs.
                                Using the Java swing classes they are able to create an interface
                                component that exposes its name and role, is able to be set by AT
                                and alerts AT to any updates. </p>
                     <p> Example 2: A Web page uses an original ActiveX control that is
                                written in the C++ programming language. The control is written to
                                explicitly support the Microsoft Active Accessibility (MSAA) API to
                                expose information about accept commands. The control then interacts
                                directly with assistive technology running the user agent on systems
                                that support MSAA. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Render content using an accessible User Agent </p>
                     </item>
                     <item>
                        <p> Use an Accessibility Tool designed for the Accessibility API of
                                    the User agent to evaluate each user interface component </p>
                     </item>
                     <item>
                        <p> Check that name and role for each user interface component is
                                    found by the tool. </p>
                     </item>
                     <item>
                        <p> Change the values on the component </p>
                     </item>
                     <item>
                        <p> Check that the Accessibility tool is alerted. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Step #3 and #5 are true for each user interface component </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G11">
            <short-name>Creating content that blinks for less than 5 seconds</short-name>
            <applicability>
               <p>Technologies that support blinking content.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to minimize the distraction caused by blinking content and enable users to re-focus on the other content on the page.</p>
               <p>Blinking content can be created using a variety of technologies, many of which include options to loop blinking content continuously or to otherwise specify the amount of time the blinking content is displayed. Limiting the blinking of content to five seconds minimizes the distraction that blinking can cause. This will benefit people with certain types of learning disabilities and people with low vision.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An animated image is used to highlight items on sale. Within a list of items for purchase, an image of a red tag followed by the phrase "On sale" is used to indicate items being offered at a reduced price. The image of the red tag blinks on loading of the page and stops within five seconds.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find all items that blink.</p>
                     </item>
                     <item>
                        <p>For each item that blinks, determine if the interval between the start and end of the blinking is less than five seconds.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G13">
            <short-name>Describing what will happen before a change to a form control that causes a change of context to occur is made</short-name>
            <applicability>
               <p diff="chg">Applies to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide information to users about
                        what will happen when a change to a form control results in a change of
                        context. Because changing the value of a form control does not typically
                        result in a change of context, it is important that authors provide
                        instructions that make the user aware of the behavior in advance. Where
                        possible, it is a good idea to programmatically associate the instructions
                        describing the change with the form control itself. </p>
               <p diff="add">The following are some examples of how to provide the instruction in different situations.</p>
               <ulist diff="add">
                  <item>
                     <p>Provide instruction on the Web page with reading order that precedes the user interface element that causes change of context by change of setting.</p>
                  </item>
                  <item>
                     <p>For a multi-step process where users must complete particular steps in order to reach the user interface element where changes of setting would cause a change of context, provide the instruction as part of the process prior to the step where they would encounter the change of context.</p>
                  </item>
                  <item>
                     <p>In the case of an intranet where user training is required prior to the use of a Web application where user interface elements that cause changes of context when settings are changed, instruction is provided as part of the training.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <olist>
                        <item>
                           <p> A series of radio buttons at the top of a page include
                                        options for German, French and Spanish. Instructions precede
                                        the buttons that instruct the user that the language will be
                                        changed upon selecting an option. </p>
                        </item>
                        <item>
                           <p> A 50 question online survey displays one question at a time.
                                        Instructions appear at the beginning of the survey that
                                        explain that users will be taken to the next question of the
                                        survey upon selecting an answer to each question. </p>
                        </item>
                     </olist>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="G80"/>
            </related-techniques>
            <tests>
               <procedure>
                  <ulist>
                     <item>
                        <p>Locate content where changing the setting of a form control
                                    results in a change of context </p>
                     </item>
                     <item>
                        <p>Check to see that an explanation of what will happen when the
                                    control is changed is available prior to the controls activation
                                </p>
                     </item>
                  </ulist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G14">
            <short-name>Ensuring that information conveyed by color differences is also available in text</short-name>
            <applicability>
               <p>All technologies that support color and text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that when color differences are used to convey information, such as required form fields, the information conveyed by the color differences are also conveyed explicitly in text.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A color-coded schedule</head>
                  <description>
                     <p>The schedule for sessions at a technology conference is organized into three tracks. Sessions for Track 1 are displayed over a blue background. Sessions in Track 2 are displayed over a yellow background. Sessions in Track 3 are displayed on a green background. After the name of each session is a code identifying the track in text: T1 for Track 1, T2 for Track 2, and T3 for Track 3.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A color-coded schedule with icons</head>
                  <description>
                     <p>The schedule for sessions at a technology conference is organized into three tracks. Next to the title of each session is a colored icon showing what track it belongs to: blue icons represent track 1, yellow icons represent Track 2, and green icons represent Track 3. Each icon is associated with a text alternative reading "Track 1," "Track 2," or "Track 3," as appropriate.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A form with required fields</head>
                  <description>
                     <p>A form contains several required fields. The labels for the required fields are displayed in red. In addition, at the end of each label is an asterisk character, *. The instructions for completing the form indicate that "all required fields are displayed in red and marked with an asterisk *", followed by an example.</p>
                     <note diff="add">
                        <p>Asterisks may not be read by all screen readers (in all reading modes) and may be difficult for users with low vision because they are rendered in a smaller size than default text. It is important for authors to include the text indicating that asterisk is used and to consider increasing the size of the asterisk that is presented.<issue id="i2612" status="open">
                              <p>2612</p>
                           </issue>
                        </p>
                     </note>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A form with a green submit button</head>
                  <description>
                     <p>An on-line loan application explains that green buttons advance in the process and red buttons cancel the process. A form contains a green button containing the text <emph>Go</emph>. The instructions say "Press the button labeled <emph>Go</emph> to submit your results and proceed to the next step."</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G122"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each item where a color difference is used to convey information:
							</p>
                  <olist>
                     <item>
                        <p>Check that the information conveyed is also available in text and that the text is not conditional content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G15" diff="chg">
            <short-name>Using a tool to ensure that content does not violate the general flash threshold or red flash threshold</short-name>
            <applicability>
               <p>Applies to any technology</p>
            </applicability>
            <applies-to>
               <success-criterion idref="seizure-does-not-violate"/>
            </applies-to>
            <description diff="chg">
               <p>The purpose of testing for violations of the general and red flash thresholds is to allow people who have photosensitive seizures to view Web sites without encountering material that is likely to cause a seizure. Warnings can be provided but people may miss them and children may not be able to read or understand them. With this technique all material is checked and if it violates flash or red flash thresholds it is either not put on the site or it is modified so that it does not violate the thresholds.  </p>
               <note>
                  <p>There are some simple tests that can be run for particular simple types of flashing. For example:</p>
                  <ulist>
                     <item>
                        <p>If material flashes 3 times per second or less then the simple test in <specref ref="G19"/> can be used. </p>
                     </item>
                     <item>
                        <p>If material flashes in only one place on screen at a time and is quite small then the simple test in technique <specref ref="G176"/> can be used.</p>
                     </item>
                  </ulist>
                  <p>For all other types, a tool is needed to keep track of all the factors and apply them to the video on a time-continuous basis. </p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An animation of a thunderstorm shows six flashes of lightning. The flashes are so fast and large that the general flash threshold is violated when tested with a flash analysis tool. The animation is modified to create a short pause after each pair of lightning flashes. After the changes are made, the animation does not violate the general flash threshold. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.hardingfpa.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Harding FPA Web Site</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://trace.wisc.edu/peat/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Trace Center Photosensitive Epilepsy Analysis Tool (PEAT)</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G19"/>
               <relatedtech idref="G176"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>Check to see to see that content does not violate the general flash and/or red flash threshold</p>
                  <olist>
                     <item>
                        <p diff="add">use a tool that to determine that neither the General Flash nor Red Flash threshold were exceeded </p>
                     </item>
                     <item diff="del">
                        <p diff="del">determine  (with or without instruments) that there are no more than three flashes (6 transitions) of any kind in any one second period (G19)
                  </p>
                        <note diff="del">
                           <p>If there are three flashes, check that the Light/Dark status at the end of the 1-second period is the same as at the start.</p>
                        </note>
                        <p diff="del">
                           <emph role="bold">OR</emph>
                        </p>
                     </item>
                     <item diff="del">
                        <p diff="del">determine  that flashing is greater than 50 hz <emph role="bold">OR</emph>
                        </p>
                     </item>
                     <item diff="del">
                        <p diff="del">use a tool that to determine that neither the General Flash nor Red Flash threshold were exceeded.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p diff="chg">Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G17">
            <short-name>Ensuring that a contrast ratio of at least 7:1 exists between text (and images of text)
                    and background behind the text</short-name>
            <applicability>
               <p> Any technology that produces visual output. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast7"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to make sure that users can read text
                        that is presented over a background. This technique goes beyond the 5:1
                        contrast technique to provide a higher level of contrast to make it easier
                        for people with low vision to read. </p>
               <p> If the background is a solid color (or all black or all white) then the
                        contrast ratio of the text can be maintained by making sure that each
                        of the text letters have a 7:1 contrast ratio with the background. </p>
               <p> If the background or the letters vary in relative luminance (or are patterned), then
                        the background around the letters can be chosen or shaded so that the
                        letters maintain a 7:1contrast ratio with the background behind them
                        even if they do not have that contrast ratio with the entire background. </p>
               <p> The contrast ratio can sometimes be maintained by changing the
                        relative luminance of the letters as the relative luminance of the background changes across
                        the page. </p>
               <p> Another method is to provide a halo around the text that provides the
                        necessary contrast ratio if the background image or color would not
                        normally be sufficiently different in relative luminance. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A black background is chosen so that light colored
                                letters that match the company's logo can be used. </p>
                  </item>
                  <item>
                     <p>Text is placed over a picture of the college campus.
                                Since a wide variety of colors and darknesses appear in the picture
                                the area behind the text is fogged white so that the picture is very
                                faint and the maximum darkness is still light enough to maintain a
                                7:1 contrast ratio with the black text written over the picture.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.paciellogroup.com/resources/contrast-analyser.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Analyser – Application</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/services/luminositycontrastratio.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Ratio Analyser - online service</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/colour-contrast-analyser-firefox-extension.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colour Contrast Analyser - Firefox Extension</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://trace.wisc.edu/contrast-ratio-examples/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Color Contrast Samples</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/Graphics/atypical-color-response"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Atypical colour response</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.colorsontheweb.com/colorcontrast.asp"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colors On the Web Color Contrast Analyzer</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.vischeck.com/daltonize/runDaltonize.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Tool to convert images based on color loss so that contrast is restored as luminance contrast when there was only color contrast (that was lost due to color deficiency)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.456bereastreet.com/archive/200709/10_colour_contrast_checking_tools_to_improve_the_accessibility_of_your_design/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">List of color contrast tools</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Measure the relative luminance of each letter (unless they are all
                                    uniform) using the formula: </p>
                        <ulist>
                           <item>
                              <p>L = 0.2126 * <emph role="bold">R</emph> + 0.7152 * <emph role="bold">G</emph> + 0.0722 * <emph role="bold">B</emph> where <emph role="bold">R</emph>, <emph role="bold">G</emph> and <emph role="bold">B</emph> are defined as:</p>
                              <ulist>
                                 <item>
                                    <p>if R<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">R</emph> = R<sub>sRGB</sub>/12.92 else <emph role="bold">R</emph> = ((R<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                                 <item>
                                    <p>if G<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">G</emph> = G<sub>sRGB</sub>/12.92 else <emph role="bold">G</emph> = ((G<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                                 <item>
                                    <p>if B<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">B</emph> = B<sub>sRGB</sub>/12.92 else <emph role="bold">B</emph> = ((B<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                              </ulist>
                              <note role="nonumber">
                                 <p>and R<sub>sRGB</sub>, G<sub>sRGB</sub>, and B<sub>sRGB</sub> are defined as:</p>
                              </note>
                              <ulist>
                                 <item>
                                    <p>R<sub>sRGB</sub> = R<sub>8bit</sub>/255</p>
                                 </item>
                                 <item>
                                    <p>G<sub>sRGB</sub> = G<sub>8bit</sub>/255</p>
                                 </item>
                                 <item>
                                    <p>B<sub>sRGB</sub> = B<sub>8bit</sub>/255</p>
                                 </item>
                              </ulist>
                              <note role="nonumber">
                                 <p>The "^" character is the exponentiation operator. </p>
                              </note>
                           </item>
                        </ulist>
                        <note>
                           <p> For aliased letters, use the relative luminance value found two pixels in
                                                from the edge of the letter. </p>
                        </note>
                     </item>
                     <item>
                        <p> Measure the relative luminance of the background pixels
                                    immediately next to the letter using same formula. </p>
                     </item>
                     <item>
                        <p> Calculate the contrast ratio using the following
                                    formula. </p>
                        <ulist>
                           <item>
                              <p>(L1 + 0.05) / (L2 + 0.05), where</p>
                              <ulist>
                                 <item>
                                    <p>L1 is the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                                            linktype="guideline"
                                            xlink:type="simple"
                                            xlink:show="replace"
                                            xlink:actuate="onRequest">relative luminance</loc> of the lighter of the foreground or background colors, and</p>
                                 </item>
                                 <item>
                                    <p>L2 is the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                                            linktype="guideline"
                                            xlink:type="simple"
                                            xlink:show="replace"
                                            xlink:actuate="onRequest">relative luminance</loc> of the darker of the foreground or background colors.</p>
                                 </item>
                              </ulist>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p> Check that the contrast ratio is equal to or
                                    greater than 7:1 </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #4 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G18">
            <short-name>Ensuring that a contrast ratio of at least 5:1 exists between text (and images of text) 
                    and background behind the text</short-name>
            <applicability>
               <p> Any technology that produces visual output. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-contrast"/>
               <success-criterion idref="visual-audio-contrast7"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to make sure that users can read text
                        that is presented over a background. For Success Criterion 1.4.3, this technique describes the minimum contrast ratio for text that is less than 18 point (if not bold) and less than 14 point (if bold). For Success Criterion 1.4.5, this technique relaxes the 7:1 contrast ratio requirement  for text that is at least 18 point (if not bold) or at least 14 point (if bold).</p>
               <p> If the background is a solid color (or all black or all white) then the
                        relative luminance of the text can be maintained by making sure that each
                        of the text letters have 5:1 contrast ratio with the background. </p>
               <p> If the background or the letters vary in relative luminance (or are patterned) then
                        the background around the letters can be chosen or shaded so that the
                        letters maintain 5:1 contrast ratio with the background behind them
                        even if they do not have that contrast ratio with the entire background. </p>
               <p> The contrast ratio can sometimes be maintained by changing the
                        relative luminance of the letters as the relative luminance of the background changes across
                        the page. </p>
               <p> Another method is to provide a halo around the text that provides the
                        necessary contrast ratio if the background image or color would not
                        normally be sufficiently different in relative luminance. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A black background is chosen so that light colored letters that match the companies logo can be used. </p>
                  </item>
                  <item>
                     <p>Text is placed over a picture of the college campus.
                                Since a wide variety of colors and darknesses appear in the picture,
                                the area behind the text is fogged white so that the picture is very
                                faint and the maximum darkness is still light enough to maintain a
                                5:1 contrast ratio with the black text written over the picture. </p>
                     <p> See also the contrast samples in related resources.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.paciellogroup.com/resources/contrast-analyser.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Analyser – Application</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/services/luminositycontrastratio.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Ratio Analyser - online service</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/colour-contrast-analyser-firefox-extension.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colour Contrast Analyser - Firefox Extension</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://trace.wisc.edu/contrast-ratio-examples/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Color Contrast Samples</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/Graphics/atypical-color-response"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Atypical colour response</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.colorsontheweb.com/colorcontrast.asp"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colors On the Web Color Contrast Analyzer</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.vischeck.com/daltonize/runDaltonize.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Tool to convert images based on color loss so that contrast is restored as luminance contrast when there was only color contrast (that was lost due to color deficiency)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.456bereastreet.com/archive/200709/10_colour_contrast_checking_tools_to_improve_the_accessibility_of_your_design/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">List of color contrast tools</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Measure the relative luminance of each letter (unless they are all
                                    uniform) using the formula: </p>
                        <ulist>
                           <item>
                              <p>L = 0.2126 * <emph role="bold">R</emph> + 0.7152 * <emph role="bold">G</emph> + 0.0722 * <emph role="bold">B</emph> where <emph role="bold">R</emph>, <emph role="bold">G</emph> and <emph role="bold">B</emph> are defined as:</p>
                              <ulist>
                                 <item>
                                    <p>if R<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">R</emph> = R<sub>sRGB</sub>/12.92 else <emph role="bold">R</emph> = ((R<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                                 <item>
                                    <p>if G<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">G</emph> = G<sub>sRGB</sub>/12.92 else <emph role="bold">G</emph> = ((G<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                                 <item>
                                    <p>if B<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">B</emph> = B<sub>sRGB</sub>/12.92 else <emph role="bold">B</emph> = ((B<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                              </ulist>
                              <note role="nonumber">
                                 <p>and R<sub>sRGB</sub>, G<sub>sRGB</sub>, and B<sub>sRGB</sub> are defined as:</p>
                              </note>
                              <ulist>
                                 <item>
                                    <p>R<sub>sRGB</sub> = R<sub>8bit</sub>/255</p>
                                 </item>
                                 <item>
                                    <p>G<sub>sRGB</sub> = G<sub>8bit</sub>/255</p>
                                 </item>
                                 <item>
                                    <p>B<sub>sRGB</sub> = B<sub>8bit</sub>/255</p>
                                 </item>
                              </ulist>
                              <note role="nonumber">
                                 <p>The "^" character is the exponentiation operator. </p>
                              </note>
                           </item>
                        </ulist>
                        <note>
                           <p> For aliased letters, use the relative luminance value found two pixels in
                                                from the edge of the letter. </p>
                        </note>
                     </item>
                     <item>
                        <p> Measure the relative luminance of the background pixels
                                    immediately next to the letter using same formula. </p>
                     </item>
                     <item>
                        <p> Calculate the contrast ratio using the following
                                    formula. </p>
                        <ulist>
                           <item>
                              <p>(L1 + 0.05) / (L2 + 0.05), where</p>
                              <ulist>
                                 <item>
                                    <p>L1 is the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                                            linktype="guideline"
                                            xlink:type="simple"
                                            xlink:show="replace"
                                            xlink:actuate="onRequest">relative luminance</loc> of the lighter of the foreground or background colors, and</p>
                                 </item>
                                 <item>
                                    <p>L2 is the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                                            linktype="guideline"
                                            xlink:type="simple"
                                            xlink:show="replace"
                                            xlink:actuate="onRequest">relative luminance</loc> of the darker of the foreground or background colors.</p>
                                 </item>
                              </ulist>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p> Check that the contrast ratio is equal to or
                                    greater than 5:1 </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#4 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G19">
            <short-name>Ensuring that no component of the content flashes more than three times in any 1-second period</short-name>
            <applicability>
               <p>Applies to any technology</p>
            </applicability>
            <applies-to>
               <success-criterion idref="seizure-does-not-violate"/>
               <success-criterion idref="seizure-three-times"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to avoid flashing at rates that are known to cause seizures if the flashes are bright and large enough. Since some users may be using screen enlargers, this technique limits the flashing of any size content to no more than three flashes in any 1-second period.</p>
               <note>
                  <p>This technique is stricter than the Level 1 Success Criteria but is easier to test and can be used to meet the Level 1 Success Criteria because all failure thresholds in the Level 1 Success Criteria involve flashing 3.5 flashes or more within one second. Most content does not flash at all and even content that blinks does not blink this fast except on rare occasions.  Therefore, in order to avoid having to carry out the more complex testing specified by the Success Criteria, one could follow this technique to ensure that content only flashes one, two, or at most three times in any 1-second period. </p>
                  <p>Regarding 3.5 Flashes; if there are seven transitions from dark to light or light to dark, it would be 3.5 flashes, which is more than the allowed three flashes (six transitions). </p>
               </note>
               <p>
                  <emph role="bold">Examples of 3.5 flashes or seven transitions: </emph>
               </p>
               <ulist>
                  <item>
                     <p>STARTING DARK-LIGHT-DARK-LIGHT-DARK-LIGHT-DARK-LIGHT  or </p>
                  </item>
                  <item>
                     <p>STARTING LIGHT-DARK-LIGHT-DARK-LIGHT-DARK-LIGHT-DARK. </p>
                  </item>
               </ulist>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>

Content has lightning flashes.  Content is designed so that lightning only flashes two or three times without a pause in flashing.
    </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://trace.wisc.edu/peat/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">
Trace Center Photosensitive Epilepsy Analysis Tool (PEAT)</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G15"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there are no more than three flashes during any 1-second period.     </p>
                     </item>
                     <item>
                        <p>If there are three flashes, check that the Light/Dark status at the end of the 1-second period is the same as at the start.    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Both Step 1 and Step 2 are true.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G21">
            <short-name>Ensuring that users are not trapped in content</short-name>
            <applicability>
               <p> All technologies which support interactive operation. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-trapping"/>
               <!--<conformance-criterion idref="cc7"/>--></applies-to>
            <description>
               <p> The objective of this technique is to ensure that keyboard users do not become trapped in a subset of the content that can only be exited using a mouse or pointing device. A common example is content rendered by plug-ins. Plug-ins are user agents that render content inside the user agent host window and respond to all user actions that takes place while the plug-in has the focus. If the plug-in does not provide a keyboard mechanism to return focus to the parent window, users who must use the keyboard may become trapped in the plug-in content. </p>
               <p> This problem can be avoided by using one of the following mechanisms to provide a way for users to escape the subset of the content: </p>
               <ulist>
                  <item>
                     <p> Ensuring that the keyboard function for advancing focus within content (commonly the tab key) exits the subset of the content after it reaches the final navigation location. </p>
                  </item>
                  <item>
                     <p> Providing a keyboard function to move the focus out of the subset of the content. Be sure to document the feature in an accessible manner within the subset. </p>
                  </item>
                  <item>
                     <p> If the technology used in the subset of the content natively provides a "move to parent" keyboard command, documenting that command before the user enters the plug-in so they know how to get out again. </p>
                  </item>
               </ulist>
               <p>If the author uses a technology that allows users to enter the sub-content with keyboard and does not allow users to exit the sub-content with keyboard by default (i.e. it is not a feature of the Web content technology or its user agents) then, in order to implement this technique the author would either build such a capability into their content or not use the technology.
          </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p> Once a user tabs into an applet, further tabs are handled by the applet preventing the person from tabbing out. However, the applet is designed so that it returns keyboard focus back to the parent window when the person finishes tabbing through the tab sequence in the applet. </p>
                  </item>
                  <item>
                     <p>A page that includes content that is not accessibility-supported contains instructions about how to move focus back to the accessibility-supported content via the keyboard. The instructions precede the non accessibility-supported content. 
              </p>
                  </item>
                  <item>
                     <p>The help information available from the content that is not accessibility supported documents how to move focus back to the accessibility-supported content via the keyboard, and the help information can be accessed via the keyboard.</p>
                  </item>
                  <item>
                     <p>The help information available for the Web page documents how to move focus
from the content that is not accessibility supported to the accessibility-supported content via the keyboard, and the help information can be accessed via the keyboard.
              </p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> tab through content from start to finish. </p>
                     </item>
                     <item>
                        <p> check to see if keyboard focus is trapped in any of the content such that the person cannot move out of any part of the content and continue through the rest of the content. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #2 is false </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G53">
            <short-name>
          Identifying the purpose of a link using link text combined with the text of the enclosing sentence
          
        </short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="JAWS" version="5.0+">
                  <p>JAWS 5.0 and later includes the following keystrokes:</p>
                  <ulist>
                     <item>
                        <p>
alt+leftArrow: read previous sentence
    </p>
                     </item>
                     <item>
                        <p>
alt+rightArrow: read next sentence
    </p>
                     </item>
                     <item>
                        <p>
alt+NumPad 5: read current sentence
    </p>
                     </item>
                     <item>
                        <p>
Ctrl+NumPad5: read current paragraph
    </p>
                     </item>
                  </ulist>
               </ua-issue>
               <ua-issue name="WinEyes" version="5.5">
                  <p>Window-Eyes 5.5 has hotkeys to read the current sentence and current paragraph.</p>
                  <p>To surf the internet with WindowEyes  you must be in browse mode. Current sentence and current paragraph hot keys do not work in browse mode in version 6.1. </p>
                  <p>The factory default settings for reading surrounding link context are as follows:</p>
                  <p>Desktop settings:</p>
                  <ulist>
                     <item>
                        <p>Character = CTRL-NUMPAD-LEFT ARROW</p>
                     </item>
                     <item>
                        <p>Word = CTRL-NUMPAD-RIGHT ARROW</p>
                     </item>
                     <item>
                        <p>Line = CTRL-NUMPAD-CENTER</p>
                     </item>
                     <item>
                        <p>Sentence = Not available in Browse mode</p>
                     </item>
                     <item>
                        <p>(Next Sentence command is undefined by default on Desktop mode but the next line is the DOWN Arrow.) </p>
                     </item>
                     <item>
                        <p>Next Paragraph = P</p>
                     </item>
                     <item>
                        <p>Prior Paragraph = Shift P </p>
                     </item>
                     <item>
                        <p>Current Paragraph = Not Available in Browse mode</p>
                     </item>
                  </ulist>
                  <p>Laptop</p>
                  <ulist>
                     <item>
                        <p>Character = ALT-SHIFT-LESS THAN</p>
                     </item>
                     <item>
                        <p>Word Prior = ALT-SHIFT-J</p>
                     </item>
                     <item>
                        <p>Word = ALT-SHIFT-K</p>
                     </item>
                     <item>
                        <p>Word Next = ALT-SHIFT-L</p>
                     </item>
                     <item>
                        <p>Sentence Prior = ALT-SHIFT-7</p>
                     </item>
                     <item>
                        <p>Sentence = unavailable in browse mode</p>
                     </item>
                     <item>
                        <p>Sentence Next = unavailable in browse mode</p>
                     </item>
                     <item>
                        <p>Paragraph = Undefined on Laptop by default	</p>
                     </item>
                     <item>
                        <p>Line Prior = ALT-SHIFT-U</p>
                     </item>
                     <item>
                        <p>Line = ALT-SHIFT-I</p>
                     </item>
                     <item>
                        <p>Line Next =  ALT-SHIFT-O</p>
                     </item>
                  </ulist>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to identify the purpose of a link from the link and its sentence context. The sentence enclosing the link provides context for an otherwise unclear link. The description lets a user distinguish this link from links in the Web page that lead to other destinations and helps the user determine whether to follow the link. Note that simply providing the URI of the destination is generally not sufficiently descriptive.</p>
               <note>
                  <p>These descriptions will be most useful to the user if the additional information needed to understand the link precedes the link. If the additional information follows the link, there can be confusion and difficulty for screen reader users who are reading through the page in order (top to bottom).</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head/>
                  <description>
                     <p>A Web page contains the sentence "To advertise on this page, <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://example.com"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">click here</loc>."</p>
                     <p>Although the link phrase 'click here' is not sufficient to understand the link, the information needed precedes the link in the same sentence.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <p>A Web page contains the sentence "The first pilgrims came to America on the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://example.com"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Mayflower</loc>."</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <p>In the news summary containing the sentence "The Smallville Times <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://example.com"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">reports that</loc> the School Board chose a 2007 school calendar that starts on August 27.", the words "reports that" are a link to an article in the Smallville Times about the School Board meeting.</p>
                     <note>
                        <p>Although this example satisfies the Success Criterion, putting information needed to understand the link after the link in this way is awkward for those who are reading through the document with a screen reader.</p>
                     </note>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G91"/>
               <relatedtech idref="H77"/>
               <relatedtech idref="H78"/>
               <relatedtech idref="H79"/>
               <relatedtech idref="H80"/>
               <relatedtech idref="C7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:            </p>
                  <olist>
                     <item>
                        <p>Check that the link is part of a sentence</p>
                     </item>
                     <item>
                        <p>Check that text of the link combined with the text of its enclosing sentence describes the purpose of the link</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>The above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G54">
            <short-name>Including a sign language interpreter in the video stream 
        </short-name>
            <applicability>
               <p>
                    Applies to all technologies that present synchronized media information
                    </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-sign"/>
            </applies-to>
            <description>
               <p>
                    The objective of this technique is to allow users who cannot hear or read text rapidly to be able to access synchronized media material.  
                    </p>
               <p>
                        For those who communicate primarily in sign language it is sometimes less preferable and sometimes not possible for them to read and understand text at the rate it is presented in captions.   For these latter individuals it is important to provide sign language presentation of the audio information. 
                    </p>
               <p>
                    One universally compatible way of doing this is to simply embed a video of the sign language interpreter in the video stream.   This has the disadvantage of providing a lower resolution image that cannot be easily enlarged without enlarging the entire image.
                    </p>
               <note>
                  <p>If the video stream is too small, the sign language interpreter will be indiscernible. When creating a video steam that includes a video of a sign language interpreter, make sure there is a mechanism to play the video stream full screen in the accessibility-supported content technology. Otherwise, be sure the interpreter portion of the video is adjustable to the size it would be had the entire video stream been full screen.</p>
                  <p>Since sign language is not usually a signed version of the printed language, the author has to decide which sign language to include.  Usually the sign language of the primary audience would be used.  If intended for multiple audiences, multiple sign languages may be used.  Refer to advisory techniques for multiple sign languages.</p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>Example 1: A television station provides a sign language interpreter in the corner of its on-line news video.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>Guidelines for the Production of Signing Books</p>
                        <ulist>
                           <item>
                              <p>
                                 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.sign-lang.uni-hamburg.de/SigningBooks/deliver/d31/deliv_31_part3-2.html#3.2.2.6"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">"Sign Language presentation"</loc> gives a broad overview of issues to consider when filming sign language interpreters. Includes discussion of signing both written and spoken originals.
                                    </p>
                           </item>
                           <item>
                              <p>
                                        Techniques for filming are discussed in         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.sign-lang.uni-hamburg.de/SigningBooks/SBRC/Grid/d71/guide12.htm"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">chapter 12, “Filming the Signer(s)"</loc>.
                                    </p>
                           </item>
                           <item>
                              <p>Useful information about how to display the sign language interpreter  in relation to the original synchronized media content is provided in          <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.sign-lang.uni-hamburg.de/SigningBooks/SBRC/Grid/d71/guide13.htm"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">Chapter 13, "Editing"</loc>
                              </p>
                              <note>
                                 <p>These techniques may need to be adapted for Web-based presentation.</p>
                              </note>
                           </item>
                        </ulist>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
                                    Have someone watch the program who can hear and is familiar with the sign language being used.
                                </p>
                     </item>
                     <item>
                        <p>
                                    Check to see if there is a sign language interpreter on screen. 
                                </p>
                     </item>
                     <item>
                        <p>
                                    Check to see that dialogue and important sounds are being conveyed by the interpreter visible on screen.
                                </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
                                    #2 and #3 are true
                                </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G55">
            <short-name>Linking to definitions</short-name>
            <applicability>
               <p>All technologies that include links. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
               <success-criterion idref="meaning-located"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make the definition of a word, phrase, or abbreviation available by providing the definition, either within the same Web page or in a different Web page, and establishing a link between the item and its definition. </p>
               <p>Links are a powerful option for providing access to the definition of a word, phrase, or abbreviation. A user can use the link to find the definition quickly and easily, and then return to his place in the content via the user agent's Back button.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>Technical terms and abbreviations in an article about sports injuries are linked to definitions in a medical dictionary.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A textbook contains a glossary of new vocabulary words introduced in each chapter. The first occurrence of each of these words is linked to its definition in the glossary.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A general glossary of abbreviations is provided. All occurrences of abbreviations are linked directly to the appropriate definition within that glossary.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The word  <emph>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/WAI/GL/WCAG20/appendixA.html#jargondef"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">jargon</loc>
                        </emph> is linked to its definition in the WCAG2 Glossary.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The word "modulo" is jargon used in Web content about mathematics. A definition for modulo is included within the Web page. Each occurrence of the word modulo is linked to its definition.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A Japanese idiom is linked to its definition. This example uses a link within the page to navigate to the definition of an idiomatic expression.</p>
                  </description>
                  <code role="html401">
&lt;p&gt;....&lt;a href="#definition"&gt;さじを投げる&lt;/a&gt;....&lt;/p&gt;

&lt;h3&gt;脚注：&lt;/h3&gt;
&lt;dl&gt;
&lt;dt id="definition" name="definition"&gt;さじを投げる&lt;/dt&gt;
&lt;dd&gt;どうすることもできなくなり、あきらめること。&lt;/dd&gt;
&lt;/dl&gt; 
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each word, phrase, or abbreviation to be defined:
							</p>
                  <olist>
                     <item>
                        <p>Check that at least the first instance of the item is a link.</p>
                     </item>
                     <item>
                        <p>Check that each link navigates to the definition of the item.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G56">
            <short-name>Mixing audio files so that non-speech sounds are at least 20 decibels
                    lower than the speech audio content</short-name>
            <applicability>
               <p> Any technology </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-noaudio"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to allow authors to include sound behind
                        speech without making it too hard for people with hearing problems to
                        understand the speech. Making sure that the foreground speech is 20 db louder than the
                        backgound sound makes the speech 4 times louder than the background audio.
                        For information on Decibels (dB), refer to  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://trace.wisc.edu/docs/2004-About-dB/index.htm"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">About Decibels</loc>.</p>
            </description>
            <examples>
               <eg-group>
                  <head>An announcer speaking over a riot scene</head>
                  <description>
                     <ulist>
                        <item>
                           <p> A narrator is describing a riot scene. The volume of the riot scene is adjusted so that it is 20 db lower than the announcer's volume before the scene is mixed with the narrator. </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
               <eg-group diff="chg">
                  <head>Sufficient audio contrast between a narrator and background music</head>
                  <description>
                     <p>This example demonstrates a voice with music in the background in which the voice is the appropriate 20 DB above the background. The voice (foreground) is recorded at -17.52 decibels (average RMS) and the music (background) is at -37.52 decibels, which makes the foreground 20 decibels louder than the background.</p>
                     <p diff="del">The following is a link to an mp3 file. It is an audio track that has been mixed so that there is sufficient contrast between the foreground and background sounds. When it is listened to, the foreground is heard clearly above the background.</p>
                     <exsubhead>Audio example</exsubhead>
                     <p>
                        <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="Good-contrast.mp3"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Audio Example: Foreground is 20 decibels above the background (mp3)</loc>
                     </p>
                     <p>Transcript of audio example (good contrast):</p>
                     <p>"Usually the foreground refers to a voice that is speaking and should be understood. My speaking voice right now is 20 decibels above the background which is the music. This is an example of how it should be done.."</p>
                     <exsubhead>Visual example of the recording above</exsubhead>
                     <p diff="add">The audio example above is visually represented below in a snapshot of the file in an audio editor. A section is highlighted that contains foreground and  background. It is a much larger wave than the section that contains only background.</p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/G56/Audio_3.jpg"
                              alt="Visual representation of sufficient contrast."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                  </description>
               </eg-group>
               <eg-group role="failure" diff="chg">
                  <head>Insufficient Audio Contrast between a narrator and background music</head>
                  <description>
                     <exsubhead>Audio example of the failure</exsubhead>
                     <p>This example demonstrates a voice with music in the background in which the voice is not 20 DB above the background. The voice (foreground) is at -18 decibels and the music (background) is at about -16 decibels making the foreground only 2 decibels louder than the background.</p>
                     <p>
                        <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="Bad-contrast.mp3"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Audio Example: Foreground is less than 20 decibels above the background (mp3)</loc>
                     </p>
                     <p>Transcript of audio example (bad contrast):</p>
                     <p>"This is an example of a voice that is not loud enough against the background. The voice which is the foreground is only about 2 decibels above the background. Therefore is difficult to understand for a person who is hard of hearing. It is hard to discern one word from the next. This is an example of what not to do."</p>
                     <exsubhead>Visual example of the failure</exsubhead>
                     <p diff="add">The highlighted section contains foreground and background. The wave is almost the same size the section that contains only background, which means the background is too loud in comparison to the foreground voice. </p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/G56/Audio_4.jpg"
                              alt="Visual representation of bad contrast."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://trace.wisc.edu/docs/2004-About-dB/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">About
                                        Decibels</loc> by Gregg Vanderheiden </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.eramp.com/david/audio_contrast_general_techs.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Audio creation / contrast tutorial</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Locate loud values of background content between foreground
                                    speech </p>
                     </item>
                     <item>
                        <p> Measure the volume in dB(A) SPL </p>
                     </item>
                     <item>
                        <p> Measure the volume of the foreground speech in dB(A) SPL </p>
                     </item>
                     <item>
                        <p> Subtract the values </p>
                     </item>
                     <item>
                        <p> Check that the result is 20 or greater. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #5 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G57">
            <short-name>Ordering the content in a meaningful sequence</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that the order of content presented to assistive technologies allows the user to make sense of the content. Some techniques permit the content to be rendered visually in a meaningful sequence even if the underlying order of the content is confusing.</p>
               <p>For example, when mixing languages with different directionality in HTML, the bidirectional algorithm may place punctuation in the wrong place. Correctly ordered content maintains the punctuation in the correct sequence in the content stream and uses markup to override the bidirectional algorithm, rather than moving the punctuation in the content stream so that the default rendering positions it correctly.</p>
               <p>When rendered visually, white space characters such a space or tab may not appear to be part of the content. However, when inserted into the content to control visual formatting, they may interfere with the meaning of the content.</p>
               <p>At a larger granularity, controlling the placement of blocks of content in an HTML document using layout tables may produce a rendering in which related information is positioned together visually, but separated in the content stream. Since layout tables are read row by row, if the caption of an illustration is placed in the row following the illustration, it may be impossible to associate the caption with the image.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page from a museum exhibition contains a navigation bar containing a long list of links. The page also contains an image of one of the pictures from the exhibition, a heading for the picture, and a detailed description of the picture. The links in the navigation bar form a meaningful sequence. The heading, image, and text of the description also form a meaningful sequence. CSS is used to position the elements on the page.</p>
                  </description>
                  <code role="html401">
Markup:

&lt;h1&gt;My Museum Page&lt;/h1&gt;
&lt;ul id="nav"&gt;
	&lt;li&gt;&lt;a href="#"&gt;Link 1&lt;/a&gt;&lt;/li&gt;
	...
	&lt;li&gt;&lt;a href="#"&gt;Link 10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id="description"&gt;
&lt;h2&gt;Mona Lisa&lt;/h2&gt;
&lt;p&gt;
&lt;img src="img.png" alt="Mona Lisa"&gt;
&lt;/p&gt;
&lt;p&gt;...detailed description of the picture...&lt;/p&gt;
&lt;/div&gt;

CSS:

ul#nav
{
	float: left;
	width: 9em;
	list-style-type: none;
	margin: 0;
	padding: 0.5em;
	color: #fff;
	background-color: #063;
}

ul#nav a
{
	display: block;
	width: 100%;
	text-decoration: none;
	color: #fff;
	background-color: #063;
}

div#description
{
	margin-left: 11em;
}
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="F1"/>
               <relatedtech idref="F49"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
                  Linearize content using a standard approach for the technology (e.g., removing layout styles or running a linearization tool) 
                  
                </p>
                     </item>
                     <item>
                        <p>
                  Check to see if the order of content yields the same meaning as the original 
                  
                </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G58">
            <short-name>Placing a link to the alternative for time-based media immediately next to the non-text content</short-name>
            <applicability>
               <p>This technique is not technology specific and can be used in any technology that supports links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-text-doc"/>
            </applies-to>
            <description>
               <p>With this technique, a link to the collated document of captions and audio description is provided. The collated document could be at another location on the same Web page or at another URI. A link to the collated document is immediately adjacent to the non-text content. The link can be immediately before or after the synchronized media content. If the collated document is on the same Web page as other content then put "End of document" at the end so that they know when to stop reading and return to their previous place. If a "Back" button will not take the person back to the point from which they jumped, then a link back to the non-text content location is provided.</p>
            </description>
            <examples>
               <eg-group>
                  <head>An .MOV Document in an HTML Document</head>
                  <description>
                     <p>Code on a page called "Olympic_Sports.htm"</p>
                  </description>
                  <code>
&lt;a name="Olympic_Wrestling"&gt;&lt;/a&gt;
&lt;p&gt;&lt;a href="http://www.example.com/movies/olympic_wrestling.mov"&gt;Olympic Wrestling movie&lt;/a&gt;, 
&lt;a href="http://www.example.com/transcripts/olympic_wrestling_transcript.htm&gt;Olympic 
Wrestling collated Transcript&lt;/a&gt;&lt;/p&gt;
</code>
               </eg-group>
               <eg-group>
                  <head>The link back to the .MOV Document in an HTML Document</head>
                  <description>
                     <p>Code on the page olympic_wrestling_transcript.htm</p>
                  </description>
                  <code>
&lt;p&gt;Sports announcer 1: This is a great battle tonight between England's "Will Johnson" and 
"Theodore Derringo" from Argentina&lt;/p&gt;

&lt;p&gt;Scenery: There is a mat set out in the middle of the stadium with 500 people in the 
stands...&lt;/p&gt;

&lt;p&gt; ...more dialogue ...&lt;p&gt;

&lt;p&gt; ...more scenery...&lt;/p&gt;

&lt;p&gt; ...etc...&lt;/p&gt;

&lt;p&gt;Sports announcer 2: And that is all for tonight, thank you for joining us tonight where 
Will Johnson is the new Gold Medalist. 
&lt;a href="../movies/Olympic_Sports.htm#Olympic_Wrestling&gt;Return to Movie page&lt;/a&gt; &lt;/p&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check for the presence of a link immediately before or after the non-text content</p>
                     </item>
                     <item>
                        <p>Check that it is a valid link that points directly to the collated document of this particular synchronized media. </p>
                     </item>
                     <item>
                        <p>Check for the availability of a link or back function to get the user back to the original location of the synchronized media content
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>

Items #1 through 3 are all true.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G59">
            <short-name>Placing the interactive elements in an order that follows sequences and relationships within the content</short-name>
            <applicability>
               <p>All technologies that contain interactive elements and define a default tab order for interactive elements.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that interactive elements receive focus in an order that follows sequences and relationships in the content. When designing the content, the interactive elements such as links and form controls are placed in the content so that the default tab order follows the sequences and relationships in the content. Each technology defines its default tab order, so the mechanism for placing the controls in the content will depend on the technology used.</p>
               <p>As an example, in HTML, the default focus order follows the order in which elements appear in the content source. When the order of the HTML source matches the visual order of the Web page, tabbing through the content follows the visual layout of the content. When the source order does not match the visual order, the tab order through the content must reflect the logical relationships in the content that are displayed visually.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A form contains two text input fields that are to be filled in sequentially. The first text input field is placed first in the content, the second input field is placed second.</p>
                  </item>
                  <item>
                     <p>A form contains two, side-by-side sections of information. One section contains information about an applicant; the other section contains information about the applicant's spouse. All the interactive elements in the applicant section receive focus before any of the elements in the spouse section. The elements in each section receive focus in the reading order of that section.</p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G57"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Determine the order of interactive elements in the content.</p>
                     </item>
                     <item>
                        <p>Determine the logical order of interactive elements.</p>
                     </item>
                     <item>
                        <p>Check that the order of the interactive elements in the content is the same as the logical order.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G60">
            <short-name>Playing a sound that turns off automatically within three seconds</short-name>
            <applicability>
               <p>Applies to all technologies except those for voice interaction.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-dis-audio"/>
            </applies-to>
            <description>
               <p> The purpose of this technique is to allow authors to play a sound on their
                        Web page but avoid the problem of users not being able to use their screen
                        readers due to interference by the content sound. It also allows the author
                        to avoid putting controls on the Web page to control the sound - and the problem
                        faced by users with screen readers in finding the control (when unable
                        to hear their screen reader). </p>
               <p> The technique is simple. The sound plays for 3 or less seconds and stops
                        automatically. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p> Example 1: A Web page opens with a trumpet fanfare and then goes silent
                            </p>
                  </item>
                  <item>
                     <p> Example 2: A homepage opens with the chairman saying "Binfor, where quality is our business."  then going silent.</p>
                  </item>
                  <item>
                     <p> Example 3: A Web page opens with instructions on how to get started:  "To begin, press the enter key."</p>
                  </item>
                  <item>
                     <p> Example 4: A Web page opens with a warning and then goes silent. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <p> (none) </p>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Load the Web page</p>
                     </item>
                     <item>
                        <p>Check that all sound that plays automatically stops in 3 seconds
                                    or less </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #2 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G61">
            <short-name>Presenting repeated components in the same relative order each time they
                    appear</short-name>
            <applicability>
               <p> Any technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-consistent-locations"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to make content easier to use by making
                        the placement of repeated components more predictable. This technique helps
                        maintain consistent layout or presentation between Web pages by presenting components that are repeated in these Web  units in the same relative order each time they appear. Other
                        components can be inserted between them, but their relative order is not
                        changed. </p>
               <p> This technique also applies to navigational components that are repeated.
                        Web pages often contain a navigation menu or other
                        navigational component that allows the user to jump to other Web pages. This technique makes the placement of navigational
                        components more predictable by presenting the links or programmatic
                        references inside a navigational component in the same relative order each
                        time the navigational component is repeated. Other links can be removed or
                        inserted between the existing ones, for example to allow navigation inside a
                        subsection of a set of Web pages, but the relative order is not
                        changed. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p> A Web site has a logo, a title, a search form and a navigation bar
                                at the top of each page; these appear in the same relative order on
                                each page where they are repeated. On one page the search form is
                                missing but the other items are still in the same order. </p>
                  </item>
                  <item>
                     <p> A Web site has a left-hand navigation menu with links to the major
                                sections of the site. When the user follows a link to another
                                section of the site, the links to the major sections appear in the
                                same relative order in the next page. Sometime links are dropped and
                                other links are added, but the other links always stay in the same
                                relative order. For example, on a Web site of a company that sells
                                products and offers training, when a user moves from the section on
                                products to the section on training, the links to individual
                                products are removed from the navigation list, while links to
                                training offerings are added. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> List components that are repeated on each Web page in a set
                                    of Web pages (for example, on each page in a Web site).
                                </p>
                     </item>
                     <item>
                        <p> For each component, check that it appears in the same relative
                                    order with regard to other repeated components on each Web page where it appears. </p>
                     </item>
                     <item>
                        <p> For each navigational component, check that the links or
                                    programmatic references are always in the same relative order.
                                </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #2 is true. </p>
                     </item>
                     <item>
                        <p> #3 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G62">
            <short-name>Providing a glossary</short-name>
            <applicability>
               <p>Any technology containing text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
               <success-criterion idref="meaning-located"/>
               <success-criterion idref="meaning-pronunciation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make the definition of a word, phrase, or abbreviation available by providing the definition in a glossary. A glossary is an alphabetical list of words, phrases, and abbreviations with their definitions. Glossaries are most appropriate when the words, phrases, and abbreviations used within the content relate to a specific discipline or technology area. A glossary can also provide the pronunciation of a word or phrase.
          </p>
               <p>The glossary is included at the end of the Web page or the glossary is located via one of the mechanisms for locating content within a set of Web pages. (See  <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="navigation-mechanisms-mult-loc"
                       linktype="understanding"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Understanding Success Criterion 2.4.5</loc>.)</p>
               <p>If the glossary contains several definitions for the same word, phrase, or abbreviation, simply providing the glossary is not sufficient to satisfy this Success Criterion.  A different technique should be used to find the correct definition. This is especially important if the uses of the word, phrase, or abbreviation are not unique within the Web page, that is, if different occurrences of the item have different definitions.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>Users of on line chat forums have created several acronyms and abbreviations to speed up typing conversations on the computer. For example, LOL refers to "laughing out loud" and FWIW abbreviates "for what it's worth". The site provides a glossary page that lists the expansions for the commonly used acronyms and abbreviations.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A Web page discussing mathematical theory includes a glossary of commonly used mathematical terms, abbreviations and acronyms.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A textbook contains a glossary of new vocabulary words introduced in each chapter.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p> Dutch text uses the phrase '<phrase xml:lang="nl">Hij ging met de kippen op stok</phrase>' (He went to roost with the chickens). The glossary explains that this phrase means '<phrase xml:lang="nl">Hij ging vroeg naar bed</phrase>' (He went to bed early).</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A glossary of idiomatic expressions</head>
                  <description>
                     <p>The American novel "The Adventures of Huckleberry Finn" includes many idiomatic expressions that were used in the southwestern United States in the 1840s. In an online edition designed for students, each idiomatic expression is linked to an item in the glossary.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that either</p>
                        <ulist>
                           <item>
                              <p>The glossary is included in the Web page, or </p>
                           </item>
                           <item>
                              <p>A mechanism is available to locate the glossary.</p>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p>Check that each word, phrase, or abbreviation to be defined is defined in the glossary</p>
                     </item>
                     <item>
                        <p>Check that the glossary contains only one definition for each item.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All three checks above are true.</p>
                     </item>
                  </ulist>
                  <p>Note: The definition of abbreviation used in WCAG is : "shortened form of a word, phrase, or name where the original expansion has not been rejected by the organization that it refers to and where the abbreviation has not become part of the language."</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="G63">
            <short-name>Providing a site map</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-mult-loc"/>
               <success-criterion idref="navigation-mechanisms-location"/>
            </applies-to>
            <description>
               <p>
            This is one of a series of techniques for locating content that are sufficient for addressing Success Criterion 2.4.5. 
             A site map is a Web page that provides links to different sections of the site. To make the site map available within the site, at a minimum every page that is listed in the site map contains a link to the site map.</p>
               <p>The site map serves several purposes.
						</p>
               <ulist>
                  <item>
                     <p>It provides an overview of the entire site.</p>
                  </item>
                  <item>
                     <p>It helps users understand what the site contains and how the content is organized.</p>
                  </item>
                  <item>
                     <p>It offers an alternative to complex navigation bars that may be different at different parts of the site.</p>
                  </item>
               </ulist>
               <p>There are different types of site maps. The simplest and most common kind of site map is an outline that shows links to each section or sub-site. Such outline views do not show more complex relationships within the site, such as links between pages in different sections of the site. The site maps for some large sites use headings that expand to show additional detail about each section.</p>
               <p>A site map describes the contents and organization of a site. It is important that site maps be updated whenever the site is updated. A Web page that does not link to all the sections of a site, that presents an organization that is different from the site's organization, or that contains links that are no longer valid is not a valid site map.
</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The Web Accessibility Initiative provides a  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://www.w3.org/WAI/sitemap.html"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">WAI site map</loc> that lists different sections of its Web site. The site map shows the different sections of the Web site, and shows some of the substructure within those sections.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The site map for an on-line magazine lists all the sections of the magazine and the subsections in each section. It also include links for Help, How to Contact Us, Privacy Policy, Employment Opportunities, How to Subscribe, and the home page for the magazine.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.cast.org/publications/ncac/ncac_go.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Graphic Organizers</loc> page at the National Center for Accessible Curriculum provides a useful overview of different kinds of graphic organizers and their uses, plus a summary of relevant research on the effectiveness of graphical organizers for students with learning disabilities.
    </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usabilityfirst.com/glossary/main.cgi?function=display_term&amp;term_id=193"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Usability Glossary: sitemap</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G64"/>
               <relatedtech idref="G125"/>
               <relatedtech idref="G126"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the site contains a site map.</p>
                     </item>
                     <item>
                        <p>Check that the links in the site map lead to the corresponding sections of the site.</p>
                     </item>
                     <item>
                        <p>For each link in the site map, check that the target page contains a link to the site map.</p>
                     </item>
                     <item>
                        <p>For each page in the site, check that the page can be reached by following some set of links that start at the site map.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G64">
            <short-name>Providing a Table of Contents</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-mult-loc"/>
            </applies-to>
            <description>
               <p>
            This is one of a series of techniques for locating content that are sufficient for addressing Success Criterion 2.4.5. 
            
            A table of contents provides links to sections and subsections of the same document. The information in the document is usually organized hierarchically, and is intended to be read sequentially. Just as there could be many books in a library, each with its own table of contents, a Web site may contain many documents, each with its own table of contents.
            
          </p>
               <p>The table of contents serves two purposes:
						</p>
               <ulist>
                  <item>
                     <p>It gives users an overview of the document's contents and organization.</p>
                  </item>
                  <item>
                     <p>It allows readers to go directly to a specific section of an on-line document.</p>
                  </item>
               </ulist>
               <p>The table of contents typically includes only major sections of the document, though in some cases an expanded table of contents that provides a more detailed view of a complex document may be desirable.</p>
               <p>The sections of the document could be located on the same Web page or divided into multiple Web pages. A table of contents is particularly useful when a document is divided into multiple Web pages.</p>
               <p>There is a distinction between a table of contents and other Navigational elements such as a Navigation Bar or Site Map. A table of contents provides links to sections of the same document. Those sections could be located on the same Web page or spread across multiple Web pages. But together, they make a complete idea. To better understand this, consider a hard copy book which has sections. Each section belongs to the book. There could be many books in a library. In this example, the "library" is the entire Web site. 
          </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Web Content Accessibility Guidelines 2.0</loc> contains a         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://www.w3.org/TR/WCAG20/#contents"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">table of contents</loc> that is a hierarchical list of links to the sections and subsections of the document. The hierarchy of the table of contents reflects the organization of the sections, and each item in the table of contents is a link that takes the user directly to that section.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The first page of  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://www.adobe.com/enterprise/accessibility/reader/index.html"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Using Accessible PDF Documents with Adobe Reader 7.0: A Guide for People with Disabilities</loc> contains a table of contents that lists the sections of the guide. The         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://www.adobe.com/enterprise/accessibility/reader/pdfs/reader7_accessibility.pdf"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">PDF version of the Guide for People with Disabilities</loc> contains a more detailed table of contents for the entire document on page 3. </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G63"/>
               <relatedtech idref="G125"/>
               <relatedtech idref="G126"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that a table of contents or a link to a table of contents exists in the document.</p>
                     </item>
                     <item>
                        <p>Check that the values and order of the entries in the table of contents correspond to the names and order of the sections of the document.</p>
                     </item>
                     <item>
                        <p>Check that the entries in the table of contents link to the correct sections of the document.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G65">
            <short-name>Providing a breadcrumb trail</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-location"/>
            </applies-to>
            <description>
               <p>A breadcrumb trail helps the user to visualize how content has been structured and how to navigate back to previous Web pages, and may identify the current location within a series of Web pages. A breadcrumb trail either displays locations in the path the user took to reach the Web page, or it displays the location of the current Web page within the organization of the site.</p>
               <p>Breadcrumb trails are implemented using links to the Web pages that have been accessed in the process of navigating to the current Web page. They are placed in the same location within each Web page in the set.</p>
               <p>It can be helpful to users to separate the items in the breadcrumb trailing with a visible separator. Examples of separators include "&gt;", "|", "/", and "::".</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A developer searches within the Web site of an authoring tool manufacturer to find out how to create hyperlinks.  The search results bring him to a Web page with specific instructions for creating hyperlinks using the authoring tool.  It contains the following links to create a breadcrumb trail:</p>
                  </description>
                  <code>
Home :: Developer Center :: How To Center 
</code>
                  <description>
                     <p>In this example the breadcrumb trail does not contain the title of the current Web page, "How to create hyperlinks". That information is available as the title of the Web page.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A photographer's portfolio Web site has been organized into different galleries and each gallery has further been divided into categories.   A user who navigates through the site to a Web page containing a photo of a Gentoo penguin would see the following breadcrumb trail at the top of the Web page:</p>
                  </description>
                  <code>
Home / Galleries / Antarctica / Penguins / Gentoo Penguin 
</code>
                  <description>
                     <p>All of the items except "Gentoo Penguin" are implemented as links.  The current location, Gentoo Penguin, is included in the breadcrumb trail but it is not implemented as a link.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>When breadcrumb trails have been implemented in a set of Web pages:
							</p>
                  <olist>
                     <item>
                        <p>Navigate to a Web page.</p>
                     </item>
                     <item>
                        <p>Check that a breadcrumb trail is displayed.</p>
                     </item>
                     <item>
                        <p>Check that the breadcrumb trail displays the correct navigational sequence to reach the current location or the correct hierarchical path to the current location within the site structure.</p>
                     </item>
                     <item>
                        <p>For a breadcrumb trail that does <emph>not</emph> include the current location:
									</p>
                        <olist>
                           <item>
                              <p>Check that all elements in the breadcrumb trail are implemented as links.</p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p>For a breadcrumb trail that does include the current location:</p>
                        <olist>
                           <item>
                              <p>Check that all elements except for the current location are implemented as links.</p>
                           </item>
                           <item>
                              <p>Check that the current location is not implemented as a link.</p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p>Check that all links navigate to the correct Web page as specified by the breadcrumb trail.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>For all Web pages in the set using breadcrumb trails,</p>
                        <ulist>
                           <item>
                              <p>Checks #2, #3, and #6 are true.</p>
                           </item>
                           <item>
                              <p>Either check #4 or #5 is true.</p>
                           </item>
                        </ulist>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G68">
            <short-name>Providing a descriptive label that describes the purpose of live
                    audio-only and live video-only content</short-name>
            <applicability>
               <p> Applies to all technologies </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> This technique provides a descriptive label for Live audio-only and live
                        video-only content. This label may be used in combination with an alternative for time-based media for audio or an alternative for time-based media or audio description of the video.
                        Those alternative however are not part of this technique. The purpose of
                        this technique is to ensure that the user can determine what the non-text
                        content is - even if they cannot access it. NOTE: Even if full alternatives
                        are also available, it is important that users be able to identify the
                        non-text content when they encounter it so that they are not confused, and
                        so that they can associate it with the full alternative when they encounter
                        it. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <ulist>
                        <item>
                           <p> A live video feed of the east coast highway has the
                                        following descriptive label "Live video picture of East
                                        Coast Highway just south of the I-81 interchange showing
                                        current traffic conditions." </p>
                        </item>
                        <item>
                           <p> A live audio feed of the Mississippi House of
                                        Representatives has the following descriptive label "Live
                                        audio from the microphones in the Mississippi House of
                                        Representatives." </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> remove, hide, or mask the non-text content </p>
                     </item>
                     <item>
                        <p> display the text alternative(s) </p>
                     </item>
                     <item>
                        <p> check that the purpose of the non-text content is clear - even
                                    if content is lost. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G69">
            <short-name>Providing an alternative for time based media</short-name>
            <applicability>
               <p>General technique. Applies to all technologies</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
               <success-criterion idref="media-equiv-text-doc"/>
            </applies-to>
            <description>
               <p>
The purpose of this technique is to provide an accessible alternative way of presenting the information in a synchronized media presentation.  
</p>
               <p>
In a synchronized media presentation, information is presented in a variety of ways including</p>
               <ulist>
                  <item>
                     <p>dialogue,  </p>
                  </item>
                  <item>
                     <p>sounds (natural and artificial), </p>
                  </item>
                  <item>
                     <p>the setting and background, </p>
                  </item>
                  <item>
                     <p>the actions and expressions of people, animals, etc., </p>
                  </item>
                  <item>
                     <p>text or graphics, </p>
                  </item>
                  <item>
                     <p>and more. </p>
                  </item>
               </ulist>
               <p>
In order to present the same information in accessible form, this technique involves creating a document that tells the same story and presents the same information as the synchronized media.  Such a document is sometimes called a screenplay. It includes all the important dialogue and actions as well as descriptions of backgrounds etc. that are part of the story.   
</p>
               <p>
If an actual screenplay was used to create the synchronized media in the first place, this can be a good place to start.  In production and editing however, the synchronized media usually changes from the screenplay.  For this technique, the original screenplay would be corrected to match the dialogue and what actually happens in the final edited form of the synchronized media.</p>
               <p>
In addition, some special types of synchronized media include interaction that has to occur at particular places in the playing of the synchronized media.   Sometimes it may result in an action taking place (e.g. something is purchased, sent, done, etc.). Sometimes it may change the course of the synchronized media (e.g. the synchronized media has multiple paths that are determined by user input).  In those cases links or some other mechanism would be used in the alternative for time-based media to allow people using the alternative to be able to have the same options and abilities as those using the synchronized media.
</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A training film shows employees how to use a new piece of equipment.  It involves a person talking throughout while they demonstrate the operation.  The screenplay used to create the training film is used as a starting point. It is then edited and corrected to match the dialogue etc.  The film and the resulting alternative for time-based media are then made available on the company Web site. Employees can then use either or both to learn how to use the machine. </p>
                  </item>
                  <item>
                     <p>An interactive shopping environment is created that allows users to steer themselves around in a virtual store and shop.  An alternative for time-based media allows the users to access the same shopping in text with links to choose aisles and to purchase things instead of dragging them into a virtual shopping basket.</p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G8"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>View the synchronized media presentation while referring to the alternative for time-based media
    </p>
                     </item>
                     <item>
                        <p>

Check that the dialogue in the alternative for time-based media matches the dialogue in the synchronized media presentation
    </p>
                     </item>
                     <item>
                        <p>

Check that the alternative for time-based media has descriptions of sounds.
    </p>
                     </item>
                     <item>
                        <p>

Check that the alternative for time-based media has descriptions of setting and setting changes.
    </p>
                     </item>
                     <item>
                        <p>

Check that  the alternative for time-based media has descriptions of actions and expressions of any 'actors' (people, animals etc).
    </p>
                     </item>
                     <item>
                        <p diff="add">If the alternate version(s) are on a separate page, check for the availability of link(s) to allow the user to get to the other versions.<issue id="i2662d" status="open">
                              <p>2662</p>
                           </issue>
                        </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2, 3, 4, 5 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G70">
            <short-name>Providing a function to search an online dictionary</short-name>
            <applicability>
               <p>All technologies</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
               <success-criterion idref="meaning-located"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide the definition of words, phrases, jargon, or abbreviation expansions by adding a mechanism to access an on-line dictionary to the Web page. This technique uses existing resources on the Web to provide the definition rather than requiring the author to create a glossary or other mechanism within the site. By providing access from within the Web page, a user can easily locate the desired definition. This technique can only be used if the online dictionary returns the correct definition.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A site that describes how a computer works would include a search form on each Web page. The search would be performed against an on-line dictionary of computer terms, acronyms, and abbreviations. Since the dictionary is specialized for computer terms, the acronym expansion found should be more accurate than with a general dictionary. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>An online course in English grammar provides a paragraph of text which introduces new vocabulary words. Each of the vocabulary words is a link to an on-line dictionary to find the definition of the word. Activating a link will open up a new window to an online dictionary site with the specific vocabulary word defined.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G55"/>
               <relatedtech idref="G112"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each word, phrase, or abbreviation to be defined:</p>
                  <olist>
                     <item>
                        <p>Check that a mechanism exists within the Web page to search for the word, phrase, or abbreviation via an on-line dictionary.</p>
                     </item>
                     <item>
                        <p>Check that the result of the search of the dictionary for the word, phrase, or abbreviation  the correct definition.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
                  <p>Note: The definition of abbreviation used in WCAG is : "shortened form of a word, phrase, or name where the original expansion has not been rejected by the organization that it refers to and where the abbreviation has not become part of the language."</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="G71">
            <short-name>Providing a help link on every Web page</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-context-help"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="JAWS" version="unknown">
                  <p>The example following does not work with JAWS—implicit labels are poorly supported, and JAWS does not read the Help link as part of the label before announcing the control (as required by the Success Criterion).</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide context sensitive help for users as they enter data in forms by providing at least one link to the help information on each Web page. The link targets a help page with information specific to that Web page. Another approach is to provide a help link for every interactive control. Positioning this link immediately before or after the control allows users to easily tab to it if they have problems in the control. Displaying the help information in a new browser window ensures that any data that has already been entered into the form will not be lost. NOTE: A link is not the only means to provide help.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The example below shows a label element enclosing both an input form control, and a help link following the "input" in sequence. Including the help link within the label element allows screen reader users to have access to the help link when interacting with the input form control.</p>
                  </description>
                  <code>
&lt;form action="test.html"&gt;
	&lt;label for="test"&gt;Test control
	&lt;input type="text" name="test" id="test" /&gt;
	&lt;a href="help.html" target="_blank"&gt;Help&lt;/a&gt;&lt;/label&gt;
&lt;/form&gt;
</code>
               </eg-group>
            </examples>
            <!--MC: commented out until IDs created
	<related-techniques>
<ulist>
    <item><p>Providing help bubbles (future link) </p></item>
    <item><p>Providing help by an assistant in the Web page (future link) </p></item>
    <item><p>Providing spell checking and suggestions for text input if applicable to the language. (future link)</p></item>
</ulist>

</related-techniques>
--><tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify a Web page that contains forms.</p>
                     </item>
                     <item>
                        <p>Determine if there is at least one link to help information specific to completing the form on this Web page or other resource.</p>
                     </item>
                     <item>
                        <p>Determine if there are links either before or after each interactive control to help information specific to that control.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Either #2 or #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G73">
            <short-name>Providing a long description in another location with a link to it that
                    is immediately adjacent to the non-text content</short-name>
            <applicability>
               <p> Applies to all technologies </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a way to link to remote long
                        descriptions in technologies that do not have a long description feature
                        built directly into them (e.g. longdesc) or where the feature is known to
                        not be supported. </p>
               <p> With this technique, the long description is provided in another location
                        than the non-text content. This could be at another location within the same
                        URI or at another URI. A link to that long description is provided that is
                        immediately adjacent to the non-text content. The link can be immediately
                        before or after the non-text content. If the description is located along
                        with other text then put "End of description" at the end so that they know
                        when to stop reading and return to the main content. If a "Back" button will
                        not take the person back to the point from which they jumped, then a link
                        back to the non-text content location is provided. </p>
               <p> This technique was commonly used in HTML before 'longdesc' was added to the
                        specification. In HTML it was called a D-Link because it was usually
                        implemented by putting a D next to images and using the D as a link to the
                        long description. This technique is not technology specific and can be used
                        in any technology that supports links. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Bar chart</head>
                  <description>
                     <p> There is a bar chart on a Web page showing the sales for the top
                                three salespeople. </p>
                     <p> The short text alternative says "October sales chart for top three
                                salespeople." </p>
                     <p> Immediately after the non-text content is a small image denoting a
                                long description. The alternate text for the image is "Long
                                description of chart". The image links to the bottom of the page
                                where there is a section titles "Description of charts on this
                                page". The link points to this specific description: " Sales for
                                October show Mary leading with 400 units. Mike follows closely with
                                389. Chris rounds out our top 3 with sales of 350. [end of
                                description]" </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Bar chart - in non-HTML technology where user agent "back"
                            is not supported for security reasons. </head>
                  <description>
                     <p> There is a bar chart on a Web page showing the sales for the top
                                three salespeople. </p>
                     <p> The short text alternative says "October sales chart for top three
                                salespeople." </p>
                     <p> Immediately after the non-text content is a small image denoting the
                                long description. The alternate text for the image is "Long
                                description of chart". The image links to another page titled
                                "Description of charts in October Sales Report". The description
                                link points to this specific description: "Sales for October show
                                Mary leading with 400 units. Mike follows closely with 389. Chris
                                rounds out our top 3 with sales of 350. End of description.
                                    <code>&lt;link&gt;</code> Back to Sales Chart
                                    <code>&lt;/link&gt;</code> ]" </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Caption used as link </head>
                  <description>
                     <p> There is a chart. The figure caption immediately below the chart
                                serves as a link to the long description. The Title attribute of the
                                link makes it clear that this is a link to a long description. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Transcript of an audio-only file </head>
                  <description>
                     <p> There is a recording of a speech by Martin Luther King. Links to the
                                audio file and the transcript appear side by side. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> check for the presence of a link immediately before or after the
                                    non-text content </p>
                     </item>
                     <item>
                        <p> check that the link is a valid link that points directly to the
                                    long description of this particular non-text content. </p>
                     </item>
                     <item>
                        <p> check that the long description conveys the same information as
                                    the non-text content </p>
                     </item>
                     <item>
                        <p> check for the availability of a link or back function to get the
                                    user back to the original location of the non-text content </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p> All 4 of the above are true </p>
               </expected-results>
            </tests>
         </technique>
         <technique id="G74">
            <short-name>Providing a long description in text near the non-text content, with a
                    reference to the location of the long description in the short description</short-name>
            <applicability>
               <p> Applies to all technologies </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a long description without
                        requiring the user to jump off to another location for the description. It
                        also allows all users to see the description which may be useful to anyone
                        who might miss some features in the non-text content. </p>
               <p> With this technique, the long description is provided as part of the
                        standard presentation (i.e. everyone receives it). The description is
                        located near the non-text content but does not have to be the very next
                        item. For example, there may be a caption under a chart with the long
                        description provided in the following paragraph. </p>
               <p> The location of this long description is then provided within the short text
                        alternative so the user knows where to look for it if they cannot view the
                        non-text content. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Bar chart</head>
                  <description>
                     <p> There is a bar chart on a Web page showing the sales for the top
                                three salespeople. </p>
                     <p> The short text alternative says: "October sales chart for top three
                                salespeople. Details in text following the chart:" </p>
                     <p> The following is in the paragraph immediately below the chart. "
                                Sales for October show Mary leading with 400 units. Mike follows
                                closely with 389. Chris rounds out our top 3 with sales of 350" </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> check that the short text alternative includes the location of
                                    the long description </p>
                     </item>
                     <item>
                        <p> Check that the long description is near the non-text content
                                    both visually and in the linear reading order </p>
                     </item>
                     <item>
                        <p> check that the long description conveys the same information as
                                    the non-text content </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p> All 3 of the above are true </p>
               </expected-results>
            </tests>
         </technique>
         <technique id="G75">
            <short-name>Providing a mechanism to postpone any updating of content</short-name>
            <applicability>
               <p>Content that automatically updates itself.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-postponed"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that users can postpone automatic updates of content, or other non-emergency interruptions. This can be accomplished either through a preference or by alerting users of an imminent update and allowing them to suppress it. If a preference is provided, automatic content update can be disabled by default and users can specify the frequency of automatic content updates if they choose to enable the setting.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A Web page provides stock quotes and automatically updates from time to time. The page provides a short form with a field "Refresh data frequency (minutes):" so users can adjust the frequency of the updating.</p>
                  </item>
               </ulist>
            </examples>
            <!--	<related-techniques>
<ulist>
    <item><p>Allowing users to request updates instead of automatically updating content (future link)</p></item>
</ulist>
</related-techniques>--><tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find pages with content that automatically updates.</p>
                     </item>
                     <item>
                        <p>For each automatic update, look for a mechanism to adjust the timing of the updates.</p>
                     </item>
                     <item>
                        <p>Check that automatic updating is disabled by default or that the user is warned before an automatic update occurs and allowed to suppress it.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G76">
            <short-name>Providing a mechanism to request an update of the content instead of
                    updating automatically</short-name>
            <applicability>
               <p>Any technology or combination of technologies that support automatic updates.
                    </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to let the user control if and when
                        content is updated, in order to avoid confusion or disorientation caused by
                        automatic refreshes that cause a change of context. Users of screen readers
                        may find automatic updates confusing because it is not always clear what is
                        happening. When a page is refreshed, the screen reader's “virtual cursor",
                        which marks the user's current location on the page, is moved to the top of
                        the page. People who use screen magnification software and people with
                        reading disabilities may also be disoriented when pages are refreshed
                        automatically. </p>
               <p> Some content is frequently updated with new data or information. Some
                        developers force automatic updates by inserting code in the content that
                        causes the content to request a new copy of itself from the server. These
                        updates and the frequency of these updates are not always under the user's
                        control. Instead of triggering updates automatically, authors can provide a
                        mechanism that allows the user to request an update of the content as
                        needed. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> In HTML, a developer can provide a button or link that
                                        allows the user to update the content. For example, on a
                                        page with news items located at http://www.example.com/news.jsp</p>
                  </description>
                  <code>&lt;a href="news.jsp"&gt;Update this page&lt;/a&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p> In a Web interface for e-mail (Webmail), a developer can
                                        provide a button or link to fetch new incoming mails instead
                                        of updating automatically. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/xpedio/groups/public/documents/PublicWebsite/public_refreshandtimeouts.hcsp"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Time outs and page refreshes</loc>, by the Web Access
                                    Centre of the Royal National Institute of the Blind (RNIB),
                                    provides rationale and techniques. </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find mechanisms to update the content (if such a mechanism is
                                    present). </p>
                     </item>
                     <item>
                        <p> For each such mechanism, check if it allows the user to request
                                    an update. </p>
                     </item>
                     <item>
                        <p> For each such mechanism, check if it can cause an automatic
                                    update. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If #2 is true, then #3 is false. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G78" diff="chg">
            <short-name>Providing a second, user-selectable, audio track that includes audio descriptions</short-name>
            <applicability>
               <p>Applies to any technology that has a sound track and visual content.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
               <success-criterion idref="media-equiv-audio-desc-only"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide an audio (spoken) version of information that is provided visually so that it is possible for people who cannot see to be able to understand audio-visual material. </p>
               <p>Since most user agents today cannot merge multiple sound tracks, this technique adds the additional audio information to synchronized media by providing an option which allows users to replace the soundtrack with a new copy of the original soundtrack that has the additional audio description added. This added information focuses on actions, characters, scene changes and on-screen text (not captions) that are important to understanding the content. </p>
               <p>Since it is not helpful to have this new information obscure key audio information in the original sound track (or be obscured by loud sound effects), the new information is added during pauses in dialogue and sound effects. This limits the amount of supplementary information that can be added to program. </p>
               <p>The soundtrack with the audio description (of visual information) can either be an alternate sound track that the user can choose, or it can be the standard sound track that everyone hears. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A travelogue of the northeast has additional audio description added during the gaps in the dialogue to let listeners who are blind know what the person is talking about at any point in time. </p>
                  </item>
                  <item diff="add">
                     <p diff="add">A video shows a woodpecker carving a nest in a tree. A button within the content allows users to turn the audio description track on or off. </p>
                  </item>
                  <item>
                     <p>A lecture has audio description added whenever the instructor says things like "and <emph>this</emph> is the one that is most important." The audio descriptions lets listeners who can not see the video know what "this" is.</p>
                  </item>
                  <item>
                     <p>A movie file has two audio tracks, one of which includes audio description. Users can choose either one when listening to the movie by selecting the appropriate track in their media player. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-smil/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia Integration Language (SMIL) 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL Templates</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://service.real.com/help/library/guides/realone/ProductionGuide/HTML/htmfiles/realtext.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Realtext</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn2.microsoft.com/en-us/library/ms971327.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">SAMI 1.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G69"/>
               <relatedtech idref="SM6"/>
               <relatedtech idref="SM7"/>
               <relatedtech idref="G173"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p diff="chg">
                           <phrase diff="add">Check that the audio track that includes audio descriptions can be turned on by using a control within the content itself or by selecting a preference in the media player.</phrase>
                           <phrase diff="del">Select audio track with descriptions if there is a choice of audio tracks</phrase>
                        </p>
                     </item>
                     <item>
                        <p>Listen to the synchronized media</p>
                     </item>
                     <item>
                        <p>Check to see if gaps in dialogue are used to convey important information regarding visual content</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #3 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G79">
            <short-name>Providing a spoken version of the text</short-name>
            <applicability>
               <p>Technologies that support links, audio formats.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-supplements"/>
            </applies-to>
            <description>
               <p>Some users who have difficulty sounding out (decoding) words in written text find it very helpful to hear the text read aloud. This service can now be provided easily using either recorded human speech or synthetic speech. For example, there are a number of products that authors can use to convert text to synthetic speech, then save the spoken version as an audio file. A link to the spoken version can then be provided within the content.  Cost depends in part on the quality of the voice used and whether the text is likely to change frequently.</p>
               <ulist>
                  <item>
                     <p>Spoken versions of short texts and static text content</p>
                     <p>This method is effective for small amounts of text and for longer documents that do not change often. 							</p>
                     <olist>
                        <item>
                           <p>Make a recording of someone reading the text aloud, or use a tool that converts individual documents or selected passages into synthetic speech.   Choose the clearest, most attractive voice if a choice is available.</p>
                        </item>
                        <item>
                           <p>Save the spoken version as an audio file. Use an audio format that is widely available and supported by media players. </p>
                        </item>
                        <item>
                           <p>Provide a link to the audio version. </p>
                        </item>
                        <item>
                           <p>Identify the audio format (for example, .MP3, .WAV, .AU, etc.). </p>
                        </item>
                        <item>
                           <p>Provide a link to a media player that supports the format.</p>
                        </item>
                     </olist>
                  </item>
                  <item>
                     <p>Spoken versions of text that changes</p>
                     <p>Server-based methods may be best when pages change often or when user choice determines text content. Some server-based tools allow users to select any text they are interested in and listen to it. Typically, the user presses a button which starts the text-to-speech conversion and reads the text aloud.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>A Web site for a government agency</head>
                  <description>
                     <p>The Web site for a municipal housing authority has a button on every page labeled "Read this page aloud." The user selects the button and the page is spoken by a synthetic voice.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check if a spoken version of the content is available. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G80">
            <short-name>Providing a submit button to initiate a change of context</short-name>
            <applicability>
               <p> Content that includes forms. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a mechanism that allows users
                        to explicitly request changes of context. Since the intended use of a submit
                        button is to generate an HTTP request that submits data entered in a form,
                        this is an appropriate control to use for causing a change of context and is
                        a practice that does not create confusion for users. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Example 1: A submit button is used for each form that causes a
                                change in context. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="H32"/>
               <relatedtech idref="H84"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find all forms in the content </p>
                     </item>
                     <item>
                        <p> For each form, check that it has a submit button </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #2 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G81">
            <short-name>Providing a synchronized video of the sign language interpreter that can
                    be displayed in a different viewport or overlaid on the image by the player</short-name>
            <applicability>
               <p> Applies to all synchronized media technologies that allow synchronization of
                        multiple video streams </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-sign"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to allow users who cannot hear or read
                        text rapidly to be able to access synchronized media material without affecting the
                        presentation of the material for all viewers. </p>
               <p> For those who communicate primarily in sign language it is sometimes less
                        preferable and sometimes not possible for them to read and understand text
                        at the rate it is presented in captions. For these latter individuals it is
                        important to provide sign language presentation of the audio information. </p>
               <p> This technique accomplishes this by providing the sign language
                        interpretation as a separate video stream that is synchronized with the
                        original video stream. Depending on the player, this secondary video stream
                        can be overlaid on top of the original video or displayed in a separate
                        window. It may also be possible to enlarge the sign language interpreter
                        separately from the original video to make it easier to read the hand, body
                        and facial movements of the signer. </p>
               <p> NOTE: Since sign language is not usually a signed version of the printed
                        language, the author has to decide which sign language to include. Usually
                        the sign language of the primary audience would be used. If intended for
                        multiple audiences, multiple languages may be used. See advisory technique
                        for multiple sign languages. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Example 1: A university provides a synchronized sign language
                                interpreter video stream that can be displayed, at the viewer's
                                option, along with any of their education programs. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p> Guidelines for the Production of Signing Books </p>
                        <ulist>
                           <item>
                              <p>
                                 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.sign-lang.uni-hamburg.de/SigningBooks/deliver/d31/deliv_31_part3-2.html#3.2.2.6"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">"Sign Language presentation"</loc> gives a
                                                broad overview of issues to consider when filming
                                                sign language interpreters. Includes discussion of
                                                signing both written and spoken originals. </p>
                           </item>
                           <item>
                              <p> Techniques for filming are discussed in <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.sign-lang.uni-hamburg.de/SigningBooks/SBRC/Grid/d71/guide12.htm"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">chapter 12, “Filming the Signer(s)"</loc>. </p>
                           </item>
                           <item>
                              <p> Useful information about how to display the sign
                                                language interpreter in relation to the original
                                                synchronized media content is provided in <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.sign-lang.uni-hamburg.de/SigningBooks/SBRC/Grid/d71/guide13.htm"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">Chapter 13, "Editing"</loc>. </p>
                              <note>
                                 <p>These techniques may need to be adapted for
                                                  Web-based presentation.</p>
                              </note>
                           </item>
                        </ulist>
                     </item>
                  </ulist>
                  <p> (none) </p>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Enable the display of the sign-language window in the player.
                                </p>
                     </item>
                     <item>
                        <p> Have someone watch the program who can hear and is familiar with
                                    the sign language being used. </p>
                     </item>
                     <item>
                        <p> Check to see if there is a sign language interpreter on screen
                                    or in a separate window. </p>
                     </item>
                     <item>
                        <p> Check to see that dialogue and important sounds are being conveyed
                                    by the interpreter and are synchronized with the audio. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 and #4 are true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G82">
            <short-name>Providing a text alternative that identifies the purpose of the non-text content</short-name>
            <applicability>
               <p> Applies to all technologies </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The purpose of this technique is to provide useful information via the text
                        alternative even if the full function of the non-text content cannot be
                        provided. </p>
               <p> Sometimes, a text alternative cannot serve the same purpose as the original
                        non-text content (for example an applet meant to develop two dimensional
                        rapid targeting skills and eye hand coordination.) In these cases this
                        technique is used. With this technique a description of the purpose of the
                        non-text content is provided. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <ulist>
                        <item>
                           <p> An eye-hand coordination development applet has the
                                        following text alternative "Applet that uses the mouse and
                                        moving targets to develop eye-hand coordination" </p>
                        </item>
                        <item>
                           <p> A camera applet that has a round disk where you push on the
                                        edges to control a remote camera and a slider in the middle
                                        for zooming has the following text alternative "Control for
                                        aiming and zooming remote video camera". </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> remove, hide, or mask the non-text content </p>
                     </item>
                     <item>
                        <p> replace it with the text alternative </p>
                     </item>
                     <item>
                        <p> check that the purpose of the non-text content is clear - even
                                    if function is lost. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G83">
            <short-name>
          Providing text descriptions to identify required fields that were not completed 
          
        </short-name>
            <applicability>
               <p>Content that includes mandatory fields in user input</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-identified"/>
               <success-criterion idref="minimize-error-suggestions"/>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to notify the user when a field that must be completed has not been completed. When users fail to provide input for any mandatory form fields, information is provided in text to enable the users to identify which fields were omitted. One approach is to use client-side validation and provide an alert dialog box identifying the mandatory fields which were omitted. Another approach, using server-side validation, is to re-display the form (including any  previously entered data), with either a text description at the location of the omitted mandatory field, or a text description that identifies the omitted mandatory fields.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A user attempts to submit a form but has neglected to provide input or select a choice in one or more mandatory fields. Using client-side validation, the omission is detected and an alert dialog appears informing the user that mandatory fields have not been completed. The labels of the fields with this problem are changed to identify the problem field, and links to the problem fields are inserted in the document after the submit button so the user can move to them after dismissing the alert.</p>
                  </item>
                  <item>
                     <p>A user attempts to submit a form but has neglected to provide input or select a choice in one or more mandatory fields. Using server-side validation, the omission is detected and the form is re-displayed with a text description at the top informing which mandatory fields were omitted. Each omitted mandatory field is also identified using a text label so that the user does not have to return to the list at the top of the form to find the omitted fields.</p>
                  </item>
                  <item>
                     <p>A user is completing a form that contains mandatory fields.  The labels of the fields indicate whether or not they are mandatory.  The user tabs to a mandatory field, and tabs out of the field without entering any data or selecting a choice.  A client-side script modifies the label of the field to indicate that leaving it blank was an error.</p>
                     <note diff="add">
                        <p>Some screen readers may not notice and announce the change to the label so screen reader users may be unaware of the error.<issue id="i2633" status="open">
                              <p>2633</p>
                           </issue>
                        </p>
                     </note>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G85"/>
               <relatedtech idref="SCR18"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Fill out a form, deliberately leaving one or more required (mandatory) fields blank, and submit it.</p>
                     </item>
                     <item>
                        <p>Check that a text description is provided identifying the mandatory field(s) that was not completed.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G84">
            <short-name>Providing a text description when the user provides information that is not in the list of allowed values</short-name>
            <applicability>
               <p>Content that collects user input where a limited set of values must be input.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-identified"/>
               <success-criterion idref="minimize-error-suggestions"/>
            </applies-to>
            <description>
               <p>When users enter input that is validated, and errors are detected, the nature of the error needs to described to the user in manner they can access. One approach is to present an alert dialog that describes fields with errors when the user attempts to submit the form. Another approach, if validation is done by the server, is to return the form (with the user's data still in the fields) and a text description at the top of the page that indicates the fact that there was a validation problem, describes the nature of the problem, and provides ways to locate the field(s) with a problem easily. The "in text" portion of the Success Criterion underscores that it is not sufficient simply to indicate that a field has an error by putting an asterisk on its label or turning the label red. A text description of the problem should be provided.</p>
               <p>When input must be one of a set of allowed values, the text description should indicate this fact. It should include the list of values if possible, or suggest the allowed value that is most similar to the entered value.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>The user inputs invalid data on a form field. Before the user submits the form, an alert dialog appears that describes the nature of the error so the user can fix it.</p>
                  </item>
                  <item>
                     <p>The user inputs invalid data on a form field and submits the form. The server returns the form, with the user's data still present, and indicates clearly in text at the top of the page that there were input errors. The text describes the nature of the error(s) and clearly indicates which field had the problem so the user can easily navigate to it to fix the problem.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Enter invalid data in a form field.</p>
                     </item>
                     <item>
                        <p>Check that information is provided in text about the problem.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G85">
            <short-name>Providing a text description when user input falls outside the required format or values </short-name>
            <applicability>
               <p>Content that accepts user data input, with restrictions on the format, value, and/or type of the input.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-identified"/>
               <success-criterion idref="minimize-error-suggestions"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide assistance in correcting input errors where the information supplied by the user is not accepted . When users enter data input that is validated, and input errors are detected, information about the nature and location of the input error is provided in text to enable the users to identify the problem. One approach is to use client-side validation and provide an alert dialog box that describes the error immediately when users enter invalid data in field. Another approach, using server-side validation, is to re-display the form (including any previously entered data), and a text description at the top of the page that indicates the fact that there was an error
            , describes the nature of the problem, and provides ways to easily locate the field(s) with a problem.</p>
               <p>However the text description is provided, it should do one of the following things to assist the user:</p>
               <ulist>
                  <item>
                     <p>Provide examples of the correct data entry for the field,</p>
                  </item>
                  <item>
                     <p>Describe the correct data entry for the field,</p>
                  </item>
                  <item>
                     <p>Show values of the correct data entry that are similar to the user's data entry, with instructions to the user as to how to enter one of these correct values should the user choose to do so.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>The user inputs invalid data on a form field. When the user exits the field, an alert dialog appears that describes the nature of the error so the user can fix it.</p>
                  </item>
                  <item>
                     <p>The user inputs invalid data on a form field and submits the form. The server returns the form, with the user's data still present, and indicates clearly in text at the top of the page that there were input errors. The text describes the nature of the error(s) and clearly indicates which field had the problem so the user can easily navigate to it to fix the problem.</p>
                  </item>
                  <item>
                     <p>The user inputs invalid data on a form field and attempts to submit the form. Client side scripting detects the error, cancels the submit, and modifies the document to provide a text description after the submit button describing the error, with links to the field(s) with the error. The script also modifies the labels of the fields with the problems to highlight them.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="SCR18"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Fill out a form, deliberately enter user input that falls outside the required format or values</p>
                     </item>
                     <item>
                        <p>Check that a text description is provided that identifies the field in error and provides some information about the nature of the invalid entry and how to fix it.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G86">
            <short-name>Providing a text summary that requires reading ability less advanced than the upper secondary education level</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-supplements"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a summary of complex content. The summary is provided in addition to the original content.</p>
               <p>Users with disabilities that make it difficult to decode words and sentences are likely to have trouble reading and understanding complex text. This technique provides a short statement of the most important ideas and information in the content. The summary is easier to read because it uses shorter sentences and more common words than the original. </p>
               <p>The following steps can be used to prepare the summary:</p>
               <olist>
                  <item>
                     <p>Identify the most important ideas and information in the content.</p>
                  </item>
                  <item>
                     <p>Write one or more paragraphs that use shorter sentences and more common words to express the same ideas and information. (The number of paragraphs depends on the length of the original.)</p>
                  </item>
                  <item>
                     <p>Measure the readability of the summary.</p>
                  </item>
                  <item>
                     <p>Edit the summary. Consider dividing longer sentences into two or replacing long or unfamiliar words with shorter, more common terms.</p>
                  </item>
                  <item>
                     <p>Repeat steps 3 and 4 as needed.</p>
                  </item>
               </olist>
            </description>
            <examples>
               <eg-group>
                  <head>A technical article with a readable summary</head>
                  <description>
                     <p>An article describes a technical innovation. The first item after the title of the article is a section with the heading, “Summary." The average length of the sentences in the summary is 16 words (compared to 23 words for sentences in the article), and it uses short, common words instead of the technical jargon in the article.  A readability formula is applied; the summary requires reading ability less advanced than the lower secondary education level. </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each summary provided as supplemental content: </p>
                  <olist>
                     <item>
                        <p>Measure the readability of the summary. </p>
                     </item>
                     <item>
                        <p>Check that the summary requires reading ability less advanced than the lower secondary education level.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p># 2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G87">
            <short-name>Providing closed captions</short-name>
            <applicability>
               <p> Any audiovideo technology where there are user agents that support closed
                        captions. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-captions"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a way for people who have
                        hearing impairments or otherwise have trouble hearing the dialogue in
                        synchronized media material to be able to view the material and see the dialogue and
                        sounds - without requiring people who are not deaf to watch the captions.
                        With this technique all of the dialogue and important sounds are embedded as
                        text in a fashion that causes the text not to be visible unless the user
                        requests it. As a result they are visible only when needed. This requires
                        special support for captioning in the user agent. </p>
               <p> NOTE: Captions should not be confused with subtitles. Subtitles provide text
                        of only the dialogue and do not include important sounds. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Example 1: In order to ensure that users who are deaf can use their
                                interactive educational materials, the college provides captions and
                                instructions for turning on captions for all of their audio
                                interactive educational programs. </p>
                     <p>Example 2: The online movies at a media outlet all include
                                captions and are provided in a format that allows embedding of
                                closed captions. </p>
                     <p> Example 3: Special caption files including synchronization
                                information are provided for an existing movie. Players are
                                available that can play the captions in a separate window on screen,
                                synchronized with the movie window. </p>
                     <p> Example 4: A video of a local news event has captions provided that
                                can be played over the video or in a separate window depending on
                                the player used. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <p> Guides to Captioning</p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.cfv.org/caai/nadh7.pdf"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Captioning Key:
                                        Guidelines and Preferred Techniques</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://joeclark.org/access/captioning/bpoc/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Best
                                        Practices in Online Captioning</loc>
                        </p>
                     </item>
                  </ulist>
                  <p>SMIL </p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-smil/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized
                                        Multimedia Integration Language (SMIL) 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia
                                        Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL
                                    Templates</loc>
                        </p>
                     </item>
                  </ulist>
                  <p> Other Captioning </p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://ncam.wgbh.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">National Center for Accessible
                                        Media</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/captions/quicktime/index.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Quicktime Captioning Tutorial</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/captions/real/index.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">RealPlayer Captioning Tutorial</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/captions/windows/index.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Windows Media Player Captioning Tutorial</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G93"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Turn on the closed caption feature of the media player </p>
                     </item>
                     <item>
                        <p> View the synchronized media content </p>
                     </item>
                     <item>
                        <p> Check that captions (of all dialogue and important sounds) are
                                        visible </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G88">
            <short-name>Providing descriptive titles for Web pages</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-title"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to give each Web page a descriptive title. Descriptive titles help users find content, orient themselves within it, and navigate through it. A descriptive title allows a user to easily identify what Web page they are using and to tell when the Web page has changed. The title can be used to identify the Web page without requiring users to read or interpret page content. Users can more quickly identify the content they need when accurate, descriptive titles appear in site maps or lists of search results. When descriptive titles are used within link text, they help users navigate more precisely to the content they are interested in. </p>
               <p>The title of each Web page  should:
						</p>
               <ulist>
                  <item>
                     <p>Identify the subject of the Web page</p>
                  </item>
                  <item>
                     <p>Make sense when read out of context, for example by a screen reader or in a site map or list of search results</p>
                  </item>
                  <item>
                     <p>Be short</p>
                  </item>
               </ulist>
               <p>It may also be helpful for the title to
						</p>
               <ulist>
                  <item>
                     <p>Identify the site or other resource to which the Web page belongs</p>
                  </item>
                  <item>
                     <p>
                Be unique within the site or other resource to which the Web page belongs

              </p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>A title that lists the most important identifying information first</head>
                  <description>
                     <p>A Web page is published by a group within a larger organization. The title of the Web page first identifies the topic of the page, then shows the group name followed by the name of the parent organization.</p>
                  </description>
                  <code role="html401">
&lt;title&gt;Working with us: The Small Group: The Big Organization&lt;/title&gt;
</code>
               </eg-group>
               <eg-group>
                  <head>A synchronized media presentation with a descriptive title</head>
                  <description>
                     <p>A synchronized media presentation about the 2004 South Asian tsunami is titled “The Tsunami of 2004."</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A Web page with a descriptive title in three parts</head>
                  <description>
                     <p>A Web page provides guidelines and suggestions for creating closed captions. The Web page is part of a “sub-site" within a larger site. The title is separated into three parts by dashes. The first part of the title identifies the organization. The second part identifies the sub-site to which the Web page belongs. The third part identifies the Web page itself. (For a working example, see <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://main.wgbh.org/wgbh/pages/mag/services/captioning/faq/sugg-styles-conv-faq.html"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">WGBH – Media Access Group – Captioning FAQ</loc>.)</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A newspaper Web page</head>
                  <description>
                     <p>A Web site that only permits viewing of the current edition titles its Web page "National News, Front Page". A Web site that permits editions from different dates to be viewed titles its Web page, "National News, Front Page, Oct 17, 2005".

              </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H25"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the Web page has a title</p>
                     </item>
                     <item>
                        <p>Check that the title is relevant to the content of the Web page.
                </p>
                     </item>
                     <item>
                        <p>Check that the Web page can be identified using the title.
                </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G89">
            <short-name>Providing expected data format and example</short-name>
            <applicability>
               <p>Pages that collect information from users, and restrict the format the user can use.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-cues"/>
               <success-criterion idref="minimize-error-context-help"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to help the user avoid input errors by informing them about restrictions on the format of data that they must enter. This can be done by describing characteristics of the format or providing a sample of the format the data should have.</p>
               <note>
                  <p>For data formats with common variations, such as dates and times, it may be useful to provide a preference option so users can use the format that is most comfortable to them.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following HTML form control for a date indicates in the label that the date must be in day-month-year format, not month-day-year as many users in the United States may assume.</p>
                  </description>
                  <code>
&lt;label for="date"&gt;Date (dd-mm-yyyy)&lt;/label&gt;
&lt;input type="text" name="date" id="date" /&gt;
</code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify form controls that will only accept user input data in a given format.</p>
                     </item>
                     <item>
                        <p>Determine if each of the form controls identified in 1 provides information about the expected format.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G90">
            <short-name>Providing keyboard-triggered event handlers</short-name>
            <applicability>
               <p>Applies to all technologies where content includes functionality.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="keyboard-operation-all-funcs"/>
            </applies-to>
            <description>
               <p>
					The objective of this technique is to permit individuals who rely on a keyboard or keyboard interface to access the functionality of the content. To do this, make sure that all event handlers triggered by non-keyboard UI events are also associated with a keyboard-based event, or provide redundant keyboard-based mechanisms to accomplish the functionality provided by other device-specific functions.
					</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>
                        <emph role="bold">Example 1: A drag and drop feature</emph> A photo application includes a "drag" and "drop" feature to allow users to re-order photographs in an on-line album for presentation as a slide show. It also includes a feature that allows users to select a photo and 'cut' and 'paste' the items into the list at the appropriate point using only the keyboard.			</p>
                  </item>
                  <item>
                     <p>
                        <emph role="bold">
											Example 2: A reorder feature</emph>
										
										A Web application that allows users to create surveys by dragging questions into position includes a list of the questions followed by a text field that allows users to re-order questions as needed by entering the desired question number.
									</p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="SCR20"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
									
									check that all functionality can be accessed using only the keyboard
								</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
								
								#1 is true
							</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G91">
            <short-name>Providing link text that describes the purpose of a link</short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe the purpose of a link in the text of the link. The description lets a user distinguish this link from links in the Web page that lead to other destinations and helps the user determine whether to follow the link. The URI of the destination is generally not sufficiently descriptive.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Describing the purpose of a link in HMTL in the text content of the <code>a</code> element</head>
                  <code role="html401">
&lt;a href="routes.html"&gt;
  Current routes at Boulders Climbing Gym
&lt;/a&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H30"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:
							</p>
                  <olist>
                     <item>
                        <p>Check that text of the link describes the purpose of the link</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>The above check is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G92">
            <short-name>Providing long description for non-text content that serves the same
                    purpose and presents the same information</short-name>
            <applicability>
               <p> Applies to all technologies </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a long text alternative that
                        serves the same purpose and presents the same information as the original
                        non-text content when a short text alternative is not sufficient. </p>
               <p> Combined with the short text alternative, the long description should be
                        able to substitute for the non-text content. The short alternative
                        identifies the non-text content; the long alternative provides the
                        information. If the non-text content were removed from the page and
                        substituted with the short and long descriptions, the page would still
                        provide the same function and information. </p>
               <p> In deciding what should be in the text alternatives, the following questions
                        are helpful. </p>
               <ulist>
                  <item>
                     <p> Why is this non-text content here? </p>
                  </item>
                  <item>
                     <p> What information is it presenting? </p>
                  </item>
                  <item>
                     <p> What purpose does it fulfill? </p>
                  </item>
                  <item>
                     <p> If I could not use the non-text content, what words would I use to
                                convey the same function and/or information? </p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> A chart showing sales for October has a short text
                                alternative of "October sales chart". The long description would
                                read "Bar Chart showing sales for October. There are 6 salespersons.
                                Maria is highest with 349 units. Frances is next with 301. Then
                                comes Juan with 256, Sue with 250, Li with 200 and Max with 195. The
                                primary use of the chart is to show leaders, so the description is
                                in sales order." </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A line graph that shows average winter temperatures from
                                the past 10 years includes a short text alternative of "Average
                                winter temperatures 1996-2006." The long description includes the
                                data table that was used to generate the line graph. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="G94"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Remove, hide, or mask the non-text content </p>
                     </item>
                     <item>
                        <p> Display the long description </p>
                     </item>
                     <item>
                        <p> Check that the long description conveys the same information
                                    conveyed by the non-text content. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G93">
            <short-name>
          Providing open (always visible) captions 
          
        </short-name>
            <applicability>
               <p>
                    Any synchronized media technology, even ones that do not support closed captions.
                    </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-captions"/>
            </applies-to>
            <description>
               <p>
                    The objective of this technique is to provide a way for people who are deaf or otherwise have trouble hearing the dialogue in audio visual material to be able to view the material.  With this technique all of the dialogue and important sounds are embedded as text in the video track.  As a result they are always visible and no special support for captioning is required by the user agent.
                    </p>
               <p>
                        NOTE: Captions should not be confused with subtitles. Subtitles provide text of only the dialogue and do not include important sounds.
                    </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p> In order to ensure that everyone can view their online movies, even if users do not know how to turn on captions in their media player, a library association puts the captions directly into the video.</p>
                  </item>
                  <item>
                     <p>A news organization provides open captions on all of its material.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <p>
                        (none listed)
                        </p>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G87"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
                                Watch the synchronized media with closed captioning turned off.
                            </p>
                     </item>
                     <item>
                        <p>
                                Check that captions (of all dialogue and important sounds) are visible.
                            </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
                                #2 is true
                            </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G94">
            <short-name>Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content</short-name>
            <applicability>
               <p>
Applies to all technologies.
</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>
The objective of this technique is to create a text alternative that serves the same purpose and presents the same information as the original non-text content.  As a result, it is possible to remove the non-text content and replace it with the text alternative and no functionality or information would be lost.   This text alternative should not necessarily describe the non-text content.  It should serve the same purpose and convey the same information.  This may sometimes result in a text alternative that looks like a description of the non-text content.  But this would only be true if that was the best way to serve the same purpose.</p>
               <p>
If possible, the short text alternative should completely convey the purpose and information.  If it is not possible to do this in a short phrase or sentence, then the short text alternative should provide a brief overview of the information.  A long text alternative would be used in addition to convey the full information.
</p>
               <p>
The text alternative should be able to substitute for the non-text content. If the non-text content were removed from the page and substituted with the text, the page would still provide the same function and information. The text alternative would be brief but as informative as possible.</p>
               <p>
In deciding what text to include in the alternative, it is a often a good idea to consider the following questions:
</p>
               <ulist>
                  <item>
                     <p>
Why is this non-text content here?
    </p>
                  </item>
                  <item>
                     <p>
What information is it presenting?
    </p>
                  </item>
                  <item>
                     <p>
What purpose does it fulfill?
    </p>
                  </item>
                  <item>
                     <p>
If I could not use the non-text content, what words would I use to convey the same function and/or information?
    </p>
                  </item>
               </ulist>
               <p>When non-text content contains words that are important to understanding the content, the alt text should include those words. If the text in the image is more than can fit in a short text alternative then it should be described in the short text alternative and a long text alternative should be provided as well with the complete text. 
          </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>
A search button uses an image of a magnifying glass.  The text alternative is "search" and not "magnifying glass". 
    </p>
                  </item>
                  <item>
                     <p>
A picture shows how a knot is tied including arrows showing how the ropes go to make the knot.  The text alternative describes how to tie the knot, not what the picture looks like.
    </p>
                  </item>
                  <item>
                     <p>
A picture shows what a toy looks like from the front.  The text alternative describes a front view of the toy. 
    </p>
                  </item>
                  <item>
                     <p>
An animation shows how to change a tire. A short text alternative describes what the animation is about. A long text alternative describes how to change a tire.
    </p>
                  </item>
                  <item>
                     <p>
A logo of the TechTron company appears next to each product in a list that is made by that and has a short text alternative that reads, "TechTron."
    </p>
                  </item>
                  <item>
                     <p>
A chart showing sales for October has an short text alternative of  "October sales chart". It also has a long description that provides all of the information on the chart.
    </p>
                  </item>
                  <item>
                     <p>
                A heading contains a picture of the words, "The History of War" in stylized text. The alt text for the picture is "The History of War". 
                
              </p>
                  </item>
                  <item>
                     <p>An image of a series of books on a shelf contains interactive areas
                that provide the navigation means to a Web page about the particular book. The
                text alternative "The books available to buy in this section. Select a book for
                more details about that book." describes the picture and the interactive
                nature.</p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G95"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Remove, hide, or mask the non-text content
    </p>
                     </item>
                     <item>
                        <p>
Replace it with the text alternative
    </p>
                     </item>
                     <item>
                        <p>
Check that nothing is lost (the purpose of the non-text content is met by the text alternative)
    </p>
                     </item>
                     <item>
                        <p>
                  If the non-text content contains words that are important to understanding the content, the words are included in the text alternative 
                  
                </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
Check #3 is true. If the non-text content contains words that are important to understanding the content, check #4 is also true 
                </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G95">
            <short-name>Providing short text alternatives that provide a brief description of
                    the non-text content</short-name>
            <applicability>
               <p> Applies to all technologies </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> This technique is used when the text needed to serve the same purpose and
                        present the same information as the original non-text content is too lengthy
                        or when this goal cannot be achieved with text alone. In that case this
                        technique is used to provide a short text alternative that briefly describes
                        the non-text content. (A long text alternative is then provided using
                        another technique such that the combination serves the same purpose and
                        presents the same information as the original non-text content.) </p>
               <p>In deciding what text to include in the alternative, it is often a good idea
                        to consider the following questions: </p>
               <ulist>
                  <item>
                     <p> Why is this non-text content here? </p>
                  </item>
                  <item>
                     <p> What information is it presenting? </p>
                  </item>
                  <item>
                     <p> What purpose does it fulfill? </p>
                  </item>
                  <item>
                     <p> If I could not use the non-text content, what words would I use to
                                convey the same function and/or information? </p>
                  </item>
               </ulist>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p> A chart showing sales for October has an short text
                                        alternative of "October sales chart". It also has a long
                                        description that provides all of the information on the
                                        chart. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="G74"/>
               <relatedtech idref="G73"/>
               <relatedtech idref="G92"/>
               <relatedtech idref="G94"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check for the presence of a short text alternative that provides
                                    a brief description of the non-text content. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Check #1 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G96">
            <short-name>
          Providing textual identification of items that otherwise rely only on sensory information to be understood
        </short-name>
            <applicability>
               <p>All technologies that present description of a content rendering to the user.
          </p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-understanding"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that items within a Web page are referenced in the content not only by shape, size, sound or location, but also in ways that do not depend on that sensory perception. For example, a reference may also describe the function of the item or its label.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A round button is provided on a form to submit the form and move onto the next step in a progression.  The button is labeled with the text "go."  The instructions state, "to submit the form press the round button labeled <emph>go</emph>".  This includes both shape and textual information to locate the button.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Instructions for a Web page providing on-line training state, "Use the list of links to the right with the heading, 'Class Listing' to navigate to the desired on-line course."  This description provides location as well as textual clues to help find the correct list of links.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The following layout places a button in the lower right corner and indicates it by position. An indication of the text label clarifies which button to use for users who access a linearized version in which the position is not meaningful.</p>
                  </description>
                  <code>
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td colspan="2"&gt;Push the lower right [Preview] button.&lt;/td&gt;
      &lt;td&gt;
        &lt;span style="background: ButtonFace; color: ButtonText; border: 
        medium outset ButtonShadow; 
        width: 5em; display: block; font-weight: bold; text-align: center;"&gt;
        Print&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        &lt;span style="background: ButtonFace; color: ButtonText; border: 
        medium outset ButtonShadow; 
        width: 5em; display: block; font-weight: bold; text-align: center;"&gt;
        Cancel&lt;/span&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;span style="background: ButtonFace; color: ButtonText; border: 
        medium outset ButtonShadow; 
        width: 5em; display: block; font-weight: bold; text-align: center;"&gt;
        OK&lt;/span&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;span style="background: ButtonFace; color: ButtonText; border: 
        medium outset ButtonShadow; 
        width: 5em; display: block; font-weight: bold; text-align: center;"&gt;
        Preview&lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;<!--BBC: Add a working example here? -->
            </code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>Find all references in the Web page that mention the shape, size, or position of an object.  For each such item:
							</p>
                  <olist>
                     <item>
                        <p>Check that the reference contains additional information that allows the item to be located and identified without any knowledge of its shape, size, or relative position. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G97">
            <short-name>Providing the abbreviation immediately following the expanded form</short-name>
            <applicability>
               <p>Any technology containing text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-located"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make the expanded form of an abbreviation available by associating the expanded form with its abbreviation the first time it occurs within a Web page. The expansion of any abbreviation can be found by searching the Web page for the first use.</p>
               <p>When shortening a word, phrase or name by means of an abbreviation, initialism, acronym, or other shortened form, provide the full form before providing the abbreviated form. This makes the text easier to read and is advised by many style guides.</p>
               <p>Note that some abbreviations require explanations rather than expansions. This technique is not appropriate for such abbreviations.</p>
               <p>This technique is applied to the first occurrence of an abbreviation in a Web page. When combining multiple resources into a single Web page, the abbreviation would be expanded at the beginning of each resource. In this case, however, using a different technique for providing the expanded form may be more appropriate.
</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>"The United Nations High Commissioner for Human Rights (UNHCR) was established in 1950 to provide protection and assistance to refugees." 
</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.chicagomanualofstyle.org/CMS_FAQ/Abbreviations/Abbreviations_questions01.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Chicago Manual of Style - Q&amp;A - Abbreviations</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each abbreviation in the content,
							</p>
                  <olist>
                     <item>
                        <p>Search for the first use of that abbreviation in the authored  component.</p>
                     </item>
                     <item>
                        <p>Check that the first use is immediately preceded by the expanded form of the abbreviation. </p>
                     </item>
                     <item>
                        <p>Check that the expanded form is the correct expanded form for the use of the abbreviation. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G98">
            <short-name>Providing the ability for the user to review and correct answers before submitting</short-name>
            <applicability>
               <p>Sites that collect data from users that is specific to the moment it is submitted, such as test data, and cannot be changed once it is submitted.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-reversible"/>
               <success-criterion idref="minimize-error-reversible-all"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide users with a way to ensure their input is correct before completing an irreversible transaction. Testing, financial, and legal applications permit transactions to occur which cannot be "undone". It is therefore important that there be no errors in the data submission, as the user will not have the opportunity to correct the error once the transaction has been committed.</p>
               <p>On a simple, 1-page form this is easy because the user can review the form before submitting. On a form that spans multiple Web pages, however, data is collected from the user in multiple steps before the transaction is committed. The user may not recall all of the data that was entered in previous steps before the step which commits the transaction.</p>
               <p>One approach is to cache the results of each individual step and allow the user to navigate back and forth at will to review all data entered. Another approach is to provide a summary of all data collected in all steps for the user to review prior to the final commitment of the transaction.</p>
               <p>Before the final step that commits the transaction to occur, instructions are provided to prompt the user to review the data entered and confirm. Once the user confirms, the transaction is completed.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An online banking application provides multiple steps to complete a transfer of funds between accounts as follows:</p>
                     <olist>
                        <item>
                           <p>Select "transfer from" account</p>
                        </item>
                        <item>
                           <p>Select "transfer to" account</p>
                        </item>
                        <item>
                           <p>Enter transfer amount</p>
                        </item>
                     </olist>
                  </item>
                  <item>
                     <p>A summary of the transaction is provided showing the from and to accounts and the transfer amount. The user can select a button to either complete the transaction or cancel it.</p>
                  </item>
                  <item>
                     <p>A testing application provides multiple pages of questions. At any time, the user can choose to return to previously completed sections to review and change answers. A final page is displayed providing buttons to either submit the test answers or review answers.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <p>In a testing application or one that causes financial or legal transactions to occur and that also collects data from users in multiple steps:</p>
                  <olist>
                     <item>
                        <p>Determine if the user is allowed to return to previous steps to review and change data.</p>
                     </item>
                     <item>
                        <p>Determine if a summary of all data input by the user is provided before the transaction is committed and a method is provided to correct errors if necessary.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Either #1 or #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G99">
            <short-name>Providing the ability to recover deleted information</short-name>
            <applicability>
               <p>Content where user actions cause content to be deleted.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-reversible"/>
               <success-criterion idref="minimize-error-reversible-all"/>
            </applies-to>
            <description>
               <p>When a Web application provides the capability of deleting information, the server can provide a means to recover information that was deleted in error by a user. One approach is to delay deleting the data by merely marking it for deletion or moving it to a holding area (such as a trash can) and waiting some period of time before actually deleting it. During this time period, the user can request that the data be restored or can retrieve it from the holding area. Another approach is to record all delete transactions in such a way that data can be restored if requested by the user, such as in the edit history stored by wikis and source control applications.The retrievable information that is stored should be that which would be needed to correct the transaction. 
            
          </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A Web application allows users to set up folders and store data within them. Each folder and data item is accompanied by a checkbox to mark it for action, and two buttons, one to move and one to delete. If the user selects the delete button by mistake, large amounts of data could be lost. The application presents the data as deleted to the user right away, but schedules it for actual deletion in one week. During the week, the user may go into a "deleted items" folder and request any folder or data item awaiting actual deletion to be restored.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify functionality that allows deleting content</p>
                     </item>
                     <item>
                        <p>Delete content and attempt to recover it.</p>
                     </item>
                     <item>
                        <p>Check if deleted information can be recovered.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G100">
            <short-name>Providing the accepted name or a descriptive name of the non-text
                    content</short-name>
            <applicability>
               <p> All technologies </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to allow users to identify the non-text
                        content even if the non-text content is intended to provide a specific
                        sensory experience. For example, a deaf person may want to know what an
                        audio instrumental file is - even if they cannot hear it. Similarly, a blind
                        person may want to know what the subject of a visual image is - even if they
                        cannot see it. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <ulist>
                        <item>
                           <p>
                              <emph role="bold">Example 1:</emph> A painting of the Mona
                                        Lisa has an alternate text of "Mona Lisa, by Leonardo da
                                        Vinci" </p>
                        </item>
                        <item>
                           <p>
                              <emph role="bold">Example 2:</emph> A sound file has an
                                        alternate text of "5 Grade schoolers playing a Theramin".
                                    </p>
                        </item>
                        <item>
                           <p>
                              <emph role="bold">Example 3:</emph> A famous modern art
                                        piece is labeled "Red, Blue and Yellow, by Piet Mondrian"
                                    </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check that alternate text provides a descriptive name </p>
                     </item>
                     <item>
                        <p> Check that alternate text provides a name that has be previously
                                    given to the non-text content by the author or another. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #1 or #2 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G101">
            <short-name>Providing the definition of a word or phrase used in an unusual or restricted way</short-name>
            <applicability>
               <p>Any technology containing text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a definition for any word used in an unusual or restricted way. </p>
               <p>A word is used in an unusual or restricted way when:
						</p>
               <ulist>
                  <item>
                     <p>dictionaries give several definitions of the word but one specific definition must be used in order to understand the content;</p>
                  </item>
                  <item>
                     <p>a specific definition must be used in order to understand the content and dictionaries list that definition as rare, archaic, obsolete, etc.;</p>
                  </item>
                  <item>
                     <p>the author creates a new definition that must be used in order to understand the content.</p>
                  </item>
               </ulist>
               <p>This technique can also be used to provide definitions for jargon, that is, the specialized vocabulary used in a particular profession or technical field and understood by people in that field but not by people outside the field.  
</p>
               <p>The technique can also be used to define idiomatic expressions.  For example, speakers of a language who live in a particular region may use idiomatic expressions that are accepted by everyone in the region but not by people from other regions where the same language is spoken.
</p>
            </description>
            <examples>
               <eg-group>
                  <head>A term used in a restricted way</head>
                  <description>
                     <p>The word "technology" is widely used to cover everything from the stone tools used by early humans to contemporary digital devices such as cell phones. But in WCAG 2.0, the word technology is used in a more restricted way: it means a mechanism for encoding instructions to be rendered, played or executed by user agents,  including  markup languages, data formats, and programming languages used in producing and delivering Web content.
              </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A word used according to an obsolete definition</head>
                  <description>
                     <p>The word "ether" is defined as a substance that filled interplanetary space:  "He believed that sound traveled through the ether."</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Jargon</head>
                  <description>
                     <p>The word "driver" is defined as software that contains specific instructions for a printer: "It may be necessary to update the driver for your printer."</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>An idiomatic expression</head>
                  <description>
                     <p>Some people say "spill the beans" when they mean "reveal a secret", e.g., "In the police station, Joe spilled the beans about the plot to kidnap the prime minister."</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>An idiomatic expression in Japanese</head>
                  <description>
                     <p>This example uses parentheses to provide the definition of an idiomatic expression in Japanese. The phrase in Japanese says that "he throws a spoon." It means that there was nothing he can do and finally he gives up.
                
              </p>
                     <p>
                        <phrase xml:lang="jp">さじを投げる（どうすることもできなくなり、あきらめること）。</phrase>
                     </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>
              An unfamiliar adopted foreign word in English
            </head>
                  <description>
                     <p>Users may not understand the meaning of an unfamiliar word adopted from another language: "We need to leave town pronto (quickly). 
              </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>
              Unfamiliar adopted words in Japanese
            </head>
                  <description>
                     <p>In Japanese, Kata-kana is used for adopted foreign words. If words are unfamiliar to users, provide the meaning or translation so that users can understand them. </p>
                     <p>
                        <phrase xml:lang="jp">アクセシビリティ（高齢者・障害者を含む全ての人が利用できること）は、Webサイトに不可欠である。 </phrase>
                     </p>
                     <p>English translation: "Accessibility" (it can be accessed by all users including elderly people and people with disabilities) is an essential aspect of the Websites. </p>
                     <p>
                        <phrase xml:lang="jp">レイアウトテーブルとCSSの併用をハイブリッド（複合型）という。 </phrase>
                     </p>
                     <p>English translation: Using both layout table and CSS is called "hybrid" (combination of multiple forms). 
              </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each word or phrase used in an unusual or restricted way:
							</p>
                  <olist>
                     <item>
                        <p>Check that a definition is provided for the word or phrase</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G102">
            <short-name>Providing the expansion or explanation of an abbreviation</short-name>
            <applicability>
               <p>Any technology containing text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-located"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide information necessary to understand an abbreviation. </p>
               <p>An abbreviation is the shortened form of a word, phrase, or name. For most abbreviations, providing the full word, phrase, or name is sufficient.</p>
               <p>Some abbreviations represent words or phrases that are borrowed from a foreign language. For instance, many commonly used abbreviations in English are derived from Latin phrases, such as the short list of examples given below. The expanded form is only provided here as background information. For this category of abbreviations, providing an explanation is more helpful than the original expanded form, and the explanation of the abbreviation is provided instead of the expansion.
					</p>
               <table border="1" cellspacing="0">
                  <thead>
                     <tr>
                        <th rowspan="1" colspan="1">Abbreviation</th>
                        <th rowspan="1" colspan="1">Latin expansion</th>
                        <th rowspan="1" colspan="1">Explanation</th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td rowspan="1" colspan="1">a.m.</td>
                        <td rowspan="1" colspan="1">ante meridiem</td>
                        <td rowspan="1" colspan="1">before noon; in the morning</td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">p.m.</td>
                        <td rowspan="1" colspan="1">post meridiem</td>
                        <td rowspan="1" colspan="1">after noon; in the afternoon</td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">e.g.</td>
                        <td rowspan="1" colspan="1">exempli gratia</td>
                        <td rowspan="1" colspan="1">for example</td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">cf</td>
                        <td rowspan="1" colspan="1">confer/conferatur</td>
                        <td rowspan="1" colspan="1">compare</td>
                     </tr>
                  </tbody>
               </table>
               <p>If abbreviations do not need an expansion (for example, because the original expansion has been rejected by the organization that it refers to or if the abbreviation has become part of the language), provide an explanation, if appropriate, or treat the abbreviation as a word that does not require explanation.
</p>
            </description>
            <examples>
               <eg-group>
                  <head>ADA</head>
                  <description>
                     <p>Some abbreviations have more than one meaning, and the meaning depends on the context. For example, ADA means "American Dental Association" in one context and "Americans with Disabilities Act" in another. Only the expansion relevant to the context needs to be provided. 
</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>English abbreviations for phrases borrowed from Latin</head>
                  <description>
                     <p>In the following sentence, the explanation "for example" would be provided for "e.g.": Students participating in team sports, e.g. basketball or football, must set their schedules around team practice time.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>ABS</head>
                  <description>
                     <p>Some languages (including English and Dutch) borrowed the acronym ABS (Antiblockiersystem: anti-lock brakes) from German. An explanation (anti-lock brakes) is provided, rather than the expansion</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>acronyms with no expansion</head>
                  <description>
                     <p>Examples of acronyms which no longer have expansions include
</p>
                     <ulist>
                        <item>
                           <p>SIL, which used to mean Summer Institute of Linguistics, is now a name in its own right. See <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                   href="http://www.sil.org/sil/history.htm"
                                   xlink:type="simple"
                                   xlink:show="replace"
                                   xlink:actuate="onRequest">SIL history</loc>.
    </p>
                        </item>
                        <item>
                           <p>IMS, which used to mean Instructional Management Systems, is now a name in its own right.
    </p>
                        </item>
                     </ulist>
                     <p>
For this category of examples, a short explanation of what the organization is or does is sufficient.
</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>
              Phrases that were once abbreviations, but have become part of the language
              
            </head>
                  <description>
                     <p>The Dutch fragment "'s nachts" meaning "at night" was originally an abbreviation for "des nachts". In the current Dutch language, the word "des" is rarely used anymore and perceived as archaic. Providing an expansion could be confusing. For "'s nachts" an expansion is not provided.</p>
                     <p>The English phrase "o'clock" was originally an abbreviation for "of the clock". Since then, "o'clock" has become part of the English language and an expansion does not need to be provided.
</p>
                  </description>
               </eg-group>
            </examples>
            <resources><!-- BBC: Broken link (forbidden) - so commenting out itemsee-also>
            <ulist>
              <>
                <p>
                  <loc href="http://www.liv.ac.uk/education/hd/latin.html">Latin abbreviations</loc> used in English, by David Hamilton. </p>
              </item>
            </ulist>
          </see-also--></resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each abbreviation in the content,
							</p>
                  <olist>
                     <item>
                        <p>If the abbreviation has no expanded form, an explanation is provided.</p>
                     </item>
                     <item>
                        <p>If the expanded form of the abbreviation is in a different language than the content, an explanation is provided.</p>
                     </item>
                     <item>
                        <p>Otherwise, the expanded form is provided.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All the checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G103">
            <short-name>Providing visual illustrations, pictures, and symbols to help explain ideas, events, and processes</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-supplements"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide visual illustrations that help users with reading disabilities understand difficult text that describes concepts or processes. The illustrations are provided in addition to the text.</p>
               <p>Users with disabilities that make it difficult to decode words and sentences are likely to have trouble reading and understanding complex text. Charts, diagrams,
animations, photographs, graphic organizers, or other visual materials often help these users. For example:
						</p>
               <ulist>
                  <item>
                     <p>Charts and graphs help users understand complex data.</p>
                  </item>
                  <item>
                     <p>Diagrams, flowcharts, videos, and animations help users understand processes.</p>
                  </item>
                  <item>
                     <p>Concept maps and other graphic organizers help users understand how ideas are related to each other.</p>
                  </item>
                  <item>
                     <p>Photographs, drawings, and videos can help users understand natural or historical events or objects.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>An annual report for a company</head>
                  <description>
                     <p>An annual report discusses multiple factors that influenced the company's performance in the past year. The report also includes charts and graphs that illustrate how these factors interact. Each chart or graph has a text alternative as required by <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="text-equiv-all"
                             linktype="guideline"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Success Criterion 1.1.1</loc>. Each one also has a number in its caption (e.g., “Figure 7"). These numbers are used in the text to reference the charts or graphs. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Screen shots in technical documentation</head>
                  <description>
                     <p>Online documentation for a product includes step by step instructions. Each step is illustrated by a screen shot that shows the visual appearance of the screen. Each screen shot has text alternatives as required by Success Criterion  1.1.1. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Illustrations of a complex natural event</head>
                  <description>
                     <p>A Web site discusses the tsunami of 2004. The site describes how the tsunami affected different places around the Indian Ocean. Photographs of the devastation in each area are included. Each photograph has a text alternative as required by Success Criterion 1.1.1. The site also explains what happens underwater during a tsunami. The explanation is accompanied by an animation that shows how a tsunami occurs and spreads over the ocean. The animation has a text alternative as required by Success Criterion 1.1.1.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>Hall, T., and Strangman, N. CAST: Graphic organizers. Retrieved 5 April 2005 from <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="//www.cast.org/publications/ncac/ncac_go.html#startcontent"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAC Publications</loc>. This article illustrates several different kinds of graphic organizers, explains how each type may be useful, and summarizes research findings that graphic organizers support learning, especially among students with learning disabilities.</p>
                     </item>
                     <item>
                        <p>Tufte, Edward. Envisioning information. Cheshire, Conn.: Graphics Press. 1990.</p>
                     </item>
                     <item>
                        <p>Tufte, Edward. The visual display of quantitative information. Cheshire, Conn.: Graphics Press. 1983.</p>
                     </item>
                     <item>
                        <p>Tufte, Edward. Visual explanations : images and quantities, evidence and narrative. Cheshire, Conn.: 1997.</p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify text that discusses ideas or processes that must be understood in order to use the content.</p>
                     </item>
                     <item>
                        <p>Check if visual illustrations are available in the content or through links within the content.</p>
                     </item>
                     <item>
                        <p>Check that visual illustrations show the concepts or processes discussed in the text.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G105">
            <short-name>Saving data so that it can be used after a user re-authenticates</short-name>
            <applicability>
               <p>Web pages that require user authentication and limit the time available for submitting data.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-server-timeout"/>
            </applies-to>
            <description>
               <p>Web servers that require user authentication often terminate the session after a set period of time if there is no activity from the user. If the user is unable to input the data quickly enough and the session times out before they submit, the server will require re-authentication before proceeding. When this happens, the server stores the data in a temporary cache while the user logs in, and when the user has re-authenticated, the data is made available from the cache and the form is processed as if there had never been a session time-out. The server does not keep the cache indefinitely, merely long enough to ensure success after re-authentication in a single user session, such as one day.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A user has logged in to use a forum and replies to a post. The time taken to write the reply  is longer than the time allowed by the server for a session of inactivity. The user submits  the reply and is informed of the time out and prompted to log in again to submit the response. The user's post reply is retained by the server and if the user log-in is successful the reply  is processed as normal. If the log-in cannot be successfully completed the reply is discarded.</p>
                  </item>
                  <item>
                     <p>The user had logged in to a secure area and fills out a form. The session times out for  security reasons. The form data is retained by the server and the user is informed of the time  out and is prompted to log-in again. If the user logs in correctly, the form is presented to the user with all of the data previously entered and user can submit the form. If the log-in cannot be successfully completed the form data is discarded.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <p>On a site that requires user login to submit data,</p>
                  <olist>
                     <item>
                        <p>Log in and begin the timed activity.</p>
                     </item>
                     <item>
                        <p>Allow the session to time out.</p>
                     </item>
                     <item>
                        <p>Submit the data.</p>
                     </item>
                     <item>
                        <p>Re-authenticate.</p>
                     </item>
                     <item>
                        <p>Check that the process can continue and be completed without loss of data, including the original data and any changes made after re-authentication.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#5 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G107">
            <short-name>Using "activate" rather than "focus" as a trigger for changes of context</short-name>
            <applicability>
               <p>Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-receive-focus"/>
            </applies-to>
            <description>
               <p>
The objective of this technique is to provide a method for activating things that is predictable by the user. Users with cognitive disabilities and people using screen readers or screen magnifiers may be confused by an unexpected event such as automatic form submission or activation of a function that causes a change of context.
</p>
               <p>
With this technique, all changes of context would be triggered only by a specific action on the part of the user.  Further, that action would be one that usually causes changes in context, such as clicking on a link or pressing a submit button.  Actions that simply move the focus to an element would not cause a change of context.
</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <ulist>
                        <item>
                           <p>
A page pops up a new window only when the user clicks(or uses spacebar) on a button rather than using onfocus to pop up a new window. 
    </p>
                        </item>
                        <item>
                           <p>
A submit button is used to move on to the next data entry screen rather than having the next screen appear automatically when the user tabbed onto a 'done' button.
    </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Using a keyboard, cycle focus through all content
    </p>
                     </item>
                     <item>
                        <p>
Check that no changes of context occur when any component receives focus.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
#2 is true
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G108">
            <short-name>Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes</short-name>
            <applicability>
               <p> Markup technologies where it is possible to expose the name and role, allow
                        user-settable properties to be directly set, and provide notification of
                        changes. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to allow assistive technology to
                        understand Web content so that it can convey equivalent information to the
                        user through an alternate user interface and allow them to operate controls
                        through the AT. </p>
               <p> This technique involves using standard, documented and supported features to
                        expose these properties to AT. It relies on the fact that these standard
                        controls in standard browsers meet the requirements. </p>
               <p> For HTML these assumptions are good. They may also be appropriate for some
                        other technologies. </p>
               <p> Even when the components support accessibility, it is essential that some
                        information be provided by the author. For example, a control may have the
                        ability to provide a name but the author still has to provide the name. The
                        role attribute however may already be provided since it is a standard
                        component with a fixed role. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Example 1: A Web page written in HTML or XHTML uses standard form
                                controls, and identifies the form control using the title attribute.
                                The user agent makes information about these controls, including the
                                name, available to assistive technology through the DOM and through
                                a platform-specific Accessibility API. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Visually inspect the markup or use a tool. </p>
                     </item>
                     <item>
                        <p> Check that proper markup is used such that the name and role,
                                    for each user interface component can be determined. </p>
                     </item>
                     <item>
                        <p> Check that proper markup is used such that the user interface
                                    components that accept user input can all be operated from AT.
                                </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Step #2 and #3 are both true for each user interface component
                                </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G110">
            <short-name>Using an instant client-side redirect</short-name>
            <applicability>
               <p> Applies to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to enable redirects on the client side
                        without confusing the user. Redirects are preferably implemented on the
                        server side (see <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="SVR1" linktype="server"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Implementing automatic redirects on the server
                            side instead of on the client side</loc>), because a server-side
                        redirect does not cause new content to be displayed before the server sends
                        the content located at the new URI. However, authors do not always have
                        control over server-side technologies; in that case, they can use a
                        client-side redirect. A client-side redirect is implemented by code inside
                        the content that instructs the user agent to retrieve content from a
                        different URI. It is important that the redirecting page or Web page
                        only contains information related to the redirect. </p>
            </description>
            <examples>
               <eg-group>
                  <head>HTML: <code>meta</code> Refresh With a URI and No Timeout</head>
                  <description>
                     <p> In HTML 4.x and XHTML 1.x, it is possible to implement a client-side
                                redirect using the <code>meta</code> element: see <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="H76" linktype="html"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Using
                                    meta refresh to create an instant client-side redirect</loc>.
                            </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="SVR1"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find each link or programmatic reference to another page or
                                    Web page. </p>
                     </item>
                     <item>
                        <p> For each link or programmatic reference, check if the referenced
                                    Web page contains code (e.g. meta element or script) that
                                    causes a client-side redirect. </p>
                     </item>
                     <item>
                        <p> For each link or programmatic reference that causes a
                                    client-side redirect, check if the redirect is implemented
                                    without a time limit or delay and that the page only contains
                                    information related to the redirect. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p>Step 2 is false or step 3 is true.</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="G111">
            <short-name>Using color and pattern</short-name>
            <applicability>
               <p>All technologies that support images.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that when color differences are used to convey information within non-text content, patterns are included to convey the same information in a manner that does not depend on color. 
          </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A real estate site provides a bar chart of average housing prices in several regions of the United States. The bar for each region is displayed with a different solid color and a different pattern. There is sufficient contrast between the solid and pattern colors to meet Success Criterion 1.4.1. The legend uses the same colors and patterns to identify each bar.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>An on-line map of a transportation system displays each route in a different color. The stops on each route are marked with a distinctive icon such as a diamond, square, or circle to help differentiate each route.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A flow chart describes a set of iterative steps to complete a process. It uses dashed, arrowed lines with a green background to point to the next step in the process when the specified condition passes. It uses dotted arrowed lines with a red background to point to the next step in the process when the specified condition fails. There is sufficient contrast between the line and background colors to meet Success Criterion 1.4.1.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The content includes an interactive game. The game pieces for the 4 players are distinguished from one another using both color and pattern. 
              </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each image within the Web page that use color differences to convey information:
							</p>
                  <olist>
                     <item>
                        <p>Check that all information that is conveyed using color is also conveyed using patterns that do not rely on color.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G112">
            <short-name>Using inline definitions</short-name>
            <applicability>
               <p>Any technology containing text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a definition in context for any word used in an unusual or restricted way. The definition is provided in the text, either just before or just after the word is used. The definition may be included in the same sentence as the word that is being defined, or in a separate sentence. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Ether</head>
                  <description>
                     <p>He believed that sound traveled through the ether, which was thought to be a substance that filled interplanetary space.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Driver</head>
                  <description>
                     <p>It may be necessary to update the driver for your printer (the driver is software that contains specific instructions for your printer).</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>W3C key words </head>
                  <description>
                     <p>Definition: The key words must, must not, required, shall, shall not, should, should not, recommended, may, and optional in this specification are to be interpreted as described in <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://www.faqs.org/rfcs/rfc2119.html"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">RFC 2119</loc>. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A Japanese idiomatic expression defined in context</head>
                  <description>
                     <p>This example uses parentheses to provide the definition of an idiomatic expression in Japanese. The phrase in Japanese says that "he throws a spoon." It means that there was nothing he can do and finally he gives up.
                
              </p>
                     <p>
                        <phrase xml:lang="jp">さじを投げる（どうすることもできなくなり、あきらめること）。</phrase>
                     </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each word or phrase used in an unusual or restricted way:
							</p>
                  <olist>
                     <item>
                        <p>Check that the word is defined in text either before or after the first occurrence of the word.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G115">
            <short-name>Using semantic elements to mark up structure</short-name>
            <applicability>
               <p>Markup languages, including HTML 4.01, XHTML 1.x</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to mark up the structure of the Web content using the appropriate semantic elements. In other words, the elements are used according to their meaning, not because of the way they appear visually.</p>
               <p>Using the appropriate semantic elements will make sure the structure is available to the user agent. This involves explicitly indicating the role that different units have in understanding the meaning of the content. The nature of a piece of content as a paragraph, header, emphasized text, table, etc. can all be indicated in this way. In some cases, the relationships between units of content should also be indicated, such as between headings and subheadings, or amongst the cells of a table. The user agent can then make the structure perceivable to the user, for example using a different visual presentation for different types of structures or by using a different voice or pitch in an auditory presentation.</p>
               <p>In HTML, for example, phrase-level elements such as <code>em</code>, <code>abbr</code>, and <code>cite</code> add semantic information within sentences, marking text for emphasis and identifying abbreviations and citations, respectively. MathML, a markup language designed to maintain important distinctions between structure and presentation in mathematics,  includes special "presentation" markup for the complex notations used to represent mathematical ideas as well as "content" (semantic) markup for the mathematical ideas themselves.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A paragraph contains a hyperlink to another page. The hyperlink is marked up using the <code>a</code> element.</p>
                  </description>
                  <code role="html401">
&lt;p&gt;Do you want to try our new tool yourself? A free 
demonstration version is available in our 
&lt;a href="download.html"&gt;download section&lt;/a&gt;&lt;/p&gt;
</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A page about the history of marriage uses a quotation from Jane Austen's novel, Pride and Prejudice, as an example. The reference to the book is marked up using the <code>cite</code> element and the quotation itself is marked up using the <code>blockquote</code> element.</p>
                  </description>
                  <code role="html401">
&lt;p&gt;Marriage was considered a logical step for a bachelor, 
as can be seen in the first chapter of the novel 
&lt;cite&gt;Pride and Prejudice&lt;/cite&gt;:&lt;/p&gt;
&lt;blockquote&gt;
     &lt;p&gt;It is a truth universally acknowledged, that a single man in
     possession of a good fortune, must be in want of a wife.&lt;/p&gt;

     &lt;p&gt;However little known the feelings or views of such a man may
     be on his first entering a neighbourhood, this truth is so well
     fixed in the minds of the surrounding families, that he is considered
     the rightful property of some one or other of their daughters.&lt;/p&gt;
&lt;/blockquote&gt;
</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A car manual explains how to start the engine. The instructions include a warning to make sure the gear is in neutral. The author feels the warning is so important that it should be emphasized so the warning is marked up using the <code>strong</code> element.</p>
                  </description>
                  <code role="html401">
&lt;h1&gt;How to start the engine&lt;/h1&gt;
&lt;p&gt;Before starting the engine, &lt;strong&gt;make sure the gear 
is in neutral&lt;/strong&gt;. Next, turn the key in the ignition. 
The engine should start.&lt;/p&gt;
</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>This example shows how to use the <code>em</code> and <code>strong</code> elements to emphasize text.</p>
                  </description>
                  <code role="html401">
&lt;p&gt;What she &lt;em&gt;really&lt;/em&gt; meant to say was, 
"This is not ok, it is &lt;strong&gt;excellent&lt;/strong&gt;!"&lt;/p&gt;
</code>
               </eg-group>
               <eg-group>
                  <head>Using highlighting and background color to visually and semantically identify important information.</head>
                  <code role="html401">
&lt;style type="text/css"&gt;
.vocab {
background-color:cyan;
font-style:normal;
}
&lt;/style&gt;
.......
&lt;p&gt;New vocabulary words are emphasized and highlighted 
with a cyan background&lt;/p&gt;
&lt;p&gt;The &lt;em class="vocab"&gt;scathing &lt;/em&gt; review of the play 
seemed a bit too harsh. .... &lt;/p&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/html4/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 specification</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/text.html#h-9.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 specification, using phrase elements</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/MathML2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Mathematical Markup Language (MathML) Version 2.0, Second Edition</loc>
                        </p>
                     </item>
                     <item>
                        <p>Jeffrey Zeldman's book         <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.zeldman.com/dwws/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">"Designing with Web standards"</loc>
                        </p>
                     </item>
                     <item>
                        <p>Web Design Group's article         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/design/style/docstyle-tags.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">"Document style: Use the right tag for the job"</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H39"/>
               <relatedtech idref="H42"/>
               <relatedtech idref="H44"/>
               <relatedtech idref="H48"/>
               <relatedtech idref="H51"/>
               <relatedtech idref="H71"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check if there are parts of the content that have a semantic function.</p>
                     </item>
                     <item>
                        <p>For each part that has a semantic function, if corresponding semantic markup exists in the technology, check that the content has been marked up using that semantic markup.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G117">
            <short-name>Using text to convey information that is conveyed by variations in presentation of text</short-name>
            <applicability>
               <p>Technologies that support variations in the visual presentation of text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that information conveyed through variations in the formatting of text is conveyed in text as well. When the visual appearance of text is varied to convey information, state the information explicitly in the text. Variations in the visual appearance can be made by changes in font face, font size, underline, strike through and various other text attributes. When these types of variations convey information, that information needs to be available elsewhere in the content via text. Including additional sections in the document or an inline description where the variation in presentation of text occurs can be used to convey the information.</p>
            </description>
            <examples>
               <eg-group>
                  <head>An on-line test requires students to write a short summary of a longer document.</head>
                  <description>
                     <p>When a sentence in the original document contains a word or phrase that must be used in the summary, the word or phrase is shown in a different font than the rest of the sentence. A separate section also lists all the words and phrases that must be used in the summary.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Font variations and explicit statements.</head>
                  <description>
                     <p>An on-line document has gone through multiple drafts. Insertions are underlined and deletions are struck through. At the end of the draft a "change history" lists all changes made to each draft.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find items where variations in presentation of text are used to convey information. </p>
                     </item>
                     <item>
                        <p>For those items, check to determine if information conveyed visually is also stated explicitly in text.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G120">
            <short-name>Providing the pronunciation immediately following the word</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-pronunciation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make the pronunciation of a word available by providing the pronunciation after the word at least the first time it occurs within a Web page. </p>
               <p>When a Web page contains words with the same spelling but different pronunciations, this technique is not appropriate for providing the pronunciation unless it is provided for each instance. </p>
               <p>This technique is applied to the first occurrence of an abbreviation in a Web page. When combining multiple resources into a single Web page, the abbreviation would be expanded at the beginning of each resource. In this case, however, using a different technique for providing the expanded form may be more appropriate.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>In the following example of Japanese text, the information giving the pronunciation in Han characters(Kanji) is rendered in parentheses immediately following the text.</p>
                  </description>
                  <code role="html401">
&lt;p&gt; 慶應大学 (けいおうだいがく) &lt;/p&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G121"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each word that requires pronunciation information:
							</p>
                  <olist>
                     <item>
                        <p>Search for the first use of that word in the Web page. </p>
                     </item>
                     <item>
                        <p>Check that the first use is immediately followed by the pronunciation of the word.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G121">
            <short-name>Linking to pronunciations</short-name>
            <applicability>
               <p>All technologies that include links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-pronunciation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make the pronunciation of a word available by providing information about the pronunciation, either within the same Web page or in a different Web page, and establishing a link between the item and its pronunciation.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A word is linked to its entry in a dictionary that includes pronunciation information.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A word is linked to a sound file that will speak the pronunciation.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A word in linked to its entry in a pronouncing dictionary.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A word is linked to an International Phonetic Alphabet (IPA) representation of its pronunciation.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A word is linked to an unambiguous phonetic spelling of the pronunciation.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each word that requires pronunciation information:
							</p>
                  <olist>
                     <item>
                        <p>Check that at least the first instance of the item is a link. </p>
                     </item>
                     <item>
                        <p>Check that each link navigates to information about the pronunciation of the item.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G122">
            <short-name>Including a text cue whenever color cues are used </short-name>
            <applicability>
               <p>All technologies that support color and text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to combine color and text or character cues to convey information. Most users can quickly scan the content to locate information conveyed by using color differences. Users who cannot see color can look or listen for text cues; people using Braille displays or other tactile interfaces can detect text cues by touch.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Required fields in an HTML form</head>
                  <description>
                     <p>The instructions for an online form say, "Required fields are shown in red and marked with (req<phrase diff="add">uired</phrase>)." The cue "(req<phrase diff="add">uired</phrase>)" is included within the <code>label</code> element.<issue id="i2612a" status="open">
                           <p>2612</p>
                        </issue>
                     </p>
                  </description>
                  <code role="html401">
&lt;label for="lastname" class="required"&gt;Last name(required):&lt;/label&gt;
&lt;input id="lastname" type="text" size="25" value=""/&gt;
.required {
color=red;
}
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G14"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For any content where color differences are used to convey information:
							</p>
                  <olist>
                     <item>
                        <p>Check that the same information is available through text or character cues. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G123">
            <short-name>Adding a link at the beginning of a block of repeated content to go to the end of the block</short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a mechanism to bypass a block of material by skipping to the end of the block. The first link in the block or the link directly preceding the block moves focus to the content immediately after the block. Activating the link advances the keyboard focus past the block. When there are multiple blocks to be skipped, the user skips from block to block via these links. 
          </p>
            </description>
            <examples>
               <eg-group>
                  <head>Skip navigation links</head>
                  <description>
                     <p>The pages on an organization's Web site include a navigation bar or main menu containing links to major sections of the site, the site map, information about the organization, and how to contact the organization. The first link in this area is titled "Skip Navigation Links". A user activates the link to skip over these links.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A book index</head>
                  <description>
                     <p>A book contains an index that is divided into a set of pages. In the content at the beginning of each page of the index are links for each letter of the alphabet, linking into the index where the entries start with that letter. The first link in the set is titled "Skip Links into Index". A user activates this link to skip over the links. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Several sets of links</head>
                  <description>
                     <p>All the pages on a Web site include a section containing links to the site map, information about the organization, and how to contact the organization. All the pages in each section of the site also contain a set of links to its subsections. The first link in the first block is titled "Skip Navigation Links" and skips over the first set of links. The first link in the second block is titled "Skip Section Links" and skips over the subsection links. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>
              HTML page with several blocks of navigation links 
            </head>
                  <description>
                     <p>This example demonstrates both the use of Heading elements at the beginning of each section (H69) and links that skip to the end of each section. This allows people to skip blocks of repeated content using keyboard navigation or using heading navigation, depending on the capabilities of their user agents. Note that some sections of the content are wrapped in a <el>div</el> element to work around a limitation of Internet Explorer (see the User Agents Notes for Creating HTML links to skip blocks of content (future link)). 
              </p>
                  </description>
                  <code role="html401">
&lt;p&gt;&lt;a href="#content"&gt;Content title&lt;/a&gt;&lt;/p&gt;
    &lt;h2&gt;Main Navigation&lt;/h2&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#subnav"&gt;Sub Navigation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/a/"&gt;Link A&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/b/"&gt;Link B&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/c/"&gt;Link C&lt;/a&gt;&lt;/li&gt;
...
      &lt;li&gt;&lt;a href="/j/"&gt;Link J&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class="iekbfix"&gt;
      &lt;h2 id="subnav"&gt;Sub Navigation&lt;/h2&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="#ultranav"&gt;Ultra Sub Navigation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/suba/"&gt;Sub A&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/subb/"&gt;Sub B&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/subc/"&gt;Sub C&lt;/a&gt;&lt;/li&gt;
...
        &lt;li&gt;&lt;a href="/subj/"&gt;Sub J&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
    &lt;div class="iekbfix"&gt;
      &lt;h2 id="ultranav"&gt;Ultra Sub Navigation&lt;/h2&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="#content"&gt;Content title&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/ultraa/"&gt;Ultra A&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/ultrab/"&gt;Ultra B&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/ultrac/"&gt;Ultra C&lt;/a&gt;&lt;/li&gt;
...
        &lt;li&gt;&lt;a href="/ultraj/"&gt;Ultra J&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;h2 id="content"&gt;Content title&lt;/h2&gt;
      &lt;p&gt;Now that I have your attention...&lt;/p&gt;
    &lt;/div&gt;
</code>
                  <description>
                     <p>
And the CSS </p>
                  </description>
                  <code role="css">
div.iekbfix {
  width: 100%;
} 
  </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jimthatcher.com/skipnav.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Skip Navigation Links</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G1"/>
               <relatedtech idref="G124"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that a link is the last focusable control before the block of repeated content or the first link in the block.</p>
                     </item>
                     <item>
                        <p>Check that the description of the link communicates that it skips the block.</p>
                     </item>
                     <item>
                        <p>Check that the link is either always visible or visible when it has keyboard focus.
                </p>
                     </item>
                     <item>
                        <p>Check that activating the link moves the focus to the content immediately after the block.</p>
                     </item>
                     <item>
                        <p>Check that after activating the link, the keyboard focus has moved to the content immediately after the block.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G124">
            <short-name>Adding links at the top of the page to each area of the content</short-name>
            <applicability>
               <p>All technologies that contain links</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a mechanism to bypass blocks of material by providing a list of links to the different sections of the content. The links in this list, like a small table of contents at the beginning of the content, set focus to the different sections of the content. This technique is particularly useful for pages with many independent sections, such as portals. It may also be combined with other techniques for skipping blocks within a section. 
          </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The Web pages on a site all start with three links that navigate to the main content of that Web page, the search field, and the navigation bar.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jimthatcher.com/skipnav.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Skip Navigation Links</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G1"/>
               <relatedtech idref="G123"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the set of links provided for this purpose:
							</p>
                  <olist>
                     <item>
                        <p>Check that the only controls in the Web page that precede the link are other links in the set.</p>
                     </item>
                     <item>
                        <p>Check that the description of each link communicates that it links to some section of the content.</p>
                     </item>
                     <item>
                        <p>Check that the link is either always visible or visible when it has keyboard focus.
                </p>
                     </item>
                     <item>
                        <p>Check that activating the link moves the focus to that section of the content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G125">
            <short-name>Providing links to navigate to related Web pages</short-name>
            <applicability>
               <p>All technologies that contain links</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-mult-loc"/>
            </applies-to>
            <description>
               <p>
            The objective of this technique is to make it possible for users to locate additional information by providing links to related Web pages.
            It is one of a series of techniques for locating content that are sufficient for addressing Success Criterion 2.4.5. 
             Links are a basic component of the World Wide Web. They are the mechanism that makes the Web an interconnected Web of content. Most authors employ this technique automatically when creating Web pages.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The  <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/WCAG20/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Web Content Accessibility Guidelines 2.0</loc> contains links to definitions of terms used in guidelines and Success Criteria, links to documents explaining how to meet different Success Criteria, a table of contents for each section containing links to different subsections of that section, and  a Comparison of WCAG 1.0 checkpoints to WCAG 2.0<!--@@ need link -->. As users browse the document, they can follow these links to find related information.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/webarch/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Architecture of the World Wide Web, Volume One</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G63"/>
               <relatedtech idref="G64"/>
               <relatedtech idref="G126"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the Web page:
							</p>
                  <olist>
                     <item>
                        <p>
Check whether the link leads to related information.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G126">
            <short-name>Providing a list of links to all other Web pages</short-name>
            <applicability>
               <p>All technologies that contain links</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-mult-loc"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a list of links to all the Web pages in the set on each Web page. It is one of a series of techniques for locating content that are sufficient for addressing Success Criterion 2.4.5. 
            This technique is only effective for small sets of Web pages; if the list of links is longer than the rest of the content in the Web page, it may make the Web page more difficult for users to understand and use. </p>
               <note>
                  <p>Success Criterion 2.4.1 requires a technique for skipping this list of links.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A family Web site contains home pages for all the members of the family. Each page contains a list of links to the home pages of the other family members.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>An electonic book is broken into separate Web pages for each chapter. Each Web page starts with a small table of contents that contains links to all the chapters in the book.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G1"/>
               <relatedtech idref="G63"/>
               <relatedtech idref="G64"/>
               <relatedtech idref="G123"/>
               <relatedtech idref="G125"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that each Web page contains a list of links to the other Web pages in the site </p>
                     </item>
                     <item>
                        <p>Check that the links in the list lead to the corresponding Web pages.</p>
                     </item>
                     <item>
                        <p>Check that the list contains a link for every Web page in the site.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G127">
            <short-name>Identifying a Web page's relationship to a larger collection of Web pages</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-title"/>
               <success-criterion idref="navigation-mechanisms-location"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to enable users to identify the relationship between the current Web page and other Web pages in the same collection (e.g., on the same Web site). In some cases this can be done programmatically—for example by using the <code>rel</code> attribute of the <code>link</code> element in HTML. In other cases the information is provided by including the relevant information in the title of the Web page.</p>
            </description>
            <examples>
               <eg-group>
                  <head>The title of a Web page includes the name of the sub-site</head>
                  <description>
                     <p>A large Web site includes tutorials and reference materials for numerous technologies. The title of each Web page includes the name of the sub-site as well as the organization that produces the site.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Including identifying information in metadata</head>
                  <description>
                     <p>A Web page includes metadata that identifies it as the table of contents for a collection of documents. The metadata for each document in the collection identifies the document's position in the collection and provides a reference to the table of contents.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Chapters in an online textbook</head>
                  <description>
                     <p>An online textbook is divided into chapters. The title of each Web page includes the number and title of the chapter as well as the title of the textbook.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G65"/>
               <relatedtech idref="G88"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check if the title of the Web page describes the Web page's relationship to the collection to which it belongs.</p>
                     </item>
                     <item>
                        <p>Check if the Web page includes metadata identifying the Web page's relationship to the collection to which it belongs.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 or check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G128">
            <short-name>Indicating current location within navigation bars</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-location"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to help orient the user by providing information about the current location via the navigational user interface component. This technique is especially useful when the Web pages are steps in a task that must be processed in order. Providing this indication helps the user to better understand his place in the sequence. The location may be indicated by adding an icon or text, or by changing the state of the item.
          </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page implements tab panel style navigation. A list of panel tabs is displayed horizontally across the page. The current content is displayed in a panel below the list of panel tabs. When the user navigates to and selects a particular panel tab the content in the panel is updated to reflect the topic of the selected tab. In addition, the background color of the selected tab is changed from the default color and a check mark icon is displayed next to the tab panel text to indicate it is the active panel. The check mark icon includes an appropriate text alternative.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The layout for a Web page uses a frameset and frames. One of the frames is designated as the navigation frame and another frame displays the content of the Web site. When the user selects a link in the navigation frame, the information related to the link is displayed within the content frame. The text for the selected item in the navigation frame is updated with an asterisk character to indicate that it is the selected topic.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The navigation bar for a site is implemented as a list of links. The navigation bar appears on all Web pages within a collection of Web pages. As the user gives focus to or hovers over a particular link in the navigation bar the background color of the link is changed. This change in styling on mouseover or focus is specified via the cascading style sheet for the Web page. When focus is removed from the link the style is reset to the normal link style. When the link is activated to change the contents of the page, the selected link within the navigation bar is disabled since the result of following this link is the Web page currently being displayed. Changing the background color gives sighted users visual notification of the link to be selected. Disabling the link provides information to all users that it is the currently selected topic.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G122"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>When the navigation component is repeated within a set of Web pages:</p>
                  <olist>
                     <item>
                        <p>Check that the user is giving an indication of the currently selected item within the navigational unit.</p>
                     </item>
                     <item>
                        <p>Check that the selected item matches the content which is being displayed.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G130">
            <short-name>Providing descriptive headings</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-descriptive"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make section headings within Web content descriptive. Descriptive headings and titles (see <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="G88" linktype="general"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Providing descriptive titles for Web pages</loc>) work together to give users an overview of the content and its organization. Descriptive headings identify sections of the content in relation both to the Web page as a whole and to other sections of the same Web page.</p>
               <p>Descriptive headings help users find specific content and orient themselves within the Web page.</p>
               <p>Authors may also want to consider putting the most important information at the beginning of each heading. This helps users “skim" the headings to locate the specific content they need, and is especially helpful when browsers or assistive technology allow navigation from heading to heading.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>An HTML page that describes the range of tasks for disaster preparation may have the following headings:</p>
                  </description>
                  <code role="html401">
  &lt;h1&gt;Disaster preparation&lt;/h1&gt;
  &lt;h2&gt;Flood preparation&lt;/h2&gt;
  &lt;h2&gt;Fire preparation&lt;/h2&gt;
</code>
                  <description>
                     <p>Note that the level 2 headings have the distinguishing information at the beginning (ie, instead of "Preparation for floods", "Preparation for fires", etc).</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A short article about the history of a town that explains about the founding and expansion of the town and then goes into some depth about the current situation. The title of the Web page is "History of Ourtown". The first section is called "The founding of Ourtown". The second section is called "Expansion of Ourtown". The third section is called "Ourtown today" which has the following subsections: "People in Ourtown", "Organizations in Ourtown" and "Buildings in Ourtown". </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/wacblog/headings/quick-tips-for-accessible-headings/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Quick tips for accessible headings</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Determine if the Web page contains headings. </p>
                     </item>
                     <item>
                        <p>Check that each heading identifies its section of the content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G131">
            <short-name>Providing descriptive labels</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-descriptive"/>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that the label for any interactive component within Web content makes the component's purpose clear. Using the appropriate technology-specific techniques for technologies for associating labels with interactive controls allows assistive technology to recognize the label and present it to the user. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Online maps with controls for zooming in and out</head>
                  <description>
                     <p>A Web application presents maps of a city. Users can “zoom in" to view part of the map in greater detail, and can “zoom out" to make the show a larger part of the city. The controls can be operated using either a mouse or a keyboard. The controls are labeled “Zoom in (Ctrl + Shift + L)" And “Zoom out (Ctrl + Shift + R)." </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A form asking the name of the user</head>
                  <description>
                     <p>A form asks the name of the user. It consists of two input fields to ask for the first and last name. The first field is labeled "First name", the second is labeled "Last name". </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>A form with required fields</head>
                  <description>
                     <p>A purchasing form includes several fields that are required. In addition to identifying the field, the label for each required field includes the word “required" in parentheses.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <tests>
               <procedure>
                  <p>For each interface component in the content:
							</p>
                  <olist>
                     <item>
                        <p>Identify the purpose of the interface component.</p>
                     </item>
                     <item>
                        <p>Check that any required label is present.</p>
                     </item>
                     <item>
                        <p>Check that each label makes the component's purpose clear.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G133">
            <short-name>Providing a checkbox on the first page of a multipart form that allows users to ask for longer session time limit or no session time limit
        </short-name>
            <applicability>
               <p>Content that includes multipart forms</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to minimize the risk that users with disabilities will lose their work by providing a checkbox to request additional time to complete multipart forms. The checkbox can allow the user to request a specific amount of additional time (for example 15 minutes) or an indefinite extension. (Note that allowing an indefinite extension would be inappropriate if it jeopardized user privacy or network security.)
</p>
            </description>
            <examples>
               <eg-group>
                  <head>A checkbox for requesting a specific extension</head>
                  <description>
                     <p>A Web page contains the first part of a five-part form. Immediately following the general instructions for completing the form is a checkbox with the label, “Allow an additional 15 minutes to complete each part of this form."</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Requesting an indefinite extension</head>
                  <description>
                     <p>A Web page contains the first part of a three-part form. Each part of the form includes more than 10 items. Some items require users to follow links for additional information. Immediately following the general instructions for completing the form is a checkbox with the label, “Allow as much time as I need to complete this form. I understand that I must close (quit) the Web browser if I choose to stop before completing the last part of the form."
</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <p>If the Web page contains the first part of a multipart form:</p>
                  <olist>
                     <item>
                        <p>
Check that the Web page includes a checkbox to request additional time to complete the form.
    </p>
                     </item>
                     <item>
                        <p>
Check that if the checkbox is checked, additional time is provided to complete the form.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <olist>
                     <item>
                        <p>
All checks are true.
    </p>
                     </item>
                  </olist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G134">
            <short-name>Validating Web pages</short-name>
            <applicability>
               <p> Any markup languages and many other technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to avoid ambiguities in Web pages
                        that often result from code that does not validate against formal
                        specifications. Each technology's mechanism to specify the technology and
                        technology version is used, and the Web page is validated against the
                        formal specification of that technology. If a validator for that technology
                        is available, the developer can use it. </p>
               <p> Validation will usually eliminate ambiguities (and more) because an
                        essential step in validation is to check for proper use of that technology's
                        markup (in a markup language) or code (in other technologies). Validation
                        does not necessarily check for full conformance with a specification but it
                        is the best means for automatically checking content against its
                        specification. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Validating HTML</head>
                  <description>
                     <p> HTML pages include a document type declaration (sometimes referred
                                to as <code>!DOCTYPE</code> statement) and are valid according to
                                the HTML version specified by the document type declaration. The
                                developer can use off-line or online validators (see Resources
                                below) to check the validity of the HTML pages. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Validating XML</head>
                  <description>
                     <p> XHTML, SVG, SMIL and other XML-based documents reference a Document
                                Type Definition (DTD) or other type of XML schema. The developer can
                                uses online or off-line validators (including validation tools built
                                into editors) to check the validity of the XML documents. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Batch validation with Ant</head>
                  <description>
                     <p> The <code>xmlvalidate</code> task of Apache Ant can be used for
                                batch validation of XML files. The following Apache Ant target is a
                                simple example for the validation of files with the extension
                                    <code>.xml</code> in the directory <code>dev\\Web</code>
                                (relative to the Ant build file). </p>
                  </description>
                  <code>
   &lt;target name="validate-xml"&gt; 
   &lt;xmlvalidate lenient="no"&gt; 
   &lt;fileset dir="dev/web" includes="*.xml" /&gt; 
   &lt;/xmlvalidate&gt; 
   &lt;/target&gt;  </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/QA/Tips/Doctype"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Do not forget to
                                        add a doctype</loc> by the W3C Quality Assurance Initiative
                                    explains what doctypes are and why you should use them. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/QA/2002/04/valid-dtd-list.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Recommended DTDs to use in your Web document</loc> by the
                                    W3C Quality Assurance Initiative is a list of commonly used
                                    declarations. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.chami.com/html-kit/faq/pages/validate_tools.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">How do I validate my code or check for possible errors?</loc> describes the tools in the free editor HTML-Kit for
                                    checking HTML, CSS and XML. </p>
                     </item>
                  </ulist>
                  <p> Validating HTML and XHTML</p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://validator.w3.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">The W3C Markup Validation
                                        Service</loc> by the World Wide Web Consortium allows you
                                    to validate HTML and XHTML files by URI, by file upload and by
                                    direct input of complete HTML or XHTML documents. There are also
                                    separate pages with an extended interface for file upload and
                                    for validating by URI (advanced options such as encodings and
                                    document types). </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://validator.w3.org/docs/install.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Installation Documentation for the W3C Markup Validation
                                        Service</loc> explains how to install this service (for
                                    example for use on an intranet). </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://validator.projektmedien.de/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML Validator</loc> is a German version of the W3C Markup Validation Service.
                                </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/tools/validator/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">WDG HTML
                                        Validator</loc> by the Web Design Group allows you to enter
                                    a URI to validate single pages or entire sites. There are also
                                    versions to validate Web pages in batch mode (by specifying one
                                    or more URIs of HTML documents to validate), by file upload and
                                    by direct input of HTML code. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/tools/validator/offline/index.html.en"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Offline HTMLHelp.com Validator</loc> is a tool for Unix
                                    users; it is the off-line version of the online WDG HTML
                                    Validator. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://people.tuke.sk/igor.podlubny/ov.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Off-line HTML
                                        Validator – A clipbook for NoteTab</loc> by Professor Igor
                                    Podlubny is an extension for the programming editor NoteTab. It
                                    uses <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.jclark.com/sp/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">James Clark's
                                        open-source SGML parser</loc>, which is also used by the
                                    W3C Markup Validation Service. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://kzone.host.sk/download/item4.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Off-line
                                        HTML Validator for Windows</loc> by Jan Kacur is another
                                    validator based on James Clark's open-source SGML parser. Source
                                    code (in Delphi) is also available. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ktmatu.com/info/do-it-yourself-offline-html-validator/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Do-it-yourself Offline HTML Validator</loc> by Matti
                                    Tukiainen explains how you can create a simple validator with
                                    James Clark's SGML parser on Windows. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.standards-schmandards.com/index.php?2005/04/10/18-massvalidate"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Validating an entire site</loc> by Peter Kranz explains
                                    how you can install a modified version of the W3C Markup
                                    Validation Service that outputs validation results as XML on Mac
                                    OS. Source code (in Perl and Python) is available. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.benhammersley.com/tools/xhtml_validator_to_rss.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XHTML Validator to RSS</loc> by Ben Hammersley explains
                                    how you can get the validation results of the W3C Markup
                                    Validation Service as an RSS feed. Source code is available.
                                </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/tools/widgets/#valid"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML
                                        Validation Widget</loc> adds a "Validate HTML" option to
                                    Internet Explorer's context menu and validates the current HTML
                                    document with the Web Design Group's HTML Validator. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.chami.com/html-kit/faq/pages/w3c_markup_validator.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Can I use the W3C MarkUp Validation Service to validate
                                        HTML?</loc> explains how you can validate HTML from within
                                    the free editor HTML-Kit. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://validator.aborla.net/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML/XML Validator</loc> is an online repair tool for HTML and XHTML based on Tidy
                                    and PHP 5. It is available in several languages but it is not a
                                    real validator. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.alistapart.com/stories/doctype/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Fix Your
                                        Site With the Right DOCTYPE!</loc> by Jeffrey Zeldman
                                    explains what HTML and XHTML doctypes work and what their effect
                                    is on the rendering mode of a few browsers. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.alistapart.com/articles/dreamweaver/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Modifying Dreamweaver to Produce Valid XHTML</loc> by
                                    Carrie Bickner. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://schneegans.de/frontpage/xhtml-schema/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XHTML-Schemata für FrontPage 2003 und Visual Studio .NET</loc> by Christoph Schneegans is a German article that explains
                                    how the W3C XML Schemas for XHTML 1.0 can be used in FrontPage
                                    2003 and Visual Studio .NET to create valid code. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.nvu.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Nvu</loc> is a free
                                    and open-source Web authoring tool for Windows, Macintosh and
                                    Linux that can call the W3C HTML Validation Service. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/Amaya/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Amaya</loc> by the World
                                    Wide Web Consortium is a free and open-source Web authoring tool
                                    with support for HTML, XHTML, CSS, SVG and MathML that alerts
                                    you to validity errors when you save a document. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://chrispederick.com/work/web-developer/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Web
                                        Developer Extension</loc> is an extension for Mozilla,
                                    Firefox and Flock by Chris Pedrick that allows you to use the
                                    W3C Validation Services for HTML and CSS. </p>
                     </item>
                  </ulist>
                  <p>Validating XML</p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.validome.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML/XHTML/WML/XML
                                        Validator</loc> allows you to validate documents by URI or
                                    by file upload. An extended interface is also available. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://validator.de.selfhtml.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML/XHTML/WML/XML
                                        Validator</loc> is a German version of the same validator.
                                </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.javaview.de/validator/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XML Validator - A
                                        Document Validation Service</loc> by JavaView allows you to
                                    check wellformedness and validity of XML files, by file upload
                                    or by direct input of XML code. </p>
                     </item>
                     <item>
                        <p> Apache Ant's <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ant.apache.org/manual/OptionalTasks/xmlvalidate.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XMLValidate Task</loc> can be used to validate XML-based
                                    documents. This tool can be used to validate entire directories
                                    (and subdirectories) of XML files. </p>
                     </item>
                     <!-- MC: removed because appears to be taken down
              <item>
                <p> The <loc href="http://www.sun.com/software/xml/developers/multischema/">Sun Multi-Schema XML Validator</loc> is a command-line
                                    validator in Java that supports validation against a range of
                                    schema languages including DTDs, RELAX NG and TREX. Source code
                                    is available. </p>
              </item>
--><item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://schneegans.de/sv/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XML Schema Validator</loc>
                                    by Christoph Schneegans is an online tool that allows you to
                                    validate XML (and XHTML) files by by URI, by file upload, by
                                    direct input of complete XML documents, and by direct input of
                                    XML code fragments. A bookmarklet that allows you to validate
                                    the page currently displayed in your browser is also available.
                                    This validator claims to be more accurate than the W3C
                                    validator. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://tools.decisionsoft.com/schemaValidate/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XML Schema Validator</loc> by DecisionSoft is an online
                                    tool that allows you to validate an XML file against a W3C XML
                                    Schema, both of which can be uploaded. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.stg.brown.edu/service/xmlvalid/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">STG XML
                                        Validation Form</loc> by the Scholarly Technology Group of
                                    Brown University allows you to validate XML files by URI, by
                                    file upload and by direct input of complete XML documents. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.onjava.com/pub/a/onjava/excerpt/netbeans_2/index1.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NetBeans: Working with XML, Part 1</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.onjava.com/pub/a/onjava/excerpt/netbeans_2/index2.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NetBeans: Working with XML, Part 2</loc> by Tim Boudreau
                                    and others, explains how to enable XML support, validation and
                                    other related functionality in the open-source NetBeans
                                    framework. . </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.xmlforasp.net/SchemaValidator.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Schema Validator</loc>: this is a validator that allows you to paste XML and W3C XML Schema code into text boxes to validate XML code. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.xmlnanny.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XML Nanny</loc>: a graphical tool for validating XML and XHTML, with support for DTD, W3C XML Schema, RELAX NG and Schematron (Max OX X).</p>
                     </item>
                  </ulist>
                  <p> Note that many programming editors, XML editors and integrated
                            development environments (IDEs) can validate XML files. These include
                            the following free and/or open-source tools:</p>
                  <ulist>
                     <item>
                        <p> the programming editor <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.jedit.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">JEdit</loc> with the XML and SideKick plugins, which supports DTDs
                                    and W3C XML Schemas, </p>
                     </item>
                     <item>
                        <p> the “workbench" <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.eclipse.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Eclipse</loc> with the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://download.eclipse.org/webtools/downloads/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Web
                                        Tools Platform</loc>, </p>
                     </item>
                     <item>
                        <p> the Web authoring tool <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.screem.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">SCREEM</loc> for the Gnome desktop environment, which supports DTDs,
                                </p>
                     </item>
                     <item>
                        <p> the XML editor <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://jaxe.sourceforge.net/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Jaxe</loc>, which validates XML files with Apache Xerces, </p>
                     </item>
                     <item>
                        <p> the XML editor <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.xerlin.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Xerlin</loc>,
                                    which supports DTDs and to some extent W3C XML schema, </p>
                     </item>
                     <item>
                        <p> the XML editor <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.xmloperator.net/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">xmloperator</loc>, which supports DTDs and RELAX NG
                                    schemas, </p>
                     </item>
                     <item>
                        <p> Emacs in nXML mode (see the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://tech.groups.yahoo.com/group/emacs-nxml-mode/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">YahooGroup Emacs nXML Mode</loc>), </p>
                     </item>
                     <item>
                        <p> the XML editor <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://pollo.sourceforge.net/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Pollo</loc>, which supports DTDs, W3C XML Schemas and RELAX NG
                                    schemas, and is best suited for tree-like XML files. </p>
                     </item>
                  </ulist>
                  <p>Validating CSS</p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://jigsaw.w3.org/css-validator/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">The W3C CSS
                                        Validation Service</loc> allows you to validate CSS files
                                    by URI, by file upload and by direct input of CSS code. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://jigsaw.w3.org/css-validator/validator.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">The W3C CSS Validation Service: Validate by URI</loc> is
                                    an extended interface that allows you to specify a CSS
                                    stylesheet or an HTML page with CSS, specify the CSS profile and
                                    medium, and choose the types of warnings that should be
                                    displayed. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/tools/csscheck/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSSCheck</loc> by the Web Design Group allows you to validate CSS files
                                    by URI and by direct input of CSS code. Note that it is
                                    primarily a CSS 1 checker. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/tools/csscheck/upload.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSSCheckUp</loc> by the Web Design Group allows you to
                                    validate CSS files by file upload. Note that it is primarily a
                                    CSS 1 checker. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.ahfb2000.com/cssvalidator.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS
                                        (Cascading Style Sheets) Validator</loc> allows you to
                                    validate CSS files by URI. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://people.tuke.sk/igor.podlubny/oc.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Off-line CSS Validator – A clipbook for NoteTab</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <p> For HTML, SGML-based and XML-based technologies: </p>
                  <olist>
                     <item>
                        <p> Load each page or document into a validating parser. </p>
                     </item>
                     <item>
                        <p> Check that no validation errors are found. </p>
                     </item>
                  </olist>
                  <p> For CSS: </p>
                  <olist>
                     <item>
                        <p> Load each external or internal stylesheet into a CSS validator.
                                </p>
                     </item>
                     <item>
                        <p> Check that no validation errors are found. </p>
                     </item>
                  </olist>
                  <p> For other technologies: </p>
                  <p>Follow the validation procedure defined for the technology in use, if any
                            exists. </p>
               </procedure>
               <expected-results>
                  <p> For HTML, SGML-based and XML-based technologies: </p>
                  <p> Step 2 is true. </p>
                  <p> For CSS: </p>
                  <p> Step 2 is true. </p>
               </expected-results>
            </tests>
         </technique>
         <technique id="G135">
            <short-name>Using the accessibility API features of a technology to expose names and
                    roles, to allow user-settable properties to be directly set, and to provide
                    notification of changes</short-name>
            <applicability>
               <p> programming technologies that have standard components that are programmed
                        to interface with accessibility APIs </p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to allow assistive technology to
                        understand Web content so that it can convey equivalent information to the
                        user through an alternate user interface. </p>
               <p> Sometimes content is not created using markup language but rather using a
                        programming language or tools. In many cases, these technologies have
                        interface components that are already programmed to interface with
                        accessibility APIs. If an author uses these components and fills in the
                        properties (e.g. name, etc) the resulting user interface components in the
                        content will be accessible to assistive technology. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <ulist>
                        <item>
                           <p> A Web page uses java to create an applet. Java swing objects
                                        (e.g. pushbutton) are used because they have accessibility
                                        properties built in that can be accessed from assistive
                                        technology written in Java and, with the Java Access Bridge,
                                        those written in other languages that use the Accessibility
                                        API of the operating system. The author fills in the values
                                        for the components and the result is accessible to AT. </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Render content using an accessible User Agent </p>
                     </item>
                     <item>
                        <p> Use an Accessibility Tool designed for the Accessibility API of
                                    the User agent to evaluate each user interface component </p>
                     </item>
                     <item>
                        <p> Check that name and role for each user interface component are
                                    found by the tool. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Step #3 is true for each user interface component </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G136" diff="chg">
            <short-name> Providing a link at the beginning of a nonconforming Web page that points to a conforming alternate version</short-name>
            <applicability>
               <p>Primary content does not conform to WCAG but alternate versions exist that do conform to WCAG. This technique can only be used if a technology makes it possible to create an accessible link to an alternate version. </p>
            </applicability>
            <applies-to>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to enable users to access alternate content that conforms to WCAG if the primary content, or the default content that users encounter when visiting a particular URI, does not conform. The alternate page, or conforming alternate version, may make some design or functionality compromises in order to conform, but must meet the requirements described in the definition in order to be a conforming alternate version. The definition of "conforming alternate version" is: </p>
               <p id="copyconforming-alternate-versiondef"/>
               <p>When using this techique, placing a WCAG-conforming link to alternate content at the top of the page allows users to find the link quickly and to move to the conforming alternate version. To ensure users can always find the alternate version, regardless of where they enter the site, each page that does not conform at the specified level would include a link to the conforming alternate version. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>On a Web site, for each page that does not conform to WCAG at the declared level, the first link on the page is called "Alternate version". The target of this link is the alternate version of the page that conforms to WCAG at the declared level. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="SVR2"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify a page that does not conform to WCAG at the claimed conformance level. </p>
                     </item>
                     <item>
                        <p>Determine if the page contains a link to a conforming alternate version of the page. </p>
                     </item>
                     <item>
                        <p>Determine if the alternate version is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                                linktype="glossary"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">conforming alternate version</loc> of the original page and that it conforms to WCAG 2.0 at the claimed conformance level.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Both #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G138">
            <short-name>Using semantic markup whenever color cues are used 
            
          
        </short-name>
            <applicability>
               <p>All technologies that support color and text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <!--<success-criterion idref="visual-audio-contrast-without-color"/>--></applies-to>
            <description>
               <p>The objective of this technique is to combine color and semantic markup to convey information. Most users can quickly scan the content to locate information conveyed by using color. For users who cannot see color, semantic markup can provide a different type of cue. User agents can then make this type of structure perceivable to the user, for example using a different visual presentation for different types of structures or by using a different voice or pitch in an auditory presentation.</p>
               <p>Most user agents will visually distinguish text that has been identified using semantic markup. Some assistive technologies provide a mechanism for determining the characteristics of content that has been created using proper semantic markup.</p>
               <!--Note: this paragraph also appears in H49--></description>
            <examples>
               <eg-group>
                  <head>Color and strong emphasis for required form fields</head>
                  <description>
                     <p>An HTML form contains several required fields. The labels for the required fields are displayed in red. In addition, the text of each label is marked up with the STRONG element for stronger emphasis. The instructions for 
completing the form indicate that "all required fields are displayed in red and are emphasized", followed by an example.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/text.html#h-9.2.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Phrase elements: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ABBR, and ACRONYM</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G122"/>
               <relatedtech idref="H49"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For any content where color differences are used to convey information:</p>
                  <olist>
                     <item>
                        <p>Check that the same information is available through semantic markup.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G139">
            <short-name>Creating a mechanism that allows users to jump to errors</short-name>
            <applicability>
               <p>Content that accepts user data input, with restrictions on the format, value, and/or type of the input.
</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-identified"/>
               <success-criterion idref="minimize-error-suggestions"/>
            </applies-to>
            <description>
               <p>
The objective of this technique is to help users find input errors where the information supplied by the user is not accepted. This includes fields with missing required information and fields with incorrect information. When users enter data input that is checked, and input errors are detected, a link to that error is provided so that the user does not have to search for it. One approach is to use server-side validation, and to re-display the form (including any previously entered data), and a text description at the top of the page that indicates the fact that there was an input error, describes the nature of the problem, and provides a link the field(s) with a problem.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Server-side error checking</head>
                  <description>
                     <p>The user inputs invalid data on a form field and submits the form. The server returns the form, with the user's data still present, and indicates clearly in text at the top of the page that there were not accepted. The text describes the nature of the error(s) and provides a link to the field that had the problem so the user can easily navigate to it to fix the problem.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Client-side error checking with a popup</head>
                  <description>
                     <p>The user inputs invalid data on a form field and attempts to submit the form. Client-side scripting detects the error, cancels the submit, and modifies the document to provide a text message describing the error, with links to the field(s) with the error. The script also modifies the labels of the fields with the problems to highlight them.
</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Client-side error checking with no popup</head>
                  <description>
                     <p>When the user submits a form, instead of taking them to a new page, a script automatically sets focus to a text link that says "Errors have occurred." The link goes to the first item in an ordered list of descriptive error messages." Each list item is a link to the control where the error had occurred. And there is a link from the error back to the ordered list of descriptive error messages. The process is repeated as needed.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G83"/>
               <relatedtech idref="G85"/>
               <relatedtech idref="SCR18"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Fill out a form, deliberately leaving a required (mandatory) field blank, and make an input error on another field and submit the form.
    </p>
                     </item>
                     <item>
                        <p>Check that a text message is provided that identifies the field that is missing required data.
    </p>
                     </item>
                     <item>
                        <p>Check that a text message is provided that identifies the field with the input error.
    </p>
                     </item>
                     <item>
                        <p>Check that there is a link to each field that has is missing required data from the missing data message
    </p>
                     </item>
                     <item>
                        <p>Check that there is a link to the list of errors from the error message.
    </p>
                     </item>
                  </olist>
                  <note>
                     <p>Success Criterion 3.3.2 requires that if an input error is detected and suggestions for correction are known and can be provided without jeopardizing the security or purpose of the content, the suggestions are provided to the user.</p>
                  </note>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
If #2 is true, then #4 is true.
    </p>
                     </item>
                     <item>
                        <p>
If #3 is true, then #5 is true.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G140">
            <short-name>Separating information and structure from presentation to enable different presentations</short-name>
            <applicability>
               <p>Any technology</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="visual-audio-contrast-text-presentation"/>
               <success-criterion idref="visual-audio-contrast-text-images"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to facilitate the interaction of assistive technology with content by logically separating the content's structural encoding from the presentational encoding. Structural encoding is the indication of elements such as headings, paragraphs, lists, tables, etc., and is done by using technology features reserved for the purpose. By contrast, presentational encoding is the indication of formatting effects, such as typeface, color, size, position, borders, etc., and is also supported by technology features.</p>
               <p>While presentational features visually imply structure — users can determine headings, paragraphs, lists, etc. from the formatting conventions used — these features do not encode the structure unambiguously enough for assistive technology to interact with the page effectively. Providing separate structure, functionality, and presentation layers allows the semantics implied by the formatting to become programmatically determined via the structure layer.</p>
               <p>Following this technique allows user agents to:</p>
               <ulist>
                  <item>
                     <p>Perform meaningful structure transformations based on the existing structure of the content, such as reordering sections or generating a list of sections or a list of links.</p>
                  </item>
                  <item>
                     <p>Support interaction with content based on structural characteristics that cannot be determined by assistive technology on the basis of presentational information alone. For instance, it may be desirable to provide special interactions with lists by indicating the number of list items or skipping to the end, but this is only possible if the list structure is encoded in addition to the list presentation.</p>
                  </item>
                  <item>
                     <p>Modify the presentation of content by substituting alternate presentation rules attached to structural features.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>HTML with CSS</head>
                  <description>
                     <p>An HTML document uses the structural features of HTML, such as paragraphs, lists, headings, etc., and avoids presentational features such as font changes, layout hints, etc. CSS is used to format the document based on its structural properties. Well-crafted "class" attributes in the HTML extend the semantics of the structural markup if needed to allow more flexible formatting with CSS. Assistive technologies can substitute or extend the CSS to modify presentation, or ignore the CSS and interact directly with the structural encoding.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Tagged PDF</head>
                  <description>
                     <p>A PDF document consists mostly of the content embedded with formatting information. Information about the structure is provided in a separate section of the document using XML-like tags; this is called "tagged PDF". The information in these tags can be used by assistive technologies to adapt the presentation or understand the structure implied by the presentation.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C29"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the encoding of a document.</p>
                     </item>
                     <item>
                        <p>Check that structural information and functionality are explicitly provided and is logically separated from presentational information.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G141">
            <short-name>Organizing a page using headings
        </short-name>
            <applicability>
               <p>Pages with content organized into sections.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-headings"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that sections have headings that identify them. Success Criterion 1.3.1 requires that the headings be marked such that they can be programmatically identified.</p>
               <p>In HTML, this would be done using the HTML heading elements (h1, h2, h3, h4, h5, and h6). These allow user agents to automatically identify section headings. Other technologies use other techniques for identifying headers. To facilitate navigation and understanding of overall document structure, authors should use headings that are properly nested (e.g. h1 followed by h2, h2 followed by h2 or h3, h3 followed by h3 or h4, etc.).</p>
            </description>
            <examples>
               <eg-group>
                  <head>Headings used to organize an HTML page</head>
                  <description>
                     <p>A page on cooking techniques uses a h1 element for the overall title, and h2 elements for major sections on cooking with oil vs cooking with butter, and h3 elements for sub-sections on oil-cooking techniques.</p>
                  </description>
                  <code role="html401">
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;title&gt;Cooking techniques&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Cooking techniques&lt;/h1&gt;
... some text here ...
&lt;h2&gt;Cooking with oil&lt;/h2&gt;
... text of the section ...
&lt;h3&gt;Sautéeing&lt;/h3&gt;
....
&lt;h3&gt;Deep frying&lt;/h3&gt;
&lt;h2&gt;Cooking with butter&lt;/h2&gt;
... text of the section ...
&lt;/body&gt;
&lt;/html&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/wacblog/headings/quick-tips-for-accessible-headings/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Quick tips for accessible headings</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H42"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine a page with content organized into sections.</p>
                     </item>
                     <item>
                        <p>Check that a heading for each section exists.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G142">
            <short-name>Using a technology that has commonly-available user agents that support zoom
        </short-name>
            <applicability>
               <p>All technologies with user-agent provided zoom capability.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="7">
                  <p>The Zoom functionality in IE 7.0 does not always scale uniformly when absolute positioning is used and the page is scaled smaller. Microsoft Internet Explorer 7.0 supports both Zoom and Text Size changes for fonts set with %, em or named sizes.
            </p>
               </ua-issue>
               <ua-issue name="Opera" version="">
                  <p>Opera 9 supports Zoom.</p>
               </ua-issue>
               <ua-issue name="Firefox" version="">
                  <p>Firefox 2 supports only text size changes, but can change the size of pt and px fonts as well as %, em and named sizes.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to ensure content can be scaled uniformly by using a Web technology supported by user agents that change text size via a Zoom tool.</p>
               <p>Content authored in technologies that are supported by user agents that can scale content uniformly (that is, zoom into content) satisfy this Success Criterion. Because this technique relies completely on user agent functionality, it is critical to test with a wide variety of user agents.</p>
               <p>This technique requires that the zoom function preserve all spatial relationships on the page and that all functionality continues to be available. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>Internet Explorer 7 and Opera 9 provide a zoom function that scales HTML/CSS page content uniformly.</p>
                  </item>
                  <item>
                     <p>To allow users to resize text, Adobe Reader provides a magnification tool that scales PDF pages uniformly.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Display content in a user agent</p>
                     </item>
                     <item>
                        <p>Zoom content to 200%</p>
                     </item>
                     <item>
                        <p>Check whether all content and functionality is available </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G143">
            <short-name>Providing a text alternative that describes the purpose of the CAPTCHA</short-name>
            <applicability>
               <p>Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to provide information via the text alternative that identifies the non-text content as a <abbr expansion="Completely Automated Public Turing test to tell Computers and Humans Apart">CAPTCHA</abbr> tests often involve asking the user to type in text that is presented in an obscured image or audio file. From the text alternative, the user can tell that the CAPTCHA requires completing a task and what type of task it is.</p>
               <p>When an alternate version of a CAPTCHA is available, the text alternative should include instructions about how to find the alternate version.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A CAPTCHA test asks the user to type in text that is displayed in an obscured image. The text alternative is "Type the word in the image".</p>
                  </item>
                  <item>
                     <p>A CAPTCHA test asks the user to type in text that is played in an audio file. The text alternative is "Type the letters spoken in the audio".</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G144"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Remove, hide, or mask the CAPTCHA.</p>
                     </item>
                     <item>
                        <p>Replace it with the text alternative.</p>
                     </item>
                     <item>
                        <p>Check that the text alternative describes the purpose of the CAPTCHA.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G144">
            <short-name>Ensuring that the Web Page contains another CAPTCHA serving the same purpose using a different modality</short-name>
            <applicability>
               <p>Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to reduce occasions in which a user with a disability cannot complete a CAPTCHA task. Because there are alternate CAPTCHA tasks that use different modalities, a user is more likely to be able to complete one of the tasks successfully.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A Web page that includes a CAPTCHA test that must be completed successfully before the user can advance to the next step in a process. The page includes both a visual task, such as typing words displayed in a image, and an audio task, such as typing letters spoken in an audio file. A user with hearing disabilities who cannot pass the audio CAPTCHA may be able to pass the video CAPTCHA.</p>
                  </item>
                  <item>
                     <p>A blog comment form includes a visual CAPTCHA that must be completed before a user can submit comments. In addition to the visual CAPTCHA, it includes a CAPTCHA with a form field that asks, "What is two plus seven?" with a text entry field that allows users to enter the correct answer.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G143"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each CAPTCHA in a Web page</p>
                  <olist>
                     <item>
                        <p>Check that the Web page contains another CAPTCHA for the same purpose but using a different modality.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G145">
            <short-name>Ensuring that a contrast ratio of at least 3:1 exists between text (and images of text) 
                    and background behind the text</short-name>
            <applicability>
               <p> Any technology that produces visual output. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-contrast"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to make sure that users can read text
                        that is presented over a background. This technique relaxes the 5:1
                        contrast ratio requirement for text that is at least 18 point (if not bold) or at least 14 point (if bold). </p>
               <p> If the background is a solid color (or all black or all white) then the
                        contrast ratio of the larger-scale text can be maintained by making sure that each
                        of the text letters have a 3:1 contrast ratio with the background. </p>
               <p> If the background or the letters vary in relative luminance (or are patterned), then
                        the background around the letters can be chosen or shaded so that the
                        letters maintain a 3:1contrast ratio with the background behind them
                        even if they do not have that contrast ratio with the entire background. </p>
               <p> The contrast ratio can sometimes be maintained by changing the
                        relative luminance of the letters as the relative luminance of the background changes across
                        the page. </p>
               <p> Another method is to provide a halo around the text that provides the
                        necessary contrast ratio if the background image or color would not
                        normally be sufficiently different in relative luminance. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>
              A black background is chosen so that light colored letters that match the company's logo can be used.</p>
                     <p>Larger-scale text is placed over a picture of the college campus. Since a wide variety of colors and darknesses appear in the picture, the area behind the text is fogged white so that the picture is very faint and the maximum darkness is still light enough to maintain a 3:1 contrast ratio with the black text written over the picture. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.paciellogroup.com/resources/contrast-analyser.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Analyser – Application</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/services/luminositycontrastratio.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Ratio Analyser - online service</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/colour-contrast-analyser-firefox-extension.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colour Contrast Analyser - Firefox Extension</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://trace.wisc.edu/contrast-ratio-examples/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Color Contrast Samples</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/Graphics/atypical-color-response"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Atypical colour response</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.colorsontheweb.com/colorcontrast.asp"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colors On the Web Color Contrast Analyzer</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.vischeck.com/daltonize/runDaltonize.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Tool to convert images based on color loss so that contrast is restored as luminance contrast when there was only color contrast (that was lost due to color deficiency)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.456bereastreet.com/archive/200709/10_colour_contrast_checking_tools_to_improve_the_accessibility_of_your_design/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">List of color contrast tools</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Measure the relative luminance of each letter (unless they are all
                                    uniform) using the formula: </p>
                        <ulist>
                           <item>
                              <p>L = 0.2126 * <emph role="bold">R</emph> + 0.7152 * <emph role="bold">G</emph> + 0.0722 * <emph role="bold">B</emph> where <emph role="bold">R</emph>, <emph role="bold">G</emph> and <emph role="bold">B</emph> are defined as:</p>
                              <ulist>
                                 <item>
                                    <p>if R<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">R</emph> = R<sub>sRGB</sub>/12.92 else <emph role="bold">R</emph> = ((R<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                                 <item>
                                    <p>if G<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">G</emph> = G<sub>sRGB</sub>/12.92 else <emph role="bold">G</emph> = ((G<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                                 <item>
                                    <p>if B<sub>sRGB</sub> &lt;= 0.03928 then <emph role="bold">B</emph> = B<sub>sRGB</sub>/12.92 else <emph role="bold">B</emph> = ((B<sub>sRGB</sub>+0.055)/1.055) ^ 2.4</p>
                                 </item>
                              </ulist>
                              <note role="nonumber">
                                 <p>and R<sub>sRGB</sub>, G<sub>sRGB</sub>, and B<sub>sRGB</sub> are defined as:</p>
                              </note>
                              <ulist>
                                 <item>
                                    <p>R<sub>sRGB</sub> = R<sub>8bit</sub>/255</p>
                                 </item>
                                 <item>
                                    <p>G<sub>sRGB</sub> = G<sub>8bit</sub>/255</p>
                                 </item>
                                 <item>
                                    <p>B<sub>sRGB</sub> = B<sub>8bit</sub>/255</p>
                                 </item>
                              </ulist>
                              <note role="nonumber">
                                 <p>The "^" character is the exponentiation operator. </p>
                              </note>
                           </item>
                        </ulist>
                        <note>
                           <p> For aliased letters, use the relative luminance value found two pixels in
                                                from the edge of the letter. </p>
                        </note>
                     </item>
                     <item>
                        <p> Measure the relative luminance of the background pixels
                                    immediately next to the letter using same formula. </p>
                     </item>
                     <item>
                        <p> Calculate the contrast ratio using the following
                                    formula. </p>
                        <ulist>
                           <item>
                              <p>(L1 + 0.05) / (L2 + 0.05), where</p>
                              <ulist>
                                 <item>
                                    <p>L1 is the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                                            linktype="guideline"
                                            xlink:type="simple"
                                            xlink:show="replace"
                                            xlink:actuate="onRequest">relative luminance</loc> of the lighter of the foreground or background colors, and</p>
                                 </item>
                                 <item>
                                    <p>L2 is the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                                            linktype="guideline"
                                            xlink:type="simple"
                                            xlink:show="replace"
                                            xlink:actuate="onRequest">relative luminance</loc> of the darker of the foreground or background colors.</p>
                                 </item>
                              </ulist>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p> Check that the contrast ratio is equal to or
                                    greater than 3:1 </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #4 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G146">
            <short-name>Using liquid layout</short-name>
            <applicability>
               <p>Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to be able to present content without introducing horizontal scroll bars by using layout techniques that adapt to the available horizontal space. Liquid layouts define layout regions that both resize with text, and reflow as needed to accommodate on-screen display. Although the exact layout therefore varies, the relationship of elements and the reading order remains the same. This is an effective way to create designs that present well on different devices and for users with different font size preferences.</p>
               <p>The basic principles of liquid layouts are to:</p>
               <olist>
                  <item>
                     <p>Define the size of layout regions using units that will cause the region to scale relative to text, so they enlarge or shrink as text is enlarged or shrunk;</p>
                  </item>
                  <item>
                     <p>Position the layout regions as a row of adjacent floating boxes, which wrap to new rows as needed in much the same way as words in a paragraph wrap.</p>
                  </item>
               </olist>
               <p>Complex liquid layouts may be achieved by nesting layout regions, thus creating localized liquid layouts within a larger liquid layout. Even simple liquid layouts require design finesse to achieve good-looking results at a wide range of text sizes, but well-designed liquid layouts can be the most effective page design.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Simple liquid layout in HTML and CSS</head>
                  <description>
                     <p>The following fairly simple example uses HTML and CSS to create a liquid layout. The three columns adjust their size as text size is adjusted. When the total horizontal width exceeds the available width of the columns, the last column wraps to be positioned below, rather than beside, the previous column. The font size can be increased without either clipping or introducing horizontal scrolling until the longest word no longer fits in a column. This particular example uses percent sizes for the columns and defines them as floating regions using the "float" property.</p>
                  </description>
                  <code>   
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="content-type" content="text/html; charset=utf-8" /&gt;
&lt;title&gt;Example of Basic Liquid Layout&lt;/title&gt;
&lt;style type="text/css"&gt;

.column
	{
	border-left: 1px solid green;
	padding-left:1%;
	float: left;
	width: 32%;
	}
#footer
	{
	border-top: 1px solid green;
	clear: both;
	}
&lt;/style&gt;

&lt;/head&gt;
&lt;body&gt;
   &lt;h1&gt;WCAG Example&lt;/h1&gt;
   &lt;h2&gt;Text in Three Columns&lt;/h2&gt;
      &lt;div title="column one" class="column"&gt;
        &lt;h3&gt;Block 1&lt;/h3&gt;
        &lt;p&gt; The objective of this technique is to be able to present content 
            without introducing horizontal scroll bars by using layout 
            techniques that adapt to the available horizontal space.
        &lt;/p&gt;
      &lt;/div&gt;

      &lt;div title="column two" class="column"&gt;
        &lt;h3&gt;Block 2&lt;/h3&gt;
        &lt;p&gt; This is a very simple example of a page layout that adapts as the
            text size changes.
        &lt;/p&gt;
      &lt;/div&gt;

      &lt;div title="column three" class="column"&gt;
      &lt;h3&gt;Block 3&lt;/h3&gt;
        &lt;p&gt; For techniques that support more complex page layouts, see the
            Resources listed below.
        &lt;/p&gt;
      &lt;/div&gt;

      &lt;p id="footer"&gt;Footer text&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webreference.com/authoring/style/sheets/css_mastery2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS Mastery: Fixed-Width, Liquid, and Elastic Layouts and Faux Columns</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.cssliquid.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Liquid Designs</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C12"/>
               <relatedtech idref="C13"/>
               <relatedtech idref="C14"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Display content in a user agent.</p>
                     </item>
                     <item>
                        <p>Increase text size to 200%.</p>
                     </item>
                     <item>
                        <p>Check whether all content and functionality is available with no horizontal scrolling.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G147" diff="del">
            <short-name>Providing instruction about change of context due to change of input setting ahead of such encounter</short-name>
            <applicability>
               <p>Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
            </applies-to>
            <description>
               <p>Unexpected change of context due to change of user interface setting can sometimes be confusing to users.  One way to avoid confusion is to provide instruction about change of context ahead of such encounter.  Below are some examples of how to provide the instruction.</p>
               <ulist>
                  <item>
                     <p>Provide instruction on the Web page with reading order that precedes the user interface element that causes change of context by change of setting.</p>
                  </item>
                  <item>
                     <p>In case of a multi-step process in which users must go through particular steps to reach the user interface element where change of setting would cause a change of context, provide the instruction as part of the process prior to the step where they may encounter such change of context.</p>
                  </item>
                  <item>
                     <p>In case of intranet where user training is required prior to use of a Web application with user interface element that causes change of context by change of setting, instruction is provided during training.</p>
                  </item>
               </ulist>
            </description>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find occurrence of change of context due to change of user interface setting</p>
                     </item>
                     <item>
                        <p>Find instructional material that all users must review prior to encountering of the change of context.
</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If #1 is true, #2 is also true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G148">
            <short-name>Not specifying background color, not specifying text color, and not using technology features that change those defaults</short-name>
            <applicability>
               <p>Any technology where text and background color are specified
                        separately and browsers can control default colors. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-contrast"/>
               <success-criterion idref="visual-audio-contrast7"/>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to make sure that users can read text
                        that is presented over a background. With this technique the author avoids
                        having to do any contrast measures by simply not specifying the text color
                        and not specifying the background. As a result the colors of both are
                        completely determined by the user agent. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Example 1: Author specifies neither text color nor background. They
                                also do not use CSS. As a result the user can set his browser
                                defaults to provide the colors and contrasts that work well for
                                them. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.paciellogroup.com/resources/contrast-analyser.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Analyser – Application</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/services/luminositycontrastratio.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Ratio Analyser - online service</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/colour-contrast-analyser-firefox-extension.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colour Contrast Analyser - Firefox Extension</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://trace.wisc.edu/contrast-ratio-examples/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Color Contrast Samples</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/Graphics/atypical-color-response"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Atypical colour response</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.colorsontheweb.com/colorcontrast.asp"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colors On the Web Color Contrast Analyzer</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.vischeck.com/daltonize/runDaltonize.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Tool to convert images based on color loss so that contrast is restored as luminance contrast when there was only color contrast (that was lost due to color deficiency)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.456bereastreet.com/archive/200709/10_colour_contrast_checking_tools_to_improve_the_accessibility_of_your_design/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">List of color contrast tools</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G18"/>
               <relatedtech idref="G156"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Look in all places that text color can be specified </p>
                     </item>
                     <item>
                        <p> Check that text color is not specified </p>
                     </item>
                     <item>
                        <p> Look in all areas that background color or image used as a background can be
                                        specified </p>
                     </item>
                     <item>
                        <p> Check that no background color or image used as a background is specified </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> # 2 and 4 are true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G149">
            <short-name>Using user interface components that are highlighted by the user agent when they receive focus</short-name>
            <applicability>
               <p>All technologies with user-agent provided focus highlighting.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that the focused component can be visually identified by the user by relying on user agent support. It is common for user agents to highlight standard controls in some way when they receive focus. UAAG-conformant user agents do so when they satisfy checkpoint 10.2 "Highlight selection, content focus, enabled elements, visited links". When authors use standard controls for which the user agent provides this support, users are informed of the focus location in a standard, predictable way.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>When html text input fields receive focus, browsers display a blinking vertical bar at the insertion point in the text field.</p>
                  </item>
                  <item>
                     <p>When html links receive focus, they are surrounded by a dotted focus highlight rectangle. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/UAAG10/guidelines.html#tech-interaction-highlight"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">User Agent Accessibility Guidelines 10.2: Highlight selection, content focus, enabled elements, visited links</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <p>For each focusable component in the Web page:</p>
                  <olist>
                     <item>
                        <p>Set focus to the control</p>
                     </item>
                     <item>
                        <p>Check whether the user agent has highlighted the control in some way </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G150">
            <short-name>Providing text based alternatives for live audio-only content</short-name>
            <applicability>
               <p>All technologies that present live audio-only information</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-live-audio-only"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to allow users who cannot hear to be able to access real-time audio broadcasts. It is more difficult to create accurate real-time alternatives because there is little time to correct mistakes, to listen a second time or to consult someone to be sure the words are accurately reproduced. It is also harder to simplify or paraphrase information if it is flowing too quickly.</p>
               <p>Real-time typing text entry techniques exist using stenographic and rapid typing technologies. Re-voicing speech-to-text (where a person listens to speech and then carefully re-voices it into a computer trained to their speech) is used today for telephone relay services and may be used in the future for captioning. Eventually speech-to-text with correction will be possible. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A radio station uses Web based captioning services to provide alternatives for live sporting events; the output from the service is incorporated in a viewport of the Web page which also includes a streaming audio control.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G9"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that a procedure and policy is in place to ensure that text alternatives are delivered in real-time</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#1 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G151">
            <short-name>Providing a link to a text transcript of a prepared statement or script if the script is followed</short-name>
            <applicability>
               <p>All technologies that present live audio-only information</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-live-audio-only"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a transcript or script if the live audio content is following a set script. Because it is prepared in advance, the script can be more accurate and complete than live transcription. However, the script will not be synchronized with the audio as it plays. Live audio should not deviate from the script for this technique.</p>
               <p>With this technique, a link to the transcript or script is provided and should conform to WCAG 2.0 and could either be included at another location on the same Web page or at another URI.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A live radio play of a fringe theatre group is being broadcast to the Web. As the actors stick largely to a set script, and the budget for the program is small, the producers provide a link (with the playwright's permission) to the script of the play in HTML.</p>
                  </item>
                  <item>
                     <p>A member of the government broadcasts an important policy speech on the Web. A transcript of the speech is made available on the Web site when the speech starts.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G150"/>
               <relatedtech idref="G58"/>
               <relatedtech idref="G69"/>
               <!--@@ link to Providing a viewport to a live text service which is being created by a trained stenographer who transcribes the spoken audio with minimal errors when it exists--></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check for the presence of a link that points directly to the script or transcript.</p>
                     </item>
                     <item>
                        <p>Check that the live audio follows the script.</p>
                     </item>
                     <item>
                        <p diff="add">If the alternate version(s) are on a separate page, check for the availability of link(s) to allow the user to get to the other versions.<issue id="i2662e" status="open">
                              <p>2662</p>
                           </issue>
                        </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G152">
            <short-name>Setting animated gif images to stop blinking after n cycles (within 5 seconds)</short-name>
            <applicability>
               <p>Any technology that supports animated gif (GIF89a)</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that animated gif images stop blinking within five seconds. There are three aspects of the design of animated gif images that work together to determine how long the image blinks (or otherwise animates):</p>
               <ulist>
                  <item>
                     <p>the number of <emph role="bold">frames</emph> in the image, which are discrete images in the animation sequence;</p>
                  </item>
                  <item>
                     <p>the <emph role="bold">frame rate</emph>, which is how long each image is displayed;</p>
                  </item>
                  <item>
                     <p>the number of <emph role="bold">repetitions</emph>, which is how many times the entire animation is performed;</p>
                  </item>
               </ulist>
               <p>At its simplest, the duration of the animation is the number of frames times the frame rate times the number of repetitions. For example, a simple blinking image with 2 frames, a frame rate of .5 seconds, and 3 repetitions will have a duration of (2 * 0.5 * 3) seconds, or exactly 3 seconds.</p>
               <p>Many animated gif images have a constant frame rate, i.e., the amount of time each frame is displayed is the same. However, it is possible to set a different frame rate for each frame, to allow certain frames to be displayed longer than others. In this case, the duration of the animation is the sum of the frame rates times the number of repetitions. For example, a simple image with two frames, the first of which displays for .75 seconds and the second for .25 seconds, and three repetitions will have a duration of ((.75 + .25) * 3) seconds, also exactly 3 seconds.</p>
               <p>For an image to stop blinking within 5 seconds, one of the three variables must be adjusted. Most commonly, set the number of repetitions to five seconds divided by the product of the number of frames times the frame rate (or by the sum of the frame rate). Truncate this number down to the nearest integer, do not round up to the next integer, to ensure that the image will stop within five seconds.</p>
               <p>If even one repetition results in more than five seconds of animation, one of the other factors must be adjusted. Reduce the number of frames in the image, or increase the frame rate. Be careful when increasing the frame rate that the resulting image does not fail the requirement not to exceed the general flash or red flash thresholds; attention to this is especially important for large images.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>
                        <emph role="bold">A simple blinking image.</emph> An image has 2 frames, a frame rate of .5 seconds, and 3 repetitions. The animation has a duration of (2 * 0.5 * 3) seconds, or exactly 3 seconds, and therefore meets the requirements of the success criterion.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Display an animated gif and time how long it animates.</p>
                     </item>
                     <item>
                        <p>Alternatively, use an image editor to determine the number of frames, the frame rate, and the number of repetitions. Calculate the product of the number of frames multiplied by the frame rate times the number of repetitions. If the frame rates are not uniform, calculate the product of the sum of the frame rates multiplied by the number of repetitions.</p>
                     </item>
                     <item>
                        <p>Using either method, the duration of animation should be less than or equal to 5 seconds.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G153">
            <short-name>Making the text easier to read</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-supplements"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that the text of the Web page is not difficult to read. Users with disabilities that make it difficult to decode words and sentences are likely to have trouble reading and understanding complex text. If the text does not require reading ability more advanced than the lower secondary education level, no supplements or alternative versions are needed.</p>
               <p>In order to reduce the complexity of the text:</p>
               <ulist>
                  <item>
                     <p>Develop a single topic or subtopic per paragraph.</p>
                  </item>
                  <item>
                     <p>Use the simplest sentence forms consistent with the purpose of the content. For example, the simplest sentence-form for English consists of Subject-Verb-Object, as in John hit the ball or The Web site conforms to WCAG 2.0.</p>
                  </item>
                  <item>
                     <p>Use sentences that are no longer than the typical accepted length for secondary education. (Note: In English that is 25 words.)</p>
                  </item>
                  <item>
                     <p>Consider dividing longer sentences into two.</p>
                  </item>
                  <item>
                     <p>Use sentences that contain no more than two conjunction.</p>
                  </item>
                  <item>
                     <p>Indicate logical relationships between phrases, sentences, paragraphs, or sections of the text.</p>
                  </item>
                  <item>
                     <p>Avoid professional jargon, slang, and other terms with a specialized meaning that may not be clear to people.</p>
                  </item>
                  <item>
                     <p>Replace long or unfamiliar words with shorter, more common terms.</p>
                  </item>
                  <item>
                     <p>Remove redundant words, that is, words that do not change the meaning of the sentence.</p>
                  </item>
                  <item>
                     <p>Use single nouns or short noun-phrases.</p>
                  </item>
                  <item>
                     <p>Remove complex words or phrases that could be replaced with more commonly used words without changing the meaning of the sentence.</p>
                  </item>
                  <item>
                     <p>Use bulleted or numbered lists instead of paragraphs that contain long series of words or phrases separated by commas.</p>
                  </item>
                  <item>
                     <p>Make clear pronoun references and references to other points in the document.</p>
                  </item>
                  <item>
                     <p>Use the active voice for documents written in English and some other Western languages, unless there is a specific reason for using passive constructions. Sentences in the active voice are often shorter and easier to understand than those in the passive voice.</p>
                  </item>
                  <item>
                     <p>Use verb tenses consistently.</p>
                  </item>
                  <item>
                     <p>Use names and labels consistently. </p>
                  </item>
               </ulist>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>The help pages for a Web application are written in language that is not more advanced than the lower secondary education level.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Measure the readability of the text.</p>
                     </item>
                     <item>
                        <p>Check that the text requires reading ability less advanced than the lower secondary education level.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <!-- G154 is now H88 --><technique id="G155">
            <short-name>Providing a checkbox in addition to a submit button</short-name>
            <applicability>
               <p>Any technology</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-reversible"/>
               <success-criterion idref="minimize-error-reversible-all"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a checkbox that users must select to indicate they have reviewed their input and are ready for it to be committed. This is important when the nature of the transaction is such that it may not be reversible if input errors are subsequently discovered or when the result of an action is that data is deleted. The author provides a checkbox that is not selected when the page loads, with a label like "I confirm that the input is correct and am ready to submit" or "I confirm that I wish to delete this data". The checkbox should be located near the submit button to help the user notice it during the submission process. If the checkbox is not selected when the form is submitted, the input is rejected and the user is prompted to review their entry, select the checkbox, and resubmit. Only if the checkbox is selected will the input be accepted and the transaction processed.</p>
               <p>This checkbox helps to guard against the consequences of an accidental form submission, and also serves to prompt the user to be sure they have entered accurate data. This is more secure than simply putting a label on the submit button like "input is correct, submit". Providing the checkbox as a separate control from the submit button forces the user to "double-check", as they must both select the checkbox and activate the submit button for the transaction to proceed. As such, this is a mechanism for reviewing, confirming, and correcting information before finalizing the submission.</p>
               <note>
                  <p>When users submit information without selecting the checkbox, they should not lose the information that they have entered when they return to the form to resubmit. </p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An online bank service allows users to transfer money between accounts in different currencies. Because exchange rates are constantly in flux, the money cannot be re-exchanged at the same rate if the user discovers an error in their input after the transaction has been carried out. In addition to the "account from", "account to", and "amount" fields, there is a checkbox with a label "I have checked that the amount I wish to transfer is correct". If this checkbox is not selected when the user submits the form, the transaction is not carried out and the user is notified. If the checkbox is selected, the (irreversible) transaction is carried out.</p>
                  </item>
                  <item>
                     <p>An online payment system stores user bank account information in order to process payments. There is an elaborate procedure for users to enter new accounts and verify that they are the owner. There is the facility to delete old accounts, but if an account is accidentally deleted, it would be difficult to reinstate it, and the transaction history with that account would be lost. Therefore, on pages that allow users to delete accounts, there is a checkbox with the label "I confirm that I wish to delete this account." If this checkbox is not selected when the user submits the form, the account is not deleted and the user is given an error message. Only if the checkbox is selected is the account deleted.</p>
                  </item>
                  <item>
                     <p>A checkout form on a shopping site includes a form that collects order, shipping and billing information. After submitting the form, the user is taken to a page where the information they have submitted is summarized for review. Below the summary, a checkbox with the label "I have reviewed and confirmed that this data is correct" is shown. The user must mark the checkbox and activate a "complete order" button in order to complete the transaction.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G98"/>
               <relatedtech idref="G99"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For user input pages that cause irreversible transactions to occur:</p>
                  <olist>
                     <item>
                        <p>Check that a checkbox indicating user confirmation of the input or action is provided in addition to the submit button.</p>
                     </item>
                     <item>
                        <p>Check that if the checkbox is not selected when the form is submitted, the input is rejected and the user is prompted to review their entry, select the checkbox, and resubmit.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G156">
            <short-name>Using a technology that has commonly-available user agents that can change the foreground and background of blocks of text</short-name>
            <applicability>
               <p>All technologies</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Most browsers allow the user to change the color settings to override Web author's CSS and HTML color schemes. This includes IE, all versions of Firefox, Mozilla, and Opera after version 6.</p>
               </ua-issue>
               <ua-issue name="Firefox" version="1.5+">
                  <p>When specified colors are overridden in Firefox and Netscape, most Javascript pop-up boxes and drop-down menus become unusable. Pop-up boxes gain a transparent background, superimposing the text of the box on the text of the page, and drop-down menus either become transparent or gain a dark-grey background.</p>
               </ua-issue>
               <ua-issue name="IE" version="6">
                  <p>IE 6 will not override background colors in the browser unless the same background color has also been selected in the system settings.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>Some people with cognitive disabilities require specific color combinations of foreground text and background to help them successfully understand the contents of the Web page. Most popular browsers provide the option to change colors settings globally within the browser. In this case the colors selected by the user override the foreground and background colors specified by the Web author.</p>
               <p>In order to meet this success criteria, the Web author would design the page so that it works with browsers that have these controls, and the author does not override these controls.</p>
               <p>Note that overriding the foreground and background colors of all text on a page may hide visual clues to the grouping and organization of the Web page, making it much more difficult to understand and use. This technique may not be appropriate when background colors are used to delineate areas of the page. This technique may be appropriate for technologies and user agents that do not alter border colors when background colors are overridden. If background colors are used to delineate areas of the page, "Specifying text and background colors of secondary content such as banners, features and navigation in CSS while not specifying text and background colors of the main content (future link)" <!--@@ insert or update this when the relevant technique is drafted -->may be used to permit the user to control the colors of the main text while retaining the visual structure of the Web page.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A Web page is designed using HTML and CSS to specify the foreground and background colors. The user sets their own colors in Internet Explorer 7 and they can view the content with their chosen foreground and background colors.</p>
                  </item>
                  <item>
                     <p>A Web page is designed using HTML and CSS. There is a link on the page to instructions on how to set colors in various browsers.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.bbc.co.uk/accessibility/win/seeing/colour/browser/sub_3.shtml"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BBC's Web page with instructions how to change the browser colors in most browsers</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the Web page in <phrase diff="add">a browser that allows users to change colors of HTML content</phrase>
                           <phrase diff="del">a browser that can change colors</phrase>.</p>
                     </item>
                     <item>
                        <p>Change the foreground and background colors in the browser settings so they are different than those specified in the content.</p>
                     </item>
                     <item>
                        <p>Return to the page and check that that the new specified foreground text and background colors in the browser override the colors specified in the content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G157">
            <short-name>Incorporating a live audio captioning service into a Web page</short-name>
            <applicability>
               <p>All technologies that present live audio-only information.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-live-audio-only"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use a real-time caption service to provide a text version of live audio content. Such services use a trained human operator who listens in to what is being said and uses a special keyboard to enter the text with only a small delay. They are able to capture a live event with a high degree of fidelity, and also to insert notes on any non spoken audio which is essential to understanding the event. The viewport containing the caption text is available on the same Web page as the live audio content.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An internet radio station provides a viewport on its Web page for its news services. Live news reports, especially emergency reports, are transcribed by a real-time caption service and displayed in the viewport.</p>
                  </item>
                  <item>
                     <p>A conferencing or screen-sharing service includes a window with running real-time transcription of the verbal presentation. This is achieved by arranging ahead of time with a remote relay audio-teleconference captioning service. The online web conferencing or screen-sharing service needs to be designed with this possible usage in mind because using a separate window for the live text would be a significant usability barrier.</p>
                  </item>
                  <item>
                     <p>A recurring audio conference uses an online hand-raising utility to assist with queuing. In order to facilitate use of this product in conjunction with an on-line relay conference captioning service, the queuing utility is designed to be fully operational in a narrow viewport. For additional enhancement, a website is created to bring up both viewports within a single Web page.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/captions/realtime.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Real-time Captioning</loc>
                        </p>
                        <ulist>
                           <item>
                              <p>
                                 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.webaim.org/products/captioncaster/"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">CaptionCaster</loc>
                              </p>
                           </item>
                           <item>
                              <p>
                                 <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.captionedtext.com/"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">Captioned Text</loc> (provider for relay conference captioning)</p>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.google.com/Top/Arts/Television/Closed_Captioning/Service_Providers/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Google Directory of Closed Caption Service Providers</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://en.wikipedia.org/wiki/Communication_Access_Real-Time_Translation"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Wikipedia entry for CART</loc> (variously Computer Assisted Real-time Captioning or Communication Access Real-time Translation)</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.captions.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Closed Captioning Web</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.cartinfo.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Communication Access Information Center</loc>
                        </p>
                     </item>
                     <item>
                        <p>Web conferencing products with integrated support for captioning viewport</p>
                        <ulist>
                           <item>
                              <p>
                                 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://onlineconferencingsystems.com/vpat/"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">IDEAL Conference</loc>
                              </p>
                           </item>
                           <item>
                              <p>
                                 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                      href="http://www.adobe.com/resources/accessibility/tools/vpat/acrobatconnect_508.html"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">Acrobat Connect</loc>
                              </p>
                           </item>
                        </ulist>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G150"/>
               <relatedtech idref="G58"/>
               <relatedtech idref="G69"/>
               <!--  Providing a link to a text transcript of a prepared statement or script if the script is followed --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the Web page contains a viewport associated with the live audio content.</p>
                     </item>
                     <item>
                        <p>Check that the text of the live audio content appears in the viewport with less than 30 seconds delay.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G158">
            <short-name>Providing an alternative for time-based media for the audio</short-name>
            <applicability>
               <p>General technique. Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-av-only-alt"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to provide an accessible alternative way of presenting the information in an audio-only presentation.</p>
               <p>In an audio-only presentation, information is presented in a variety of ways including dialogue and sounds (both natural and artificial). In order to present the same information in accessible form, this technique involves creating a document that tells the same story and presents the same information as the prerecorded audio-only content. In this technique, the document serves as long description for the content and includes all of the important dialogue and as well as descriptions of background sounds etc. that are part of the story.</p>
               <p>If an actual script was used to create the audio-only content in the first place, this can be a good place to start. In production and editing however, the content often varies somewhat from the script. For this technique, the original script would be corrected to match the dialogue and what actually happens in the final edited form of the audio presentation.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A podcast includes a description of new features in a recent software release. It involves two speakers informally discussing the new and updated features and describing how they are used. One of the speakers works from a list of questions that was used to outline the discussion prior to recording. After the recording is complete, the outline is then edited and supplemented to match the dialogue etc. The resulting transcript is then made available on the speakers Web site along with the audio-only file. The text alternative that identifies the audio only content reads, "Episode 42: Zap Version 12 (text transcript follows)" and the link to the transcript is provided immediately following the audio-only content.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/wacblog/multimedia/overcoming-the-challenge-of-podcast-transcription/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Overcoming the challenge of podcast transcription</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G69"/>
               <relatedtech idref="G159"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>View the audio-only content while referring to the alternative for time-based media.</p>
                     </item>
                     <item>
                        <p>Check that the dialogue in the transcript matches the dialogue and information presented in the audio-only presentation.</p>
                     </item>
                     <item>
                        <p>If the audio includes multiple voices, check that the transcript identifies who is speaking for all dialogue.</p>
                     </item>
                     <item>
                        <p>Check that at least one of the following is true:</p>
                        <olist>
                           <item>
                              <p>The transcript itself can be programmatically determined from the text alternative for the audio-only content</p>
                           </item>
                           <item>
                              <p>The transcript is referred to from the programmatically determined text alternative for the audio-only content</p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p diff="add">If the alternate version(s) are on a separate page, check for the availability of link(s) to allow the user to get to the other versions.<issue id="i2662b" status="open">
                              <p>2662</p>
                           </issue>
                        </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G159">
            <short-name>Providing an alternative for time-based media of the video content</short-name>
            <applicability>
               <p>General technique. Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-av-only-alt"/>
               <success-criterion idref="media-equiv-text-doc"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to provide an accessible alternative way of presenting the information in an video-only presentation.</p>
               <p>In a video-only presentation, information is presented in a variety of ways including animation, text or graphics, the setting and background, the actions and expressions of people, animals, etc. In order to present the same information in accessible form, this technique involves creating a document that tells the same story and presents the same information as the prerecorded video-only content. In this technique, the document serves as a long description for the content and includes all of the important information as well as descriptions of scenery, actions, expressions, etc. that are part of the presentation.</p>
               <p>If a screenplay for the video-only content was used to create the content in the first place, this can be a good place to start. In production and editing however, the final version often varies somewhat from the screenplay. To use the screenplay, it would need to be corrected to match the final edited form of the video-only presentation.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An animation shows how to assemble a woodworking project. There is no audio, but the animation includes a series of numbers to represent each step in the process as well as arrows and picture-in-picture highlights illustrating how the assembly is completed. It also includes short outtake animations illustrating what will happen if assembly is done incorrectly. A text alternative that identifies the video-only content reads, "Breadbox assembly video (text description follows)," and the text description of the video includes a full text description of each step in the video.</p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G69"/>
               <relatedtech idref="G158"/>
               <!-- @@ Adding an audio track that describes the important video content and describing it as such (future link) --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>View the video-only content while referring to the alternative for time-based media.</p>
                     </item>
                     <item>
                        <p>Check that the information in the transcript includes the same information that is in the video-only presentation.</p>
                     </item>
                     <item>
                        <p>If the video includes multiple people or characters, check that the transcript identifies which person or character is associated with each action described.</p>
                     </item>
                     <item>
                        <p>Check that at least one of the following is true:</p>
                        <olist>
                           <item>
                              <p>The transcript itself can be programmatically determined from the text alternative for the video-only content</p>
                           </item>
                           <item>
                              <p>The transcript is referred to from the programmatically determined text alternative for the video-only content </p>
                           </item>
                           <item>
                              <p diff="add">If the alternate version(s) are on a separate page, check for the availability of link(s) to allow the user to get to the other versions.<issue id="i2662c" status="open">
                                    <p>2662</p>
                                 </issue>
                              </p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G160" diff="add">
            <short-name>Providing sign language versions of information, ideas, and processes that must be understood in order to use the content</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-supplements"/>
            </applies-to>
            <description>
               <p>For some people who are deaf or have certain cognitive disabilities, sign language may be their first language. A sign language version of the page may be easier for them to understand than a written language version. The objective of this technique is to provide sign language versions of content that help signing users understand difficult text that describes concepts or processes. The sign language content is provided in addition to the text.</p>
               <p>Since this is supplemental content (and not sign language for speech in content) it should be viewed as separate from the content and would not necessarily be synchronized. Although there may be occasions when that would be useful, it is not required.</p>
               <p>To make the sign language version available with the rest of the Web page contents, the video may be embedded in the Web page directly or the Web page may include a link that brings up a video player in a separate window. The sign language version could also be provided via a link to a separate Web page that displays the video.</p>
               <p>Sign language is a three-dimensional, visual language that uses the hands, arms, shoulders, head, face, lips and tongue of the signer. For viewers to understand what is being signed, the video must record the sign language completely. Generally speaking, the signer should be as close to the camera as possible without risking cut-offs (such as hands moving outside the video).</p>
               <p>Information on how to find sign language interpreters is listed in the resources section below.</p>
               <note>
                  <p>If the video stream is too small, the sign language interpreter will be indiscernible. When creating a video stream that includes a video of a sign language interpreter, make sure there is a mechanism to play the video stream full screen in the accessibility-supported content technology. Otherwise, be sure the interpreter portion of the video is adjustable to the size it would be had the entire video stream been full screen.</p>
                  <p>Since sign language is not usually a signed version of the printed language, the author has to decide which sign language to include. Usually the sign language of the primary audience would be used. If intended for multiple audiences, multiple sign languages may be used. Refer to advisory techniques for multiple sign languages.</p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>The information about how to contact support or send questions about a Web site is provided in a sign language video as well as in text.</p>
                  </item>
                  <item>
                     <p>Help pages for a Web application are provided in sign language as well as in text.</p>
                  </item>
                  <item>
                     <p>A company Web site provides sign language videos describing the technical details of each product.</p>
                  </item>
                  <item>
                     <p>A religious Web site includes American Sign Language among the different languages in which it makes its site available.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.nidcd.nih.gov/health/hearing/asl.asp"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">National Institute on Deafness and other Communication Disorders</loc>: Information on American Sign Language</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.rnid.org.uk/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Royal National Institute for Deaf People (RNID)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.sign-lang.uni-hamburg.de/SigningBooks/SBRC/Grid/d71/guide12.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Techniques for filming sign language interpreters</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ieeexplore.ieee.org/iel5/2220/28020/01251527.pdf?arnumber=1251527"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Perceptually optimised sign language video coding based on eye tracking analysis</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.ece.udel.edu/InfoAccess/Technology/sl.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Sign Language Video Communications</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.rid.org/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Registry of Interpreters for the Deaf</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.aslnetwork.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">American Sign Language Interpreter Network</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.signonasl.com/home.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Sign On - A Sign Language Interpreting Resource, Inc.</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.aslservices.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">American Sign Language Services, Inc.</loc>
                        </p>
                     </item>
                  </ulist>
                  <p>See also <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="media-equiv-sign"
                          locn-note="media-equiv-sign-resources-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Related Resources for Success Criterion 1.2.6 - Sign Language</loc>.</p>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G54"/>
               <relatedtech idref="G81"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify text that discusses ideas or processes that must be understood in order to use the content.</p>
                     </item>
                     <item>
                        <p>Check if sign language supplements to the text are available in the content or through links within the content.</p>
                     </item>
                     <item>
                        <p>Check that the sign language supplements show the concepts or processes discussed in the text.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G161" diff="add">
            <short-name>Providing a search function to help users find content</short-name>
            <applicability>
               <p>All technologies that include forms.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-mult-loc"/>
            </applies-to>
            <description>
               <p>Providing a search function that searches your Web pages is a design strategy that offers users a way to find content. Users can locate content by searching for specific words or phrases, without needing to understand or navigate through the structure of the Web site. This can be a quicker or easier way to find content, particularly on large sites.</p>
               <p>Some search companies offer sites free access to their search applications. Search engines are available that can be installed on your own server. Some web hosting companies offer search scripts that customers can include on their web pages. Most services also offer paid versions of their tools with more advanced features.</p>
               <p>Implementing a search function that will spell-check the terms, include different endings for the terms (stemming), and allow for the use of different terminology (synonyms) will further increase the accessibility of the search function.</p>
               <p>The search functionality is added by either including a simple form on the Web page, usually a text field for the search term and a button to trigger the search or by adding a link to a page that includes a search form. The search form itself must be accessible, of course.</p>
               <p>Techniques that are used to optimize search engine results for external searches also support internal search engines and make them more effective: use keywords, <code>META</code> tags, and an accessible navigation structure. Search sites provide guidance on how to create content that is optimized for search, for instance <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://help.live.com/help.aspx?mkt=en-us&amp;project=wl_webmasters"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Microsoft's Guidelines for successful indexing</loc>, <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.google.com/support/webmasters/bin/topic.py?topic=8522"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Creating a Google-friendly site</loc>, and <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://help.yahoo.com/l/us/yahoo/search/basics/basics-18.html"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Yahoo! Search Content Quality Guidelines</loc>.</p>
            </description>
            <examples>
               <eg-group>
                  <head> A Shopping Site</head>
                  <description>
                     <p>A shopping site organizes its products into different categories, such as women's clothes, men's clothes, and children's clothes. These have subcategories, such as tops, pants, shoes, and accessories. Each page also contains a search form. Users can type the product number or product description into the search field and go directly to that product, rather than needing to navigate the product categories to find it.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head> A Help Center</head>
                  <description>
                     <p>A Help Center contains thousands of pages of Help information about a company's products. A search form allows users to search just the Help Center pages to find articles that contain the search terms.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://webdesign.about.com/od/administration/a/aa091399.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> Searching Your Site </loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.bravenet.com/webtools/search2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> Bravenet Site Search </loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.freefind.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> FreeFind </loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.google.com/coop/cse/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> Google Custom Search Engine </loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://search.live.com/siteowner"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> Microsoft Live Search</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.picosearch.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> Pico Search </loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://builder.search.yahoo.com/m/basicsearchbox"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> Yahoo Search Builder </loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G63"/>
               <relatedtech idref="G64"/>
               <relatedtech idref="G125"/>
               <relatedtech idref="G126"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the Web page contains a search form or a link to a search page</p>
                     </item>
                     <item>
                        <p>Type text into the search form that occurs in the set of Web pages</p>
                     </item>
                     <item>
                        <p>Activate the search</p>
                     </item>
                     <item>
                        <p>Check that the user is taken to a page that contains the search term</p>
                     </item>
                     <item>
                        <p>Check that the user is taken to a page that contains a list of links to pages containing the search term</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true, and either Check #4 or Check #5 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G162" diff="add">
            <short-name>Positioning labels to maximize predictability of relationships</short-name>
            <applicability>
               <p>All technologies that support forms</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <description>
               <p>When labels for form fields are positioned where the user expects them visually, it is easier to understand complex forms and to locate specific fields. Labels for most fields are positioned immediately before the field, that is, for left-to-right languages, either to the left of the field or above it, and for right-to-left languages, to the right of the field or above it. Labels for radio buttons and checkboxes are positioned after the field.</p>
               <p>These positions are defined because that is the usual (and therefore most predictable) position for the label for fields, radiobuttons and checkboxes.</p>
               <p>Labels are positioned before input fields since the fields sometimes vary in length. Positioning them before allows the labels to line up. It also makes labels easier to locate with a screen magnifier since they are immediately before the field and also can be found in a vertical column (when the start of the fields line up vertically). Finally, if the field has data in it, it is easier to understand or check the data if one reads the label first and then the content rather than the other way around.</p>
               <p>Checkboxes and radio buttons have a uniform width while their labels often do not. Having the radio button or checkbox first therefore allows both the buttons and the labels to line up vertically.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Labels above text fields</head>
                  <description>
                     <p>
                        <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                                 source="working-examples/G162/lbl-position_01.gif"
                                 alt="Two form fields with labels positioned immediately above them."
                                 xlink:type="simple"
                                 xlink:show="embed"
                                 xlink:actuate="onLoad"/>
                     </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Labels to the left of text fields</head>
                  <description>
                     <p>
                        <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                                 source="working-examples/G162/lbl-position_02.gif"
                                 alt="Two form fields with labels positioned immediately to the left."
                                 xlink:type="simple"
                                 xlink:show="embed"
                                 xlink:actuate="onLoad"/>
                     </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head> Labels to the right of radio buttons</head>
                  <description>
                     <p>
                        <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                                 source="working-examples/G162/lbl-position_03.gif"
                                 alt="A group of form controls contains two radio buttons with labels positioned to the right of the radio buttons."
                                 xlink:type="simple"
                                 xlink:show="embed"
                                 xlink:actuate="onLoad"/>
                     </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/label-positioning.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Label Positioning</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/forms/screen_reader.php#labels"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Creating Accessible Forms</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jimthatcher.com/webcourse8.htm#wc8.3.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.lukew.com/resources/articles/web_forms.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Web Application Form Design</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.uxmatters.com/MT/archives/000107.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Label Placement in Forms</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H44"/>
               <relatedtech idref="H71"/>
               <relatedtech idref="H65"/>
               <relatedtech idref="G131"/>
               <!-- @@ Using adjacent button to label the purpose of a field --></related-techniques>
            <tests>
               <procedure>
                  <p>For each form field on the Web page:</p>
                  <olist>
                     <item>
                        <p>Check that the form field has a visible label.</p>
                     </item>
                     <item>
                        <p>If the form field is a checkbox or radio button, check that the label is immediately after the field.</p>
                     </item>
                     <item>
                        <p>If the form field is not a checkbox or radio button, check that the label is immediately before the field.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G163" diff="add">
            <short-name>Using standard diacritical marks that can be turned off</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-pronunciation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide users with a mechanism for turning standard diacritical marks on or off.</p>
               <p>Many languages use diacritical marks or diacritics to indicate the pronunciation of words or to help distinguish between words. Some languages may use diacritics to denote vowels, to indicate consonant doubling, to indicate the absence of a vowel or a consonant, or for other purposes. Although text without such diacritics can be readable, the addition of diacritics can improve readability.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page in Hawaiian displays all diacritical marks by default and provides links that allow users to select the level of display of diacritical marks:</p>
                     <ulist>
                        <item>
                           <p>Display no diacritical markings</p>
                        </item>
                        <item>
                           <p>Use the footmark (‘) for the ʻokina, but do not display macrons</p>
                        </item>
                        <item>
                           <p>Show all diacritical markings</p>
                        </item>
                     </ulist>
                     <p>The visitor selects the level he or she prefers, and this preference is stored into a session cookie. All subsequent pages during that same session have access to the cookie, and show or hide diacritics according to the selected level.</p>
                     <p>On the server side, content is stored with all diacritical markings. If a visitor prefers fewer or no diacritics, a server-side function replaces or removes diacritics as desired before sending the response.</p>
                     <p>Example at <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://www.hawaii.edu/site/info/diacritics.php"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Hawaiian language online</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <p>For any Web page in a human language that uses diacritical marks to distinguish between meanings:</p>
                  <olist>
                     <item>
                        <p>Check that the default version of the content uses diacritical marks.</p>
                     </item>
                     <item>
                        <p>Check that there is a mechanism to turn diacritical marks on or off.</p>
                     </item>
                     <item>
                        <p>Check that using the mechanism to turn off diacritical marks results in content that does not display diacritical marks.</p>
                     </item>
                     <item>
                        <p>Check that using the mechanism to turn on diacritical marks results in content that displays diacritical marks.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 - #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G164" diff="add">
            <short-name>Providing a stated period of time after submission of the form when the order can be updated or canceled by the user</short-name>
            <applicability>
               <p>All technologies that provide forms.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-reversible"/>
               <success-criterion idref="minimize-error-reversible-all"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to allow users to recover from errors made when placing an order by providing them with a period of time during which they can cancel or change the order. In general, a contract or an order is a legal commitment and cannot be canceled. However, a Web site may choose to offer this capability, and it provides a way for users to recover from errors.</p>
               <p>The Web content would need to tell the user how long the cancellation period is after submitting the form and what the procedure would be to cancel the order. The cancellation procedure may not be possible online. It may, for instance, require written notice be sent to a address listed on the Web page.</p>
            </description>
            <examples>
               <eg-group>
                  <head> Online shopping</head>
                  <description>
                     <p>An online shopping Web site lets users cancel purchases up to 24 hours after they have been made. The Web site explains their policy, and includes a summary of the policy on the purchase receipt emailed to the user. After 24 hours, the purchase will be shipped to the user and can no longer be canceled.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head> Custom orders</head>
                  <description>
                     <p>A Web site sells custom sports jackets that are made to order. The customer chooses the fabric and provides body measurements for the tailor. The Web site gives customers up to three days to change or cancel an order. Once the material has been cut to the customer's specifications, it is no longer possible to change or cancel the order. The company policy is described on its Web site.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G98"/>
               <relatedtech idref="G155"/>
               <!-- @@ Asking for confirmation before final submission--></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the Web page describes the time period to cancel or change an order.</p>
                     </item>
                     <item>
                        <p>Check that the Web page describes the process for canceling or changing an order.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G165" diff="add">
            <short-name>Using the default focus indicator for the platform so that high visibility default focus indicators will carry over</short-name>
            <applicability>
               <p>Technologies that contain focusable elements</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <description>
               <p>Operating systems have a native indication of focus, which is available in many user agents. The default rendering of the focus indicator isn't always highly visible and may even be difficult to see against certain backgrounds. However, many platforms allow the user to customize the rendering of this focus indicator. Assistive technology can also change the appearance of the native focus indicator. If you use the native focus indicator, any system-wide settings for its visibility will carry over to the Web page. If you draw your own focus indicator, for example by coloring sections of the page in response to user action, these settings will not carry over, and AT will not usually be able to find your focus indicator.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The default focus indicator on Microsoft Windows is a one-pixel, black dotted line around the focused element. On a page with a dark background, this can be very difficult to see. The creator of the page uses the default, and the user customizes it in Windows to make it a bright color.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>In HTML, form elements and links can be focused by default. In addition, any element with a tabindex attribute &gt;= 0 can take focus. Both types of focused elements use the system focus indicator and will pick up platform changes in the focus indicator style.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G149"/>
               <relatedtech idref="C15"/>
               <relatedtech idref="SCR31"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Use the features of your platform to customize the appearance of the focus indicator</p>
                     </item>
                     <item>
                        <p>Tab through the page, noting the path of the focus</p>
                     </item>
                     <item>
                        <p>Check that the focus indicator for each control is visible</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G166" diff="add">
            <short-name>Providing audio that describes the important video content and describing it as such</short-name>
            <applicability>
               <p>All technologies that can contain video content</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-av-only-alt"/>
            </applies-to>
            <description>
               <p>Video-only content is inaccessible to people who are blind and to some who have low vision. Therefore, it is important for them to have an audio alternative. One way of doing this is to provide an audio track describing the information in the video. The audio should be a common audio format used on the internet, such as MP3.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page has a link to a video-only presentation of a spaceship landing on Mars. The link to the video is a picture of a spaceship. Near the video is a link to an audio file of a person describing the video. This would look something like the following code example in HTML.</p>
                  </description>
                  <code>
&lt;a href="../video/marslanding.mp4"&gt;&lt;img src="../images/spaceship.jpg" 
   alt="Mars landing, video-only" width="193" height="255"/&gt;&lt;/a&gt;
&lt;br /&gt;
&lt;a href="Mars_landing_audio.mp3&gt;Audio description of "Mars Landing"&lt;/a&gt;</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G159"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For a Web page that contains video-only content:</p>
                  <olist>
                     <item>
                        <p>Check that there is link to an audio alternative immediately before or after the video-only content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G167" diff="add">
            <short-name>Using an adjacent button to label the purpose of a field</short-name>
            <applicability>
               <p>All technologies that support forms</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <description>
               <p>When a button invokes a function on an input field, has a clear text label, and is rendered adjacent to the input field, the button also acts as a label for the input field. This label helps users understand the purpose of the field without introducing repetitive text on the Web page. Buttons that label single text fields typically follow the input field.</p>
               <note>
                  <p>The field must also have a programmatically determined name, per <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="text-equiv-all"
                          linktype="guideline"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Success Criterion 4.1.2</loc>.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head> A search function</head>
                  <description>
                     <p>A Web page contains a text field where the user can enter search terms and a button labeled "Search" for performing the search. The button is positioned right after the text field so that it is clear to the user that the text field where to enter the search term.</p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/G167/button-as-label.jpg"
                              alt="A text field with a button positioned to the right demonstrating the use of a button to label a field."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                  </description>
               </eg-group>
               <eg-group>
                  <head> Picking a form</head>
                  <description>
                     <p>A user in the United States must fill in a form. Since the laws and requirements are different in different states within the United States, the user must select the version of a form for his state of residence. A dropdown list allows the user to pick a state. The adjacent button is labeled "Get Form for State." Pressing the button takes the user to the Web page containing the form for the selected state.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G131"/>
               <relatedtech idref="H44"/>
               <relatedtech idref="H65"/>
               <relatedtech idref="H71"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For a field and a button using this technique:</p>
                  <olist>
                     <item>
                        <p>Check that the field and button are adjacent to one another in the programmatically determined reading sequence.</p>
                     </item>
                     <item>
                        <p>Check that the field and button are rendered adjacent to one another.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G168" diff="add">
            <short-name>Requesting confirmation to continue with selected action</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-reversible"/>
               <success-criterion idref="minimize-error-reversible-all"/>
            </applies-to>
            <description>
               <p>This technique is to seek confirmation from the user that the selected action is his or her intended action. Use this technique in situations where the action can not be undone after it has been followed through. This will help users avoid submitting a form or deleting data by mistake.</p>
               <p>For example, this may occur when the user expects the 'submit' and 'cancel' buttons to occur in an order contrary to what is provided and selects a button too quickly to notice the unexpected order. Presenting the user with a confirmation request allows the user to recognize the error and either stop the submission of data or stop the loss of entered data.</p>
               <p>The request for confirmation should inform the user of the action that was selected and the consequences of continuing with the action. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Airline travel</head>
                  <description>
                     <p>An online travel Web site lets users create travel itineraries that reserve seats with different airlines. Users may look up, amend and cancel their current itineraries. If the user needs to cancel his travel plans, he finds the itinerary on the Web page and deletes it from his list of current itineraries. This action results in the cancellation of his seat reservations and is not reversible. The user is informed that the selected action will cancel their current seat reservations and that it may not be possible to make a comparable booking on the same flights once this action has been taken. The user is asked to confirm or cancel the deletion of the itinerary.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Webmail</head>
                  <description>
                     <p>A Webmail application stores a user's email on a server, so that it can be accessed from anywhere on the web. When a user deletes an email message, it is moved to a trash folder from which it can be retrieved if it was deleted by accident. There is an "empty trash" command for deleting the messages in the trash folder from the server. Once the trash folder has been emptied, the messages can no longer be retrieved. Before emptying the trash folder, the user is asked to confirm or cancel deletion of the email in the trash folder.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>An online test</head>
                  <description>
                     <p>A form is used to collect answers for a test. When the 'submit' or 'reset' button is selected the user is presented with a web page that informs them of their choice and asks for confirmation to continue. Example 1: "You have selected to reset the form. This will delete all previously entered data and will not submit any answers. Would you like to reset the form? [yes button] [no button]" Example 2: "You have selected to submit the form. This will submit entered data as your final answers and can not be changed. Would you like to submit the form? [yes button] [no button]"</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Trading stocks</head>
                  <description>
                     <p>A brokerage site allows users to buy and sell stocks and other securities. If the user makes a transaction during trading hours, a dialog is presented informing the user that the transaction is immediate and irreversible, and has buttons that say "continue" and "cancel."</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G98"/>
               <relatedtech idref="G99"/>
               <relatedtech idref="G155"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Initiate the action that can not be reversed or changed.</p>
                     </item>
                     <item>
                        <p>Check that a request to confirm the selected action is presented.</p>
                     </item>
                     <item>
                        <p>Check that the action can be confirmed and canceled.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G169" diff="add">
            <short-name>Aligning text on only one side</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>Many people with cognitive disabilities have a great deal of trouble with blocks of text that are justified (aligned to both the left and the right margins). The spaces between words create "rivers of white" running down the page, which can make the text difficult for some people to read. This failure describes situations where this confusing text layout occurs. The best way to avoid this problem is to create text layout that is fully justified.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>For most technologies, simply leave out any alignment declarations. For example, the following text will be justified to the left by default in HTML where the language of the page is right to left.</p>
                  </description>
                  <code role="html401">&lt;p&gt;
Lorem ipsum dolor sit amet, ...
&lt;/p&gt; </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A Web page includes sections with mixed alignment. Paragraphs in the body of the page are aligned to the left margin. The text also includes a number of pulled quotations which are aligned to the right margin.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C22"/>
               <relatedtech idref="F88"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the page in a common browser.</p>
                     </item>
                     <item>
                        <p>Verify that content is not justified (aligned to both the left and the right margins).</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Test procedure #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G170" diff="add">
            <short-name>Providing a control near the beginning of the Web page that turns off sounds that play automatically</short-name>
            <applicability>
               <p>All technologies where sound can be played automatically. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-dis-audio"/>
            </applies-to>
            <description>
               <p>The intent of this technique is to allow a user to turn off sounds that start automatically when a page loads. The control to turn off the sounds should be located near the beginning of the page to allow the control to be easily and quickly discovered by users. This is useful for those who utilize assistive technologies (such as screen readers, screen magnifiers, switch mechanisms, etc.) and those who may not (such as those with cognitive, learning and language disabilities). </p>
               <p>In this technique, an author includes a control that makes it possible for users to turn off any sounds that are played automatically. The control should be keyboard operable, located early in the tab and reading order, and clearly labeled to indicate that it will turn off the sounds that are playing. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page contains a time-based media presentation that includes an audio track as well as an animated video describing how to repair a lawnmower engine. The page contains 2 buttons that say "Pause" and "Stop", which give the user control over when and if the time-based media plays.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A Web page contains an embedded short film. The page contains a button that says "Pause the movie", which allows the user to pause the film.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A Web page contains a Flash presentation that includes video and audio. The page contains a button that says "Turn off multimedia", which allows the user to stop any video and audio from playing. </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G60"/>
               <relatedtech idref="G171"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Load a Web page.</p>
                     </item>
                     <item>
                        <p>Check for music or sounds that start automatically.</p>
                     </item>
                     <item>
                        <p>Check that a control that allows the user to turn off the sounds is provided near the beginning of the page. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check  #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G171" diff="add">
            <short-name>Playing sounds only on user request</short-name>
            <applicability>
               <p>All technologies that can play sound. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-dis-audio"/>
            </applies-to>
            <description>
               <p>The intent of this technique is to allow a user to control the use of sounds in Web content. Someone that uses a screen reader may find it very distracting and difficult to listen to their screen reader if there are also sounds coming from Web content. Providing a way to play sounds only upon request will give a user the control needed to listen to any sounds or other audio without interfering with the output from a screen reader. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page from an grey whale conservation society has a looping background sound of grey whales singing. There are also sounds of water splashing. The sounds do not start automatically. Instead, the Web content provides a link at the top of the page to allow the user to start the sounds manually. The button says "Turn sounds on." After pressing the "turn sounds on" button, the sounds are heard. The user is then presented with an option to "turn sounds off." </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A link is provided to a sound file that includes the sounds of the grey whales. The link text says, "Hear the song of the grey whale (mp3)."</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G60"/>
               <relatedtech idref="G170"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Load a Web page that is known to contain sounds that play for 3 seconds or longer. </p>
                     </item>
                     <item>
                        <p>Check that no sounds play automatically. </p>
                     </item>
                     <item>
                        <p>Check that there is a way for a user to start sounds manually. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G172" diff="add">
            <short-name>Providing a mechanism to remove full justification of text</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a version of the page that does not have full justification (justified both left and right).</p>
               <p>There may be circumstances when for layout purposes an author may want to have the text fully justified. In these cases, it is sufficient to provide a feature that removes the justification of text. The control should be easy to find and access and near the beginning of the page. </p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">C29: Using a style switcher to provide a conforming alternate version</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A classic novel online is on a site that attempts to duplicate the look of the originally published work, which includes full justification. A button is provided near the top of the page saying "remove full justification" and a style switching technique is used to swap out the style sheet. The new style sheet aligns the text only on the left. </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C19"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open a page with full justification. </p>
                     </item>
                     <item>
                        <p>Check that there is a feature to remove the full justification. </p>
                     </item>
                     <item>
                        <p>Check that the feature removes the full justification. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G173" diff="add">
            <short-name>Providing a version of a movie with audio descriptions</short-name>
            <applicability>
               <p>Any technology that supports audio and video. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
               <success-criterion idref="media-equiv-audio-desc-only"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a second version of video content that provides audio desciptions so that it is possible for people who cannot see to be able to understand audio-visual material. </p>
               <p>Since most user agents today cannot merge multiple sound tracks, this technique adds the additional audio information to synchronized media by providing a second version of the movie where the original soundtrack and additional audio description have been combined in a single track. This additional information focuses on actions, characters, scene changes and on-screen text (not captions) that are important to understanding the content. </p>
               <p>Since it is not helpful to have this new information obscure key audio information in the original sound track (or be obscured by loud sound effects), the new information is added during pauses in dialogue and sound effects. This limits the amount of supplementary information that can be added to program.</p>
               <p>Providing a second version of the movie that includes audio descriptions as the primary sound track will make this content accessible for blind people who need to hear not only the dialogue, but also the context and other aspects of the video that are not communicated by the characters' dialogue alone. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>Two versions of a video of an opera is available. The first version includes only the music. The second version includes both the music and voice describing the actions of the performers on stage.</p>
                  </item>
                  <item>
                     <p>A video of juggler performing in front of group of children includes a version with audio description. The narrator of the audio description describes the number and type of items the juggler is juggling as well as the reactions the children have during the performance.</p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-smil/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia Integration Language (SMIL) 1.0</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia Integration Language (SMIL 2.0)</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility Features of SMIL</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL Templates</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://service.real.com/help/library/guides/realone/ProductionGuide/HTML/htmfiles/realtext.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Realtext</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn2.microsoft.com/en-us/library/ms971327.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">SAMI 1.0</loc>
                            </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G78"/>
               <relatedtech idref="G69"/>
               <relatedtech idref="SM6"/>
               <relatedtech idref="SM7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the version of the media that important visual details that cannot be understood from the main soundtrack alone. </p>
                     </item>
                     <item>
                        <p>Listen to the movie. </p>
                     </item>
                     <item>
                        <p>Check to see if gaps in dialogue are used to convey important information regarding visual content. </p>
                     </item>
                     <item>
                        <p diff="add">If the alternate version(s) are on a separate page, check for the availability of link(s) to allow the user to get to the other versions.<issue id="i2662a" status="open">
                              <p>2662</p>
                           </issue>
                        </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G174">
            <short-name>Providing a control with a sufficient contrast ratio that allows users to switch to a presentation that uses sufficient contrast</short-name>
            <applicability>
               <p>Any technology. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-contrast"/>
               <success-criterion idref="visual-audio-contrast7"/>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <description>
               <p>When the contrast between the text and its background for some portion of the page has not been designed to meet the contrast level for <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="visual-audio-contrast-contrast"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Success Criterion 1.4.3</loc> or <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="visual-audio-contrast7"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">1.4.6</loc>, it is possible to meet these guidelines using the "Alternate Version" clause in the conformance requirements (<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="cc1" linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Conformance Requirement 1</loc>). A link or control on the page can either change the page so that all aspects conform, or it could take the viewer to a new version of the page that does conform at the desired level.</p>
               <p>For this technique to be used successfully, three things must be true.</p>
               <olist>
                  <item>
                     <p>The link or control on the original page must itself meet the contrast requirement of the desired SC. (If the user cannot see the control they may not be able to use it to go to the new page.) </p>
                  </item>
                  <item>
                     <p>The new page must contain all the same information and functionality as the original page. </p>
                  </item>
                  <item>
                     <p>The new page must conform to all of the SC for the desired level of conformance. (I.e. the new page cannot just have the desired level of contrast but otherwise not conform). </p>
                  </item>
               </olist>
               <p>This technique can be used to meet Success Criterion 1.4.3 by having text (or images of text) on the alternate version of the page be 5:1 contrast and any large text (or images of large text) be 3:1 contrast with its background. If the alternate version of the page has all text (or images of text) with 7:1 contrast and large text (or images of large text) with 5:1 contrast then it would satisfy both Success Criterion 1.4.3 and 1.4.6. </p>
               <p diff="del">For more information, refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                       locn-note="altvertechs"
                       linktype="understanding"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Sufficient Techniques for Providing Conforming Alternative Versions of Web pages</loc>
               </p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">C29: Using a style switcher to provide a conforming alternate version</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A page with some headlines that do not meet the 3:1 contrast requirements has a high contrast (5:1) link at the top of the page that takes the user to a new version of the page with minimum 5:1 contrast on all text and images of text. </p>
                  </item>
                  <item>
                     <p>A page uses shaded backgrounds for effect but results in text to background contrast of 4:1. A control at the top of the page says "high contrast". Clicking on it causes different styles to be used and dropping the background colors to achieve 7:1 contrast.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G17"/>
               <relatedtech idref="G18"/>
               <relatedtech idref="G145"/>
               <relatedtech idref="G148"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that a link or control exists on the original page that provides access to the alternate version. </p>
                     </item>
                     <item>
                        <p>Check that the link or control on the original page conforms to all success criteria for the conformance level being tested. </p>
                     </item>
                     <item>
                        <p>Check that the alternate version meets the contrast and all other success criteria for the conformance level being tested. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All three checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G175" diff="add">
            <short-name>Providing a multi color selection tool on the page for foreground and background colors</short-name>
            <applicability>
               <p>Any technology that allows users to store preferences for reuse on other pages.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to include a control on a Web page or set of Web pages that allows users to specify preferred foreground and background colors for the content. This technique can be implemented using any technology that allows users to store preferences that can be used across pages. Using this technique, an author includes a color picker control on the site which allows users to select and save foreground and background color preferences for use on other pages in a site. Pages are designed to look for these preferences and adapt accordingly when saved settings are found. </p>
               <p>Many users with cognitive disabilities have trouble with standard black text on a white background. Sometimes, they can read the text a lot better using different colors for the text and background and sometimes these color combinations are very specific and not what would be expected by someone else (for instance brown on blue). </p>
               <p>Some of these users will have difficulty setting colors using the browser's color settings or the operating systems color settings. Providing a tool on the web page that provides a wide range of foreground and background colors will allow them to easily change the colors without digging into the browser settings. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The user may type hex values into the text fields. The "pick" link will open a color selection tool for the adjoining field. </p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/G175/colorpicker.jpg"
                              alt="Screenshot showing the foreground and background color controls, which are text fields containing hex values. Each field has a link which opens a color picker control positioned between the label and the text field."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                     <p>The color selection tool opened for selecting a color.</p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/G175/opencolorpicker.jpg"
                              alt="Screenshot showing the color selection tool with the color picker opened to select a color for the foreground. The user is presented with a choice of 216 colors."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                     <p>Here is a working example of this technique implemented using PHP, Javascript, CSS and XHTML: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="index.php" linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Color Picker Example</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.bbc.co.uk/accessibility/win/seeing/colour/browser/sub_3.shtml"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BBC's Web page with instructions how to change the browser colors in most browsers</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G148"/>
               <relatedtech idref="G156"/>
               <relatedtech idref="C25"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a control on the page that is identified as a color selection tool.</p>
                     </item>
                     <item>
                        <p>Check that the color selection tool provides a variety of colors choices for the text and background. </p>
                     </item>
                     <item>
                        <p>Select new colors for the text and background using the tool. </p>
                     </item>
                     <item>
                        <p>Check that the content is updated to use the selected color combinations. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #4 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G176" diff="add">
            <short-name>Keeping the flashing area small enough</short-name>
            <applicability>
               <p>Appropriate to use for all general Web content including special cases like material that is specifically designed for a display in a foyer.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="seizure-does-not-violate"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to provide an easy way to pass the success criterion for things that flash, but are small. </p>
               <p>If you have something that flashes <emph>more</emph> than 3 times in a one second period (so G19 can't be used), but the area that is flashing is less than 25% of 10 degrees of visual field (which represents the central area of vision in the eye), then it would automatically pass.</p>
               <p>The 10 degree of visual field represents the central area of vision in the eye. This area is highly packed with visual sensors. Flashes in this area are transmitted to the visual cortex. For those with photosensitivity, this flashing of activity on the visual cortex can cause seizures. Flashing on other areas of the eye (which have far fewer sensors) has much less effect on the cortex. Hence, the focus on just the 10 degrees of central vision. </p>
               <ulist>
                  <item>
                     <p>If the content is for general Web use, you can use <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="#smallsafe1" xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Formula 1: Small Safe Area for Web Content</loc>. </p>
                  </item>
                  <item>
                     <p>If the content is for a known display (e.g. in a company foyer) then <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="#smallsafe2" xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Formula 2: Small Safe Area for Known Displays</loc> should be used.</p>
                  </item>
               </ulist>
               <p id="smallsafe1">
                  <emph role="bold">Formula 1: Small Safe Area for Web Content</emph>
               </p>
               <p>Most Web authors do not know how to translate visual field to pixels, which is what they generally can deal with. This technique provides that translation. </p>
               <p>At this point in time, the most prevalent display is 1024 x 768 and about 15-17 inches diagonally. When viewed at a typical viewing distance (11-26 inches) a 10 degree visual field will capture an area approximately 341 x 256 pixels. This is not circular, but neither is the central vision of most users, and the difference is so small (and at the edge of the central vision where sensors are fewer) that it is not important. </p>
               <p>Since the criterion is 25% of any 10 degree visual field, <emph role="bold">any single flashing event on a screen (there is no other flashing on screen) that is smaller than a contiguous area of 21,824 sq pixels (any shape), would pass the General and Red Flash Thresholds</emph>.</p>
               <p>1024 x 768 was chosen because it represents the most common screen size. It also works with higher resolution screens since the tighter pixel density would result in a smaller and safer image size.</p>
               <p>Users with lower resolution displays or that enlarge or view their screens closely would have a higher risk depending on the viewing distance. To address the needs of this group, <specref ref="G19"/> should be used since it is independent of screen resolution or viewing distance.</p>
               <p id="smallsafe2">
                  <emph role="bold">Formula 2: Small Safe Area for Known Displays</emph>
               </p>
               <p>To calculate the <emph>small safe area</emph> (in pixels) on the screen when the screen size, resolution, and viewing distance is known, use the following procedure. </p>
               <note>
                  <p>For a number of reasons (distribution of central vision sensors often non-circular, simplicity, computational convenience, historical ), a 4:3 rectangular approximation of the central 10 degree of visual field is used that is 10 degrees wide and 7.5 degrees high. This has an area of 75 square degrees, vs the 78.5 square degree area of a true circle of 10 degrees.</p>
               </note>
               <olist>
                  <item>
                     <p>To convert viewing distance to rectangle size, multiply the viewing distance by 0.1745 (10 * Pi / 180) to get the width of the rectangle, and multiply the viewing distance by 0.1309 (7.5 * Pi / 180) to get the height of the rectangle. (This calculation can be done in inches, or millimeters, or any other unit of length.) </p>
                  </item>
                  <item>
                     <p>Determine size of 10 degree angle of view in pixels. </p>
                     <p>To do this, multiply the width and height of the rectangle from step 1 by the resolution of the screen, in pixels per unit length, to get the horizontal and vertical size of the rectangle in pixels. </p>
                     <ulist>
                        <item>
                           <p>For a 1080p widescreen display (which is 1920 by 1080 pixels), the resolution of the screen in pixels per inch is 2203 divided by the diagonal screen size, in inches. </p>
                        </item>
                        <item>
                           <p>For a 720p widescreen display (which is usually 1365 by 768 pixels) , the resolution of the screen in pixels per inch is 1566 divided by the diagonal screen size, in inches. </p>
                        </item>
                        <item>
                           <p>For an LCD computer monitor which specifies the pixel pitch in millimeters / pixel, the resolution of the screen in pixels per inch is 25.4 divided by the pixel pitch in millimeters. </p>
                        </item>
                     </ulist>
                     <p>For any display, if you know the actual diagonal screen size in inches, and the horizontal and vertical resolution of the display in pixels, then the resolution of the screen in pixels per inch is the square-root of ( (horizontal resolution in pixels) * (horizontal resolution in pixels) + (vertical resolution in pixels) * (vertical resolution in pixels) ). </p>
                  </item>
                  <item>
                     <p>Multiply the width of the rectangle by the height and divide by 4. </p>
                  </item>
               </olist>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An author creates an animation that will be displayed on a screen in the entrance lounge at a company. Using the size and resolution of the display and the closest distance that a person can stand when viewing the display, they calculate the size of 25% of the 10 degree of central vision in pixels (using the formula above). This would be the <emph>small safe area</emph>. They then are careful to never flash any area larger than the <emph>small safe area</emph>. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.hardingfpa.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Harding FPA Web Site</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://trace.wisc.edu/peat/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Trace Center Photosensitive Epilepsy Analysis Tool (PEAT)</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://trace.wisc.edu/peat/photosensitive.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Information about Photosensitive Seizure Disorders</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.epilepsy.org.uk/index.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Epilepsy Action</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.epilepsyfoundation.org/about/photosensitivity/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Epilepsy Foundation</loc>
                            </p>
                     </item>
                     <item>
                        <p>
                                <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.ofcom.org.uk/tv/ifi/guidance/bguidance/guidance2.pdf"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Ofcom Guidance Note on Flashing Images and Regular Patterns in Television (PDF)</loc>
                            </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G15"/>
               <relatedtech idref="G19"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>The <emph>small safe area</emph> is calculated. </p>
                     </item>
                     <item>
                        <p>Check that only one area of the screen is flashing at any time.</p>
                     </item>
                     <item>
                        <p>Check that the flashing content would fit into a contiguous container whose area is less than the <emph>small safe area</emph>.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G177" diff="add">
            <short-name>Providing suggested correction text</short-name>
            <applicability>
               <p>Content that accepts user data input, with restrictions on the format, value, and/or type of the input. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-suggestions"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to suggest correct text where the information supplied by the user is not accepted and possible correct text is known. The suggestions may include correct spelling or similar text from a known pool of possible text. </p>
               <p>Depending on the form, suggestions could be located next to the field where the error was identified, elsewhere on the page or via a search mechanism or reference where results would be listed on another URI. Where possible, suggestions for correction should be incorporated in a way that is easy for the user. For example, an incorrect submission may return a list of possible corrections where the user can select a checkbox or radio button to indicate which option was intended. Suggestions or links to the suggestions should be placed close to the form fields they are associated with, such as at the top of the form, preceding the form fields, or next to the form fields requiring correction. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A form field requires the user to input a length of time that could range from days to years. The user enters the number "6". The server returns the form as the user had submitted it and also includes a suggested text next to the form field: "Error detected. Did you mean: 6 days, 6 weeks, 6 months or 6 years?" </p>
                  </item>
                  <item>
                     <p>The user enters an incorrectly spelled city name. The server returns the form as the user had submitted it and also includes a message at the top of the form informing the user of the error and a link to a list of city names that the user may have meant, as determined by comparing their original input to a database of city names. </p>
                  </item>
                  <item>
                     <p>A bus route trip planner allows users to enter their origin an destination, allowing users to enter street addresses, intersections and city landmarks. When a user enters "Kohl," they are prompted with a list of search results with similar matches that reads, "Your search for 'Kohl' returned the following". A select box follows the prompt lists, "Kohl Center," "Kohl's Dept. Store-East" and "Kohl's Dept. Store-West" as options the user can choose from. </p>
                  </item>
                  <item>
                     <p>A search runs a spell check on input and provides a link of alternatives if a spelling error is detected. When the user clicks on the link, the search is automatically resubmitted with the correct spelling. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="SCR18"/>
               <relatedtech idref="G84"/>
               <relatedtech idref="G85"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify form fields where correct text could be inferred from incorrect text.</p>
                     </item>
                     <item>
                        <p>Fill out the form, deliberately filling in the identified form fields with incorrect text.</p>
                     </item>
                     <item>
                        <p>Check that the user is presented with suggestions for the correct text.</p>
                     </item>
                     <item>
                        <p>Check that the suggestions are provided next to the form field or a link to the suggestions is provided close to the form field.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #3 and #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G178" diff="add">
            <short-name>Providing controls on the Web page that allow users to incrementally change the size of all text on the page up to 200 percent</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to provide a mechanism on the Web page to incrementally increase the size of text. Many people with low vision do not use magnifying software, and they may not be familiar with browsers text size adjustments. This may be particularly true of older people who are learning about computers later in life and who may be experiencing age related vision loss. It may also be true of some people with cognitive disabilities who also require increased font size.</p>
               <p>This technique provides a mechanism that some users will find easier to use. The mechanism may include links or buttons that will switch the visual presentation to a different style sheet or use scripts to change the text size dynamically. </p>
               <p>To implement this technique, an author provides controls that allow the user to incrementally increase or decrease the text size of all of the text on the page to a size that is at least 200% of the default text size. </p>
               <p>This can be achieved by providing links, buttons or linked images and the controls themselves should be as easy to find (ex. prominently positioned within the page, presented in a larger text size, hight contrast, etc.) as possible. </p>
               <p>This technique can also be used in circumstances where scalable fonts cannot be used, such as legacy code situtions. </p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">C29: Using a style switcher to provide a conforming alternate version</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A newspaper article has two buttons near the top of the page. The "increase text size" button has a big letter "T" with an upward arrow and the "decrease text size" button has a small letter "T" with a down arrow. There is <att>alt</att> text on each button. </p>
                  </item>
                  <item>
                     <p>A site has a number of style sheets with different text size. The user can choose any of the style sheets if their browser provides this functionality. Each page also includes the links "Increase text size" and "Decrease text size" that will change the style sheet currently applied to the appropriate alternate style sheet. </p>
                  </item>
                  <item>
                     <p>A site includes the text "Change text size:" followed by text links "Up" and "Down" on every Web page. The links trigger a Javascript that alters the value of the text-size property accordingly. </p>
                  </item>
                  <item>
                     <p>A site includes a link on every page that reads "Change text size." The resulting page includes a series of links that includes options representing the available sizes. The links read, "Smallest font size," "Small font size," "Default font size," "Large font size," etc. Instructions preceding the list direct users to choose a link to change to the desired font size. </p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Increase the text size and check to see if the text size increased. </p>
                     </item>
                     <item>
                        <p>Check that the text size can be increased to 200% of the original size. </p>
                     </item>
                     <item>
                        <p>Decrease the text size to its default value and check to see if it in fact returned to the default size. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G179" diff="add">
            <short-name>Ensuring that there is no loss of content or functionality when the text resizes and text containers do not resize</short-name>
            <applicability>
               <p>All technologies that reflow text when windows are resized.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <description>
               <p>Some user agents support changing the size of text without changing other dimensions of the text container. Loss of content or functionality can occur when the text overflows the space that was allocated for it. However, the layout properties may provide a way to continue to display the content effectively. The block sizes may be defined wide enough that the text does not overflow when resized by 200%. Text may wrap when it no longer fits within the block, and the block may be tall enough that all the text continues to fit in the block. The block may provide scrollbars when the resized text no longer fits. </p>
            </description>
            <examples>
               <eg-group>
                  <head>A multi-column page layout </head>
                  <description>
                     <p>HTML and CSS are used to create a two-column layout for a page of text. Using the default value of the <code>white-space</code> property, <code>normal</code>, causes text to wrap. So as the size of the text is increased to 200%, the text reflows and the column of text grows longer. If the column is too long for the viewport, the user agent provides scrollbars so the user can scroll text into view because the author has specified the CSS rule <code>overflow:scroll</code> or <code>overflow:auto</code>. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A newspaper layout with blocks of text in columns. The blocks have a fixed width, but no height set. When the text is resized in the browser, the text wraps and makes the blocks taller. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Relative text and container sizes using percent and em units</head>
                  <description>
                     <p>Using relative units on both the text and the container allows the container to grow to accomdate the text, without any truncation. This image shows the text using "normal" font size in Internet Explorer. The gray box is the div container. </p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/G179/normal.jpg"
                              alt="screenshot of relative units with normal text size."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                     <p>This image shows the same text and container using the "largest" font size in Internet Explorer. The gray container has grown to hold the larger text. </p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/G179/scaled.jpg"
                              alt="screenshot of relative sizing with largest text size."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                  </description>
                  <code role="html401">
&lt;style type="text/css"&gt;
  div { background-color:#ccc; line-height:120%; position:relative; }
  div.RelativeRelative { font-size:100%; width:8.1em; height:6.7em; }
&lt;/style&gt;

&lt;div class="RelativeRelative"&gt;
  Now is the time for all good men to come to the aid of their country.
&lt;/div&gt;</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G146"/>
               <relatedtech idref="C28"/>
               <!--@@Calculating size and position in a way that scales with text size (future link)--></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Increase text size to 200%. </p>
                     </item>
                     <item>
                        <p>Check whether all content and functionality is available.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G180" diff="add">
            <short-name>Providing the user with a means to set the time limit to 10 times the default time limit</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to give people with disabilities enough time to complete tasks which may take them longer than someone without those challenges. Some mechanism such as a preference setting or a control on the page lets the user change the time limits to at least 10 times the default time limit. Preferably, the mechanism would have a variable adjustment that lets the user change the time limit to any value in its range, but could also provide ways to change the time limit by discrete increments. The user changes the time limit at the beginning of his session, before any activity that has a time limit. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An airline has an online ticket purchasing application. By default, the application has a 1 minute time limit for each step of the purchase process. At the beginning of the session, a Web page includes information that says, "We expect that each step in the purchasing process will take users one minute to complete. Would you like to adjust the time limit?" followed by several radio buttons "1 minute, 2 minutes, 5 minutes, 10 minutes." </p>
                  </item>
                  <item>
                     <p>A Web based email application automatically logs users out when there has been no activity for 30 minutes. The application includes a preference that allows users to adjust the amount of time to any value. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G133"/>
               <relatedtech idref="SCR1"/>
               <relatedtech idref="SCR16"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check to see if there is a mechanism to set the time limit to 10 times the default time limit. </p>
                     </item>
                     <item>
                        <p>Change the time limit to a new value that is 10 times the default time limit. </p>
                     </item>
                     <item>
                        <p>Perform an action that has a time limit. </p>
                     </item>
                     <item>
                        <p>Wait until the default time limit has passed. </p>
                     </item>
                     <item>
                        <p>Check that the time limit does not expire until the limit specified in step 2 has passed. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #5 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G181" diff="add">
            <short-name>Encoding user data as hidden or encrypted data in a re-authorization page</short-name>
            <applicability>
               <p>Pages that require user authentication where the time available for submitting data is limited. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-server-timeout"/>
            </applies-to>
            <description>
               <p>Web servers that require user authentication often terminate the session after a set period of time if there is no activity from the user. If the user is unable to input the data quickly enough and the session times out before they submit, the server will require re-authentication before proceeding. When this happens, the server passes (as hidden data) the information from the form into the page that is used for re-authentication. Then, when the user re-authenticates, the server can use the information passed on from the re-authentication page to submit the form directly or to present a page that includes the data that is will be submitted for review. In this technique, the server does not have to store any user-submitted data on server. This is an important technique for those cases where it is either illegal or a security risk for the server to store information temporarily. It also is useful in that it frees the server from having to maintain the stored information and reconnect it with the newly authenticated session.</p>
               <note>
                  <p>If the data users are submitting is sensitive or presents a security risk, authors should consider the process used to pass the data to the re-authentication page and, after re-authentication, to the page that will process the original data in order to ensure that the data is protected.</p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A user has logged in to use a wiki and begins editing a page. The time taken to complete the edits exceeds the time allowed by the server for session inactivity. When the user submits the edits, the user is notified that the session has timed out and is redirected to a login page. The script that handles the original form submission passes the edits as a variable to the login page and when the user successfully logs in, passes the users edits back to the script that handles form submissions and the edits are processed as though no session timeout had occurred.</p>
                  </item>
                  <item>
                     <p>A user had logged in to a secure shopping site and fills out some of the information on an order form. For security reasons, the session times out after 30 mintues, but the user does not submit the form until 45 minutes after loading the page. The user is informed of the time out and is prompted to log-in again. If the user logs in correctly, the order form is presented to the user with all of the data previously entered and the user is able to review their submission and submit the form. If the log-in is not successfully completed, then the form data is discarded by the server. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G105"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>On a site that requires user login to submit data:</p>
                  <olist>
                     <item>
                        <p>Log in and begin the timed activity. </p>
                     </item>
                     <item>
                        <p>Allow the session to time out. </p>
                     </item>
                     <item>
                        <p>Submit the data. </p>
                     </item>
                     <item>
                        <p>Re-authenticate. </p>
                     </item>
                     <item>
                        <p>Check that the process can continue and be completed without loss of data, including the original data and any changes made after re-authentication. </p>
                     </item>
                     <item>
                        <p>Check that the process used to save the information submitted in step 3 is not stored on the server. (Note: This requires knowledge of the technology and features used to implement the technique.) </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #5 and #6 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G182" diff="add">
            <short-name>Ensuring that additional visual cues are available when text color differences are used to convey information</short-name>
            <applicability>
               <p>Colored text when the color is used to convey information such as: </p>
               <ulist>
                  <item>
                     <p>Words that are links in a paragraph </p>
                  </item>
                  <item>
                     <p>Items in a list where some are different than others and are presented in colored text </p>
                  </item>
               </ulist>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>The intent of this technique is to provide a redundant visual cue for users who may not be able to discern a difference in text color. Color is commonly used to indicate the different status of words that are part of a paragraph or other block of text or where special characters or graphics cannot be used to indicate which words have special status. For example, scattered words in text may be hypertext links that are marked as such by being printed in a different color. This technique describes a way to provide cues in addition to color so that users who may have difficulty perceiving color differences or have low vision can identify them.</p>
               <p>To use this technique, an author incorporates a visual cue in addition to color for each place where color alone is used to convey information. Visual cues can take many forms including changes to the font style, the addition of underlines, bold, or italics, or changes to the font size. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An article comparing the use of similar elements in different markup languages uses colored text to identify the elements from each language. Elements from the first markup language are identified using BLUE, bolded text. Elements from the second are presented as RED, italicized text. </p>
                  </item>
                  <item>
                     <p>A news site lists headlines for the articles appearing on its site. Additional information such as the section the article appears in, the time the article was posted, a related location or an indication that it is accompanied by live video appears in some cases. The additional information is presented in a different color than the link to the article, but each link is presented in a larger font than the rest of the text so that users can identify the links more easily. </p>
                  </item>
                  <item>
                     <p>Short news items sometimes have sentences that are also links to more information. Those sentences are printed in color and use a sans-serif font face while the rest of the paragraph is in black Times-Roman. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G14"/>
               <relatedtech idref="G122"/>
               <relatedtech idref="G183"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Locate all instances where the color of text is used to convey information. </p>
                     </item>
                     <item>
                        <p>Check that any text where color is used to convey information is also styled or uses a font that makes it visually distinct from other text around it. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G183" diff="add">
            <short-name>Using a contrast ratio of 3:1 with surrounding text and providing additional visual cues on focus for links or controls where color alone is used to identify them</short-name>
            <applicability>
               <p>Colored text when color alone is used to convey information such as words that are links in a paragraph </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>The intent of this technique is to provide a redundant visual cue for users who may not be able to discern a difference in text color. Color is commonly used to indicate words that are links within a paragraph or other block of text. For example, scattered words in text may be hypertext links that are identified only by a difference in color with surrounding text. This technique describes a way to provide additional cues on hover and focus so that users who may have difficulty perceiving color differences or have low vision can identify them.</p>
               <p>With this technique, a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                       linktype="glossary"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">relative luminance</loc> (lightness) difference of 3:1 or greater with the text around it can be used if additional visual confirmation is available when a user points or tabs to the link. Visual highlights may, for example, take the form of underline, a change in font style such as bold or italics, or an increase in font size. </p>
               <p>While using this technique is sufficient to meet this success criteria, it is not the preferred technique to differentiate link text. This is because links that use the relative luminance of color alone may not be obvious to people with black/white color blindness. If there are not a large number of links in the block of text, underlines are recommended for links. </p>
               <note>
                  <p>This technique is about the use of color in addition to luminosity. In this technique, the contrast ratio refers to the contrast between a link and the words around it. In Success Criterion 1.4.3 and 1.4.6, contrast ratio refers to the contrast between a word and its background. The difference is that because this technique is about the ability for users to tell the difference (a noticeable difference) between different pieces of text whereas the contrast ratio used in success criterion 1.4.3 and 1.4.6 is about the readability of the text with its background for different color and vision disabilities. </p>
                  <p>If an author wants to use the color portion of this technique (i.e. using different colors for the words where the colors have sufficient contrast with each other) and the author also wants to conform to SC 1.4.3 (contrast of both words with their backgrounds) the following colors can be used. (e.g. black text in a paragraph on a white background with the links shown as one of the colors in the list below.) </p>
                  <p>If assistive technology or Web browsers at some point all provide an option to underline all links on Web pages for users, this could be used instead of an author-provided link highlighting mechanism. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>Colors that would provide 3:1 contrast with black words and 5:1 contrast with a white background </head>
                  <description>
                     <p>Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="link-contrast.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Links with a 3:1 contrast ratio with surrounding text</loc>
                     </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The hypertext links in a document are medium-light blue (#3366CC) and the regular text is black (#000000). Because the blue text is light enough, it has a contrast of 3.9:1 with the surrounding text and can be identified as being different than the surrounding text by people with all types of color blindness, including those individuals who cannot see color at all. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                            <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.paciellogroup.com/resources/contrast-analyser.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Analyser – Application</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                            <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/services/luminositycontrastratio.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Contrast Ratio Analyser - online service</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                            <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/colour-contrast-analyser-firefox-extension.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Colour Contrast Analyser - Firefox Extension</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G14"/>
               <relatedtech idref="G122"/>
               <relatedtech idref="G145"/>
               <relatedtech idref="G182"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Locate all instances where color alone is used used to convey information about text. </p>
                     </item>
                     <item>
                        <p>Check that the <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="relativeluminancedef"
                                linktype="glossary"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">relative luminance</loc> of the color of the text differs from the relative luminance of the surrounding text by a contrast ratio of at least 3:1. </p>
                     </item>
                     <item>
                        <p>Check that pointing (mouseover) to the link causes a visual enhancement (such as an underline, font change, etc.) </p>
                     </item>
                     <item>
                        <p>Check that moving keyboard focus to the link causes a visual enhancement (such as an underline, font change, etc.) </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2, #3, and #4 are all true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G184" diff="add">
            <short-name>Providing text instructions at the beginning of a form or set of fields that describes the necessary input</short-name>
            <applicability>
               <p>All technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-cues"/>
               <success-criterion idref="minimize-error-context-help"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to help the user avoid input errors by informing them ahead of time about restrictions on the format of data that they must enter. Instructions on such restrictions are provided at the top of forms. This technique works best for forms that have a small number of fields or those where many form fields require data in the same format. In these cases, it is more efficient to describe the format once in instructions at the top of the form rather than repeating the same information for each field that has the same restricted format requirement. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A business networking site allows users to post descriptions of jobs they have held. The form to gather the information includes fields for the company name, job title, from and to dates, and job description. At the top of the form are the following instructions: </p>
                     <ulist>
                        <item>
                           <p>Enter requested information about the position you wish to add to your profile. Dates should be entered in mm/dd/yyyy format." </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A corporate directory allows users to customize information such as telephone number and job responsibilities by editing their profile. At the top of the form are the following instructions: </p>
                     <ulist>
                        <item>
                           <p>You can modify the information in any field. When you select Finish, your changes will be saved and you will have the opportunity to publish your profile. Should you decide that you don't want to keep your changes, select the Cancel button.</p>
                        </item>
                        <item>
                           <p>You cannot edit the information that is displayed as system text in your profile (i.e., not contained in a field). This information has been obtained from an corporate human resources information. If you find something is incorrect or out of date that you cannot edit, select the help icon next to the information to find out how to correct it. </p>
                        </item>
                        <item>
                           <p>Phone numbers may contain numbers and dashes (-) only. </p>
                        </item>
                        <item>
                           <p>Required fields are marked with an asterisk (*) and must be filled in to complete the form.</p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G89"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify form controls that will only accept user input data in a given format. </p>
                     </item>
                     <item>
                        <p>Determine if instructions are provided at the top of the form about the expected format each of the form controls identified in 1. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G185" diff="add">
            <short-name>Linking to all of the pages on the site from the home page</short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-mult-loc"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make it possible for users to locate all the information in a small Web site by providing links to all Web pages from the home page. When the number of pages in the site is small enough, the home page can contain site map information directly. The other pages in the Web site contain links to the home page.</p>
               <p>In this way, the home page serves as two mechanisms in one. It provides the usual navigation to pages. It also is a de facto site map to the site. </p>
               <p>All the Web pages in the site may contain links to all the other pages, and those sets of links satisfy <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="navigation-mechanisms-mult-loc"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Success Criterion 3.2.3 (Consistent Navigation)</loc>. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A small commercial Web site for a consultant contains a home page, a Contacts page for contacting the consultant, a page describing the consultant's background, and a page with examples of the consultant's work. Each page contains a navigation bar that links to all the other pages in the site.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G61"/>
               <relatedtech idref="G63"/>
               <relatedtech idref="G64"/>
               <relatedtech idref="G125"/>
               <relatedtech idref="G126"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the home page contains links to all other pages in the Web site.</p>
                     </item>
                     <item>
                        <p>Check that all other pages in the Web site contain links to the home page.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G186" diff="add">
            <short-name>Using a control in the Web page that stops moving, blinking, or auto-updating content</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide the user a control that allows him to stop moving or blinking content. Since the control is in the web page, the control itself meets the appropriate level of WCAG conformance e.g. it has appropriate contrast, it has a name that identifies it, it is keyboard accessible. The control is either at the top of the page or adjacent to the moving content. A single control may stop all moving or blinking content on the page, or there may be separate controls for separate parts of the content. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Stock Market Ticker Tape </head>
                  <description>
                     <p>A Web page displays the latest stock market results in a "ticker tape" that automatically scrolls across the bottom of the screen. A "Pause" button lets the user stop the ticker tape. When the ticker tape is unpaused, it resumes displaying the current stock market information. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Teleconferencing Tool </head>
                  <description>
                     <p>A teleconferencing Web page displays a speaker queue of people who wish to speak. A checkbox on the page lets the user choose whether the display of the queue should be updated automatically when a new person is added or removed, or whether it should only be updated when the user presses the "Refresh" button. When the queue is being updated automatically, the Refresh button is deactivated. </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G4"/>
               <relatedtech idref="SCR22"/>
               <!--@@ Providing a link, button, or other mechanism that reloads the page without the blinking content (future link) --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a control on the Web page to stop the motion.</p>
                     </item>
                     <item>
                        <p>Activate the control.</p>
                     </item>
                     <item>
                        <p>Check that the motion, blinking  or auto-updating has stopped.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G187" diff="add">
            <short-name>Using a technology to include blinking content that can be turned off via the user agent</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that blinking content can be turned off using user agent features. User agents allow users to stop animation of content in certain technologies. When the user activates this feature, all animation, including blinking, is stopped. </p>
               <p>The most common way for users to stop animation is to press the "escape" key. As long as there are no processes that take precedence in the event queue for a press of that key, this is taken as a command to stop animation of moving or blinking content. </p>
               <p>Technologies for which this is known generally to work include: </p>
               <ulist>
                  <item>
                     <p>Graphics Interchange Format (<abbr expansion="Graphics Interchange Format">GIF</abbr>)</p>
                  </item>
                  <item>
                     <p>Animated Portable Network Graphics (<abbr expansion="Animated Portable Network Graphics">APNG</abbr>)</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A page contains a blinking banner intended to draw the user's attention to it. The banner is an animated gif image which repeats indefinitely. The user presses the "escape" key, which causes the user agent to stop the animation of all animated gif images on the page. </p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Load a page that includes blinking content. </p>
                     </item>
                     <item>
                        <p>Activate the browser's stop animation command (usually the Escape key). </p>
                     </item>
                     <item>
                        <p>Check to see if the blinking stops. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G188" diff="add">
            <short-name>Providing a button on the page to increase line spaces and paragraph spaces</short-name>
            <applicability>
               <p>Any technology.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>Many people with cognitive disabilities have trouble reading text that is single spaced. A button that increases the line height will help them read the content. In order to retain the separation of paragraphs, the space between paragraphs should also increase so that it is at least 1.5 times as high as the line spacing.</p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">C29: Using a style switcher to provide a conforming alternate version</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>Use standard style page switching and have a button or link on the page that switches the stylesheet. The new stylesheet contains a rule to increase the line height and a class to increase the paragraph spacing. </p>
                  </description>
                  <code>p {line-height: 150%; margin-bottom: 2em;} 
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/cognitive-impairment.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Developing sites for users with Cognitive disabilities and learning difficulties</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C21"/>
               <relatedtech idref="C22"/>
               <relatedtech idref="C29"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a button or link on the page that increases the size of the line height and the paragraph spacing, which is labeled as such.</p>
                     </item>
                     <item>
                        <p>Activate the button or link. </p>
                     </item>
                     <item>
                        <p>Check that the feature increases the line height and the paragraph spacing. </p>
                     </item>
                     <item>
                        <p>Check that the paragraph spacing increase is at least 1.5 times greater than the line spacing. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1, #3 and #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G189" diff="add">
            <short-name>Providing a control near the beginning of the Web page that changes the link text</short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide the user with a control near the beginning of the page that takes the user to a conforming alternate version of the Web page where the link text alone of each link is sufficient to determine its purpose out of context.</p>
               <p>Some users prefer to have links that are self-contained, where there is no need to explore the context of the link. Other users find including the context information in each link to be repetitive and to reduce their ability to use a site. Among users of assistive technology, the feedback to the working group on which is preferable has been divided. This technique allows users to pick the approach that works best for them. Users who need or prefer potentially longer but complete link text use this version.</p>
               <p>If the control for switching to the alternate version is a link, it must always be possible to understand the purpose of the control directly from its link text. </p>
               <p>This technique provides the alternate version for the current page view. It is also possible, and in some cases would be advisable, to save this preference in a cookie or server-side user profile, so that users would only have to make the selection once per site and would automatically be taken to their preferred version.</p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">C29: Using a style switcher to provide a conforming alternate version</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>Providing a Link to another Version </head>
                  <description>
                     <p>A Web page lists books for download in different formats. Alternate versions of the Web page use just the book format as the link text or the book title and format type. </p>
                     <p>Version with short link text: </p>
                  </description>
                  <code>
...
&lt;h1&gt;Books for download&lt;/h1&gt;
  &lt;p&gt;&lt;a href="books-full-links.html" &gt;Full link Version&lt;/a&gt;&lt;/p&gt;

  &lt;ul&gt;
  &lt;li&gt;The History of the Web: 
  &lt;a href="history.docx" class="hist"&gt;Word&lt;/a&gt;, 
  &lt;a href="history.pdf" class="hist"&gt;PDF&lt;/a&gt;, 
  &lt;a href="history.html" class="hist"&gt;HTML&lt;/a&gt;
  &lt;/li&gt;
  ...
  &lt;/ul&gt;
  </code>
                  <description>
                     <p>Version with full link text: </p>
                  </description>
                  <code>
...
&lt;h1&gt;Books for download&lt;/h1&gt;
  &lt;p&gt;&lt;a href="books-short-links.html" &gt;Short link Version&lt;/a&gt;&lt;/p&gt;

  &lt;ul&gt;
  &lt;li&gt;The History of the Web: 
  &lt;a href="history.docx" class="hist"&gt;The History of the Web(Word)&lt;/a&gt;, 
  &lt;a href="history.pdf" class="hist"&gt;The History of the Web(PDF&lt;)/a&gt;, 
  &lt;a href="history.html" class="hist"&gt;The History of the Web(HTML)&lt;/a&gt;
  &lt;/li&gt;
  ...
  &lt;/ul&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G91"/>
               <relatedtech idref="H30"/>
               <relatedtech idref="H24"/>
               <relatedtech idref="C7"/>
               <relatedtech idref="SCR30"/>
               <relatedtech idref="G136"/>
               <relatedtech idref="C29"/>
               <!--Providing user settings as a way to store preferences (future link)   --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a control near the beginning of the Web page to change link text.</p>
                     </item>
                     <item>
                        <p>Activate the control.</p>
                     </item>
                     <item>
                        <p>Check that all links in the resulting Web page have link text that describes their purpose.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #3 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G190" diff="add">
            <short-name>Providing a link adjacent to or associated with a non-conforming object that links to a conforming alternate version</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <description>
               <p>It is better for all objects on a page to conform, but there are certain circumstances where that may not be possible. There may be situations when an object or section of content targets people with certain disabilities while those same attributes make it inaccessible for someone else. There may also be other reasons not to have a conforming object on the Web page. When an object does not conform, then a link to a conforming alternate version is adjacent to the non-conforming object in the linear reading order or is associated with the the non-conforming content. The conforming alternate version conveys the same information as the non-conforming version. </p>
            </description>
            <examples>
               <eg-group>
                  <head>A video of a rap song where audio descriptions would interfere with the artistic integrity of the music </head>
                  <description>
                     <p>A video of a rap song named "The Hip Hop Kid" has a musical background. Introducing "Audio Description" speaking parts during the pauses in the song would interfere with the guitar lines and drum grooves that the artist is trying to convey. On the Web page, immediately following the video object, there is a link that says, "Audio described version of 'The hip hop kid'" which contains a version of the video containing audio descriptions of what is happening visually in the video. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>An image of a historical document </head>
                  <description>
                     <p>A Web page about the Declaration of Independence contains an image of the document. There is not sufficient contrast between the text and the background, and the handwriting on the document is difficult to read. A link takes the user to an HTML version of the document. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>An animation that is not accessibility supported </head>
                  <description>
                     <p>An interactive animation created using a Web technology that is not accessibility supported is displayed on a Web page. A link to a conforming alternate version of the animation is adjacent to the non-conforming content. </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G136"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each non-conforming object in a page: </p>
                  <olist>
                     <item>
                        <p>Check to see if there is a non-conforming object on the Web Page.</p>
                     </item>
                     <item>
                        <p>Check to see if there is a link to an identifiable conforming version of the object directly after the non-conforming object in the linear reading order.</p>
                     </item>
                     <item>
                        <p>Check to see if the link goes to a conforming version. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G191" diff="add">
            <short-name>Providing a link, button, or other mechanism that reloads the page without blinking any content</short-name>
            <applicability>
               <p>This technique relates to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>This is a general technique for allowing people who cannot use a page with blinking content to turn the blinking content off. <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="cc1" linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Conformance Requirement 1</loc> allows for conforming alternate pages to be used to meet conformance. This technique is an example of that approach applied to success criteria 2.2.2. </p>
               <p>It is important that the page without blinking content contain all of the information that was on the page with blinking content.</p>
               <note>
                  <p>Removing the content that was blinking from the page would only be satisfactory if the blinking content was redundant with non blinking content in the original page. </p>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest"/> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information.</p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A page has blinking text at the top warning users that they should not submit the page without first registering. A link at the very top of the page reloads the page with the blinking text replaced with text that is styled to be highly visible but does not blink.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G4"/>
               <relatedtech idref="G11"/>
               <relatedtech idref="G152"/>
               <relatedtech idref="G186"/>
               <relatedtech idref="G187"/>
               <relatedtech idref="SCR22"/>
               <relatedtech idref="SCR33"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a mechanism to reload page to turn off blinking.</p>
                     </item>
                     <item>
                        <p>Check that reloaded page has no blinking.</p>
                     </item>
                     <item>
                        <p>Check that the reloaded page has all the information and functionality of the original page. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G192" diff="add">
            <short-name>Fully conforming to specifications</short-name>
            <applicability>
               <p>This technique relates to all markup languages with specifications.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p>When markup languages are used in a way that fully conforms to their specifications, all of the requirements in 4.1.1 are met. Therefore, while fully conforming to specifications is not required to conform to WCAG 2.0, it is a best practice and is sufficient to meet Success Criterion 4.1.1. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A page is created with care to make sure that all technologies are used according to specification. It is run though a validator and all identified errors are corrected. Specification requirements that can not be identified by validation are also checked and any failures are corrected. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G134"/>
               <relatedtech idref="H74"/>
               <relatedtech idref="H75"/>
               <relatedtech idref="H88"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that all technologies are used according to specification. </p>
                     </item>
                  </olist>
                  <note>
                     <p>While validators can be great tools for catching errors, they usually cannot catch all cases where content fails to fully conform to a specification. </p>
                  </note>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G193" diff="add">
            <short-name>Providing help by an assistant in the Web page</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-context-help"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to provide help using a multimedia avatar that provides assistance in using the Web page. An avatar can be particularly helpful to people with cognitive disabilities who may have trouble reading text. The use of visuals will help some people to focus on the material presented. </p>
               <note>
                  <p>The multimedia avatar must also satisfy relevant Success Criterion in <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="media-equiv"
                          linktype="guideline"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Guideline 1.2</loc>. </p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>The home page of an online banking application has an embedded avatar named Vanna. She gives new online banking clients a tour of the features provided in the application. The assistant can be started and stopped and paused. The client can rewind and fast forward through the material. A text alternative of the information is available from a link next to the avatar. </p>
                  </item>
                  <item>
                     <p>A volunteer site has a welcoming page for new volunteers. In it there is an application form. On the right side of the page there an interactive multimedia file with an avatar that explains all the features and sections of the application form. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G71"/>
               <relatedtech idref="G103"/>
               <relatedtech idref="H89"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is an assistant in the Web page.</p>
                     </item>
                     <item>
                        <p>Check that the assistant provides information to help understand the content of the page. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G194" diff="add">
            <short-name>Providing spell checking and suggestions for text input</short-name>
            <applicability>
               <p>This technique relates to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-context-help"/>
            </applies-to>
            <description>
               <p>In this technique spell checking and suggestions for text are provided. Often people with cognitive disabilities have trouble spelling a word, but may be able to get the spelling approximately correct. A spell checking program will save them time-consuming research on how to spell the word. This may also be true for blind and low vision users who might make a mistake when typing. It will also help people with dexterity disabilities who may be using a head pointer, or who may have scanning software which makes it very slow and difficult to type. A spell-checking solution that provides word suggestion(s) and a simple mechanism to select one and input it into the text input field provides important help for these users and others. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A search engine has a form field for search terms. When the form is submitted, a server-side application checks the spelling. If the spelling doesn't match any words for that language, it sends back a page with a text message at the top saying "Did you mean ..." with a link to the suggested word. If the user clicks on the link the suggested term is enered into the form field and is resubmitted. </p>
                  </item>
                  <item>
                     <p>An airline has a on online ticket purchasing application. When a user types the name of a city into the form field a dropdown menu shows the closest match to the city in the top of the menu and other suggestions below. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G71"/>
               <relatedtech idref="G103"/>
               <relatedtech idref="G120"/>
               <relatedtech idref="G121"/>
               <relatedtech idref="H89"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a form field on the page. </p>
                     </item>
                     <item>
                        <p>Enter a misspelled word. </p>
                     </item>
                     <item>
                        <p>Check that a suggested spelling is presented. </p>
                     </item>
                     <item>
                        <p>Check that a mechanism is available to enter the suggested word into the form. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #3 and #4 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G195" diff="add">
            <short-name>Using an author-supplied, highly visible focus indicator</short-name>
            <applicability>
               <p>Generally applicable.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <description>
               <p>The objective of this technique is enhance the focus indicator in the browser, by creating a highly visible one in the content. The default focus indicator in many browsers is a thin,dotted, black line. It can be difficult to see the line when it is around a form element which already has an outline, when the focused element is inside a table cell, when the focused element is very small, or when the background of the page is a dark color.</p>
               <p>In this technique, when the user places focus on an element, using the mouse, tab key, arrow keys, keyboard shortcuts, or any other method, the application makes that focus more visible, using a combination of a highly contrasting color, a thick line, and other visual indicators such as a glow. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Links</head>
                  <description>
                     <p>A Web page has a dark background color and light text and links. When focus lands on a link, the link is outlined with a bright yellow line, 3 pixels wide. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Form Elements</head>
                  <description>
                     <p>A Web page includes a form inside a table. The borders of both the table and the form elements are thin, black lines. When focus lands on a form element, the element is outlined with a 5 pixel red line that is partially transparent.  </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Menus</head>
                  <description>
                     <p>A Web page includes an interactive menu with sub-menus. A user can move focus in the menu using the arrow keys. As focus moves, the currently focused menu item changes its background to a different color, which has a 3:1 contrast ratio with the surrouding items and a 5:1 contrast ratio with its own text. </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G149"/>
               <relatedtech idref="G165"/>
               <relatedtech idref="C15"/>
               <relatedtech idref="SCR31"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Place focus on each focusable user interface element on the page using the mouse.</p>
                     </item>
                     <item>
                        <p>Check that there is a highly visible focus indicator. </p>
                     </item>
                     <item>
                        <p>Place focus on each focusable user interface element on the page using the keyboard.</p>
                     </item>
                     <item>
                        <p>Check that there is a highly visible focus indicator.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and  #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G196" diff="add">
            <short-name>Using a text alternative on one item within a group of images that describes all items in the group</short-name>
            <applicability>
               <p>Any technology where a grouping of non-text content is used to present information or functionality.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to avoid unnecessary duplication that occurs when a grouping of adjacent non-text content is used to present information or functionality.</p>
               <p>In some cases, pages will present a group of images to convey information. When presented together or in a specific combination these groupings can convey different types of information. For example, two images of a star where one is presented in black and white and the other is colored can be used in combination to represent a user rating. For example, three filled stars followed by two unfilled stars might represent a rating of three out of five stars.</p>
               <p>To use this technique, an author provides a text alternative that serves the equivalent purpose for the entire group and associates it with one item in the group. The other items in the group are then marked in a way that can be ignored by assistive technologies. In this way, the user is able to more efficiently identify the purpose of the group and can avoid duplication or confusion that may result had a text alternative been provided for each item in the group.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A rating system in HTML </head>
                  <description>
                     <p>In the following example, a rating is shown as three filled stars and two empty stars. While a text alternative could have been provided for each of the five images, the author has instead provided the rating in the form "3 out of 5 stars" for the first image and has marked the others using null alt text. </p>
                  </description>
                  <code role="html401">&lt;p&gt;Rating: 
   &lt;img src="star1" alt="3 out of 5 stars"&gt;
   &lt;img src="star1" alt=""&gt;
   &lt;img src="star1" alt=""&gt;
   &lt;img src="star2" alt=""&gt;
   &lt;img src="star2" alt=""&gt;
  &lt;/p&gt;
</code>
               </eg-group>
               <eg-group>
                  <head>A button created from a group of images in XHTML  </head>
                  <description>
                     <p>In this example, each button has a set of images to indicate the level of conformance to WCAG being claimed. This approach makes it possible for assistive technologies to avoid announcing things like, "Image A, Image A, Image A" etc. </p>
                  </description>
                  <code role="xhtml1">&lt;p&gt;Conformance Level:&lt;/p&gt;
 &lt;button name="A"&gt;&lt;img src="a.png" alt="A" /&gt;&lt;/button&gt; &lt;br /&gt;
 &lt;button name="AA"&gt;&lt;img src="a.png" alt="AA" /&gt;&lt;img src="a.png" alt="" /&gt;&lt;/button&gt; &lt;br /&gt;
 &lt;button name="AAA"&gt;&lt;img src="a.png" alt="AAA" /&gt;&lt;img src="a.png" alt="" /&gt;&lt;img src="a.png" alt="" /&gt;&lt;/button&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G94"/>
               <relatedtech idref="H2"/>
               <relatedtech idref="H67"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that one item in the group includes a text alternative that serves the equivalent purpose for the entire group. </p>
                     </item>
                     <item>
                        <p>Check that the other items in the group are marked in a way that can be ignored by assistive technologies. </p>
                     </item>
                     <item>
                        <p>Check that the items marked in a way that can be ignored by assistive technologies are adjacent to the item that contains the text alternative for the group. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G197" diff="add">
            <short-name>Using labels, names, and text alternatives consistently for content that has the same functionality</short-name>
            <applicability>
               <p>All content.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-consistent-functionality"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to help for users with cognitive disabilities, blindness and vision loss to understand what will happen when they interact with a function on a Web page. If there are different labels on user interface components (i.e., elements, links, JavaScript objects, etc.) that have the same function, the user will not know that they have encountered a component with the same function and will not know what to expect. This could lead to many unnecessary errors. It is also recommended that this approach to consistent labelling be applied across the Web site. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A Web page has a form field at the top of the page labeled "Search". On the bottom of the page is another form field which provides the same function. It is also labeled "Search." </p>
                  </item>
                  <item>
                     <p>A picture of a question mark is used to steer users to sections of the page that provide additional information. Each time the picture of the question mark appears it has the same text alternative "more information." </p>
                  </item>
                  <item>
                     <p>A link to the Contact Us page of a Web site has the link text "Contact". At the bottom of the page their is a link that also goes to the Contact Us page. It also has the link text "Contact". </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="H44"/>
               <relatedtech idref="H65"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that each component is associated with text that identifies it (i.e. label, name, or text alternative). </p>
                     </item>
                     <item>
                        <p>Check that this associated text is identical for each user interface component with the same function. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="G198" diff="add">
            <short-name>Providing a way for the user to turn the time limit off</short-name>
            <applicability>
               <p>This technique relates to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a mechanism for people who cannot complete tasks within a specified time limit to turn off the time limit. </p>
               <p>It is essential that the mechanism for turning off the time limit can be completed without a time limit itself and before the time limit for the page expires. To do this - the mechanism should be available at or near the top of the page so that it can be found and activated quickly by people with a wide range of disabilities. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A page has a listing of news headlines that automatically update every minute. At the top of the page is a link that turns off the updating. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G133"/>
               <relatedtech idref="G180"/>
               <relatedtech idref="SCR16"/>
               <relatedtech idref="G4"/>
               <relatedtech idref="SCR33"/>
               <relatedtech idref="SCR36"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a mechanism to turn off any time limits near the top of the page. </p>
                     </item>
                     <item>
                        <p>Verify that the time limit for the page is long enough that a user can easily navigate to the mechanism even if they are 10 times slower than most users. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 id="html">
         <head>HTML and XHTML Techniques</head>
         <technique id="H2">
            <short-name>Combining adjacent image and text links for the same resource</short-name>
            <applicability>
               <p>HTML and XHTML documents that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <description>
               <p>This objective of this technique is to avoid unnecessary duplication that occurs when
            adjacent text and iconic versions of a link are contained in a document. </p>
               <p>Many kinds of links have both a text and iconic link adjacent to each other. Often the
            text and the icon link are rendered in separate links, in part to create a slight visual
            separation from each other. Visually they appear to be the same link, but they are
            experienced by many people as two identical links and this can be confusing. To avoid
            this, some authors omit alternative text from the image, but this would fail <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="text-equiv-all"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Success Criterion 1.1.1</loc> because the
            text alternative would not serve the same purpose as the graphical link. The preferred
            method to address this is to put the text and image together in one link, and provide
            null alternative text on the image to eliminate duplication of text. </p>
               <p>Sometimes the text and the icon link are rendered in separate, adjacent table cells to
            facilitate page layout. Although WCAG 2 does not prohibit the use of layout tables,
            CSS-based layouts are recommended in order to retain the defined semantic meaning of the
            HTML table elements and to conform to the coding practice of separating presentation
            from content. If CSS is used, this technique can be applied to combine the links. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The icon and text are contained in the same <code>a</code> element.</p>
                  </description>
                  <code role="html401"> &lt;a href="products.html"&gt;
   &lt;img src="icon.gif" alt="" /&gt;
   Products page
 &lt;/a&gt;      </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A link contains an icon and text, and the site help refers to the icon. The
                  <code>img</code> has a text alternative which is the name used for the icon in the
                site help, which describes clicking the home page icon.</p>
                  </description>
                  <code role="html401">&lt;a href="foo.htm"&gt;
  &lt;img src="house.gif" alt="home page icon"/&gt;
  Go to the home page
&lt;/a&gt;     </code>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>This example demonstrates a failure to apply this technique. An icon and text link
                are side by side. The text alternative for the image is the same as the text link
                beside it, leading to a "stutter" effect as the link is read twice.</p>
                  </description>
                  <code role="html401">&lt;a href="products.html"&gt;
   &lt;img src="icon.gif" alt="Products page" /&gt;
 &lt;/a&gt;
 &lt;a href="products.html"&gt;
   Products page
 &lt;/a&gt;  </code>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>This example demonstrates a failure to apply this technique. An icon and text link
                are side by side. In an attempt to remove the "stutter" the text alternative for the
                image is null. However, now one of the links has an unknown destination, which is
                its own link text problem.</p>
                  </description>
                  <code role="html401">&lt;a href="products.html"&gt;
   &lt;img src="icon.gif" alt="" /&gt;
 &lt;/a&gt;
 &lt;a href="products.html"&gt;
   Products page
 &lt;/a&gt;     </code>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>This example demonstrates an incorrect implementation of this technique. The icon
                and text are contained in the same a element. However, the text alternative for the
                icon is a duplicate of the link text, leading to a "stutter" effect as the
                description is read twice. </p>
                  </description>
                  <code role="html401">&lt;a href="products.html"&gt;
  &lt;img src="products.gif" alt="Products page"/&gt;
  Products page
&lt;/a&gt;    
            </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/objects.html#h-13.8"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 -
                    how to specify alt text</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G91"/>
               <relatedtech idref="G94"/>
               <relatedtech idref="H30"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each <code>a</code> in the content that contains an <code>img</code> element: </p>
                  <olist>
                     <item>
                        <p>Check that there is no adjacent <code>a</code> element that has the same
                    <code>href</code> attribute and the same description</p>
                     </item>
                  </olist>
                  <p>For each <code>a</code> in the content that is contained in a table: </p>
                  <olist>
                     <item>
                        <p>Check that there is no <code>a</code> element in an adjacent table cell that has
                  the same <code>href</code> attribute and the same description </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H4">
            <short-name>Creating a logical tab order through links, form controls, and objects</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a logical tab order when the default tab
            order does not suffice. Often, <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="G59" linktype="general"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">placing the
              interactive elements in an order that follows sequences and relationships within the
              content</loc> is sufficient and this technique is not necessary. It can be very easy
            to introduce usability bugs when setting the tab order explicitly.</p>
               <p>In some cases, the author may want to specify a tab order that follows relationships in
            the content without following the order of the interactive elements in the code. In
            these cases, an alternative order can be specified using the <code>tabindex</code>
            attribute of the interactive element. The <code>tabindex</code> is given a value between
            0 and 32767. </p>
               <p>When the interactive elements are navigated using the tab key, the elements are given
            focus in increasing order of the value of their <code>tabindex</code> attribute.
            Elements that have a <code>tabindex</code> value higher than zero will receive focus
            before elements without a <code>tabindex</code> or a <code>tabindex</code> of 0. After
            all of the elements with a tabindex higher than 0 have received focus, the rest of the
            interactive elements are given focus in the order in which they appear in the Web
          page.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A genealogical search form searches for marriage records. The search form includes
                several input fields for the bride and the groom. The form is marked up using a data
                table that includes the fields of the groom in the first column and the fields of
                the bride in the second column. The order in the content is row by row but the
                author feels it is more logical to navigate the form column by column. This way, all
                the groom's criteria can be filled in before moving on to the bride's criteria. The
                  <code>tabindex</code> attributes of the input fields are used to specify a tab
                order that navigates column by column.</p>
                  </description>
                  <code role="html401">&lt;form action="#" method="post"&gt;
 &lt;table summary="the first column contains the search criteria 
  of the groom, the second column the search criteria of 
  of the bride"&gt;
 &lt;caption&gt;Search for marriage records&lt;/caption&gt;
 &lt;tr&gt;
   &lt;th&gt;Search criteria&lt;/th&gt;
   &lt;th&gt;Groom&lt;/th&gt;
   &lt;th&gt;Bride&lt;/th&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;th&gt;First name&lt;/th&gt;
  &lt;td&gt;&lt;input type="text" size="30" value="" name="groomfirst" 
      title="First name of the groom" tabindex="1"&gt;&lt;/td&gt;
  &lt;td&gt;&lt;input type="text" size="30" value="" name="bridefirst" 
       title="First name of the bride" tabindex="4"&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;th&gt;Last name&lt;/th&gt;
  &lt;td&gt;&lt;input type="text" size="30" value="" name="groomlast" 
      title="Last name of the groom" tabindex="2"&gt;&lt;/td&gt;
  &lt;td&gt;&lt;input type="text" size="30" value="" name="bridelast" 
      title="Last name of the bride" tabindex="5"&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;th&gt;Place of birth&lt;/th&gt;
  &lt;td&gt;&lt;input type="text" size="30" value="" name="groombirth" 
      title="Place of birth of the groom" tabindex="3"&gt;&lt;/td&gt;
  &lt;td&gt;&lt;input type="text" size="30" value="" name="bridebirth" 
      title="Place of birth of the bride" tabindex="6"&gt;&lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;      </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A Web page contains a search field in the upper right corner. The field is given
                tabindex="1" so that it will occur first in the tab order, even though it is not
                first in the content order.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>
                        <code>Tabindex</code> values need not be sequential nor must they begin with any
                particular value. The values do not have to be unique. Elements that have identical
                  <code>tabindex</code> values are navigated in the order they appear in the
                character stream. So in the following example, the tab order would be one, three,
                two, four.</p>
                  </description>
                  <code role="html401">&lt;a href="" tabindex="1"&gt;one&lt;/a&gt;
 &lt;a href="" tabindex="2"&gt;two&lt;/a&gt;
 &lt;a href="" tabindex="1"&gt;three&lt;/a&gt;
 &lt;a href="" tabindex="2"&gt;four&lt;/a&gt;  </code>
                  <description>
                     <p>In sections of the content where the tab order follows the content order, it can be
                less error prone to give all elements the same tabindex value rather than specifying
                a different number for each element. Then it is easy to rearrange those elements or
                add new elements and maintain a logical tab order.</p>
                  </description>
                  <code role="html401"> &lt;a href="xxx" tabindex = "1"&gt;First link in list&lt;/a&gt;
&lt;a href="xxx" tabindex = "1"&gt;Second link in list&lt;/a&gt;
&lt;a href="xxx" tabindex = "1"&gt;Link that was added long 
  after the original list was created&lt;/a&gt;
&lt;a href="xxx" tabindex = "1"&gt;Third link in list&lt;/a&gt;
  ...
&lt;a href="xxx" tabindex = "1"&gt;Twentieth link in list&lt;/a&gt;      </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/interact/forms.html#adef-tabindex"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Tabbing
                    navigation in the HTML 4.01 specification</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="F44"/>
               <relatedtech idref="G59"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check if <code>tabindex</code> is used</p>
                     </item>
                     <item>
                        <p>If <code>tabindex</code> is used, check that the tab order specified by the
                    <code>tabindex</code> attributes follows relationships in the content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H24">
            <short-name> Providing text alternatives for the <el>area</el> elements of image maps </short-name>
            <applicability>
               <p>HTML and XHTML Documents that contain <code>area</code> elements.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>The HTML 4.01 specification explains that the text of the <code>alt</code> attribute
              is to be displayed when the element cannot be rendered normally. User Agents will
              display the <code>alt</code> attribute text when images are not displayed. However,
              currently, visual User Agents do not display the alt attribute text for area elements
              of image maps when accessed by keyboard or when images are not displayed, and may clip
              the area elements if the intrinsic size of the image is not used. In addition, the
              display of alt attribute text in response to mouse-hover does not display in the font
              size or color combination set in the User Agent. </p>
                  <p>The <code>title</code> attribute is meant to provide additional information. However,
              current implementation in User Agents is access to either the title or alt attribute,
              but not both. User Agents generally will display the <code>title</code> attribute text
              when the mouse is placed over the element containing the <code>title</code> attribute.
              For example, Internet Explorer will display the <code>alt</code> text on mouse-over if
              there is no <code>title</code> text, Firefox and Opera only display the
              <code>title</code> text on mouse-over and do not use the <code>alt</code> attribute
              text for this purpose. Thus, to ensure the alt attribute text is visible on
              mouse-over, the same text should be used on the title attribute. </p>
                  <p>Therefore, when using image maps, successful implementation of this technique would
              require either:</p>
                  <ulist>
                     <item>
                        <p>Ensuring the area element alt attribute value is displayed in response to
                  attaining focus (including keyboard focus), and that this applies both to
                  situations where images are loaded and not loaded. OR</p>
                     </item>
                     <item>
                        <p>A redundant mechanism serving the same purpose as the area elements is present in
                  the Web Page.</p>
                     </item>
                  </ulist>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide text alternatives that serve the same
            purpose as the selectable regions of an image map. An image map is an image divided into
            selectable regions defined by <code>area</code> elements. Each area is a link to another
            Web page or another part of the current Web page. The <code>alt</code> attribute of each
              <code>area</code> element serves the same purpose as the selectable area of the
          image.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example uses the <code>alt</code> attribute of the <code>area</code> element
                to provide text that describes the purpose of the image map areas.</p>
                  </description>
                  <code role="html401">&lt;img src="welcome.gif" usemap="#map1" 
    alt="Areas in the library. Select an area for
more information on that area." /&gt; 
&lt;map id="map1" name="map1"&gt;
  &lt;area shape="rect" coords="0,0,30,30"
    href="reference.html" alt="Reference" /&gt;
  &lt;area shape="rect" coords="34,34,100,100"
    href="media.html" alt="Audio visual lab" /&gt;
&lt;/map&gt;   </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/objects.html#h-13.6.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    client-side image maps</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/objects.html#h-13.8"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 -
                    how to specify alt text</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H30"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each <code>area</code> element in an image map: </p>
                  <olist>
                     <item>
                        <p>Check that the <code>area</code> element has an <code>alt</code> attribute.</p>
                     </item>
                     <item>
                        <p>Check that the text alternative specified by the alt attribute serves the same
                  purpose as the part of image map image referenced by the <code>area</code> element
                  of the imagemap.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>The above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H25">
            <short-name>Providing a title using the title element</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-title"/>
            </applies-to>
            <description>
               <p>All HTML and XHTML documents, including those in individual frames in
            a frameset, have a <code>title</code> element in the <code>head</code> section that
            defines in a simple phrase the purpose of the document. This helps users to orient
            themselves within the site quickly without having to search for orientation information
            in the body of the page.</p>
               <p>Note that the (mandatory) <code>title</code> element, which only appears once in a
            document, is different from the <code>title</code> attribute, which may be applied to
            almost every HTML and XHTML element.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example defines a document's title.</p>
                  </description>
                  <code role="html401">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;   
   &lt;head&gt;     
      &lt;title&gt;The World Wide Web Consortium&lt;/title&gt;     
   &lt;/head&gt;   
   &lt;body&gt;     
      ...   
   &lt;/body&gt; 
&lt;/html&gt;  </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/global.html#h-7.4.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    TITLE element</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the source code of the HTML or XHTML document and check that a non-empty
                    <code>title</code> element appears in the <code>head</code> section.</p>
                     </item>
                     <item>
                        <p>Check that the <code>title</code> element describes the document.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks 1 and 2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H27">
            <short-name>Providing text and non-text alternatives for <el>object</el>
            </short-name>
            <applicability>
               <p>Documents that load media with the <el>object</el> element, when the media format is
            not an accessibility-supported content technology.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description id="object_desc">
               <p>If <el>object</el> is used, provide a <loc xmlns:xlink="http://www.w3.org/1999/xlink" linktype="glossary" href="text-altdef"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">text
              alternative</loc> in the content of the element:</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example shows a text alternative for a Java applet using the <el>object</el>
                element.</p>
                  </description>
                  <code role="xhtml10">&lt;object classid="java:Press.class" width="500" height="500"&gt;
  As temperature increases, the molecules in the balloon...
&lt;/object&gt;     </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>This example takes advantage of the fact the <el>object</el> elements may be nested
                to provide for alternative representations of information.</p>
                  </description>
                  <code role="xhtml10">&lt;object classid="java:Press.class" width="500" height="500"&gt;
  &lt;object data="Pressure.mpeg" type="video/mpeg"&gt;
    &lt;object data="Pressure.gif" type="image/gif"&gt;
      As temperature increases, the molecules in the balloon...
    &lt;/object&gt;
  &lt;/object&gt;
&lt;/object&gt;  </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <p>
                     <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.w3.org/TR/html401/struct/objects.html#edef-OBJECT"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">HTML 4.01
                OBJECT element</loc>
                  </p>
               </see-also>
            </resources>
            <tests/>
         </technique>
         <technique id="H28">
            <short-name>Providing definitions for abbreviations by using the abbr and acronym elements</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-located"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Most graphical user agents render text enclosed within an <code>abbr</code> or
                <code>acronym</code> element with a dotted line below or surrounding it. In
              addition, when the mouse hovers over the element, the expansion is displayed as a tool
              tip.</p>
                  <p>In Internet Explorer 6 and below, items marked using the <code>abbr</code> element
              are not displayed with any additional formatting nor does the expanded version display
              as a tooltip when the mouse hovers over the item. Future versions are expected to
              provide these features for the <code>abbr</code> element.</p>
                  <p>JAWS 6.2 and WindowEyes 5.0 support the <el>abbr</el> and <el>acronym</el> elements.
              They can all be set to speak the title attribute when these elements are encountered.
              Within a given product the <el>abbr</el> and <el>acronym</el> elements are rendered
              the same way. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide expansions or definitions for
            abbreviations by using the <code>abbr</code> and <code>acronym</code> elements.</p>
               <p>It is always appropriate to use the <code>abbr</code> element for any abbreviation,
            including acronyms and initialisms. When using HTML and XHTML,
            initialisms and acronyms may be marked up using the <code>acronym</code> element. XHTML
            2.0 proposes eliminating the <code>acronym</code> element in favor of the more general
              <code>abbr</code> element.</p>
            </description>
            <examples>
               <eg-group>
                  <head> Using <code>abbr</code> element to expand abbreviations. </head>
                  <code role="html401">&lt;p&gt;Sugar is commonly sold in 5 &lt;abbr title="pound"&gt;lb.&lt;abbr&gt; bags.&lt;/p&gt;
&lt;p&gt;Welcome to the &lt;abbr title="World Wide Web"&gt;WWW&lt;/abbr&gt;!&lt;/p&gt;              </code>
               </eg-group>
               <eg-group>
                  <head> Using <code>abbr</code> element to define abbreviations. </head>
                  <code role="html401">&lt;p&gt;Tasini &lt;abbr title="and others"&gt;et al.&lt;/abbr&gt; &lt;abbr title="versus"&gt;v.&lt;/abbr&gt;
The New York Times &lt;abbr title="and others"&gt;et al.&lt;/abbr&gt; is the landmark lawsuit 
brought by members of the National Writers Union against ......&lt;/p&gt;  </code>
               </eg-group>
               <eg-group>
                  <head> Using the <code>acronym</code> element to expand an acronym </head>
                  <code role="html401"> &lt;p&gt;The use of &lt;acronym title="Keep It Simple Stupid"&gt;KISS&lt;/acronym&gt; became popular in ...&lt;/p&gt;        
            </code>
               </eg-group>
               <eg-group>
                  <head> Using the <code>acronym</code> element to expand an initialism </head>
                  <code role="html401"> &lt;p&gt;&lt;acronym title="World Wide Web"&gt;WWW&lt;/acronym&gt;&lt;/p&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/text.html#edef-ABBR"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 ABBR
                    element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/xhtml2/mod-text.html#sec_9.1."
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XHTML 2.0 abbr
                    element</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G102"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that an expansion or definition is provided for each abbreviation via
                    <code>abbr</code> or <code>acronym</code>. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H30">
            <short-name>Providing link text that describes the purpose of a link for anchor elements</short-name>
            <applicability>
               <p>HTML and XHTML documents that contain links, (&lt;a
            href&gt; elements)</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe the purpose of a link by providing
            descriptive text as the content of the <code>a</code> element. The description lets a
            user distinguish this link from other links in the Web page and helps the user determine
            whether to follow the link. The URI of the destination is generally not sufficiently
            descriptive. </p>
               <p>When an image is the only content of a link, the text alternative for the image
            describes the unique function of the link.</p>
               <p>When the content of a link contains both text and one or more images, if the text is
            sufficient to describe the purpose of the link, the images may have an empty text
            alternative. (See <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="H67" linktype="html"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Using null alt text and no title
              attribute on img elements for images that assistive technology should ignore</loc>.)
            When the images convey information beyond the purpose of the link, they must also have
            appropriate alt text. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>Describing the purpose of a link in HMTL in the text content of the <code>a</code>
                element.</p>
                  </description>
                  <code role="html401">&lt;a href="routes.html"&gt;
  Current routes at Boulders Climbing Gym
&lt;/a&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Using the <code>alt</code> attribute for the <code>img</code> element to describe
                the purpose of a graphical link.</p>
                  </description>
                  <code role="html401">&lt;a href="routes.html"&gt;
   &lt;img src="topo.gif" alt="Current routes at Boulders Climbing Gym" /&gt; 
&lt;/a&gt; </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Using an empty alt attribute when the anchor (<code>a</code>) element contains text
                that describes the purpose of the link in addition to the <code>img</code> element.
                Note that the link text will appear on the page next to the image.</p>
                  </description>
                  <code role="html401">&lt;a href="routes.html"&gt;
  &lt;img src="topo.gif" alt="" /&gt;
  Current routes at Boulders Climbing Gym
&lt;/a&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A link contains an icon and text, and the site help refers to the icon. The
                  <code>img</code> has a text alternative which is the name used for the icon in the
                site help, which describes clicking the home page icon.</p>
                  </description>
                  <code role="html401" diff="chg">&lt;a href="foo.htm"&gt;
&lt;img src="house.gif" alt="icon"/&gt;
Home page
&lt;/a&gt;</code>
               </eg-group>
               <eg-group diff="add">
                  <description>
                     <p>A link contains text and an icon, and the icon provides additional information about the target.<issue id="i2637" status="open">
                           <p>2637</p>
                        </issue> 
                     </p>
                  </description>
                  <code role="html401" diff="chg">&lt;a href="WMFP.pdf"&gt;
Woodend Music Festival Program
&lt;img src="pdficon.gif" alt="PDF format"/&gt;
&lt;/a&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/objects.html#h-13.8"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 -
                    how to specify alt text</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G91"/>
               <!--<relatedtech idref="C7"/>--><relatedtech idref="H2"/>
               <relatedtech idref="H24"/>
               <relatedtech idref="H67"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:</p>
                  <olist>
                     <item>
                        <p>Check that text or a text alternative for non-text content is included in the
                    <code>a</code> element</p>
                     </item>
                     <item>
                        <p>If an <code>img</code> element is the only content of the <code>a</code> element,
                  check that its text alternative describes the purpose of the link</p>
                     </item>
                     <item>
                        <p>If the <code>a</code> element contains one or more <code>img</code> element(s)
                  and the text alternative of the <code>img</code> element(s) is empty, check that
                  the text of the link describes the purpose of the link </p>
                     </item>
                     <item>
                        <p>If the <code>a</code> element only contains text, check that the text describes
                  the purpose of the link</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>The above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H32">
            <short-name>Providing submit buttons</short-name>
            <applicability>
               <p> Content that includes form controls. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a mechanism that allows users to
            explicitly request changes of context. The intended use of a submit button is to
            generate an HTTP request that submits data entered in a form, so it is an appropriate
            control to use for causing a change of context. </p>
            </description>
            <examples>
               <eg-group>
                  <head/>
                  <description>
                     <p> This is a basic example of a form with a submit button.</p>
                  </description>
                  <code>
&lt;form action="http://www.example.com/cgi/subscribe/" method="post"&gt;&lt;br /&gt; 
 &lt;p&gt;Enter your e-mail address to subscribe to our mailing list.&lt;/p&gt;&lt;br /&gt; 
 &lt;label for="address"&gt;Enter email address:&lt;/label&gt;&lt;input type="text" 
 id="address" name="address" /&gt; 
 &lt;input type="submit" value="Subscribe" /&gt;&lt;br /&gt; 
&lt;/form&gt;</code>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <p> The following example uses a server-side script (specified in the
                <code>action</code> attribute) that redirects the user to the requested page. </p>
                  </description>
                  <code> &lt;form action="http://www.example.com/cgi/redirect/" method="get"&gt;&lt;br /&gt; 
    &lt;p&gt;Navigate the site.&lt;/p&gt;&lt;br /&gt; 
    &lt;select name="dest"&gt;&lt;br /&gt; 
      &lt;option value="/index.html"&gt;Home&lt;/option/&gt;&lt;br /&gt; 
      &lt;option value="/blog/index.html"&gt;My blog&lt;/option/&gt;&lt;br /&gt; 
      &lt;option value="/tutorials/index.html"&gt;Tutorials&lt;/option/&gt;&lt;br /&gt; 
      &lt;option value="/search.html"&gt;Search&lt;/option/&gt;&lt;br /&gt; 
    &lt;/select&gt;&lt;br /&gt; 
  &lt;input type="submit" value="Go to Page" /&gt;&lt;br /&gt; 
  &lt;/form&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.cs.tut.fi/~jkorpela/forms/navmenu.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Navigational
                    pulldown menus in HTML</loc> by Jukka Korpela discusses a few techniques that
                  work or do not work. </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G80"/>
               <relatedtech idref="H84"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find all forms in the content </p>
                     </item>
                     <item>
                        <p> For each form, check that it has a submit button (input type="submit") </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #2 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H33">
            <short-name>Supplementing link text with the title attribute</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <ulist>
                     <item>
                        <p> Current user agents and assistive technology provide no feedback to the user
                  when links have <code>title</code> attribute content available. </p>
                     </item>
                     <item>
                        <p> Some graphical user agents will display a tool tip when the mouse hovers above
                  an anchor element containing a <code>title</code> attribute. However, current user
                  agents do not provide access to <code>title</code> attribute content via the
                  keyboard. </p>
                     </item>
                     <item>
                        <p> The tool tip in some common user agents disappears after a short period of time
                  (approximately 5 seconds). This can cause difficulty accessing <code>title</code>
                  attribute content for those users who can use a mouse but have fine motor skill
                  impairment, and may result in difficulties for users who need more time to read
                  the tool tip. </p>
                     </item>
                     <item>
                        <p> Current graphical user agents do not provide mechanisms to control the
                  presentation of <code>title</code> attribute content. The user cannot resize the
                  tool tip text or control the foreground and background colors. The placement and
                  location of the tool tip cannot be controlled by users, causing some screen
                  magnifier users to be unable to access meaningful portions of the
                  <code>title</code> attribute content because the tool tip cannot be fully
                  displayed within the viewport. </p>
                     </item>
                     <item>
                        <p> Some user agents allow access to supplementary information through the context
                  menu. For example, the keystroke combination Shift+F10 followed by P will display
                  the <code>title</code> attribute content, along with other supplementary
                  information in Mozilla/Firefox. </p>
                     </item>
                     <item>
                        <p>The HTML 4.01 specification explains that the text of the <code>alt</code>
                  attribute is to be displayed when the element cannot be rendered normally. Thus,
                  visual User Agents will display the <code>alt</code> attribute text when images
                  are not displayed. The <code>title</code> attribute is meant to provide additional
                  information. User Agents generally will display the <code>title</code> attribute
                  text when the mouse is placed over the element containing the <code>title</code>
                  attribute. Internet Explorer will display the <code>alt</code> text on mouse-over
                  if there is no <code>title</code> text. The Firefox and Opera browsers only
                  display the <code>title</code> text on mouse-over and do not use the
                  <code>alt</code> attribute text for this purpose. Thus, if you want the
                  <code>alt</code> attribute text visible on mouse-over, also include the text using
                  the <code>title</code> attribute.</p>
                     </item>
                     <item>
                        <p>Assistive technologies provide different levels of support for speaking the
                    <code>title</code> attribute for an anchor element. </p>
                        <ulist>
                           <item>
                              <p>JAWS 7.0 will speak either the link text or the <code>title</code> attribute
                      for a link depending upon a JAWS setting. This setting can be changed
                      temporarily or permanently within JAWS. However, it is awkward to read both
                      the link text and the <code>title</code> attribute for a link. </p>
                           </item>
                           <item>
                              <p>WindowEyes 5.5 has a hot key, ins-E, that will speak additional information,
                      including the <code>title</code> attribute, for the item with focus. </p>
                           </item>
                        </ulist>
                     </item>
                  </ulist>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate how to use a <code>title</code>
            attribute on an anchor element to provide additional text describing a link. The
              <code>title</code> attribute is used to provide additional information to help clarify
            or further describe the purpose of a link. If the supplementary information provided
            through the <code>title</code> attribute is something the user should know before
            following the link, such as a warning, then it should be provided in the link text
            rather than in the <code>title</code> attribute. </p>
               <p diff="add">Because of the extensive user agent limitations in supporting access to the title attribute, authors should use caution in applying this technique. For this reason, it is preferred that the author use technique <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C7" linktype="css"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">C7: Using CSS to hide a portion of the link text</loc> or <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="H30" linktype="html"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">H30: Providing link text that describes the purpose of a link for anchor elements</loc>.<issue id="i2636" status="open">
                     <p>2636</p>
                  </issue>
               </p>
            </description>
            <examples>
               <eg-group>
                  <head>Clarifying the purpose of a link</head>
                  <code role="html401">&lt;a href="http://example.com/WORLD/africa/kenya.elephants.ap/index.html" 
   title="Read more about failed elephant evacuation"&gt;
   Evacuation Crumbles Under Jumbo load
&lt;/a&gt;</code>
               </eg-group>
               <eg-group>
                  <head>A link that opens in a new window</head>
                  <description>
                     <p>In HTML 4.01 the <code>target="_blank"</code> attribute can be used on an anchor
                element to indicate that the URI specified by the href attribute will be opened in a
                new window. This example shows using the <code>title</code> attribute of the anchor
                element to provide information that the link will be opened in a new window.</p>
                  </description>
                  <code role="html401">&lt;a href="http://example.com/subscribe.html" 
     target="_blank" 
     title="link opens in new window"&gt;
     Subscribe to email notifications about breaking news
&lt;/a&gt;</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="C7"/>
               <relatedtech idref="H30"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>Examine the source code for anchor elements. </p>
                  <olist>
                     <item>
                        <p>For each anchor element that has a <code>title</code> attribute, check that the
                    <code>title</code> attribute together with the link text describes the purpose
                  of the link.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H34">
            <short-name>Using a Unicode right-to-left mark (RLM) or left-to-right mark (LRM) to mix text
          direction inline</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use Unicode right-to-left marks and left-to-right
            marks to override the HTML bidirectional algorithm when it produces undesirable results.
            This may be necessary, for instance, when placing neutral characters such as spaces or
            punctuation between different directional text runs. The concepts used in this technique
            are described in <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/International/articles/inline-bidi-markup/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">What you need to
              know about the bidi algorithm and inline markup</loc>.</p>
               <p> Unicode right-to-left marks and left-to-right marks can be entered directly or by
            means of character entities or numeric character references, as shown here.</p>
               <ulist>
                  <item>
                     <p>left-to-right mark: &amp;lrm; or &amp;#x200e; (U+200E)</p>
                  </item>
                  <item>
                     <p>right-to-left mark: &amp;rlm; or &amp;#x200f; (U+200F)</p>
                  </item>
               </ulist>
               <p>Due to the <abbr expansion="bidirectional">bidi</abbr> algorithm, a source code editor
            may not display character entities or numeric
              character references as expected.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example shows an Arabic phrase in the middle of an English sentence. The exclamation point is part of the Arabic phrase and should appear on its left. Because it is between an Arabic and Latin character and the overall paragraph direction is <abbr expansion="left-to-right">LTR</abbr>, the bidirectional algorithm positions the exclamation mark to the right of the Arabic phrase. </p>
                     <p>The title is "<phrase xml:lang="ar">مفتاح معايير الويب!</phrase>" in Arabic.</p>
                     <p>Visually-ordered ASCII version (RTL text in uppercase, LTR in lower):</p>
                     <p>the title is "HCTIWS SDRADNATS BEW!" in arabic.</p>
                     <p>Inserting a Unicode right-to-left mark in the code immediately after the exclamation mark positions it correctly when you view the displayed text (see below). You can use a character escape or the (invisible) control character to insert the right-to-left mark.</p>
                     <p>The title is "<phrase xml:lang="ar">مفتاح معايير الويب!‏</phrase>" in Arabic.</p>
                     <p>Visually-ordered ASCII version:</p>
                     <p>the title is "!HCTIWS SDRADNATS BEW" in arabic.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/i18n-html-tech-bidi/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Authoring Techniques for
                    XHTML &amp; HTML Internationalization: Handling Bidirectional Text 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/i18n-html-tech-bidi/#ri20030218.135304584"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Mixing
                    text direction inline</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/International/articles/inline-bidi-markup/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">What you
                    need to know about the bidi algorithm and inline markup</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/International/geo/html-tech/tech-bidi.html#bidisource"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Problems with bidirectional source text</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H56"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the source for places where text changes direction. </p>
                     </item>
                     <item>
                        <p>When text changes direction, check whether neutral characters such as spaces or
                  punctuation occur adjacent to text that is rendered in the non-default
                direction.</p>
                     </item>
                     <item>
                        <p>When #2 is true and the HTML bidirectional algorithm would produce the wrong
                  placement of the neutral characters, check whether the neutral characters are
                  followed by Unicode right-to-left or left-to-right marks that cause neutral
                  characters to be placed as part of the preceding characters. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H35">
            <short-name> Providing text alternatives on <el>applet</el> elements </short-name>
            <applicability>
               <p> HTML and XHTML Documents that load Java applets where <code>applet</code> is not deprecated.
          </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>IE 6 for Windows and Firefox 1.5 and Opera 9 on Windows treat alternative text for
              the applet element differently. IE will display the body text of the applet element
              and not the alt attribute. Firefox and Opera will display the alt attribute but not
              the body text. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p> Provide a text alternative for an applet by using the alt attribute to label an applet
            and providing the text alternative in the body of the applet element. Both mechanisms
            are required due to the varying support of the alt attribute and applet body text by
            user agents. </p>
            </description>
            <examples>
               <eg-group>
                  <head>An applet to play the tic-tac-toe game. </head>
                  <description/>
                  <code>&lt;applet code="tictactoe.class" width="250" height="250" alt="tic-tac-toe game"&gt;
   tic-tac-toe game
&lt;/applet&gt;  </code>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="G94"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> View the source code of the applet element </p>
                     </item>
                     <item>
                        <p> Check that the applet element contains an alt attribute with a text alternative
                  for the applet </p>
                     </item>
                     <item>
                        <p> Check that the applet element contains a text alternative for the applet in the
                  body of the applet element </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Checks #2 and #3 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H36">
            <short-name>Using alt attributes on images used as submit buttons</short-name>
            <applicability>
               <p> Applies to content using image-based submit buttons. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> For input elements of type 'image', the <code>alt</code> attribute of the
            <code>input</code> element is used to provide a functional label. This label indicates
            the button's function, but does not attempt to describe the image. The label is
            especially important if there are multiple submit buttons on the page that each lead to
            different results. </p>
               <p> The <code>input</code> element is used to create many kinds of form controls. Although
            the HTML and XHTML DTDs permits the <code>alt</code> attribute on all of these, it should be used
            only on image submit buttons. User agent support for this attribute on other types of
            form controls is not well defined, and other mechanisms are used to label these
            controls. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> An <code>input</code> element with an <code>alt</code> attribute</p>
                  </description>
                  <code diff="chg">&lt;form action="http://example.com/prog/text-read" method="post"&gt;
  &lt;input type="image" name="submit" src="button.gif" alt="Submit" /&gt;
&lt;/form&gt;    </code>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="G94"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> For all input elements that have a type attribute value of "image", check for
                  the presence of an alt attribute. </p>
                     </item>
                     <item>
                        <p>Check that the alt attribute indicates the 
                  button's function.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #1 and #2 are true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H37">
            <short-name>Using <att>alt</att> attributes on <el>img</el> elements</short-name>
            <applicability>
               <p>
                  <phrase diff="add">Images used within HTML documents.</phrase>
                  <phrase diff="del">Documents that load images, when the image format is not an accessibility-supported content technology.</phrase>
               </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description id="img-alt_desc">
               <p>When using the <el>img</el> element, specify a short text alternative with the
            <att>alt</att> attribute. Note. The value of this attribute is referred to as "alt
            text".</p>
               <p>When an image contains words that are important to understanding the content, the alt
            text should include those words. This will allow the alt text to play the same function
            on the page as the image. Note that it does not necessarily describe the visual
            characteristics of the image itself but must convey the same meaning as the image. <phrase diff="del">If
            the text in the image is more than can fit in a short text alternative then it should be
            described in the short text alternative and a longdesc should be provided as well with
            the complete text.</phrase> 
               </p>
            </description>
            <examples>
               <eg-group id="img-alt_example">
                  <description>
                     <p>An image on a Website provides a link to a free newsletter. The image contains the
                text "Free newsletter. Get free recipes, news, and more. Learn more." The alt text
                matches the text in the image. </p>
                  </description>
                  <code role="xhtml10">&lt;img src="newsletter.gif" alt="Free newsletter. 
   Get free recipes, news, and more. Learn more." /&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>An image on a Web site depicts the floor plan of a building. The image is an
              image map with each room an interactive map area. The alt text is "The
              building's floor plan. Select a room for more information about the purpose or
              content of the room." The instruction to "select a room" indicates that the
              image is interactive.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <p>
                     <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.w3.org/TR/html401/struct/objects.html#edef-IMG"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">HTML 4.01 IMG
                element</loc>
                  </p>
               </see-also>
               <see-also>
                  <p>
                     <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.w3.org/TR/html401/struct/objects.html#adef-alt"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">HTML 4.01 alt
                attribute</loc>
                  </p>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G82"/>
               <relatedtech idref="H24"/>
               <relatedtech idref="H30"/>
               <relatedtech idref="H45"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine each <el>img</el> element in the content </p>
                     </item>
                     <item>
                        <p>Check that each <el>img</el> element which conveys meaning contains an
                  <att>alt</att> attribute. </p>
                     </item>
                     <item>
                        <p>If the image contains words that are important to understanding the content, the
                  words are included in the text alternative. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p diff="chg">Checks #2 and #3 are true.</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="H39">
            <short-name>Using caption elements to associate data table captions with data tables</short-name>
            <applicability>
               <p>HTML and XHTML data tables </p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to programmatically associate captions for data
            tables where captions are provided in the presentation. The caption for a table is a
            table identifier and acts like a title or heading for the table. </p>
               <p>The <el>caption</el> element is the appropriate markup for such text and it ensures
            that the table identifier remains associated with the table, including visually (by
            default). In addition, using the <el>caption</el> element allows screen reading software
            to navigate directly to the caption for a table if one is present.</p>
               <p>The <el>caption</el> element may be used whether or not the table includes a
              <att>summary</att> attribute. The <el>caption</el> element identifies the table
            whereas the <code>summary</code> attribute gives an overview of the purpose or explains
            how to navigate the table. If both are used, the <el>caption</el> should not duplicate
            information in the <code>summary</code>.</p>
               <p>Although WCAG 2.0 does not prohibit the use of layout tables, CSS-based layouts are
            recommended in order to retain the defined semantic meaning of the HTML and XHTML
            <code>table</code>elements and to conform to the coding practice of separating
            presentation from content. If a table is used for layout, the <el>caption</el> element
            is not used. The purpose of a layout table is simply to control the placement of
            content; the table itself is “transparent" to the user. A <el>caption</el> would "break"
            this transparency by calling attention to the table. </p>
            </description>
            <examples>
               <eg-group>
                  <head>An appointment calendar with a <code>caption</code>
                  </head>
                  <code role="html401">&lt;table&gt;
&lt;caption&gt;Schedule for the week of March 6&lt;/caption&gt;
...&lt;/table&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Table Captions: The CAPTION element</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H43"/>
               <relatedtech idref="H63"/>
               <relatedtech idref="H73"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check for layout tables: determine whether the content has a relationship with
                  other content in both its column and its row. </p>
                        <olist>
                           <item>
                              <p>If “no," the table is a layout table.</p>
                           </item>
                           <item>
                              <p>If “yes," the table is a data table.</p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p>If the table is a layout table, check that the table does not include a
                    <el>caption</el> element.</p>
                     </item>
                     <item>
                        <p>If the table is a data table and it includes a <el>caption</el> element, check
                  that the <el>caption</el> identifies the table</p>
                     </item>
                     <item>
                        <p>If both a <att>summary</att> attribute and a <el>caption</el> element are present
                  for this data table, check that the <att>summary</att> does not duplicate the
                    <el>caption</el>.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>For layout tables, #2 is true.</p>
                     </item>
                     <item>
                        <p>For data tables, #3 and #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H40">
            <short-name>Using definition lists</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide the definitions of words or phrases by
            presenting them in a definition list. The list is marked up using the <code>dl</code>
            element. Within the list, each term is put in a separate <code>dt</code> element, and
            its definition goes in the <code>dd</code> element directly following it. The
              <code>title</code> attribute can be used to provide additional information about the
            definition list. </p>
               <p>Using <code>dl</code>, <code>dt</code>, and <code>dd</code> ensures that relationships
            between terms and their definitions are preserved if the presentation format changes and
            that the list of terms and definitions is treated as a unit.</p>
               <p>Definition lists are easiest to use when the definitions are put in alphabetical order.
            Definition lists are typically used in a glossary.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A list of definitions of nautical terms used on a Website about sailing.</p>
                  </description>
                  <code role="html401">&lt;dl title="Nautical terms"&gt;
  &lt;dt&gt;Knot&lt;/dt&gt;
  &lt;dd&gt;
    &lt;p&gt;A &lt;em&gt;knot&lt;/em&gt; is a unit of speed equaling 1 
      nautical mile per hour (1.15 miles per hour or 1.852 
      kilometers per hour).&lt;/p&gt;
  &lt;/dd&gt;
  &lt;dt&gt;Port&lt;/dt&gt;
  &lt;dd&gt;
    &lt;p&gt;&lt;em&gt;Port&lt;/em&gt; is the nautical term (used on 
      boats and ships) that refers to the left side
      of a ship, as perceived by a person facing towards 
      the bow (the front of the vessel).&lt;/p&gt;
  &lt;/dd&gt;
  &lt;dt&gt;Starboard&lt;/dt&gt;
  &lt;dd&gt;
    &lt;p&gt;&lt;em&gt;Starboard&lt;/em&gt; is the nautical term (used 
      on boats and ships) that refers to the right 
      side of a vessel, as perceived by a person 
      facing towards the bow (the front of the vessel).&lt;/p&gt;
  &lt;/dd&gt;
&lt;/dl&gt;        </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/struct/lists.html#edef-DL"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Definition
                    lists: the DL, DT, and DD elements</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G62"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For any set of words and their definitions that have the appearance of a list: </p>
                  <olist>
                     <item>
                        <p>Check that the list is contained within a <code>dl</code> element. </p>
                     </item>
                     <item>
                        <p>Check that each word defined in the list is contained within a <code>dt</code>
                  element. </p>
                     </item>
                     <item>
                        <p>Check that the definition for each word appears in the <code>dd</code> element
                  immediately following the word's <code>dt</code> element . </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H42">
            <short-name>Using h1-h6 to identify headings</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use HTML and XHTML heading markup to convey the structure
            of the content. Heading markup can be used to:</p>
               <ulist>
                  <item>
                     <p>distinguish the main content from navigation bars, graphical banners, footers,
              etc.</p>
                  </item>
                  <item>
                     <p>show the organization of material within the main content</p>
                  </item>
               </ulist>
               <p>In HTML and XHTML, heading markup is designed to convey logical hierarchy, and
            heading elements include numbers (<code>h1</code> through <code>h6</code>). Skipping
            levels in the sequence of headings may create the impression that the structure of the
            document has not been properly thought through or that specific headings have been
            chosen for their visual rendering rather than their meaning. Cascading Style Sheets
            (CSS) can be used to change the way headings look or sound.</p>
               <p>Since headings indicate the start of important sections of content, it is possible for
            users with assistive technology to jump directly to the appropriate heading and begin
            reading the content. This significantly speeds interaction for users who would otherwise
            access the content slowly.</p>
               <p>Using headings merely to change the appearance of text does not convey the organization
            of the content, and may confuse users who use headings to perceive structure or rely on
            them for navigation. Conversely, while applying bold format, or even
            "class=heading", can result in the visual display of a heading,
            assistive technologies will not recognize such text as headings.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Headings show the overall organization of the content</head>
                  <description>
                     <p>In this example, heading markup is used to make the navigation and main content
                sections perceivable.</p>
                  </description>
                  <code role="html401">&lt;!-- Logo, banner graphic, search form, etc.  --&gt;
&lt;h2&gt;Navigation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="about.htm"&gt;About us&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="contact.htm"&gt;Contact us&lt;/a&gt;&lt;/li&gt;
 ...
&lt;/ul&gt;
&lt;h2&gt;All about headings&lt;/h2&gt;
&lt;!-- Text, images, other material making up the main content... --&gt;</code>
               </eg-group>
               <eg-group>
                  <head>Headings show the organization of material within the main content</head>
                  <description>
                     <p>Note that in HTML and XHTML heading elements only mark the beginning of
                sections; they do not contain them as element content.</p>
                  </description>
                  <code role="html401">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;Cooking techniques&lt;/title&gt;  
  &lt;/head&gt;   
  &lt;body&gt;     
    &lt;h1&gt;Cooking techniques&lt;/h1&gt;     
    &lt;p&gt;       
      ... some text here ...     
    &lt;/p&gt;           
    &lt;h2&gt;Cooking with oil&lt;/h2&gt; 
    &lt;p&gt; 
        ... text of the section ...     
    &lt;/p&gt;           
    &lt;h2&gt;Cooking with butter&lt;/h2&gt;       
    &lt;p&gt;
        ... text of the section ...     
    &lt;/p&gt;   
  &lt;/body&gt; 
&lt;/html&gt;</code>
               </eg-group>
               <eg-group>
                  <head>Headings in a 3-column layout</head>
                  <description>
                     <p>In this example, the main content of the page is in the middle column of a 3-column
                page. The title of the main content matches the title of the page, and is marked as
                  <code>h1</code>, even though it is not the first thing on the page. The content in
                the first and third columns is less important, and marked with <code>h2</code>.</p>
                  </description>
                  <code role="html401">&lt;head&gt;
 &lt;title&gt;Stock Market Up Today&lt;/title&gt;
 &lt;/head&gt;

 &lt;body&gt;

 &lt;!-- left nav --&gt;
 &lt;div class="left-nav"&gt;
 &lt;h2&gt;Site Navigation&lt;/h2&gt;
 &lt;!-- content here --&gt;
 &lt;/div&gt;

 &lt;!-- main contents --&gt;
 &lt;div class="main"&gt;
 &lt;h1&gt;Stock Market up today&lt;/h1&gt;
 &lt;!-- article text here --&gt;
 &lt;/div&gt;

 &lt;!-- right panel --&gt;
 &lt;div class="left-nav"&gt;
 &lt;h2&gt;Related links&lt;/h2&gt;
 &lt;!-- content here --&gt;
 &lt;/div&gt;
 &lt;/body&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/global.html#h-7.5.5"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    H1-H6 elements</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://meyerweb.com/eric/thoughts/2004/07/21/pick-a-heading/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Pick a
                    Heading</loc> Eric Meyer</p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/wacblog/headings/quick-tips-for-accessible-headings/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Quick tips for accessible headings</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H69"/>
               <relatedtech idref="G141"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that heading markup is used when content is a heading.</p>
                     </item>
                     <item>
                        <p>Check that heading markup is not used when content is not a heading.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H43">
            <short-name>Using id and headers attributes to associate data cells with header cells in
          data tables</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to associate each data cell (in a data table) with
            the appropriate headers. This technique adds a <code>headers</code> attribute to each
            data cell (<code>td</code> element). It also adds an <code>id</code> attribute to any
            cell used as a header for other cells. The <code>headers</code> attribute of a cell
            contains a list of the <code>id</code> attributes of the associated header cells. If
            there is more than one <code>id</code>, they are separated by spaces.</p>
               <p>This technique is used when data cells are associated with more than one row and/or one
            column header. This allows screen readers to speak the headers associated with each data
            cell when the relationships are too complex to be identified using the <code>th</code>
            element alone or the <code>th</code> element with the <code>scope</code> attribute.
            Using this technique also makes these complex relationships perceivable when the
            presentation format changes.</p>
               <p>This technique is not recommended for layout tables since its use implies a
            relationship between cells that is not meaningful when tables are used for layout.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A table with multiple rows of headers</head>
                  <code role="html401">&lt;table&gt;
   &lt;tr&gt;
     &lt;th rowspan="2" id="h"&gt;Homework&lt;/th&gt;
     &lt;th colspan="3" id="e"&gt;Exams&lt;/th&gt;
     &lt;th colspan="3" id="p"&gt;Projects&lt;/th&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
     &lt;th id="e1" headers="e"&gt;1&lt;/th&gt;
     &lt;th id="e2" headers="e"&gt;2&lt;/th&gt;
     &lt;th id="ef" headers="e"&gt;Final&lt;/th&gt;
     &lt;th id="p1" headers="p"&gt;1&lt;/th&gt;
     &lt;th id="p2" headers="p"&gt;2&lt;/th&gt;
     &lt;th id="pf" headers="p"&gt;Final&lt;/th&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td headers="h"&gt;15%&lt;/td&gt;
    &lt;td headers="e e1"&gt;15%&lt;/td&gt;
    &lt;td headers="e e2"&gt;15%&lt;/td&gt;
    &lt;td headers="e ef"&gt;20%&lt;/td&gt;
    &lt;td headers="p p1"&gt;10%&lt;/td&gt;
    &lt;td headers="p p2"&gt;10%&lt;/td&gt;
    &lt;td headers="p pf"&gt;15%&lt;/td&gt;
   &lt;/tr&gt;
  &lt;/table&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/tables.html#h-11.4.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">header information with data cells</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H39"/>
               <relatedtech idref="H51"/>
               <relatedtech idref="H63"/>
               <relatedtech idref="H73"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check for layout tables: determine whether the content has a relationship with
                  other content in both its column and its row. If “no," the table is a layout
                  table. If “yes," the table is a data table.</p>
                     </item>
                     <item>
                        <p>For data tables, check that any cell that is associated with more than one row
                  and/or one column header contains a <code>headers</code> attribute that lists the
                    <code>id</code> for all headers associated with that cell.</p>
                     </item>
                     <item>
                        <p>For data tables where any cell contains an <code>id</code> or
                  <code>headers</code> attribute, </p>
                        <olist>
                           <item>
                              <p>Check that each <code>id</code> listed in the <code>headers</code> attribute
                      of the data cell matches the <code>id</code> attribute of a cell that is used
                      as a header element</p>
                           </item>
                           <item>
                              <p>Check that the <code>headers</code> attribute of a data cell contains the
                        <code>id</code> attribute of all headers associated with the data cell</p>
                           </item>
                           <item>
                              <p>Check that all ids are unique (that is, no two elements in the page have the
                      same id)</p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If table is a layout table, no cells contain <code>headers</code> or
                  <code>id</code> attributes</p>
                     </item>
                     <item>
                        <p>If table is a data table and any cell contains an <code>id</code> attribute,
                  checks #3.1, #3.2, and #3.3 are true.</p>
                     </item>
                     <item>
                        <p>If table is a data table and any cell is associated with more than one row and/or
                  one column header, check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H44">
            <short-name>Using label elements to associate text labels with form controls</short-name>
            <applicability>
               <p>HTML and XHTML controls that use external labels</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="minimize-error-cues"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <ua-issues><!-- these ua issues also appear in H90 --><ua-issue name="" version="">
                  <p>The HTML and XHTML specifications allow both implicit and explicit labels. However, some
              assistive technologies do not correctly handle implicit labels (for example,
                <code>&lt;label&gt;First name &lt;input type="text"
                name="firstname"&gt;&lt;/label&gt;</code>).</p>
                  <ulist>
                     <item>
                        <p>JAWS 7.10 was tested on Windows XP with Internet Explorer 6.0 and Firefox 1.5. It
                  reads the label for explicit and implicit labels for text fields in both virtual
                  PC cursor and forms reading mode. In forms mode it does not read the label for
                  implicit labels on checkboxes and radio fields.</p>
                     </item>
                     <item>
                        <p>Window-Eyes 5.5 was tested on Windows XP with Internet Explorer 6.0 and Firefox
                  1.5. It will always speak the label for an explicitly labelled form field. It does
                  not speak the label for the implicitly labelled form control in browse on mode but
                  will speak the implicit label when navigating from control to control in browse
                  off mode. </p>
                     </item>
                  </ulist>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>User agents will display a tool tip when the mouse hovers above an <code>input</code>
              element containing a <code>title</code> attribute. Title attributes are exposed to
              assistive technology and are displayed as tooltips in many graphical browsers.
              Tooltips can't be opened via the keyboard, so this information may not be available to
              sighted keyboard users. </p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>If no <code>label</code> is available, JAWS and Window-Eyes speak the
              <code>title</code> attribute when the form control receives focus </p>
                  <ulist>
                     <item>
                        <p>JAWS 6.0 and later can be set to speak both <code>label</code> and
                  <code>title</code> when the two items are different; however, very few users are
                  aware of this setting.</p>
                     </item>
                     <item>
                        <p>WindowEyes 5.5 has a hot key, ins-E, that will display additional information,
                  including the title attribute, for the item with focus. </p>
                     </item>
                  </ulist>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to use the <code>label</code> element to explicitly
            associate a form control with a label. A <code>label</code> is attached to a specific
            form control through the use of the <code>for</code> attribute. The value of the
              <code>for</code> attribute must be the same as the value of the <code>id</code>
            attribute of the form control. </p>
               <p>The <code>id</code> attribute may have the same value as the <code>name</code>
            attribute, but both must be provided, and the <code>id</code> must be unique in the Web
            page.</p>
               <p>This technique is sufficient for Success Criteria 1.1.1, 1.3.1 and 4.1.2 whether or not the <el>label</el> element is visible. That is, it may be hidden using CSS. However, for Success Criterion 3.3.2, the <el>label</el> element must be visible since it provides assistance to all users who need help understanding the purpose of the field. </p>
               <p>Note that the <code>label</code> is positioned after <code>input</code> elements of
              <code>type="checkbox"</code> and <code>type="radio"</code>.</p>
               <note>
                  <p>Elements that use explicitly associated labels are: </p>
                  <ulist>
                     <item>
                        <p>
                           <code>input type="text"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="checkbox"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="radio"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="file"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="password"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>textarea</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>select</code>
                        </p>
                     </item>
                  </ulist>
                  <p>The <att>label</att> element is <emph role="bold">not</emph> used for the following
              because labels for these elements are provided via the value attribute (for Submit and
              Reset buttons), the alt attribute (for image buttons), or element content itself
              (button). </p>
                  <ulist>
                     <item>
                        <p>Submit and Reset buttons (<code>input type="submit"</code> or <code>input
                    type="reset"</code>)</p>
                     </item>
                     <item>
                        <p>Image buttons (<code>input type="image"</code>)</p>
                     </item>
                     <item>
                        <p>Hidden input fields (<code>input type="hidden"</code>)</p>
                     </item>
                     <item>
                        <p>Script buttons (<code>button</code> elements or <code>&lt;input
                    type="button"&gt;</code>)</p>
                     </item>
                  </ulist>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>A text input field</head>
                  <description>
                     <p>The text field in the example below has the explicit label of "First name:". The
                  <code>label</code> element's <code> for</code> attribute matches the
                <code>id</code> attribute of the <code>input</code> element. </p>
                  </description>
                  <code role="html401">&lt;label for="firstname"&gt;First name:&lt;/label&gt; 
&lt;input type="text" name="firstname" id="firstname" /&gt;</code>
               </eg-group>
               <eg-group>
                  <head>A checkbox</head>
                  <code role="html401">&lt;input type="checkbox" id="markuplang" name="computerskills" checked="checked"&gt;
&lt;label for="markuplang"&gt;HTML&lt;/label&gt;</code>
               </eg-group>
               <eg-group>
                  <head>A group of radio buttons</head>
                  <description>
                     <p>A small, related group of radio buttons with a clear description and labels for
                each individual element.</p>
                     <note>
                        <p>To provide clear associations and instructions for a large set of related radio
                  buttons <specref ref="H71"/>, should be considered.</p>
                     </note>
                  </description>
                  <code role="html401"> &lt;h1&gt;Donut Selection&lt;/h1&gt;

&lt;p&gt;Choose the type of donut(s) you would like then select 
   the "purchase donuts" button.&lt;/p&gt;

&lt;form action="http://example.com/donut" method="post"&gt;
&lt;p&gt;
  &lt;input type="checkbox" name="flavor" id="choc" value="chocolate" /&gt;
    &lt;label for="choc"&gt;Chocolate&lt;/label&gt;&lt;br/&gt;
  &lt;input type="checkbox" name="flavor" id="cream" value="cream"/&gt;
    &lt;label for="cream"&gt;Cream Filled&lt;/label&gt;&lt;br/&gt;
  &lt;input type="checkbox" name="flavor" id="honey" value="honey"/&gt;
    &lt;label for="honey"&gt;Honey Glazed&lt;/label&gt;&lt;br/&gt;
  &lt;input type="submit" value="Purchase Donuts"/&gt;
&lt;/p&gt;
&lt;/form&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/interact/forms.html#h-17.9"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 form labels</loc>
                        </p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usability.com.au/resources/wcag2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms using WCAG 2.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G167"/>
               <relatedtech idref="H65"/>
               <relatedtech idref="H71"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For all <code>input</code> elements of type <code>text</code>, <code>file</code> or
                <code>password</code>, for all <code>textareas</code> and for all
              <code>select</code> elements in the Web page: </p>
                  <olist>
                     <item>
                        <p>Check that there is a <code>label</code> element that identifies the purpose of
                  the control before the <code>input</code> element</p>
                     </item>
                     <item>
                        <p>Check that the <code>for</code> attribute of the <code>label</code> element
                  matches the id of the <code>input</code> element</p>
                     </item>
                     <item>
                        <p diff="add">Check that the <el>label</el> element is visible. </p>
                     </item>
                  </olist>
                  <p>For all <code>input</code> elements of type checkbox or radio in the Web page:: </p>
                  <olist>
                     <item>
                        <p>Check that there is a <code>label</code> element that identifies the purpose of
                  the control after the <code>input</code> element</p>
                     </item>
                     <item>
                        <p>Check that the <code>for</code> attribute of the <code>label</code> element
                  matches the <code>id</code> of the <code>input</code> element</p>
                     </item>
                     <item>
                        <p diff="add">Check that the <el>label</el> element is visible. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p diff="chg">Checks #1 and #2 are true. For Success Criterion 3.3.2, Check #3 is also true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H45">
            <short-name>Using longdesc</short-name>
            <applicability>
               <p>HTML and XHTML documents that include images that cannot be
          described in a short text alternative. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Some older assistive technologies do not support the <att>longdesc</att> attribute.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p> The objective of this technique is to provide information in a file designated by the
            <att>longdesc</att> attribute when a short text alternative does not adequately convey the function
            or information provided in the image. The <att>longdesc</att> attribute is a <abbr expansion="Unifrom Resource Identifier">URI</abbr>, the target of
            which contains a long description of the non-text content. </p>
            </description>
            <examples>
               <eg-group>
                  <code>&lt;p&gt;&lt;img src="chart.gif" alt="a complex chart" longdesc="chartdesc.html"/&gt;&lt;/p&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/wacblog/articles/too-much-accessibility/too-much-accessibility-the-rise-and-fall-of-the-longdesc/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Too much accessibility - the rise and fall of the LONGDESC</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G73"/>
               <relatedtech idref="G74"/>
               <relatedtech idref="G92"/>
               <relatedtech idref="G94"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check that a longdesc attribute exists. </p>
                     </item>
                     <item>
                        <p> Check that the link in the longdesc attribute is valid </p>
                     </item>
                     <item>
                        <p> Check that the long description describes the original non-text content
                  associated with it. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #1 through #3 are all true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H46">
            <short-name>Using <el>noembed</el> with <el>embed</el>
            </short-name>
            <applicability>
               <p>Documents that load plugins with the <el>embed</el> element.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="media-equiv-text-doc"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="general" version="">
                  <note>
                     <p>Although <el>embed</el> is widely supported in user agents - it is not a valid part
                of HTML or XHTML.</p>
                     <!--BBC: Commenting out for now, issue response okay without this info for now. ednote>
            <edtext>@@ add user agent notes section to reflect details about user agents that support this. Refer to <loc href="http://www.w3.org/2006/02/lc-comments-tracker/35422/understandingwcag20/786">LC-786</loc>.</edtext>
          </ednote--></note>
               </ua-issue>
            </ua-issues>
            <description id="noembed_desc">
               <p>The objective of this technique is to provide alternative content for the
            <el>embed</el> element in a <el>noembed</el> element. The <el>noembed</el> is rendered
            only if the <el>embed</el> is not supported. While it can be positioned anywhere on the
            page, it is a good idea to include it as a child element of <el>embed</el> so that it is
            clear to assistive technologies that a text alternative is associated with the
            <el>embed</el> element it describes.</p>
            </description>
            <examples>
               <eg-group>
                  <head>
                     <el>noembed</el> is provided inside an <el>embed</el>
                  </head>
                  <code>&lt;embed src="../movies/history_of_rome.mov"
  height="60" width="144" autostart="false"&gt;
  &lt;noembed&gt;
    &lt;a href="../transcripts/transcript_history_rome.htm"&gt;Transcript of "The history of Rome"&lt;/a&gt;
  &lt;/noembed&gt;
&lt;/embed&gt;</code>
               </eg-group>
               <eg-group>
                  <head>
                     <el>noembed</el> is provided beside an <el>embed</el>
                  </head>
                  <code>&lt;embed src="moviename.swf" width="100" height="80"
  pluginspage="http://example.com/shockwave/download/" /&gt;
&lt;noembed&gt;
  &lt;img alt="Still from Movie" src="moviename.gif" 
    width="100" height="80" /&gt;
&lt;/noembed&gt;;</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check if <code>embed</code> element has a child <code>noembed</code> element </p>
                     </item>
                     <item>
                        <p>Check if <code>embed</code> element has a <code>noembed</code> element that
                  immediately follows it. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#1 is true or #2 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H48">
            <short-name>Using ol, ul and dl for lists</short-name>
            <applicability>
               <p>HTML, XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to create lists of related items using list elements
            appropriate for their purposes. The <code>ol</code> element is used when the list is
            ordered and the <code>ul</code> element is used when the list is unordered. Definition
            lists (<code>dl</code>) are used to group terms with their definitions. Although the use
            of this markup can make lists more readable, not all lists need markup. For instance,
            sentences that contain comma-separated lists may not need list markup.</p>
               <p>When markup is used that visually formats items as a list but does not indicate the
            list relationship, users may have difficulty in navigating the information. An example
            of such visual formatting is including asterisks in the content at the beginning of each
            list item and using <code>&lt;br&gt;</code> elements to separate the list items.</p>
               <p>Some assistive technologies allow users to navigate from list to list or item to item.
            Style sheets can be used to change the presentation of the lists while preserving their
            integrity.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A list showing steps in a sequence </head>
                  <description>
                     <p>This example uses an ordered list to show the sequence of steps in a process.</p>
                  </description>
                  <code role="html401"> &lt;ol&gt;
  &lt;li&gt;Mix eggs and milk in a bowl.&lt;/li&gt;
  &lt;li&gt;Add salt and pepper.&lt;/li&gt;
&lt;/ol&gt;</code>
               </eg-group>
               <eg-group>
                  <head>A grocery list </head>
                  <description>
                     <p>This example shows an unordered list of items to buy at the store.</p>
                  </description>
                  <code role="html401">&lt;ul&gt;
  &lt;li&gt;Milk&lt;/li&gt;
  &lt;li&gt;Eggs&lt;/li&gt;
  &lt;li&gt;Butter&lt;/li&gt;
&lt;/ul&gt;</code>
               </eg-group>
               <eg-group>
                  <head>A word and its definition </head>
                  <description>
                     <p>This example uses a definition list to group a definition with the term that is
                being defined.</p>
                  </description>
                  <code role="html401">&lt;dl&gt;
  &lt;dt&gt;blink&lt;/dt&gt;
  &lt;dd&gt;turn on and off between .5 and 3 times per second
  &lt;/dd&gt;
&lt;/dl&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/lists.html#h-10.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Unordered lists (UL), ordered lists (OL), and list items (LI)</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/lists.html#h-10.3"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Definition lists: the DL, DT, and DD elements</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H40"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
                           <phrase diff="add">Check that content that has the visual appearance of a list (with or without bullets) is marked as an unordered list.</phrase>
                           <phrase diff="del">Check that content that has the visual appearance of a bulleted list is marked as an unordered list</phrase>
                        </p>
                     </item>
                     <item>
                        <p>Check that content that has the visual appearance of a numbered list is marked as an ordered list.</p>
                     </item>
                     <item>
                        <p>Check that content is marked as a definition list when terms and their definitions are presented in the form of a list.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All the checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H49">
            <short-name>Using semantic markup to mark emphasized or special text</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Some semantic elements are not supported well by assistive technologies. JAWS
              contains support for <el>blockquote</el> and <code>cite</code>. WindowEyes contains
              support for <el>blockquote</el>, <el>q</el> and <el>cite</el>. </p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p> Firefox 1.0 (Windows) and higher, Opera 7.54 (Windows) and higher, Mozilla 1.7.3
              (Windows) and higher automatically generate quotes around q elements, but Internet
              Explorer 6 for Windows does not. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate how semantic markup can be used to
            mark emphasized or special text so that it can be programmatically determined. Using
            semantic markup to mark emphasized or special text also provides structure to the
            document. User agents can then make the structure perceivable to the user, for example
            using a different visual presentation for different types of structures or by using a
            different voice or pitch in an auditory presentation. </p>
               <p>Most user agents will visually distinguish text that has been identified using semantic
            markup. Some assistive technologies provide a mechanism for determining the
            characteristics of content that has been created using proper semantic markup.</p>
            </description>
            <examples>
               <p>See <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="semantictext.html"
                       linktype="examples"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">rendered examples of semantic
              text</loc>.</p>
               <eg-group>
                  <description>
                     <p>This example shows how to use the <code>em</code> and <code>strong</code> elements
                to emphasize text. The <code>em</code> and <code>strong</code> elements were
                designed to indicate structural emphasis that may be rendered in a variety of ways
                (font style changes, speech inflection changes, etc.).</p>
                  </description>
                  <code role="html401"> ...What she &lt;em&gt;really&lt;/em&gt; meant to say was, &amp;quot;This is not ok, 
 it is &lt;strong&gt;excellent&lt;/strong&gt;&amp;quot;!... </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>This example shows using the <code>blockquote</code> element to mark up long
                quotations which may require paragraph breaks. It also demonstrates the use of the
                  <code>cite</code> element to specify a reference.</p>
                  </description>
                  <code role="html401">&lt;p&gt;The following is an excerpt from the &lt;cite&gt;The Story of my Life&lt;/cite&gt; by Helen Keller&lt;/p&gt;
 &lt;blockquote&gt;
   &lt;p&gt;Even in the days before my teacher came, I used to feel along the square stiff boxwood
   hedges, and, guided by the sense of smell, would find the first violets and lilies.  
   There, too, after a fit of temper, I went to find comfort and to hide my hot face 
   in the cool leaves and grass.&lt;/p&gt;
 &lt;/blockquote&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Here is the use of the <code>q</code> element to mark up a shorter quotation.
                Quotes are provided around the <code>q</code> element, because many user agents do
                not support this element yet and therefore do not display it properly (see UA
                notes). CSS rules to suppress automatic generation of quotes are provided for those
                user agents that do support the <code>q</code> element, to prevent them from
                generating quotes automatically in addition to the quotes provided by the author,
                resulting in double-quoted content. In the future, when the <code>q</code> element
                is more broadly supported, the need to provide quotes and suppress browser-generated
                quotes will go away. </p>
                  </description>
                  <code role="css">q:before { content: ""; } 
q:after { content: ""; }  </code>
                  <code role="html401"> &lt;p&gt;Helen Keller said, "&lt;q&gt;Self-pity is our worst enemy and if we yield to it, 
we can never do anything good in the world.&lt;/q&gt;"&lt;/p&gt;</code>
                  <description/>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Superscripts and subscripts are created using the <code>sup</code> and
                <code>sub</code> elements.</p>
                  </description>
                  <code role="html401"> &lt;p&gt;Beth received 1&lt;sup&gt;st&lt;/sup&gt; place in the 9&lt;sup&gt;th&lt;/sup&gt; grade science competition.&lt;/p&gt;
&lt;p&gt;The chemical notation for water is H&lt;sub&gt;2&lt;/sub&gt;O.&lt;/p&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/text.html#h-9.2.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Phrase
                    elements: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ABBR, and ACRONYM</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/text.html#h-9.2.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Quotations: The BLOCKQUOTE and Q elements</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/text.html#h-9.2.3"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Subscripts and superscripts: the SUB and SUP elements</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/fixing-ie-quotes.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Fixing Quotes in
                    Internet Explorer</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G115"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the content for information that is conveyed through variations in
                  presentation of text.</p>
                     </item>
                     <item>
                        <p>Check that appropriate semantic markup (such as <code> em, strong, cite,
                    blockquote, quote, sub</code>, and <code>sup</code>) have been used to mark the
                  text that conveys information through variations in text.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H50">
            <short-name>Using structural elements to group links</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
            </applies-to>
            <ua-issues diff="del">
               <ua-issue name="" version="">
                  <p>Current assistive technology does not support navigation by div elements.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate how to group links into logical sets.
            When links are grouped into logical sets (for example, in a navigation bar or main menu
            that appears on every page in a site) they should be marked up as a unit. Navigation
            bars are usually the first thing someone encounters on a page. People who are sighted
            are often able to ignore navigation parts and start reading the content of the page.
            Someone using a screen reader must first listen to the text of each link in the
            navigation bar before reading the interesting content. There are several ways to mark up
            content so that a user with a screen reader can jump over the navigation bar and avoid
            reading all of the links.</p>
               <p>Group links via one of the following mechanisms (in descending order of preference): </p>
               <ulist>
                  <item>
                     <p>
                        <code>ul</code> or <code>ol</code>
                     </p>
                  </item>
                  <item diff="del">
                     <p diff="del">
                        <code>div</code>
                     </p>
                  </item>
                  <item>
                     <p>
                        <code>map</code>
                     </p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>Using lists to group links</head>
                  <description>
                     <p>In this example the links are grouped using the <code>ul</code> and <code>li</code>
                elements.</p>
                  </description>
                  <code role="html401">&lt;a name="categories" id="categories"&gt;&lt;/a&gt;&lt;h2&gt;Product Categories&lt;/h2&gt;
&lt;ul class="navigation"&gt;
    &lt;li&gt;&lt;p&gt;&lt;a href="kitchen.html"&gt;Kitchen&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;&lt;a href="bedbath.html"&gt;Bed &amp; Bath&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;&lt;a href="dining.html"&gt;Fine Dining&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;&lt;a href="lighting.html"&gt;Lighting&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;&lt;a href="storage.html"&gt;Storage&lt;/a&gt;&lt;li&gt;&lt;p&gt;
&lt;/ul&gt; </code>
                  <description>
                     <p>CSS can be used to style the list elements, so this technique can be used with a
                variety of visual appearances.</p>
                     <p>Here is a style that removes the list bullets and the left padding that creates the
                indent and flows the individual list elements horizontally.</p>
                  </description>
                  <code role="html401">ul.navigation {
  list-style: none; 
  padding: 0;
}
ul.navigation li {
  display: inline;
}</code>
                  <description>
                     <p>This style removes the list bullets and the left padding and displays the items in
                a floating block.</p>
                  </description>
                  <code role="html401"> ul.navigation {
 list-style: none; 
 padding: 0;
}
ul.navigation li {
 display: block; 
 float: left;
}</code>
               </eg-group>
               <eg-group diff="del">
                  <head>Using <el>div</el> to group links</head>
                  <description>
                     <p>In this example the links in a breadcrumb trail are grouped within a <el>div</el>.
              </p>
                  </description>
                  <code role="html401">&lt;div title="Breadcrumb trail" class="breadcrumb"&gt;
   &lt;a href="home.html"&gt;Home&lt;/a&gt; :
   &lt;a href="technology.html"&gt;Web Accessibility&lt;/a&gt; :
   &lt;a href="guideline.html"&gt;Guidelines&lt;/a&gt; :
   1.3
 &lt;/div&gt;   </code>
                  <description>
                     <p>Which will display as Home : Web Accessibility : Guidelines : 1.3</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Using <code>map</code> to group links</head>
                  <description>
                     <p>In this example, the <code>map</code> element groups a set of links, the
                  <code>title</code> attribute identifies it as a navigation bar.</p>
                  </description>
                  <code role="html401"> &lt;map title="Navigation Bar"&gt;
  &lt;p&gt;
    [&lt;a href="home.html"&gt;Home&lt;/a&gt;] 
    [&lt;a href="search.html"&gt;Search&lt;/a&gt;] 
    [&lt;a href="new.html"&gt;New and highlighted&lt;/a&gt;] 
    [&lt;a href="sitemap.html"&gt;Site map&lt;/a&gt;]
  &lt;/p&gt;
 &lt;/map&gt;  </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/lists.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 lists</loc>
                        </p>
                     </item>
                     <item diff="del">
                        <p diff="del">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/global.html#edef-DIV"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 DIV
                    element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/objects.html#edef-MAP"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    MAP element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/global.html#adef-title"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    title attribute</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>Examine the content for <code>anchor</code> elements which are to be grouped together
              . </p>
                  <olist>
                     <item>
                        <p>Check that the anchor elements are grouped using list<phrase diff="del">, <code>div</code>
                           </phrase> or
                    <code>map</code> elements.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H51">
            <short-name>Using table markup to present tabular information</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to present tabular information in a way that
            preserves relationships within the information even when users cannot see the table or
            the presentation format is changed. Information is considered tabular when logical
            relationships among text, numbers, images, or other data exist in two dimensions
            (vertical and horizontal). These relationships are represented in columns and rows, and
            the columns and rows must be recognizable in order for the logical relationships to be
            perceived.</p>
               <p>Using the <code>table</code> element with the child elements <code>tr</code>,
              <code>th</code>, and <code>td</code> makes these relationships perceivable. Techniques
            such as inserting tabs to create columns or using the <code>pre</code> element are
            purely visual, and visually implied logical relationships are lost if the user cannot
            see the table or the visual presentation is changed.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A schedule marked up as a simple data table with column and row headers</head>
                  <description>
                     <p>This example uses markup for a simple data table. The first row shows the days of
                the week. Time intervals are shown in the first column. These cells are marked with
                the <code>th</code> element. This identifies the days of the week as column headers
                and the time intervals as row headers.</p>
                     <p>Screen readers speak header information that changes as the user navigates the
                table. Thus, when screen reader users move to left or right along a row, they will
                hear the day of the week (the column header) followed by the appointment (if any).
                They will hear the time interval as they move up or down within the same column.</p>
                  </description>
                  <code role="html401"> &lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;/td&gt;
    &lt;th&gt;Monday&lt;/th&gt;
    &lt;th&gt;Tuesday&lt;/th&gt;
    &lt;th&gt;Wednesday&lt;/th&gt;
    &lt;th&gt;Thursday&lt;/th&gt;
    &lt;th&gt;Friday&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;8:00-9:00&lt;/th&gt;
    &lt;td&gt;Meet with Sam&lt;/td&gt;
    &lt;td&gt; &lt;/td&gt;
    &lt;td&gt; &lt;/td&gt;
    &lt;td&gt; &lt;/td&gt;
    &lt;td&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;9:00-10:00&lt;/th&gt;
    &lt;td&gt; &lt;/td&gt;
    &lt;td&gt; &lt;/td&gt;
    &lt;td&gt;Doctor Williams&lt;/td&gt;
    &lt;td&gt;Sam again&lt;/td&gt;
    &lt;td&gt;Leave for San Antonio&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Table Element</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.5"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Table rows: The TR element</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.6"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Table cells: The TH and TD elements</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H39"/>
               <relatedtech idref="H43"/>
               <relatedtech idref="H63"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check for the presence of tabular information.</p>
                     </item>
                     <item>
                        <p>For each occurrence of tabular information: </p>
                        <olist>
                           <item>
                              <p>Check that table markup with at least the elements <code>table</code>,
                        <code>tr</code>, <code>th</code>, and <code>td</code> is used. </p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H53"><!--MC to update wiki and review output--><short-name>Using the body of the <el>object</el> element</short-name>
            <applicability>
               <p>Documents that load media with the <el>object</el> element.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="media-equiv-text-doc"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="general" version="">
                  <p>This technique is not supported well by assistive technologies and cross-browser
              support is irregular.</p>
               </ua-issue>
            </ua-issues>
            <description id="object_shortdescription_desc">
               <p>The objective of this technique is to provide a text alternative for content rendered
            using the object element. The body of the object element can be used to provide a
            complete text alternative for the object or may contain additional non-text content with
            text alternatives.</p>
            </description>
            <examples>
               <eg-group>
                  <head>An object includes a long description that describes it</head>
                  <code> &lt;object classid="http://www.example.com/analogclock.py"&gt;
  &lt;p&gt;Here is some text that describes the object and its operation.&lt;/p&gt;
&lt;/object&gt;</code>
               </eg-group>
               <eg-group>
                  <head>An object includes non-text content with a text alternative </head>
                  <code>&lt;object classid="http://www.example.com/animatedlogo.py"&gt;
  &lt;img src="staticlogo.gif" alt="Company Name" /&gt;
&lt;/object&gt;   
            </code>
               </eg-group>
               <eg-group>
                  <head>The image object has content that provides a brief description of the function of
              the image</head>
                  <code>&lt;object data="companylogo.gif" type="image/gif"&gt;
  &lt;p&gt;Company Name&lt;/p&gt;
&lt;/object&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/objects.html#edef-OBJECT"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    OBJECT element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://juicystudio.com/article/object-paranoia.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Object
                  Paranoia</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G92"/>
               <relatedtech idref="H46"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check that the body of each <el>object</el> element contains a text alternative
                  for the object. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #1 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H54">
            <short-name>Using the <code>dfn</code> element to identify the defining instance of a word</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use the <code>dfn</code> to mark the use of a
            word or phrase where it is defined. The <code>dfn</code> element is used to indicate the
            defining instance of the enclosed term. In other words, it marks the occurrence of the
            term where the term is defined. Note that it encloses the term, not the definition. This
            technique would be used in combination with <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="G112" linktype="general"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Using
              inline definitions</loc> to provide the definition.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following code snippet demonstrates the use of the <code>dfn</code>
              element.</p>
                  </description>
                  <code role="html401">&lt;p&gt;The Web Content Accessibility Guidelines require that non-text content
has a text alternative. &lt;dfn&gt;Non-text content&lt;/dfn&gt; is content that is not a sequence
of characters that can be programmatically determined or where the sequence is
not expressing something in human language; this includes ASCII Art (which is a
pattern of characters), emoticons, leetspeak (which is character substitution), and
images representing text .&lt;/p&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/text.html#edef-DFN"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">DFN
                    Element</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G112"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify all words that are defined inline in the text, that is, where the
                  definition occurs in a sentence near an occurrence of the word. </p>
                     </item>
                     <item>
                        <p>Check that each word that is defined inline is contained in a <code>dfn</code>
                  element. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H56">
            <short-name>Using the <code>dir</code> attribute on an inline element to resolve problems
          with nested directional runs</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version=""/>
            </ua-issues>
            <description>
               <p>The objective of this technique is to identify changes in the text direction of text that includes nested directional runs by providing the <code>dir</code> attribute on
            inline elements. A nested directional run is a run of text that includes mixed directional text, for example, a paragraph in English containing a quoted Hebrew sentence which in turn includes an English phrase. Use of the <code>dir</code> attribute on an enclosing <code>span</code> or other inline element may be necessary because the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/International/articles/inline-bidi-markup/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Unicode bidirectional algorithm</loc> can produce undesirable results when mixed
            directional text contains spaces or punctuation. The concepts used in this technique are described in <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/International/articles/inline-bidi-markup/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">What you need to know about the bidi algorithm and inline markup</loc>. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example defines the text direction of a nested, mixed-direction phrase, in Hebrew and English, to be right-to-left. Because the whole quote is in Hebrew, and therefore runs right to left, the text "W3C" and the comma should appear to the left of (i.e. after) the Hebrew text, like this:</p>
                     <p>The title is "<phrase xml:lang="he" dir="rtl">פעילות הבינאום, W3C</phrase>" in Hebrew.</p>
                     <p>Visually-ordered ASCII version (RTL text in uppercase, LTR in lower):</p>
                     <p>the title is "w3c ,YTIVITCA NOITAZILANOITANRETNI" in hebrew.</p>
                     <p>The Unicode bidirection algorithm alone is insufficient to achieve the right result, and leaves the text 'W3C' on the right side of the quote:</p>
                     <p>The title is "<phrase xml:lang="he">פעילות הבינאום</phrase>, W3C" in Hebrew.</p>
                     <p>Visually-ordered ASCII version:</p>
                     <p>the title is "YTIVITCA NOITAZILANOITANRETNI, w3c" in hebrew.</p>
                     <p>The following markup will produce the expected result:</p>
                  </description>
                  <code role="html401">
&lt;p&gt;The title says "&lt;span lang="he" 
dir="rtl"&gt;<phrase dir="rtl">פעילות הבינאום, W3C</phrase>&lt;/span&gt;" in Hebrew.&lt;/p&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/dirlang.html#blocklevel-bidi"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Inheritance of text direction information</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/i18n-html-tech-bidi/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Authoring Techniques for
                    XHTML &amp; HTML Internationalization: Handling Bidirectional Text 1.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H34"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the text direction of text in the document</p>
                     </item>
                     <item>
                        <p>If the text direction is right-to-left, check that for the ancestor element that
                  has a <code>dir</code> attribute, the attribute has the value "rtl"</p>
                     </item>
                     <item>
                        <p>If the text direction is left-to-right, check that there is no ancestor element
                  with a <code>dir</code> attribute, or that for the ancestor element that has a
                    <code>dir</code> attribute, the attribute has the value "ltr"</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true for all text.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H57">
            <short-name> Using language attributes on the html element </short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-doc-lang-id"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="subtags" version="">
                  <p>Additional subtags for region, script, variant or other aspects may lead to errors in language switching in older versions of some screenreaders.</p>
               </ua-issue>
               <ua-issue name="jaws" version="8">
                  <p>JAWS 8.0 can be configured to change language automatically on the basis of the lang attribute. However, it only switches amongst major languages as indicated by the primary code. If a regional language variant is indicated with a language subcode, JAWS will use the default variant for which it is configured.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p> The objective of this technique is to identify the default language of a document by
            providing the <att>lang</att> and/or <att>xml:lang</att> attribute on the <el>html</el>
            element. </p>
               <p>Identifying the language of the document is important for a number of reasons: </p>
               <ulist>
                  <item>
                     <p>It allows braille translation software to substitute control codes for accented
                characters, and insert control codes necessary to prevent erroneous creation of
                Grade 2 braille contractions. </p>
                  </item>
                  <item>
                     <p>Speech synthesizers that support multiple languages will be able to orient and
                adapt to the pronunciation and syntax that are specific to the language of the page,
                speaking the text in the appropriate accent with proper pronunciation. </p>
                  </item>
                  <item>
                     <p>Marking the language can benefit future developments in technology, for example
                users who are unable to translate between languages themselves will be able to use
                machines to translate unfamiliar languages. </p>
                  </item>
                  <item>
                     <p>Marking the language can also assist user agents in providing definitions using a
                dictionary. </p>
                  </item>
               </ulist>
               <p>HTML 4.01 uses the <el>lang</el> attribute of the <el>html</el> element. XHTML served
            as text/html uses the <att>lang</att> attribute and the <att>xml:lang</att> attribute of
            the <el>html</el> element, in order to meet the requirements of XHTML and provide
            backward compatibility with HTML. XHTML served as application/xhtml+xml uses the
              <att>xml:lang</att> attribute of the <el>html</el> element. Both the <att>lang</att>
            and the <att>xml:lang</att> attributes can take only one value. </p>
               <note>
                  <p> HTML only offers the use of the <att>lang</att> attribute, while XHTML 1.0 (as a
              transitional measure) allows both attributes, and XHTML 1.1 allows only
              <att>xml:lang</att>. </p>
                  <!-- Same note in H58 --><p>Allowed values for the lang and xml:lang attributes are indicated in the resources referenced below. Language tags use a primary code to indicate the language, and optional subcodes (separated by hyphen characters) to indicate variants of the language. For instance, English is indicated with the primary code "en"; British English and American English can be distinguished by using "en-GB" and "en-US", respectively. Use of the primary code is important for this technique. Use of subcodes is optional but may be helpful in certain circumstances.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example defines the content of an HTML document to be in the French language.
              </p>
                  </description>
                  <code role="html401">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html lang="fr"&gt; 
&lt;head&gt;
  &lt;title&gt;document écrit en français&lt;/title&gt;
  &lt;meta http-equiv="content-type" content="text/html; charset=utf-8" /&gt;
&lt;/head&gt;  
&lt;body&gt;     
	...document écrit en français...   
&lt;/body&gt;
&lt;/html&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>This example defines the content of an XHTML 1.0 document with content type of
                text/html to be in the French language. Both the <att>lang</att> and
                <att>xml:lang</att> attributes are specified in order to meet the requirements of
                XHTML and provide backward compatibility with HTML.</p>
                  </description>
                  <code role="html401">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr"&gt;
&lt;head&gt;
  &lt;title&gt;document écrit en français&lt;/title&gt;
  &lt;meta http-equiv="content-type" content="text/html; charset=utf-8" /&gt;
&lt;/head&gt;
&lt;body&gt; 
...document écrit en français...      
&lt;/body&gt;
&lt;/html&gt;  </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>This example defines the content of an XHTML 1.1 document with content type of
                application/xhtml+xml to be in the French language. Only the <att>xml:lang</att>
                attribute is specified.</p>
                  </description>
                  <code role="html401">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr"&gt;
&lt;head&gt;
  &lt;title&gt;document écrit en français&lt;/title&gt;
	&lt;meta http-equiv="content-type" content="application/xhtml+xml; charset=utf-8" /&gt;
&lt;/head&gt;
&lt;body&gt; 
	...document écrit en français... 
&lt;/body&gt;
&lt;/html&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/dirlang.html#h-8.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    "lang" attribute</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BCP 47: Tags for the
                    Identification of Languages</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/dirlang.html#h-8.1.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Inheritance of language codes</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/International/tutorials/language-decl/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Declaring
                    Language in XHTML and HTML</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/i18n-html-tech-lang/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Authoring Techniques for
                    XHTML &amp; HTML Internationalization: Specifying the language of content
                    1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/International/articles/language-tags/Overview.en.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Language tags in HTML and XML</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H58"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the <code>html</code> element of the document.</p>
                     </item>
                     <item>
                        <p>Check that the <code>html</code> element has a <code>lang</code> and/or
                    <att>xml:lang</att> attribute. </p>
                     </item>
                     <item>
                        <p>Check that the value of the <code>lang</code> attribute conforms to <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BCP 47: Tags for the
                    Identification of Languages</loc> or its successor <phrase diff="add">and reflects thae primary language used by the Web page</phrase>. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>The above checks are all true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H58">
            <short-name>Using language attributes to identify changes in the human language </short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-other-lang-id"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="subtags" version="">
                  <p>Additional subtags for region, script, variant or other aspects may lead to errors in language switching in older versions of some screenreaders.</p>
               </ua-issue>
               <ua-issue name="jaws" version="8">
                  <p>JAWS 8.0 can be configured to change language automatically on the basis of the lang attribute. However, it only switches amongst major languages as indicated by the primary code. If a regional language variant is indicated with a language subcode, JAWS will use the default variant for which it is configured.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to clearly identify any changes in language on a
            page by using the <code>lang</code> or <code>xml:lang</code> attribute, as appropriate
            for the HTML or XHTML version you use.</p>
               <p>HTML 4.01 uses the <code>lang</code> attribute on elements. XHTML served as text/html
            uses the <code>lang</code> attribute and the <code>xml:lang</code> attribute on
            elements, in order to meet the requirements of XHTML and provide backward compatibility
            with HTML. XHTML served as application/xhtml+xml uses the <code>xml:lang</code>
            attribute on elements.</p>
               <note>
                  <p> HTML only offers the use of the <att>lang</att> attribute, while XHTML 1.0 (as a
              transitional measure) allows both attributes, and XHTML 1.1 allows only
              <att>xml:lang</att>. </p>
               </note>
               <!-- Same note in H57 --><p>Allowed values for the lang and xml:lang attributes are indicated in the resources referenced below. Language tags use a primary code to indicate the language, and optional subcodes (separated by hyphen characters) to indicate variants of the language. For instance, English is indicated with the primary code "en"; British English and American English can be distinguished by using "en-GB" and "en-US", respectively. Use of the primary code is important for this technique. Use of subcodes is optional but may be helpful in certain circumstances.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example demonstrates the use of the <code>xml:lang</code> attribute defining a
                quote written in German. This snippet could be included by an XHTML 1.1 document
                where <code>lang</code> is not allowed.</p>
                  </description>
                  <code role="html401">&lt;blockquote xml:lang="de"&gt;
  &lt;p&gt;
    Da dachte der Herr daran, ihn aus dem Futter zu schaffen,
    aber der Esel merkte, daß kein guter Wind wehte, lief fort
    und machte sich auf den Weg nach Bremen: dort, meinte er,
    könnte er ja Stadtmusikant werden.
  &lt;/p&gt;
&lt;/blockquote&gt;   
            </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/dirlang.html#adef-lang"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    lang attribute</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-xml/#sec-lang-tag"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XML 1.0 xml:lang
                  attribute</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/dirlang.html#h-8.1.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Inheritance of language codes</loc>. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BCP 47: Tags for the
                    Identification of Languages</loc> . </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/International/articles/language-tags/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Language tags
                    in HTML and XML</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H57"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each element in the document: </p>
                  <olist>
                     <item>
                        <p>Check that the human language of the content of the element is the same as the
                  inherited language for the element as specified in <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/dirlang.html#h-8.1.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01, Inheritance of language codes</loc>
                        </p>
                     </item>
                  </olist>
                  <p>For each <code>lang</code> attribute in the document: </p>
                  <olist>
                     <item>
                        <p>Check that the value of the <code>lang</code> attribute conforms to <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BCP 47: Tags for the
                    Identification of Languages</loc> or its successor </p>
                     </item>
                  </olist>
                  <p>For each xml:lang attribute in the document: </p>
                  <olist>
                     <item>
                        <p> Check that the value of the <code>xml:lang</code> attribute conforms to <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BCP 47: Tags for the
                    Identification of Languages</loc> or its successor </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H59">
            <short-name>Using the link element and navigation tools</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-mult-loc"/>
               <success-criterion idref="navigation-mechanisms-location"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Some user agents provide an optional navigation bar which will display the
              information specified in the link element. Current versions of the Mozilla and Opera
              browsers provide this functionality. IE 6.0 and Firefox 1.5 do not offer this feature
              but it may be available through extensions or add-ons.</p>
                  <p>See <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="//www.subotnik.net/html/link"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">The 'link'-Element in (X)HTML</loc> for
              more information on browser support for <code>link</code>.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to describe how the <code>link</code> element can
            provide metadata about the position of an HTML page within a set of Web pages or can
            assist in locating content with a set of Web pages. The value of the <code>rel</code>
            attributes indicates what type of relation is being described, and the <code>href</code>
            attribute provides a link to the document having that relation. Multiple
            <code>link</code> elements can provide multiple relationships. Several values of
              <code>rel</code> are useful: </p>
               <ulist>
                  <item>
                     <p>Start: Refers to the first document in a collection of documents.</p>
                  </item>
                  <item>
                     <p>Next: Refers to the next document in a linear sequence of documents.</p>
                  </item>
                  <item>
                     <p>Prev: Refers to the previous document in an ordered series of documents.</p>
                  </item>
                  <item>
                     <p>Contents: Refers to a document serving as a table of contents.</p>
                  </item>
                  <item>
                     <p>Index: Refers to a document providing an index for the current document.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page for Chapter 2 of an on-line book might contain the following links
                within the <code>head</code> section.</p>
                  </description>
                  <code role="html401">&lt;link rel="Contents" href="Contents.html" title="Table of Contents"  /&gt;
&lt;link rel="Index" href="Index.html" title="Index" /&gt;
&lt;link rel="Prev" href="Chapter01.html" title="01. Why Volunteer?" /&gt;
&lt;link rel="Next" href="Chapter03.html" title="03. Who Volunteers?" /&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/struct/links.html#edef-LINK"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    LINK element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/types.html#type-links"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 link
                    types</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://cdn.mozdev.org/linkToolbar/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Link Toolbar extension for
                  Firefox</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/QA/Tips/use-links"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Use &lt;link&gt;s in your
                    document</loc> from W3C's Quality Web Tips </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/reference/html40/head/link.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">LINK -
                    Document Relationship</loc> from Web Design Group </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.subotnik.net/html/link"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">The 'link'-Element in (X)HTML</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G1"/>
               <relatedtech idref="G63"/>
               <relatedtech idref="G64"/>
               <relatedtech idref="G123"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For a Web page that is within a sequence or collection of Web pages: </p>
                  <olist>
                     <item>
                        <p>Check that all <code>link</code> elements pertaining to navigation occur in the
                    <code>head</code> section of the document.</p>
                     </item>
                     <item>
                        <p>For each <code>link</code> element in the <code>head</code> section of the
                  document which pertains to navigation, check that it contains at least: </p>
                        <olist>
                           <item>
                              <p>a <code>rel</code> attribute identifying the link type</p>
                           </item>
                           <item>
                              <p>a valid <code>href</code> attribute to locate the appropriate resource</p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H60">
            <short-name>Using the link element to link to a glossary</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-idioms"/>
               <success-criterion idref="meaning-located"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Some user agents provide an optional navigation bar which will display the
              information specified in the <el>link</el> element. Current versions of the Mozilla
              and Opera browsers provide this functionality. IE 6.0 and Firefox 1.5 do not offer
              this feature but it may be available through extensions or add-ons. See <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.subotnik.net/html/link"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">The 'link'-Element in (X)HTML</loc> for
              more information on browser support for the <code>link</code> element.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide a mechanism for locating a glossary. When
            terms in the content are defined on a separate glossary page, the glossary is referenced
            using a <code>link</code> element in the <code>head</code> element of the document that
            uses the glossary. The <code>rel</code> attribute of the <code>link</code> element is
            set to "glossary", and the <code>href</code> attribute contains the URI of the glossary
            page. User agents can then assist users in accessing the glossary quickly and
          easily.</p>
            </description>
            <examples>
               <eg-group>
                  <head> The WCAG 2.0 Glossary. </head>
                  <code role="html401"> &lt;link rel="glossary" href="http://www.w3.org/TR/WCAG20/#glossary"&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/struct/links.html#edef-LINK"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    LINK element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/types.html#type-links"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 link
                    types</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/QA/Tips/use-links"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Use &lt;link&gt;s in your
                    document</loc> from W3C's Quality Web Tips </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.htmlhelp.com/reference/html40/head/link.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">LINK -
                    Document Relationship</loc> from Web Design Group </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For any set of words and their definitions that are meant to serve as a glossary: </p>
                  <olist>
                     <item>
                        <p>Check that the <code>head</code> section of the Web page that contains words,
                  phrases or abbreviations defined in a glossary contains a <code>link</code>
                  element</p>
                     </item>
                     <item>
                        <p>Check that the <code>link</code> element has attribute
                  <code>rel="glossary"</code>
                        </p>
                     </item>
                     <item>
                        <p>Check that the <code>href</code> attribute of the <code>link</code> element
                  refers to the glossary page.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
                  <p>Note: The definition of abbreviation used in WCAG is : "shortened form of a word,
              phrase, or name where the original expansion has not been rejected by the organization
              that it refers to and where the abbreviation has not become part of the language."</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="H62">
            <short-name>Using the ruby element</short-name>
            <applicability>
               <p>XHTML 1.1</p>
            </applicability>
            <applies-to>
               <success-criterion idref="meaning-pronunciation"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p> Ruby markup includes the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.w3.org/TR/1998/WD-ruby-19981221/#a2-4"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">
                        <el>rp</el> element</loc> as a fallback mechanism for user agents that do not
              support XHTML 1.1. Although ruby markup is only defined in XHTML 1.1, IE 5.0 and later
              supports the <el>ruby</el>, <el>rt</el>, and <el>rp</el> elements even if they are
              used in HTML 4.01 or XHTML 1.0. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to use ruby annotation to provide information about
            the pronunciation and meaning of a run of text where meaning is determined by
            pronunciation.</p>
               <p>There are many languages in which a run of text may mean different things depending on
            how the text is pronounced. This is common in East Asian languages as well as Hebrew,
            Arabic, and other languages; it also occurs in English and other Western European
            languages. </p>
               <p>Ruby Annotation allows the author to annotate a "base text," providing a guide to
            pronunciation and, in some cases, a definition as well. Ruby is commonly used for text
            in Japanese and other East Asian languages. Ruby Annotation is defined as a module for
            XHTML 1.1. </p>
               <p>There are two types of Ruby markup: simple and complex. Simple Ruby markup applies to a
            run of text such as a complete word or phrase. This is known as the "base" text
            (<el>rb</el> element). The Ruby annotation that indicates how to pronounce the term (the
              <el>rt</el> element, or Ruby text) is shown in a smaller font. (The term "Ruby" is
            derived from a small font used for this purpose in printed texts.) The Ruby text is
            usually rendered above or immediately before the base text, that is, immediately above
            horizontal text or immediately to the right of vertical text. Sometimes Japanese uses
            Ruby to provide the meaning of text on the other side of the base text (visually) from
            the phonetic annotation. Simple Ruby markup also provides a "fallback" option for user
            agents that do not support Ruby markup (that is, user agents that do not support XHTML
            1.1). </p>
               <p>Complex Ruby markup makes it possible to divide the base text into smaller units, each
            of which may be associated with a separate Ruby annotation. Complex Ruby markup does not
            support the fallback option. </p>
               <p>Ruby annotation is uncommon in languages such as Hebrew, where Unicode fonts can
            include diacritical marks that convey pronunciation. It is also uncommon in English and
            European languages. </p>
               <p>Note: The primary reason for indicating pronunciation through Ruby or any other means
            is to make the content accessible to people with disabilities who could read and
            understand the language of the content if information about pronunciation were provided.
            It is not necessary to provide information about pronunciation for use by people who are
            not familiar with the language of the content. </p>
            </description>
            <examples>
               <eg-group>
                  <head> Ruby markup providing pronunciation information for an initialism </head>
                  <description>
                     <p> This example uses Ruby annotation to give the pronunciation of the initialism
                (acronym) formed by the first letters of the words Web Content Accessibility
                Guidelines. The letters WCAG are the base (the rb element), and the pronunciation
                information is shown by the Ruby text (the rt element). The Ruby parenthesis element
                  <el>rp</el> is used for user agents that do not support Ruby annotations to
                indicate that the text in the <el>rt</el> element provides the pronunciation
                information. The pronunciation information is rendered in parentheses immediately
                following the base text. (User agents that support Ruby do not show the
                parentheses.) </p>
                  </description>
                  <code role="html401">&lt;p&gt;When we talk about these guidelines, we often just call them
  &lt;ruby&gt;
    &lt;rb&gt;WCAG&lt;/rb&gt;
    &lt;rp&gt;(&lt;/rp&gt;
      &lt;rt&gt;Wuh-KAG&lt;/rt&gt;
    &lt;rp&gt;)&lt;/rp&gt;
  &lt;/ruby&gt;.
&lt;/p&gt;</code>
               </eg-group>
               <eg-group>
                  <head> Ruby annotation for Japanese </head>
                  <description>
                     <p> The following is an example in Japanese. For Japanese, the Ruby is used to give
                the reading of Han characters(Kanji). the Ruby parenthesis element <el>rp</el> is
                used for user agents that do not support Ruby annotations to indicate that the text
                in the <el>rt</el> element provides the pronunciation information. The pronunciation
                information is rendered in parentheses immediately following the base text. (User
                agents that support Ruby do not show the parentheses.) </p>
                  </description>
                  <code role="html401">&lt;p&gt;
  &lt;ruby&gt;
    &lt;rb&gt;慶應大学&lt;/rb&gt;
    &lt;rp&gt;(&lt;/rp&gt;
    &lt;rt&gt;けいおうだいがく&lt;/rt&gt;
    &lt;rp&gt;)&lt;/rp&gt;
  &lt;/ruby&gt;
&lt;/p&gt;    </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/ruby/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Ruby Annotation</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/salt/guidelines/sec11.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">IMS Guidelines for
                    Topic-Specific Accessibility</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/css3-ruby/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 3 Ruby</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/International/techniques/markup#ruby"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">W3C I18N
                    Techniques: Markup and text, "Using Ruby"</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G102"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each run of text where a Ruby annotation is used to provide pronunciation
              information: </p>
                  <olist>
                     <item>
                        <p>Check that a <code>rt</code> element contains pronunciation information for each
                  run of text defined by the <code>rb</code> element.</p>
                     </item>
                     <item>
                        <p>If simple Ruby markup is used, check that the <code>rp</code> element is present
                  to indicate to user agents that do not support Ruby annotations that the text in
                  the rt element provides the pronunciation information. .</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H63">
            <short-name>Using the scope attribute to associate header cells and data cells in data
          tables</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>The <att>row</att> and <att>col</att> values of the <att>scope</att> attribute are
              currently supported to a large extent by most current versions of JAWS. However, there
              are still some problems and WindowEyes support for <att>scope</att> is inconsistent.
              The same is true for Japanese versions of these screen readers. Versions of JAWS prior
              to version 5 and older versions of WindowsEyes have inconsistent support for
                <att>scope</att>.</p>
                  <p>At the current time, those who want to ensure consistent support across Assistive
              Technologies for tables where the headers are not in the first row/column may want to
              use the technique for complex tables <specref ref="H43"/>. For simple tables that have
              headers in the first column or row we recommend the use of the <el>th</el> and
              <el>td</el> elements. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to associate header cells with data cells using the
              <code>scope</code> attribute. The <code>scope</code> attribute may be used to clarify
            the scope of any cell used as a header. The scope identifies whether the cell is a
            header for a row, column, or group of rows or columns. The values <code>row</code>,
              <code>col</code>, <code>rowgroup</code>, and <code>colgroup</code> identify these
            possible scopes respectively.</p>
               <p>For simple data tables where the header is not in the first row or column, like the one
            in Example 1, this technique can be used. Based on screen reader support today, its use
            is suggested in two situations both relating to simple tables: : </p>
               <ulist>
                  <item>
                     <p>data cells marked up with <el>td</el> that also function as row header or column
                header </p>
                  </item>
                  <item>
                     <p>header cells marked up with <el>td</el> instead of <el>th</el>. Sometimes, authors
                use this to avoid the display characteristics associated with <el>th</el> and also
                do not choose to use CSS to control the display for <el>th</el>. </p>
                  </item>
               </ulist>
               <note>
                  <p>For simple tables that have the headers in the first row or column then it is
              sufficient to simply use the TH elements without scope. </p>
               </note>
               <note>
                  <p>For complex tables use ids and headers as in <specref ref="H43"/>. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>A simple schedule</head>
                  <description>
                     <p>In the following example, column #1 contains serial numbers for rows in the table
                and the second column contains the key value for the row. The cells in the second
                column may then use <code>scope="row"</code>. The cells in the first row too are
                marked up with <el>td</el> and use <code>scope="col"</code>. </p>
                  </description>
                  <code role="html401"> &lt;table border="1"&gt;
  &lt;caption&gt;Contact Information&lt;/caption&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;td scope="col"&gt;Name&lt;/td&gt;
    &lt;td scope="col"&gt;Phone#&lt;/td&gt;
    &lt;td scope="col"&gt;Fax#&lt;/td&gt;
    &lt;td scope="col"&gt;City&lt;/td&gt;
  &lt;/tr&gt;&lt;tr&gt;
    &lt;td&gt;1.&lt;/td&gt;
    &lt;td scope="row"&gt;Joel Garner&lt;/td&gt;
    &lt;td&gt;412-212-5421&lt;/td&gt;
    &lt;td&gt;412-212-5400&lt;/td&gt;
    &lt;td&gt;Pittsburgh&lt;/td&gt;
  &lt;/tr&gt;&lt;tr&gt;
    &lt;td&gt;2.&lt;/td&gt;
    &lt;td scope="row"&gt;Clive Lloyd&lt;/td&gt;
    &lt;td&gt;410-306-1420&lt;/td&gt;
    &lt;td&gt;410-306-5400&lt;/td&gt;
    &lt;td&gt;Baltimore&lt;/td&gt;
  &lt;/tr&gt;&lt;tr&gt;
    &lt;td&gt;3.&lt;/td&gt;
    &lt;td scope="row"&gt;Gordon Greenidge&lt;/td&gt;
    &lt;td&gt;281-564-6720&lt;/td&gt;
    &lt;td&gt;281-511-6600&lt;/td&gt;
    &lt;td&gt;Houston&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/tables.html#adef-scope "
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Table Cells: scope attribute</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/tables.html#h-11.2.6"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Table cells: The TH and TD elements</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.eramp.com/david/tablesample2.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Assistive technology
                    reading tables</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H43"/>
               <relatedtech idref="H51"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each data table: </p>
                  <olist>
                     <item>
                        <p>Check that all <code>th</code> elements have a <code>scope</code> attribute.</p>
                     </item>
                     <item>
                        <p>Check that all <code>td</code> elements that act as headers for other elements
                  have a <code>scope</code> attribute.</p>
                     </item>
                     <item>
                        <p>Check that all <code>scope</code> attributes have the value <code>row</code>,
                    <code>col</code>, <code>rowgroup</code>, or <code>colgroup</code>.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H64">
            <short-name>Using the title attribute of the frame and iframe elements</short-name>
            <applicability>
               <p>HTML and XHTML documents that use frames or iframes </p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version=""/>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate the use of the <code>title</code>
            attribute of the <code>frame</code> or <el>iframe</el> element to describe the contents
            of each frame. This provides a label for the frame so users can determine which frame to
            enter and explore in detail. It does not label the individual page (frame) or inline
            frame (iframe) in the frameset.</p>
               <p>Note that the <code>title</code> attribute labels frames, and is different from the
              <code>title</code> element which labels documents. Both should be provided, since the
            first facilitates navigation among frames and the second clarifies the user's current
            location.</p>
               <p>The <code>title</code> attribute is not interchangeable with the <code>name</code>
            attribute. The <code>title</code> labels the frame for users; the <code>name</code>
            labels it for scripting and window targeting. The <code>name</code> is not presented to
            the user, only the <code>title</code> is.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example shows how to use the <code>title</code> attribute with
                <code>frame</code> to describe the frames containing the navigation bar and the
                document.</p>
                  </description>
                  <code role="html401">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;A simple frameset document&lt;/title&gt;
  &lt;/head&gt;
  &lt;frameset cols="10%, 90%"&gt;
    &lt;frame src="nav.html" title="Main menu" /&gt;
    &lt;frame src="doc.html" title="Documents" /&gt;
    &lt;noframes&gt;
      &lt;body&gt;
        &lt;a href="lib.html" title="Library link"&gt;Select to
        go to the electronic library&lt;/a&gt;
      &lt;/body&gt;
    &lt;/noframes&gt;
  &lt;/frameset&gt;
&lt;/html&gt; </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>This example shows how to use the title attribute with <code>iframe</code> to
                describe the contents of an inline frame. The example also includes an alternative
                link to the page included by the iframe element for older browsers, which may not
                understand the <code>iframe</code>element.</p>
                  </description>
                  <code role="html401"> &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;A document using iframe&lt;/title&gt;
  &lt;/head&gt;
...
&lt;iframe src="banner-ad.html" id="testiframe" 
  name="testiframe" title="Advertisement"&gt;
    &lt;a href="banner-ad.html"&gt;Advertisement&lt;/a&gt;
&lt;/iframe&gt;
...
&lt;/html&gt;  </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/present/frames.html#h-16.2.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> HTML 4.01
                    FRAME element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/present/frames.html#h-16.5"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.0.1
                    Inline frames: the IFRAME element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jimthatcher.com/webcourse4.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Navigation,
                    "Implementing Frame Titles"</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check each frame and iframe element in the HTML or XHTML source code for the presence of a
                  title attribute.</p>
                     </item>
                     <item>
                        <p>Check that the title attribute contains text that identifies the frame.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H65">
            <short-name>Using the title attribute to identify form controls when the label element
          cannot be used</short-name>
            <applicability>
               <p>HTML and XHTML form controls that are not identified using <code>value</code>,
            <code>alt</code>, or element content </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="minimize-error-cues"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <ulist>
                     <item>
                        <p>User agents will display a tool tip when the mouse hovers above an
                  <code>input</code> element containing a <code>title</code> attribute. </p>
                     </item>
                     <item>
                        <p>If no <code>label</code> is available, JAWS and Window-Eyes speak the
                  <code>title</code> attribute when the form control receives focus </p>
                        <ulist>
                           <item>
                              <p>JAWS 6.0 and later can be set to speak both <code>label</code> and
                        <code>title</code> when the two items are different; however, very few users
                      are aware of this setting.</p>
                           </item>
                           <item>
                              <p>WindowEyes 5.5 has a hot key, ins-E, that will display additional
                      information, including the title attribute, for the item with focus. </p>
                           </item>
                        </ulist>
                     </item>
                  </ulist>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to use the <code>title</code> attribute to label
            form controls when the visual design cannot accommodate the label (for example, if there
            is no text on the screen that can be identified as a label) or where it might be
            confusing to display a label. User agents, including assistive technology, can speak the
              <code>title</code> attribute.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A pulldown menu that limits the scope of a search</head>
                  <description>
                     <p>A search form uses a pulldown menu to limit the scope of the search. The pulldown
                menu is immediately adjacent to the text field used to enter the search term. The
                relationship between the search field and the pulldown menu is clear to users who
                can see the visual design, which does not have room for a visible label. The
                  <code>title</code> attribute is used to identify the <code>select</code> menu. The
                  <code>title</code> attribute can be spoken by screen readers or displayed as a
                tool tip for people using screen magnifiers.</p>
                  </description>
                  <code role="html401">&lt;label for="searchTerm"&gt;Search for:&lt;/label&gt;
&lt;input id="searchTerm" type="text" size="30" value="" name="searchTerm"&gt;
&lt;select title="Search in" id="scope"&gt;
…
&lt;/select&gt; </code>
               </eg-group>
               <eg-group>
                  <head>Input fields for a phone number</head>
                  <description>
                     <p>A Web page contains controls for entering a phone number in the United States, with
                three fields for area code, exchange, and last four digits.</p>
                  </description>
                  <code role="html401">&lt;fieldset&gt;&lt;legend&gt;Phone number&lt;/legend&gt;
&lt;input id="areaCode" name="areaCode" title="Area Code" 
type="text" size="3" value="" &gt;
&lt;input id="exchange" name="exchange" title="First three digits of phone number" 
type="text" size="3" value="" &gt;
&lt;input id="lastDigits" name="lastDigits" title="Last four digits of phone number" 
type="text" size="4" value="" &gt;
&lt;/fieldset&gt; </code>
               </eg-group>
               <eg-group diff="add">
                  <head> A Search Function</head>
                  <description>
                     <p>A Web page contains a text field where the user can enter search terms and a button labeled "Search" for performing the search. The <att>title</att> attribute is used to identify the form control and the button is positioned right after the text field so that it is clear to the user that the text field is where the search term should be entered.</p>
                  </description>
                  <code role="html401">
&lt;input type="text" title="Type search term here" value="Type search term here"/&gt; &lt;input type="submit" value="Search"/&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/global.html#h-7.4.3"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">The
                    title attribute</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jimthatcher.com/webcourse8.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms</loc>
                        </p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usability.com.au/resources/wcag2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms using WCAG 2.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H44"/>
               <relatedtech idref="H71"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify each form control that is not associated with a <code>label</code>
                  element </p>
                     </item>
                     <item>
                        <p>Check that the control has a <code>title</code> attribute</p>
                     </item>
                     <item>
                        <p>Check that the <code>title</code> attribute identifies the purpose of the
                control</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H67">
            <short-name>Using null alt text and no title attribute on img elements for images that AT
          should ignore</short-name>
            <applicability>
               <p>HTML and XHTML documents that load images. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The purpose of this technique is to show how images can be marked so that they can be
            ignored by Assistive Technology. </p>
               <p> If no title attribute is used, and the alt text is set to null (i.e.
            <code>alt=""</code>) it indicates to assistive technology that the image can be safely
            ignored. </p>
               <p>Note: Although <code>alt=" "</code> is also valid, <code>alt=""</code> is recommended.</p>
               <p> Note: Have a "null" ALT attribute is not the same as having no ALT attribute. </p>
            </description>
            <examples>
               <eg-group diff="add">
                  <description>
                     <p>The following image is used to insert a decorative image on a Web page.</p>
                  </description>
                  <code role="html401">
&lt;img src="squiggle.gif" width="20" height="20" alt="" /&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/images/alt_text.php#null"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">'Null alt
                    text' in WebAIM's 'Creating Accessible Images'</loc> also shows how to do this
                  in Dreamweaver. </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <p> For each image that should be ignored. </p>
                  <olist>
                     <item>
                        <p> Check that <code>title</code> attribute is either absent or empty. </p>
                     </item>
                     <item>
                        <p> Check that <code>alt</code> attribute is present and empty or contains only
                  whitespace (but not <code>&amp;nbsp;</code>) </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #1 and #2 are true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H69">
            <short-name>Providing heading elements at the beginning of each section of content</short-name>
            <applicability>
               <p>HTML and XHTML </p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p> JAWS and WindowEyes all provide navigation via headings and provide information
              about the level of the heading. The Opera browser provides a mechanism to navigate by
              headings. Additional plugins support navigation by headings in other user agents.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to use section headings to convey the structure of
            the content. Heading markup can be used:</p>
               <ulist>
                  <item>
                     <p>to indicate start of main content</p>
                  </item>
                  <item>
                     <p>to mark up section headings within the main content area</p>
                  </item>
                  <item>
                     <p>to demarcate different navigational sections like top or main navigation, left or
                secondary navigation and footer navigation</p>
                  </item>
                  <item>
                     <p>to markup images (containing text) which have the appearance of headings
              visually.</p>
                  </item>
               </ulist>
               <p>In some technologies, headings are designed to convey logical hierarchy. Skipping
            levels in the sequence of headings may create the impression that the structure of the
            document has not been properly thought through or that specific headings have been
            chosen for their visual rendering rather than their meaning. Authors are encouraged to
            nest headings hierarchically.</p>
               <p>Since headings indicate the start of important sections of content, it is possible for
            users with assistive technology to jump directly to the appropriate heading and begin
            reading the content. This significantly speeds interaction for users who would otherwise
            access the content slowly.</p>
               <p>In technologies that support Cascading Style Sheets (CSS), styling can be used to
            change the way headings look or sound. It is even possible to style headings using CSS
            so that they are exposed to assistive technology but are hidden from view visually.
            However, showing the headings visually benefits a wider set of users, including those
            with some cognitive disabilities.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example organizes the sections of a search page by marking each section
                heading using <code>h2</code> elements.</p>
                  </description>
                  <code role="html401">&lt;h1&gt;Search Technical Periodicals&lt;/h1&gt;
 &lt;h2&gt;Search&lt;/h2&gt;
 &lt;form action="search.php"&gt;
  &lt;p&gt;&lt;label for="searchInput"&gt;Enter search topic: &lt;/label&gt;
  &lt;input type="text" size="30" id="searchInput"&gt;
  &lt;input type="submit" value="Go"&gt;&lt;/p&gt;
 &lt;/form&gt;
 &lt;h2&gt;Available Periodicals&lt;/h2&gt;
 &lt;div class="jlinks"&gt;
  &lt;a href="pcoder.com"&gt;Professional Coder&lt;/a&gt; |
  &lt;a href="algo.com"&gt;Algorithms&lt;/a&gt; |
  &lt;a href="jse.com"&gt;Journal of Software Engineering&lt;/a&gt;
 &lt;/div&gt;
 &lt;h2&gt;Search Results&lt;/h2&gt;
 ... search results are returned in this section ...   </code>
               </eg-group>
               <eg-group>
                  <head>Headings show the overall organization of the content</head>
                  <description>
                     <p>In this example, heading markup is used to make the navigation and main content
                sections perceivable.</p>
                  </description>
                  <code role="html401">&lt;!-- Logo, banner graphic, search form, etc.  --&gt;
  &lt;h2&gt;Navigation&lt;/h2&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="about.htm"&gt;About us&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="contact.htm"&gt;Contact us&lt;/a&gt;&lt;/li&gt;
       ...
    &lt;/ul&gt;
  &lt;h2&gt;All about headings&lt;/h2&gt;
   &lt;!-- Text, images, other material making up the main content... --&gt; 
            </code>
               </eg-group>
               <eg-group>
                  <head>Headings show the organization of material within the main content</head>
                  <description>
                     <p>Note that in HTML 4.01 and XHTML 1.x, heading elements only mark the beginning of
                sections; they do not contain them as element content.</p>
                  </description>
                  <code role="html401"> &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;Cooking techniques&lt;/title&gt;  
  &lt;/head&gt;   
  &lt;body&gt;     
    &lt;h1&gt;Cooking techniques&lt;/h1&gt;     
    &lt;p&gt;       
      ... some text here ...     
    &lt;/p&gt;           
    &lt;h2&gt;Cooking with oil&lt;/h2&gt; 
    &lt;p&gt; 
        ... text of the section ...     
    &lt;/p&gt;           
    &lt;h2&gt;Cooking with butter&lt;/h2&gt;       
    &lt;p&gt;
        ... text of the section ...     
    &lt;/p&gt;   
  &lt;/body&gt; 
&lt;/html&gt;    </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/global.html#h-7.5.5"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01
                    H1-H6 elements</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://meyerweb.com/eric/thoughts/2004/07/21/pick-a-heading"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Pick a
                    Heading</loc> Eric Meyer</p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/wacblog/headings/quick-tips-for-accessible-headings/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Quick tips for accessible headings</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H42"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For all content which is divided into separate sections, </p>
                  <olist>
                     <item>
                        <p>Check that each section starts with a heading.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H70">
            <short-name>Using frame elements to group blocks of repeated material</short-name>
            <applicability>
               <p>HTML and XHTML documents that use frames </p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version=""/>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate how framesets can be used to group
            blocks of repeated material. Since most user agents and assistive technology provide a
            way to navigate from frame to frame, using frames to organize elements can provide a
            mechanism for easily bypassing blocks of repeated content. If the site uses framesets,
            organize the blocks of content into separate frames. Make certain that the repeated
            blocks of content appear in the same frame within the frameset of each Web page. In
            addition, each frame element must have a title attribute to describe the content of the
            frame. When frames are properly titled, users can use frame navigation to easily
            navigate between blocks of content.</p>
               <p>This technique is appropriate when framesets are already used to organize the content
            of the page; other techniques are preferred for pages that are not already using
            framesets, because many people using assistive technology have trouble with frames . An
            advisory technique about using noframes is available in Success Criterion 4.2.1. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following example shows the use of two frames to organize content. The source
                of the first frame is the Web page, navigation.html, which contains the HTML for the
                navigation. This frame has a title attribute which identifies it as a navigation
                bar. The second frame contains the main content of the site as indicated by the
                source parameter of main.html and the title attribute, "Main News Content" which
                identifies its function.</p>
                  </description>
                  <code role="html401">&lt;frameset cols="20%, *"&gt;
  &lt;frame src="navigation.html" name="navbar" title="Navigation Bar" /&gt;
  &lt;frame src="main.html" name="maincontent" title="Main News Content" /&gt;
  &lt;noframes&gt;
    &lt;p&gt;View &lt;a href="noframe.html"&gt;no frame version&lt;/a&gt;.&lt;/p&gt;
  &lt;/noframes&gt;
&lt;/frameset&gt;   </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p> HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/present/frames.html#h-16.2.1"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">
                    The FRAMESET element</loc>
                        </p>
                     </item>
                     <item>
                        <p> HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/present/frames.html#h-16.2.2"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">
                    The FRAME element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jimthatcher.com/webcourse4.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Navigation</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H64"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>If the Web page uses frames to organize content: </p>
                  <olist>
                     <item>
                        <p>Check if repeated blocks of content are organized into separate frames.</p>
                     </item>
                     <item>
                        <p>Check that the frames with repeated content appear in the same location within
                  each frameset.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H71">
            <short-name> Providing a description for groups of form controls using fieldset and legend
          elements </short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <description>
               <p diff="add">The objective of this technique is to provide a semantic grouping for related form controls. This allows users to understand the relationship of the controls and interact with the form more quickly and effectively.</p>
               <p diff="add">Form controls can be grouped by enclosing them with the <el>fieldset</el> element. All controls within a given <el>fieldset</el> are then related. The first element inside the <el>fieldset</el> should be a <el>legend</el> element, which provides a label <phrase diff="add">or instructions</phrase> for the group. <el>Fieldsets</el> can be nested if desired, although this can lead to confusion if overdone.</p>
               <p diff="add">Grouping controls is most important for related radio buttons and checkboxes. A set of radio buttons or checkboxes is related when they all submit values for a single named field. They work in the same way as selection lists, allowing the user to choose from a set of options, except selection lists are single controls while radio buttons and checkboxes are multiple controls. Because they are multiple controls, it is particularly important that they be grouped semantically so they can be more easily treated as a single control. Often, user agents will present the value of the <el>legend</el> before the label of each control, to remind users that they are part of the same group.</p>
               <p diff="add"> It can also be useful to group other sets of controls that are not as tightly related as sets of radio buttons and checkboxes. For instance, several fields that collect a user's address might be grouped together with a legend of "Address".</p>
               <p diff="add">Authors sometimes avoid using the <el>fieldset</el> element because of the default display in the browser, which draws a border around the grouped controls. This visual grouping is also useful and authors should seriously consider retaining it (or some form of visual grouping). The visual effect can be modified in CSS by overriding the "border" property of the <el>fieldset</el> and the "position" property of the <el>legend</el>. </p>
               <p diff="del"> The objective of this technique is to associate a description (such as a prompt or
            question) with a related group of radio buttons or checkboxes using the
            <el>fieldset</el> and <el>legend</el> elements. Generally, a set of radio buttons or
            checkboxes is related when they share the same value for the <att>name</att> attribute.
            Using <el>fieldset</el> and <el>legend</el> to associate a description with a group of
            form controls creates a programmatic association between the description and the group
            of form controls. This makes it possible for people using screen readers to hear the
            description as well as the available responses. </p>
               <p>When a small group of related radio buttons includes clear instructions and distinct
            selections it may not be necessary to use fieldsets and legends; <specref ref="H44"/>,
            may also be sufficient. </p>
            </description>
            <examples>
               <eg-group>
                  <head>A multiple choice test </head>
                  <description>
                     <p>This example shows a test item with one question and five possible answers. Each
                answer is represented by a radio button (<code>input type="radio"</code>). The radio
                buttons are contained within a <code>fieldset</code>. The test question is tagged
                with the <code>legend</code> element.</p>
                  </description>
                  <code role="html401">&lt;fieldset&gt;
  &lt;legend&gt;The play &lt;cite&gt;Hamlet&lt;/cite&gt; was written by:&lt;/legend&gt;
  &lt;input type="radio" id="shakesp" name="hamlet" checked="checked" value="a"&gt;
  &lt;label for="shakesp"&gt;William Shakespeare&lt;/label&gt;&lt;br /&gt;
  &lt;input type="radio" id="kipling" name="hamlet" value="b"&gt;
  &lt;label for="kipling"&gt;Rudyard Kipling&lt;/label&gt;&lt;br /&gt;
  &lt;input type="radio" id="gbshaw" name="hamlet" value="c"&gt;
  &lt;label for="gbshaw"&gt;George Bernard Shaw&lt;/label&gt;&lt;br /&gt;
  &lt;input type="radio" id="hem" name="hamlet" value="d"&gt;
  &lt;label for="hem"&gt;Ernest Hemingway&lt;/label&gt;&lt;br /&gt;
  &lt;input type="radio" id="dickens" name="hamlet" value="e"&gt;
  &lt;label for="dickens"&gt;Charles Dickens&lt;/label&gt;
&lt;/fieldset&gt;   </code>
               </eg-group>
               <eg-group>
                  <head>A set of checkboxes </head>
                  <description>
                     <p>The User Profile page for a Web site allows users to indicate their interests by
                selecting multiple checkboxes. Each checkbox (<code>input type="checkbox"</code>)
                has a <code>label</code>. The checkboxes are contained within a
                <code>fieldset</code>, and the <code>legend</code> element contains the prompt for
                the entire group of checkboxes.</p>
                  </description>
                  <code role="html401">&lt;fieldset&gt;
  &lt;legend&gt;I am interested in the following (check all that apply):&lt;/legend&gt;
  &lt;input type="checkbox" id="photo" name="interests" value="ph"&gt;
  &lt;label for="photo"&gt;Photography&lt;/label&gt;&lt;br /&gt;
  &lt;input type="checkbox" id="watercol" name="interests" checked="checked" value="wa"&gt;
  &lt;label for="watercol"&gt;Watercolor&lt;/label&gt;&lt;br /&gt;
  &lt;input type="checkbox" id="acrylic" name="interests" checked="checked" value="ac"&gt;
  &lt;label for="acrylic"&gt;Acrylic&lt;/label&gt;
  …
&lt;/fieldset&gt;    </code>
               </eg-group>
               <eg-group diff="add">
                  <head> Radio buttons submitting to the same named field</head>
                  <description>
                     <p>This example requests the user to choose a single philosopher. Note that each field has the same "<att>name</att>" attribute, indicating these radio buttons are related (they all submit the same field), and should be grouped as shown. Also note that while the "<att>name</att>" attributes are the same, the "<att>id</att>" attributes must be unique.</p>
                  </description>
                  <code>&lt;form action="http://example.com/vote" method="post"&gt;
  &lt;fieldset&gt;
    &lt;legend&gt;Your preferred philosopher&lt;/legend&gt;
    &lt;input type="radio" name="philosopher" id="philosopher_socrates" value="socrates"/&gt;
    &lt;label for="philosopher_socrates"&gt;Socrates&lt;/label&gt;
    &lt;input type="radio" name="philosopher" id="philosopher_plato" value="plato"/&gt;
    &lt;label for="philosopher_plato"&gt;Plato&lt;/label&gt;
    &lt;input type="radio" name="philosopher" id="philosopher_aristotle" value="aristotle"/&gt;
    &lt;label for="philosopher_aristotle"&gt;Aristotle&lt;/label&gt;
  &lt;/fieldset&gt;
  &lt;/form&gt; </code>
                  <description>
                     <note>
                        <p>Groups of related checkboxes work in the same way, except the user is allowed to express more than one preference for the field.</p>
                     </note>
                  </description>
               </eg-group>
               <eg-group diff="add">
                  <head> Logically related controls</head>
                  <description>
                     <p>In this example, form fields for residential and postal addresses are distinguished by the value of the <el>legend</el> in each <el>fieldset</el> grouping.</p>
                  </description>
                  <code role="html401">&lt;form action="http://example.com/adduser" method="post"&gt;
   &lt;fieldset&gt;
     &lt;legend&gt;Residential Address&lt;/legend&gt;
     &lt;label for="raddress"&gt;Address: &lt;/label&gt;
     &lt;input type="text" id="raddress" name="raddress" /&gt;
     &lt;label for="rzip"&gt;Postal/Zip Code: &lt;/label&gt;
     &lt;input type="text" id="rzip" name="rzip" /&gt;
     ...more residential address information...
   &lt;/fieldset&gt;
   &lt;fieldset&gt;
     &lt;legend&gt;Postal Address&lt;/legend&gt;
     &lt;label for="paddress"&gt;Address: &lt;/label&gt;
     &lt;input type="text" id="paddress" name="paddress" /&gt;
     &lt;label for="pzip"&gt;Postal/Zip Code: &lt;/label&gt;
     &lt;input type="text" id="pzip" name="pzip" /&gt;
     ...more postal address information...
   &lt;/fieldset&gt;
&lt;/form&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/interact/forms.html#adef-checked"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Checkboxes</loc>
                        </p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usability.com.au/resources/wcag2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms using WCAG 2.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H44"/>
               <relatedtech idref="H65"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p diff="add">Check that groups of logically related input elements are contained within a fieldset element.</p>
                     </item>
                     <item>
                        <p>Check that any group of <code>input</code> elements of <code>type="radio"</code>
                  or <code>type="checkbox"</code> with the same <code>name</code> attribute is
                  contained within a <code>fieldset</code> element</p>
                     </item>
                     <item>
                        <p>Check that each <code>fieldset</code> has a <code>legend</code> element <phrase diff="add">that includes a description of that group.</phrase>
                        </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p diff="chg">All of the above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H73">
            <short-name>Using the summary attribute of the table element to give an overview of data
          tables</short-name>
            <applicability>
               <p>HTML 4.01, XHTML 1.x</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a brief overview of how data has been organized into a table or a brief explanation of how to navigate the table. The <code>summary</code> attribute of the <code>table</code> element makes this information available to people who use screen readers; the information is not displayed visually.</p>
               <p>The <code>summary</code> is useful when the table has a complex structure (for example,
            when there are several sets of row or column headers, or when there are multiple groups
            of columns or rows). The <code>summary</code> may also be helpful for simple data tables
            that contain many columns or rows of data.</p>
               <p>The <code>summary</code> attribute may be used whether or not the table includes a
              <code>caption</code> element. If both are used, the <code>summary</code> should not
            duplicate the <code>caption</code>.</p>
               <p> Although WCAG 2 does not prohibit the use of layout tables, CSS-based layouts are
            recommended in order to retain the defined semantic meaning of the HTML <el>table</el>
            elements and to conform to the coding practice of separating presentation from content.
            However, if a layout table is used, then the <att>summary</att> attribute is not used or
            is null. The purpose of a layout table is simply to control the placement of content;
            the table itself is “transparent" to the user. A <code>summary</code> would “break" this
            transparency by calling attention to the table. A null <code>summary</code>
              (<code>summary=""</code>) on layout tables is acceptable.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A data table with a <code>summary</code> but no <code>caption</code>
                  </head>
                  <description>
                     <p>This example shows a bus schedule. The route number and direction are included in
                the <code>summary</code> along with information on how to use the schedule.</p>
                  </description>
                  <code role="html401">&lt;table summary="Schedule for Route 7 going downtown. Service begins 
at 4:00 AM and ends at midnight. Intersections are listed in the top row. 
Find the intersection closest to your starting point or destination, then read 
down that column to find out what time the bus leaves that intersection."&gt;
  &lt;tr&gt;
    &lt;th scope="col"&gt;State &amp; First&lt;/th&gt;
    &lt;th scope="col"&gt;State &amp; Sixth&lt;/th&gt;
    &lt;th scope="col"&gt;State &amp; Fifteenth&lt;/th&gt;
    &lt;th scope="col"&gt;Fifteenth &amp; Morrison&lt;/th&gt;
  &lt;/tr&gt;
    &lt;td&gt;4:00&lt;/td&gt;
    &lt;td&gt;4:05&lt;/td&gt;
    &lt;td&gt;4:11&lt;/td&gt;
    &lt;td&gt;4:19&lt;/td&gt;
  &lt;/tr&gt;
  …
&lt;/table&gt;  </code>
               </eg-group>
               <eg-group>
                  <head>A data table with both a <code>summary</code> and a <code>caption</code>
                  </head>
                  <description>
                     <p>In this example both a <code>summary</code> attribute and a <code>caption</code>
                element are used. The <code>caption</code> identifies the bus route. The
                  <code>summary</code> helps users who are blind understand how to use the schedule.
                Screen readers read the <code>caption</code>, followed by the
              <code>summary</code>.</p>
                  </description>
                  <code role="html401">&lt;table summary="Intersections are listed in row 1. 
Find the intersection closest to your starting point 
or destination, then read down that column to find 
out what time the bus leaves that intersection.  
Service begins at 4:00 AM and ends at midnight."&gt;
  &lt;caption&gt;Route 7 Downtown (Weekdays)&lt;/caption&gt;
…
&lt;/table&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/tables.html#adef-summary"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">summary attribute</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H39"/>
               <relatedtech idref="H51"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check for layout tables: determine whether the content has a relationship with
                  other content in both its column and its row. </p>
                        <olist>
                           <item>
                              <p>If “no," the table is a layout table.</p>
                           </item>
                           <item>
                              <p>If “yes," the table is a data table.</p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p>If the table is a layout table, check that the <att>summary</att> attribute is
                  not present or <att>summary</att> attribute is null.</p>
                     </item>
                     <item>
                        <p>If the table is a data table and a <att>summary</att> is present, check that the
                    <att>summary</att> attribute describes the table's organization or explains how
                  to use the table</p>
                     </item>
                     <item>
                        <p>If both a <att>summary</att> attribute and a <el>caption</el> element are present
                  for this data table, check that the <att>summary</att> does not duplicate the
                    <el>caption</el>.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>For layout tables, #2 is true.</p>
                     </item>
                     <item>
                        <p>For data tables, #3 and #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H74">
            <short-name>Ensuring that opening and closing tags are used according to specification</short-name>
            <applicability>
               <p> HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to avoid key errors that are known to cause
            problems for assistive technologies when they are trying to parse content which involve
            having opening and closing tags that are not used according to specification. These
            errors can be avoided by using the HTML or XHTML mechanism to specify the technology and
            technology version, and making sure the Web page does not have these types of errors in
            it. There are several validators that the developer can use: validation reports
            generally mention these types of errors. This technique deals only with errors related
            to incorrectly formed opening and closing tags. The document type declaration is not
            strictly necessary for this type of evaluation, but specifying the document type
            declaration makes it easier to use a validator. </p>
            </description>
            <examples>
               <eg-group>
                  <head> HTML</head>
                  <description>
                     <p> HTML pages include a document type declaration (sometimes referred to as
                  <code>!DOCTYPE</code> statement). The developer can use offline or online
                validators (see Resources below) to check that all id attribute values are unique
                and that opening and closing tags are used according to the specification. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>XHTML</head>
                  <description>
                     <p> Like other other XML-based documents, XHTML documents reference a Document Type
                Definition (DTD) or other type of XML schema. The developer can use online or
                offline validators (including validation tools built into editors) to check that
                opening and closing tags are used according to the specification. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Using test frameworks</head>
                  <description>
                     <p> When a Website generates HTML or XHTML dynamically instead of serving only static pages, a
                developer can use <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://xhtmlunit.sourceforge.net/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">XHTMLUnit</loc>,
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://xmltestsuite.sourceforge.net/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">XML Test Suite</loc> or a similar
                framework to test the generated XHTML code. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/QA/Tips/Doctype"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Do not forget to add a doctype</loc>
                  by the W3C Quality Assurance Initiative explains what doctypes are and why you
                  should use them. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/QA/2002/04/valid-dtd-list.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Recommended DTDs to
                    use in your Web document</loc> by the W3C Quality Assurance Initiative is a list
                  of commonly used declarations. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.chami.com/html-kit/faq/pages/validate_tools.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">How do I
                    validate my code or check for possible errors?</loc> describes the tools in the
                  free editor HTML-Kit for checking HTML, CSS and XML. </p>
                     </item>
                  </ulist>
                  <p> For other resources, see <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="G134" linktype="general"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Validating Web
              pages</loc>. </p>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check that there are closing tags for all elements with required closing tags.
                </p>
                     </item>
                     <item>
                        <p> Check that there are no closing tags for all elements where closing tags are
                  forbidden. </p>
                     </item>
                     <item>
                        <p> Check that opening and closing tags for all elements are correctly nested. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p> Steps 1, 2, and 3 are true.</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="H75">
            <short-name>Ensuring that Web pages are well-formed</short-name>
            <applicability>
               <p> Any XML-based markup languages. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to avoid key errors that are known to cause
            problems for assistive technologies when they are trying to parse contents.
            Well-formedness is checked by parsing the document with a conforming XML parserand
            checking if the validation report mentions well-formedness errors. Every conforming XML
            parser is required to check well-formedness and stop normal processing when a
            well-formedness error is found (a conforming XML parser does not need to support
            validation).</p>
            </description>
            <examples>
               <eg-group>
                  <head/>
                  <description>
                     <p>XML files include a document type declaration, a xsi:schemaLocation attribute or
                other type of reference to a schema. The developer can use off-line or online
                validators, an XML editor or an IDE with XML support (see Resources below) to check
                well-formedness. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <p> When XML files do not include a document type declaration, a xsi:schemaLocation
                attribute or a processing instruction referencing a schema even though there is a
                schema for them, the relevant schema is specified by a command line instruction, a
                user dialog or a configuration file, and the XML files are checked against the
                schema.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <p>When XML files do not include a document type declaration, a xsi:schemaLocation
                attribute or a processing instruction referencing a schema even though there is a
                schema for them, the namespace is dereferenced to retrieve a schema document or
                resource directory (Resource Directory Description Language: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.rddl.org/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">RDDL</loc>), and the XML files are checked against the
                schema.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <p>When a Website generates XML dynamically instead of serving only static documents,
                a developer can use <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://xmlunit.sourceforge.net/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">XMLUnit</loc>, <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://xmltestsuite.sourceforge.net/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">XML Test Suite</loc> or a similar
                framework to test the generated XML code. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/2004/REC-xml-20040204/Overview.html#sec-well-formed"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Well-Formed XML Documents</loc> in Extensible Markup Language (XML) 1.0 (Third
                  Edition), W3C Recommendation 04 February 2004. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/2004/REC-xml11-20040204/#sec-well-formed"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Well-Formed XML Documents</loc> in Extensible Markup Language (XML) 1.1, W3C
                  Recommendation 04 February 2004. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-xml/#wf-entities"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">4.3.2 Well-Formed Parsed
                    Entities</loc> in Extensible Markup Language (XML) 1.1, W3C Recommendation 04
                  February 2004.</p>
                     </item>
                  </ulist>
                  <p> For other resources, see <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="G134" linktype="general"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Validating Web
              pages</loc>. </p>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Load each file into a validating XML parser. </p>
                     </item>
                     <item>
                        <p> Check that there are no well-formedness errors. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p>Step 2 is true.</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="H76">
            <short-name>Using meta refresh to create an instant client-side redirect</short-name>
            <applicability>
               <p> HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to enable redirects on the client side without
            confusing the user. Redirects are preferably implemented on the server side (see <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="SVR1" linktype="server"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Implementing automatic redirects on the server side
              instead of on the client side</loc>), but authors do not always have control over
            server-side technologies. </p>
               <p>In HTML and XHTML, one can use the <code>meta</code> element with the value of
            the <code>http-equiv</code> attribute set to "Refresh" and the value of the
              <code>content</code> attribute set to "0" (meaning zero seconds), followed by the URI
            that the browser should request. It is important that the time-out is set to zero, to
            avoid that content is displayed before the new page is loaded. The page containing the
            redirect code should only contain information related to the redirect. </p>
            </description>
            <examples>
               <eg-group>
                  <code> &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;    
  &lt;head&gt;      
    &lt;title&gt;The Tudors&lt;/title&gt;      
    &lt;meta http-equiv="refresh" content="0;URL='http://thetudors.example.com/'" /&gt;    
  &lt;/head&gt;    
  &lt;body&gt; 
    &lt;p&gt;This page has moved to a &lt;a href="http://thetudors.example.com/"&gt;
      theTudors.example.com&lt;/a&gt;.&lt;/p&gt; 
  &lt;/body&gt;  
&lt;/html&gt;     </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p> See also <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="F41" linktype="failure"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Failure due to using meta refresh
                    with a time-out</loc>. </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G110"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find all <code>meta</code> elements in the document. </p>
                     </item>
                     <item>
                        <p> For each meta element, check if it contains the attribute
                  <code>http-equiv</code> with value "refresh" (case-insensitive) and the
                    <code>content</code> attribute with a number greater than 0 followed by
                    <code>;'URL=anyURL'</code> (where anyURL stands for the URI that should replace
                  the current page). </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p> Step 2 is false. </p>
               </expected-results>
            </tests>
         </technique>
         <technique id="H77">
            <short-name>Identifying the purpose of a link using link text combined with its enclosing
          list item</short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to identify the purpose of a link from the link and
            its list item context. The list item enclosing the link provides context for an
            otherwise unclear link when the link item is the nearest enclosing block-level ancestor
            element. The description lets a user distinguish this link from links in the Web page
            that lead to other destinations and helps the user determine whether to follow the link.
            Note that simply providing the URI of the destination is generally not sufficiently
            descriptive. </p>
               <note>
                  <p>These descriptions will be most useful to the user if the additional information
              needed to understand the link precedes the link. If the additional information follows
              the link, there can be confusion and difficulty for screen reader users who are
              reading through the page in order (top to bottom).</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <code>&lt;ul&gt;
  &lt;li&gt;
    Check out the video report for last year's 
    &lt;a href="festival.htm"&gt;National Folk Festival&lt;/a&gt;.
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="listen.htm"&gt;Listen to the instruments&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    Guitar Man: George Golden talks about 
    &lt;a href="mkguitars.htm"&gt;making guitars&lt;/a&gt;.
  &lt;/li&gt;
&lt;/ul&gt;</code>
               </eg-group>
               <eg-group>
                  <head>A list of video games for download</head>
                  <code>&lt;ul&gt;
  &lt;li&gt;
    &lt;a href="tomb_raider.htm"&gt;Tomb Raider: Legend&lt;/a&gt;
    &lt;a href="tomb_raider_images.htm"&gt;See Images&lt;/a&gt;
    &lt;a href="tomb_raider.mpeg"&gt;(Download Demo)&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="fear_extraction.htm"&gt;F.E.A.R. Extraction Point&lt;/a&gt;
    &lt;a href="fear_extraction_images.htm"&gt;See Images&lt;/a&gt;
    &lt;a href="fear_extraction.mpeg"&gt;(Download Demo)&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="call_of_duty.htm"&gt;Call of Duty 2&lt;/a&gt;
    &lt;a href="call_of_duty_images.htm"&gt;See Images&lt;/a&gt;
    &lt;a href="call_of_duty.mpeg"&gt;(Download Demo)&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href="Warhammer 40K.htm"&gt;Warhammer 40K&lt;/a&gt;
    &lt;a href="warhammer_40k_images.htm"&gt;See Images&lt;/a&gt;
    &lt;a href="Warhammer_40k.mpeg"&gt;(Download Demo)&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;   </code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G53"/>
               <relatedtech idref="G91"/>
               <relatedtech idref="H33"/>
               <relatedtech idref="H78"/>
               <relatedtech idref="H79"/>
               <relatedtech idref="H80"/>
               <relatedtech idref="H81"/>
               <relatedtech idref="C7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:</p>
                  <olist>
                     <item>
                        <p> Check that the link is part of a list item. </p>
                     </item>
                     <item>
                        <p> Check that text of the link combined with the text of its enclosing list item
                  describes the purpose of the link. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> The above checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H78">
            <short-name>Identifying the purpose of a link using link text combined with its enclosing
          paragraph</short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="JAWS" version="5.0+">
                  <p>JAWS 5.0 and later includes the following keystrokes:</p>
                  <ulist>
                     <item>
                        <p> alt+leftArrow: read previous sentence </p>
                     </item>
                     <item>
                        <p> alt+rightArrow: read next sentence </p>
                     </item>
                     <item>
                        <p> alt+NumPad 5: read current sentence </p>
                     </item>
                     <item>
                        <p> Ctrl+NumPad5: read current paragraph </p>
                     </item>
                  </ulist>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>The "read current sentence" keystroke supports examples 1, 2, and 4 below. If
              alt+numPad5 is pressed when a link has focus, the sentence is read without changing
              the focus.</p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>The "read current paragraph" keystroke supports Example 3 below. If Ctrl+NumPad 5 is
              pressed when the link has focus, the entire paragraph is read without changing the
              focus.</p>
               </ua-issue>
               <ua-issue name="WindowEyes" version="5.5">
                  <p>Window-Eyes 5.5 has hotkeys to read the current sentence and current paragraph; thus
              Window-Eyes 5.5 supports the examples listed below.</p>
                  <p>To surf the internet with WindowEyes you must be in browse mode. Current sentence and
              current paragraph hot keys do not work in browse mode in version 6.1. </p>
                  <p>The factory default settings for reading surrounding link context are as follows:</p>
                  <p>Desktop settings:</p>
                  <ulist>
                     <item>
                        <p>Character = CTRL-NUMPAD-LEFT ARROW</p>
                     </item>
                     <item>
                        <p>Word = CTRL-NUMPAD-RIGHT ARROW</p>
                     </item>
                     <item>
                        <p>Line = CTRL-NUMPAD-CENTER</p>
                     </item>
                     <item>
                        <p>Sentence = Not available in Browse mode</p>
                     </item>
                     <item>
                        <p>(Next Sentence command is undefined by default on Desktop mode but the next line
                  is the DOWN Arrow.) </p>
                     </item>
                     <item>
                        <p>Next Paragraph = P</p>
                     </item>
                     <item>
                        <p>Prior Paragraph = Shift P </p>
                     </item>
                     <item>
                        <p>Current Paragraph = Not Available in Browse mode</p>
                     </item>
                  </ulist>
                  <p>Laptop</p>
                  <ulist>
                     <item>
                        <p>Character = ALT-SHIFT-LESS THAN</p>
                     </item>
                     <item>
                        <p>Word Prior = ALT-SHIFT-J</p>
                     </item>
                     <item>
                        <p>Word = ALT-SHIFT-K</p>
                     </item>
                     <item>
                        <p>Word Next = ALT-SHIFT-L</p>
                     </item>
                     <item>
                        <p>Sentence Prior = ALT-SHIFT-7</p>
                     </item>
                     <item>
                        <p>Sentence = unavailable in browse mode</p>
                     </item>
                     <item>
                        <p>Sentence Next = unavailable in browse mode</p>
                     </item>
                     <item>
                        <p>Paragraph = Undefined on Laptop by default </p>
                     </item>
                     <item>
                        <p>Line Prior = ALT-SHIFT-U</p>
                     </item>
                     <item>
                        <p>Line = ALT-SHIFT-I</p>
                     </item>
                     <item>
                        <p>Line Next = ALT-SHIFT-O</p>
                     </item>
                  </ulist>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>The "speak parent element" command in Fire Vox (Ctrl+Shift+u) supports Example 3.
              This keystroke works without changing the focus. <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.firevox.clcworld.net/"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Fire Vox</loc> is a free screen reader
              designed specifically for Firefox 1.0 and later. It supports Windows, Macintosh, and
              Linux.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to identify the purpose of a link from the link in
            its paragraph context. The paragraph enclosing the link provides context for an
            otherwise unclear link when the paragraph is the nearest enclosing block-level ancestor
            element. The description lets a user distinguish this link from links in the Web page
            that lead to other destinations and helps the user determine whether to follow the link.
            Note that simply providing the URI of the destination is generally not sufficiently
            descriptive. </p>
               <note>
                  <p>These descriptions will be most useful to the user if the additional information
              needed to understand the link precedes the link. If the additional information follows
              the link, there can be confusion and difficulty for screen reader users who are
              reading through the page in order (top to bottom).</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> Announcements column on a Folk Festival Web page.</p>
                  </description>
                  <code>&lt;h3&gt;The final 15&lt;/h3&gt;
&lt;p&gt;Coming soon to a town near you...the final 15 in the 
National Folk Festival lineup.
&lt;a href="final15.html"&gt;[Read more...]&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;Folk artists get awards&lt;/h3&gt;
&lt;p&gt;Performers from the upcoming National Folk Festival receive 
 National Heritage Fellowships. 
 &lt;a href="nheritage.html"&gt;[Read more...]&lt;/a&gt;
&lt;/p&gt;
…   </code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G53"/>
               <relatedtech idref="G91"/>
               <relatedtech idref="H33"/>
               <relatedtech idref="H77"/>
               <relatedtech idref="H79"/>
               <relatedtech idref="H80"/>
               <relatedtech idref="H81"/>
               <relatedtech idref="C7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:</p>
                  <olist>
                     <item>
                        <p> Check that the link is part of a paragraph. </p>
                     </item>
                     <item>
                        <p> Check that text of the link combined with the text of its enclosing paragraph
                  describes the purpose of the link. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> The above checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H79">
            <short-name>Identifying the purpose of a link using link text combined with its enclosing
          table cell and associated table headings</short-name>
            <applicability>
               <p>All technologies that contain links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to identify the purpose of a link from the link in
            its data table context. This context is the table cell enclosing the link and the cell's
            associated headings. The data table context provides the purpose for an otherwise
            unclear link when the table cell is the nearest enclosing block-level ancestor element.
            It lets a user distinguish this link from other links in the Web page that lead to other
            destinations and helps the user determine whether to follow the link. Note that simply
            providing the URI of the destination is not sufficiently descriptive for people with
            disabilities, especially those with cognitive disabilities.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A table of rental car choices</head>
                  <code> &lt;table&gt;
&lt;tr&gt;
  &lt;th&gt;&lt;/th&gt;
  &lt;th id="a1"&gt;Alamo&lt;/th&gt;
  &lt;th id="a2"&gt;Budget&lt;/th&gt;
  &lt;th id="a3"&gt;National&lt;/th&gt;
  &lt;th id="a4"&gt;Avis&lt;/th&gt;
  &lt;th id="a5"&gt;Hertz&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th id="b1"&gt;Economy cars&lt;/th&gt;
  &lt;td headers="a1 b1"&gt;&lt;a href="econ_ala.htm"&gt;$67/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a2 b1"&gt;&lt;a href="econ_bud.htm"&gt;$68/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a3 b1"&gt;&lt;a href="econ_nat.htm"&gt;$72/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a4 b1"&gt;&lt;a href="econ_av.htm"&gt;$74/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a5 b1"&gt;&lt;a href="econ_hz.htm"&gt;$74/day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th id="b2"&gt;Compact cars&lt;/th&gt;
  &lt;td headers="a1 b2"&gt;&lt;a href="comp_ala.htm"&gt;$68/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a2 b2"&gt;&lt;a href="comp_bud.htm"&gt;$69/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a3 b2"&gt;&lt;a href="comp_nat.htm"&gt;$74/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a4 b2"&gt;&lt;a href="comp_av.htm"&gt;$76/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a5 b2"&gt;&lt;a href="comp_hz.htm"&gt;$76/day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th id="b3"&gt;Mid-sized cars&lt;/th&gt;
  &lt;td headers="a1 b3"&gt;&lt;a href="mid_ala.htm"&gt;$79/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a2 b3"&gt;&lt;a href="mid_bud.htm"&gt;$80/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a3 b3"&gt;&lt;a href="mid_nat.htm"&gt;$83/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a4 b3"&gt;&lt;a href="mid_av.htm"&gt;$85/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a5 b3"&gt;&lt;a href="mid_hz.htm"&gt;$85/day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th id="b4"&gt;Full-sized cars&lt;/th&gt;
  &lt;td headers="a1 b4"&gt;&lt;a href="full_ala.htm"&gt;$82/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a2 b4"&gt;&lt;a href="full_bud.htm"&gt;$83/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a3 b4"&gt;&lt;a href="full_nat.htm"&gt;$89/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a4 b4"&gt;&lt;a href="full_av.htm"&gt;$91/day&lt;/a&gt;&lt;/td&gt;
  &lt;td headers="a5 b4"&gt;&lt;a href="full_hz.htm"&gt;$91/day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;  </code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G53"/>
               <relatedtech idref="G91"/>
               <relatedtech idref="H33"/>
               <relatedtech idref="H77"/>
               <relatedtech idref="H78"/>
               <relatedtech idref="H80"/>
               <relatedtech idref="H81"/>
               <relatedtech idref="C7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:</p>
                  <olist>
                     <item>
                        <p> Check that the link is in a table cell. </p>
                     </item>
                     <item>
                        <p> Check that text of the link combined with the text of the associated table
                  heading describes the purpose of the link. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> The above checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H80">
            <short-name>Identifying the purpose of a link using link text combined with the preceding
          heading element</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="JAWS" version="">
                  <p>The command to take advantage of this technique in JAWS is "JAWS KEY + T".</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to describe the purpose of a link from the context
            provided by its heading context. The preceding heading provides context for an otherwise
            unclear link. The description lets a user distinguish this link from links in the Web
            page that lead to other destinations and helps the user determine whether to follow the
            link.</p>
               <note>
                  <p>Whenever possible, provide link text that identifies the purpose of the link without
              needing additional context.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>Blocks of information on hotels</head>
                  <description>
                     <p>The information for each hotel consists of the hotel name, a description and a
                series of links to a map, photos, directions, guest reviews and a booking form.</p>
                  </description>
                  <code role="xhtml">&lt;h2&gt;&lt;a href="royal_palm_hotel.html"&gt;Royal Palm Hotel&lt;/a&gt;&lt;/h2&gt;
  &lt;ul class="horizontal"&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_map.html"&gt;Map&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_photos.html"&gt;Photos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hroyal_palm_hotel_directions.html"&gt;Directions&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_reviews.html"&gt;Guest reviews&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_book.html"&gt;Book now&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

&lt;h2&gt;&lt;a href="hotel_three_rivers.html"&gt;Hotel Three Rivers&lt;/a&gt;&lt;/h2&gt;
  &lt;ul class="horizontal"&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_map.html"&gt;Map&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_photos.html"&gt;Photos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_directions.html"&gt;Directions&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_reviews.html"&gt;Guest reviews&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_book.html"&gt;Book now&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;     </code>
               </eg-group>
               <eg-group>
                  <head>A document provided in three formats</head>
                  <code role="xhtml">&lt;h2&gt;Annual Report 2006-2007&lt;/h2&gt;
&lt;p&gt; 
  &lt;a href="annrep0607.html"&gt;(HTML)&lt;/a&gt;&amp;nbsp;
  &lt;a href="annrep0607.pdf"&gt;(PDF)&lt;/a&gt;&amp;nbsp;
  &lt;a href="annrep0607.rtf"&gt;(RTF)&lt;/a&gt;
&lt;/p&gt;       </code>
               </eg-group>
               <eg-group>
                  <head>Newspaper Web site</head>
                  <code role="xhtml">&lt;h2&gt;&lt;a href="Stockmarket_05052007.htm&gt;Stock market soars as bullishness prevails&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;this week was a stellar week for the stock market as investing in gold rose 2%. 
&lt;a href="Stockmarket_05052007.htm&gt;More here&lt;/a&gt;&lt;/p&gt;     </code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G91"/>
               <relatedtech idref="G53"/>
               <relatedtech idref="H33"/>
               <relatedtech idref="C7"/>
               <relatedtech idref="H77"/>
               <relatedtech idref="H78"/>
               <relatedtech idref="H79"/>
               <relatedtech idref="H81"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:</p>
                  <olist>
                     <item>
                        <p>Find the heading element that precedes the link</p>
                     </item>
                     <item>
                        <p>Check that the text of the link combined with the text of that heading describes
                  the purpose of the link.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H81">
            <short-name>Identifying the purpose of a link in a nested list using link text combined with
          the parent list item under which the list is nested</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p diff="add">Although the context information is programmatically associated with the link, assistive technology lacks commands for reading this content.<issue id="i2604" status="open">
                        <p>2604</p>
                     </issue>
                  </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to describe the purpose of a link in a nested list
            from the context provided by the list item under which the list is nested. This list
            item provides context for an otherwise unclear link. The description lets a user
            distinguish this link from links in the Web page that lead to other destinations and
            helps the user determine whether to follow the link.</p>
               <p diff="add">Because current assistive technologies do not include commands to query information contextual information provided by parent list items, use of this technique requires users to navigate the list one item at a time. Therefore, this technique may not be appropriate for very long or deeply nested lists.<issue id="i2604a" status="open">
                     <p>2604</p>
                  </issue>
               </p>
               <note>
                  <p>Whenever possible, provide link text that identifies the purpose of the link without
              needing additional context.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>A document provided in three formats</head>
                  <code role="xhtml">&lt;ul&gt;
&lt;li&gt;Annual Report 2005-2006
  &lt;ul&gt; 
  &lt;li&gt;&lt;a href="annrep0506.html"&gt;(HTML)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="annrep0506.pdf"&gt;(PDF)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="annrep0506.rtf"&gt;(RTF)&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Annual Report 2006-2007
  &lt;ul&gt; 
  &lt;li&gt;&lt;a href="annrep0607.html"&gt;(HTML)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="annrep0607.pdf"&gt;(PDF)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="annrep0607.rtf"&gt;(RTF)&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt; </code>
               </eg-group>
               <eg-group>
                  <head>Blocks of information on hotels</head>
                  <description>
                     <p>The information for each hotel consists of the hotel name, a description and a
                series of links to a map, photos, directions, guest reviews and a booking form.</p>
                  </description>
                  <code role="xhtml">&lt;ul&gt;
&lt;li&gt;&lt;a href="royal_palm_hotel.html"&gt;Royal Palm Hotel&lt;/a&gt;
  &lt;ul class="horizontal"&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_map.html"&gt;Map&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_photos.html"&gt;Photos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hroyal_palm_hotel_directions.html"&gt;Directions&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_reviews.html"&gt;Guest reviews&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="royal_palm_hotel_book.html"&gt;Book now&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="hotel_three_rivers.html"&gt;Hotel Three Rivers&lt;/a&gt;
  &lt;ul class="horizontal"&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_map.html"&gt;Map&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_photos.html"&gt;Photos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_directions.html"&gt;Directions&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_reviews.html"&gt;Guest reviews&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="hotel_three_rivers_book.html"&gt;Book now&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt; </code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G91"/>
               <relatedtech idref="G53"/>
               <relatedtech idref="H33"/>
               <relatedtech idref="C7"/>
               <relatedtech idref="H77"/>
               <relatedtech idref="H78"/>
               <relatedtech idref="H79"/>
               <relatedtech idref="H80"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each link in the content that uses this technique:</p>
                  <olist>
                     <item>
                        <p>Find the <el>ul</el> or ol element that contains the link</p>
                     </item>
                     <item>
                        <p>Check that this list element (<el>ul</el>, <el>ol</el>) is a descendant of an
                    <el>li</el> element</p>
                     </item>
                     <item>
                        <p>Check that the text of the link combined with the text of that li element
                  describes the purpose of the link.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>The above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H82" diff="del">
            <short-name>Grouping form controls with FIELDSET and LEGEND</short-name>
            <applicability>
               <p>HTML and XHTML pages that collect user input</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a semantic grouping for related form controls. This allows users to understand the relationship of the controls and interact with the form more quickly and effectively.</p>
               <p>Form controls can be grouped by enclosing them with the <el>fieldset</el> element. All controls within a given <el>fieldset</el> are then related. The first element inside the <el>fieldset</el> should be a <el>legend</el> element, which provides a label for the group. <el>Fieldsets</el> can be nested if desired, although this can lead to confusion if overdone.</p>
               <p>Grouping controls is most important for related radio buttons and checkboxes. A set of radio buttons or checkboxes is related when they all submit values for a single named field. They work in the same way as selection lists, allowing the user to choose from a set of options, except selection lists are single controls while radio buttons and checkboxes are multiple controls. Because they are multiple controls, it is particularly important that they be grouped semantically so they can be more easily treated as a single control. Often, user agents will present the value of the <el>legend</el> before the label of each control, to remind users that they are part of the same group.</p>
               <p> It can also be useful to group other sets of controls that are not as tightly related as sets of radio buttons and checkboxes. For instance, several fields that collect a user's address might be grouped together with a legend of "Address".</p>
               <p>Authors sometimes avoid using the <el>fieldset</el> element because of the default display in the browser, which draws a border around the grouped controls. This visual grouping is also useful and authors should seriously consider retaining it (or some form of visual grouping). The visual effect can be modified in CSS by overriding the "border" property of the <el>fieldset</el> and the "position" property of the <el>legend</el>. </p>
            </description>
            <examples>
               <eg-group>
                  <head> Radio buttons submitting to the same named field</head>
                  <description>
                     <p>This example requests the user to choose a single philosopher. Note that each field has the same "<att>name</att>" attribute, indicating these radio buttons are related (they all submit the same field), and should be grouped as shown. Also note that while the "<att>name</att>" attributes are the same, the "<att>id</att>" attributes must be unique.</p>
                  </description>
                  <code>&lt;form action="http://example.com/vote" method="post"&gt;
  &lt;fieldset&gt;
    &lt;legend&gt;Your preferred philosopher&lt;/legend&gt;
    &lt;input type="radio" name="philosopher" id="philosopher_socrates" value="socrates"/&gt;
    &lt;label for="philosopher_socrates"&gt;Socrates&lt;/label&gt;
    &lt;input type="radio" name="philosopher" id="philosopher_plato" value="plato"/&gt;
    &lt;label for="philosopher_plato"&gt;Plato&lt;/label&gt;
    &lt;input type="radio" name="philosopher" id="philosopher_aristotle" value="aristotle"/&gt;
    &lt;label for="philosopher_aristotle"&gt;Aristotle&lt;/label&gt;
  &lt;/fieldset&gt;
  &lt;/form&gt; </code>
                  <description>
                     <note>
                        <p>Groups of related checkboxes work in the same way, except the user is allowed to express more than one preference for the field.</p>
                     </note>
                  </description>
               </eg-group>
               <eg-group>
                  <head> Logically related controls</head>
                  <description>
                     <p>In this example, form fields for residential and postal addresses are distinguished by the value of the <el>legend</el> in each <el>fieldset</el> grouping.</p>
                  </description>
                  <code role="html401">&lt;form action="http://example.com/adduser" method="post"&gt;
   &lt;fieldset&gt;
     &lt;legend&gt;Residential Address&lt;/legend&gt;
     &lt;label for="raddress"&gt;Address: &lt;/label&gt;
     &lt;input type="text" id="raddress" name="raddress" /&gt;
     &lt;label for="rzip"&gt;Postal/Zip Code: &lt;/label&gt;
     &lt;input type="text" id="rzip" name="rzip" /&gt;
     ...more residential address information...
   &lt;/fieldset&gt;
   &lt;fieldset&gt;
     &lt;legend&gt;Postal Address&lt;/legend&gt;
     &lt;label for="paddress"&gt;Address: &lt;/label&gt;
     &lt;input type="text" id="paddress" name="paddress" /&gt;
     &lt;label for="pzip"&gt;Postal/Zip Code: &lt;/label&gt;
     &lt;input type="text" id="pzip" name="pzip" /&gt;
     ...more postal address information...
   &lt;/fieldset&gt;
&lt;/form&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/interact/forms.html#edef-FIELDSET"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML FIELDSET element</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check if there are groups of related form controls.</p>
                     </item>
                     <item>
                        <p>If there are related form controls, they should be grouped with <el>fieldset</el>, with a <el>label</el> labeling the group.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H83">
            <short-name>Using the target attribute to open a new window on user request and indicating this in link text</short-name>
            <applicability>
               <p>HTML 4.01 Transitional and XHTML 1.0 Transitional</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to avoid confusion that may be caused by the appearance of new windows that were not requested by the user. Suddenly opening new windows can disorientate or be missed completely by some users. In HTML 4.01 Transitional and XHTML 1.0 Transitional, the <att>target</att> attribute can be used to open a new window, instead of automatic pop-ups. (The <att>target</att> attribute is deleted from HTML 4.01 Strict and XHTML 1.0 Strict.) Note that not using the <att>target</att> allows the user to decide whether a new window should be opened or not. Use of the <att>target</att> attribute provides an unambiguously machine-readable indication that a new window will open. User agents can inform the user, and can also be configured not to open the new window. For those not using assistive technology, the indication would also be available from the link text.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following example illustrates  the use of the <att>target</att> attribute in a link that indicates it will open in a new window.</p>
                  </description>
                  <code role="HTML4">&lt;a href="help.html" target="_blank"&gt;Show Help (opens new window)&lt;/a&gt;</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="SCR24"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Activate each link in the document to check if it opens a new window.</p>
                     </item>
                     <item>
                        <p>For each link that opens a new window, check that it uses the <att>target</att> attribute.</p>
                     </item>
                     <item>
                        <p>Check that the link text contains information indicating that the link will open in a new window.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H84">
            <short-name>Using a button with a select element to perform an action</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to allow the user to control when an action is performed, rather than having the action occur as a side effect of choosing a value for the <el>select</el> element. The user may inspect the different values of the <el>select</el> element, or may accidentally choose the wrong value, without causing the action to occur. When the user is satisfied with their choice, they select the button to perform the action.</p>
               <p>This is particularly important for users who are choosing the value of the <el>select</el> element via the keyboard, since navigating through the options of the <el>select</el> element changes the value of the control. </p>
            </description>
            <examples>
               <eg-group>
                  <head>A Calendar</head>
                  <description>
                     <p>A Web page lets the user choose any month of any year and display the calendar for that month. After the user has set the month and year, he displays the calendar by pressing the "Show" button. This example replies on client-side scripting to implement the action.</p>
                  </description>
                  <code>
&lt;label for="month"&gt;Month:&lt;/label&gt;
&lt;select name="month" id="month"&gt;
  &lt;option value="1"&gt;January&lt;/option&gt;
  &lt;option value="2"&gt; February&lt;/option&gt;
  ...
  &lt;option value="12"&gt;December&lt;/option&gt;
&lt;/select&gt; 
&lt;label for="year"&gt;Year:&lt;/label&gt;
&lt;input type="text" name="year" id="year"&gt;
&lt;input type="button" value="Show" onclick = "..."&gt;</code>
               </eg-group>
               <eg-group>
                  <head>Choosing an action</head>
                  <description>
                     <p>A <el>select</el> element contains a list of possible actions. The action is not performed until the user presses the "Do it" button.</p>
                  </description>
                  <code>
&lt;form action="http://somesite.com/action" method="post"&gt;
  &lt;label for="action"&gt;Options:&lt;/label&gt;
  &lt;select name="action" id="action"&gt;
    &lt;option value="help"&gt;Help&lt;/option&gt;
    &lt;option value="reset"&gt;Reset&lt;/option&gt;
    &lt;option value="submit"&gt;Submit&lt;/option&gt;
  &lt;/select&gt; 
  &lt;button type="submit" name="submit" value="submit"&gt;Do It &lt;/button&gt;
&lt;/form&gt;              </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.cs.tut.fi/~jkorpela/forms/navmenu.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Jukka Korpela: Navigational pulldown menus in HTML</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H32"/>
               <relatedtech idref="G80"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each <el>select</el> element/button element combination:</p>
                  <olist>
                     <item>
                        <p>Check that focus (including keyboard focus) on an option in the <el>select</el> element does not result in any actions</p>
                     </item>
                     <item>
                        <p>Check that selecting the button performs the action associated with the current <el>select</el> value</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H85">
            <short-name>Using OPTGROUP to group OPTION elements inside a SELECT</short-name>
            <applicability>
               <p>HTML and XHTML pages that collect user input.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>The <el>optgroup</el> element is not widely supported by screen readers.</p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>The <att>label</att> attribute for <el>option</el> and <el>optgroup</el>is supported inconsistently across user agents and is not widely supported by assistive technologies.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to group items in a selection list. A selection list is a set of allowed values for a form control such as a multi-select list or a combo box. Often, selection lists have groups of related options. Those groups should be semantically identified, rather than simply delimiting the groups with "dummy" list entries. This allows user agents to collapse the options by group to support quicker skimming of the options, and to indicate in what group an option of interest is located. It also helps to visually break up long lists so that users can more easily locate the option(s) they are interested in.</p>
               <p>In HTML, the <el>select</el> element is used to create both multi-select lists and combo boxes. The various allowed options are each indicated with <el>option</el> elements. To group options together, use the <el>optgroup</el> element, with the related <el>option</el> elements inside that element. Label the group with the "label" attribute so users will know what to expect inside the group.</p>
               <p>The <el>optgroup</el> element should be directly inside the <el>select</el> element, and the <el>option</el>  elements directly inside the <el>optgroup</el>. It is possible for a <el>select</el> element to contain both single <el>option</el> elements and <el>optgroup</el> groups, though authors should consider if this is in fact the design intent when using this. It is not possible to nest the <el>optgroup</el> element, so only one level of grouping can be done within a <el>select</el>.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following combo box collects data about favorite foods. Grouping by type allows users to select their preference more quickly.</p>
                  </description>
                  <code>
&lt;form action="http://example.com/prog/someprog" method="post"&gt;
    &lt;label for="food"&gt;What is your favorite food?&lt;/label&gt;
    &lt;select id="food" name="food"&gt;
      &lt;optgroup label="Fruits"&gt;
        &lt;option value="1"&gt;Apples&lt;/option&gt;
        &lt;option value="3"&gt;Bananas&lt;/option&gt;
        &lt;option value="4"&gt;Peaches&lt;/option&gt;
        &lt;option value="5"&gt;...&lt;/option&gt;
      &lt;/optgroup&gt;
      &lt;optgroup label="Vegetables"&gt;
        &lt;option value="2"&gt;Carrots&lt;/option&gt;
        &lt;option value="6"&gt;Cucumbers&lt;/option&gt;
       &lt;option value="7"&gt;...&lt;/option&gt;
     &lt;/optgroup&gt;
     &lt;optgroup label="Baked Goods"&gt;
       &lt;option value="8"&gt;Apple Pie&lt;/option&gt;
       &lt;option value="9"&gt;Chocolate Cake&lt;/option&gt;
       &lt;option value="10"&gt;...&lt;/option&gt;
     &lt;/optgroup&gt;
   &lt;/select&gt;
&lt;/form&gt;              </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The following example shows how a multi-select box can make use of the <el>optrgroup</el> element.</p>
                  </description>
                  <code>
&lt;form action="http://example.com/prog/someprog" method="post"&gt;
    &lt;label for="related_techniques"&gt;&lt;strong&gt;Related Techniques:&lt;/strong&gt;&lt;/label&gt;
    &lt;select name="related_techniques" id="related_techniques" multiple="multiple" size="10"&gt;
  &lt;optgroup label="General Techniques"&gt;
    &lt;option value="G1"&gt;G1: Adding a link at the top of each page ... &lt;/option&gt;
    &lt;option value="G4"&gt;G4: Allowing the content to be paused and restarted ... &lt;/option&gt;
    &lt;option value="G5"&gt;G5: Allowing users to complete an activity without any time... &lt;/option&gt;
    &lt;option value="G8"&gt;G8: Creating an extended audio description for the ... &lt;/option&gt;
    &lt;option value="G9"&gt;G9: Creating captions for live synchronized media... &lt;/option&gt;
    &lt;option value="G10"&gt;G10: Creating components using a technology that ... &lt;/option&gt;
  &lt;/optgroup&gt;
  &lt;optgroup label="HTML Techniques"&gt;
    &lt;option value="H2"&gt;H2: Combining adjacent image and text links for the same ... &lt;/option&gt;
    &lt;option value="H4"&gt;H4: Creating a logical tab order through links, form ... &lt;/option&gt;
    &lt;option value="H24"&gt;H24: Providing text alternatives for the area ...
    &lt;/option&gt;
  &lt;/optgroup&gt;
  &lt;optgroup label="CSS Techniques"&gt;
    &lt;option value="C6"&gt;C6: Positioning content based on structural markup... &lt;/option&gt;
    &lt;option value="C7"&gt;C7: Using CSS to hide a portion of the link text... &lt;/option&gt;
  &lt;/optgroup&gt;
  &lt;optgroup label="SMIL Techniques"&gt;
    &lt;option value="SM1"&gt;SM1: Adding extended audio description in SMIL 1.0... &lt;/option&gt;
    &lt;option value="SM2"&gt;SM2: Adding extended audio description in SMIL 2.0... &lt;/option&gt;
    &lt;option value="SM6"&gt;SM6: Providing audio description in SMIL 1.0... &lt;/option&gt;
  &lt;/optgroup&gt;
  &lt;optgroup label="ARIA Techniques"&gt;
    &lt;option value="ARIA1"&gt;ARIA1: Using WAI-ARIA describedby... &lt;/option&gt;
    &lt;option value="ARIA2"&gt;ARIA2: Identifying required fields with the "required"... &lt;/option&gt;
    &lt;option value="ARIA3"&gt;ARIA3: Identifying valid range information with "valuemin" ... &lt;/option&gt;
    &lt;option value="ARIA4"&gt;ARIA4: Using WAI-ARIA to programmatically identify form  ... &lt;/option&gt;
  &lt;/optgroup&gt;
  &lt;optgroup label="Common Failures"&gt;
    &lt;option value="F1"&gt;F1: Failure of SC 1.3.2 due to changing the meaning of content by... &lt;/option&gt;
    &lt;option value="F2"&gt;F2: Failure of SC 1.3.1 due to using changes in text presentation... &lt;/option&gt;
    &lt;option value="F3"&gt;F3: Failure of SC 1.1.1 due to using CSS to include images  ... &lt;/option&gt;
    &lt;option value="F4"&gt;F4: Failure of SC 2.2.2 due to using text-decoration:blink ...&lt;/option&gt;
  &lt;/optgroup&gt;
&lt;/select&gt;
&lt;/form&gt;              </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/interact/forms.html#edef-SELECT"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML SELECT element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/interact/forms.html#edef-OPTGROUP"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML OPTGROUP element</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/forms/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Creating Accessible Forms</loc>
                        </p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usability.com.au/resources/wcag2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms using WCAG 2.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check the set of options within a selection list to see if there are groups of related options.</p>
                     </item>
                     <item>
                        <p>If there are groups of related options, they should be grouped with <el>optgroup</el>. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H86" diff="add">
            <short-name>Providing text alternatives for ASCII art, emoticons, and leetspeak</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>Before graphics became widely used on the internet, ASCII characters were often arranged to form pictures or graphs. Although ASCII art is not used frequently on the Web anymore, it must be remembered that, when it is used, it is very confusing to people who are blind and accessing the internet using screen readers. If it is used it should also have a text explanation of what the picture is. It is also suggested that there be a link to skip over the ASCII art (although this is not required).</p>
               <p>Emoticons are very popular. They include ASCII characters that form facial expressions and other ways to communicate an emotion. They can be confusing for screen reader users. When possible it is better simply to use a word like "smile" instead of an emoticon. But if emoticons are used they should have a text alternative. In some contexts, blog and forum software for example, plug-ins are available that automatically convert ASCII characters used as emoticons into HTML images with text alternatives.</p>
               <p>Leetspeak uses various combinations of ASCII characters to replace Latinate letters. Leet has become a part of Internet culture and slang. Leet is frequently used to beat text and spam filters. It is often incomprehensible to blind people using screen readers, and therefore requires a text alternative in order to conform to Success Criteria 1.1.1.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following shows three options for providing alternatives for an emoticon representing "fright," which is made out of an equal sign followed by the number eight, a hyphen and the number zero.</p>
                  </description>
                  <code>
=8-0 (fright)

&lt;abbr title="fright"&gt;=8-0&lt;/abbr&gt;

&lt;img src="fright.gif" alt="fright"/&gt;
             </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Here is ASCII art with an explanation of the picture preceding it. It includes a link to skip over the ASCII art. <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="#H86-ex3" xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Skip ASCII example</loc>.</p>
                  </description>
                  <code>
 Figure 1: ASCII art picture of a butterfly. &lt;a href="#skipbutterfly"&gt;Skip ASCII image&lt;/a&gt;
                                 
                                                                LLLLLLLLLLL
                                                            __LLLLLLLLLLLLLL
                                                           LLLLLLLLLLLLLLLLL
                                                         _LLLLLLLLLLLLLLLLLL
                                                        LLLLLLLLLLLLLLLLLLLL
                                                      _LLLLLLLLLLLLLLLLLLLLL
                                                      LLLLLLLLLLLLLLLLLLLLLL
                                              L     _LLLLLLLLLLLLLLLLLLLLLLL
                                             LL     LLLLLL~~~LLLLLLLLLLLLLL
                                            _L    _LLLLL      LLLLLLLLLLLLL
                                            L~    LLL~        LLLLLLLLLLLLL
                                           LL   _LLL        _LL   LLLLLLLL
                                          LL    LL~         ~~     ~LLLLLL
                                          L   _LLL_LLLL___         _LLLLLL
                                         LL  LLLLLLLLLLLLLL      LLLLLLLL
                                         L  LLLLLLLLLLLLLLL        LLLLLL
                                        LL LLLLLLLLLLLLLLLL        LLLLL~
                  LLLLLLLL_______       L _LLLLLLLLLLLLLLLL     LLLLLLLL
                         ~~~~~~~LLLLLLLLLLLLLLLLLLLLLLLLL~       LLLLLL
                       ______________LLL  LLLLLLLLLLLLLL ______LLLLLLLLL_
                   LLLLLLLLLLLLLLLLLLLL  LLLLLLLL~~LLLLLLL~~~~~~   ~LLLLLL
             ___LLLLLLLLLL __LLLLLLLLLLLLL LLLLLLLLLLLLL____       _LLLLLL_
          LLLLLLLLLLL~~   LLLLLLLLLLLLLLL   LLLLLLLLLLLLLLLLLL     ~~~LLLLL
      __LLLLLLLLLLL     _LLLLLLLLLLLLLLLLL_  LLLLLLLLLLLLLLLLLL_       LLLLL
     LLLLLLLLLLL~       LLLLLLLLLLLLLLLLLLL   ~L ~~LLLLLLLLLLLLL      LLLLLL
   _LLLLLLLLLLLL       LLLLLLLLLLLLLLLLLLLLL_  LL      LLLLLLLLL   LLLLLLLLL
  LLLLLLLLLLLLL        LLLLLLLLLLLLL~LLLLLL~L   LL       ~~~~~       ~LLLLLL
 LLLLLLLLLLLLLLL__L    LLLLLLLLLLLL_LLLLLLL LL_  LL_            _     LLLLLL
LLLLLLLLLLLLLLLLL~     ~LLLLLLLL~~LLLLLLLL   ~L  ~LLLL          ~L   LLLLLL~
LLLLLLLLLLLLLLLL               _LLLLLLLLLL    LL  LLLLLLL___     LLLLLLLLLL
LLLLLLLLLLLLLLLL              LL~LLLLLLLL~     LL  LLLLLLLLLLLL   LLLLLLL~
LLLLLLLLLLLLLLLL_  __L       _L  LLLLLLLL      LLL_ LLLLLLLLLLLLLLLLLLLLL
 LLLLLLLLLLLLLLLLLLLL        L~  LLLLLLLL      LLLLLLL~LLLLLLLLLLLLLLLL~
  LLLLLLLLLLLLLLLLLLLL___L_ LL   LLLLLLL       LLLL     LLLLLLLLLLLLLL
   ~~LLLLLLLLLLLLLLLLLLLLLLLL     LLLLL~      LLLLL        ~~~~~~~~~
           LLLLLLLLLLLLLLLLLL_ _   LLL       _LLLLL
               ~~~~~~LLLLLLLLLL~             LLLLLL
                         LLLLL              _LLLLLL
                         LLLLL    L     L   LLLLLLL
                          LLLLL__LL    _L__LLLLLLLL
                          LLLLLLLLLL  LLLLLLLLLLLL
                           LLLLLLLLLLLLLLLLLLLLLL
                            ~LLLLLLLLLLLLLLLLL~~
                               LLLLLLLLLLLLL
                                 ~~~~~~~~~
&lt;a name="skipbutterfly&gt;&lt;/a&gt;            </code>
               </eg-group>
               <eg-group id="skipbutterfly">
                  <description>
                     <p>The following is Leetspeak for "Austin Rocks". </p>
                  </description>
                  <code>
&lt;abbr title="Austin Rocks"&gt;Au5t1N r0xx0rz&lt;/abbr&gt;             </code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the page in a common browser.</p>
                     </item>
                     <item>
                        <p>Check to see that the content contains ASCII art, emoticons and/or leetspeak.</p>
                     </item>
                     <item>
                        <p>Check that there is a text alternative immediately before or after all ASCII art, emoticons and/or Leetspeak.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Test procedure #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H87" diff="add">
            <short-name>Not interfering with the user agent's reflow of text as the viewing window is narrowed</short-name>
            <applicability>
               <p>Not interfering with the user agent's reflow of text as the viewing window is narrowed</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>This technique helps avoid situations where horizontal scrolling may occur. Many people with cognitive disabilities and low vision users who do not use assistive technology have a great deal of trouble with blocks of text that require horizontal scrolling. It involves not interfering with the reflow of text if the window is narrowed. One of the best ways to do this to define widths of text block containers in percentages.</p>
               <p>HTML and XHTML user agents automatically reflow text as the browser window is narrowed as long as the author does not specify widths using absolute measurements such as pixels or points. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A newspaper site includes articles with columns that adjust with the user agents window width. Users with cognitive disabilities can narrow the column to a width that makes it easier to read. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/box.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS Box Model</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C20"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the content that contains a block of text in a common browser. </p>
                     </item>
                     <item>
                        <p>Narrow the viewing window to 1/4 of the screen width. </p>
                     </item>
                     <item>
                        <p>Check to see that the content does not require horizontal scrolling to read a line of text. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H88"><!-- This was originallly included as G154 --><short-name>Using HTML according to spec</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-parses"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use HTML and XHTML according to their respective specifications. Technology specifications define the meaning and proper handling of features of the technology. Using those features in the manner described by the specification ensures that user agents, including assistive technologies, will be able to present representations of the feature that are accurate to the author's intent and interoperable with each other.</p>
               <p>At the time this technique was published, the appropriate versions of these technologies is HTML 4.01 and XHTML 1.0. HTML 4.01 is the latest mature version of HTML, which provides specific accessibility features and is widely supported by user agents. XHTML 1.0 provides the same features as HTML 4.01, except that it uses an XML structure, has a more strict syntax than the HTML structure. Later versions of these technologies are not mature and / or are not widely supported by user agents at this time.</p>
               <p>There are a few broad aspects to using HTML and XHTML according to their specification.</p>
               <olist>
                  <item>
                     <p>
                        <emph role="bold">Using only features that are defined in the specification</emph> HTML defines sets of elements, attributes, and attribute values that may be used on Web pages. These features have specific semantic meanings and are intended to be processed by user agents in particular ways. Sometimes, however, additional features come into common authoring practice. These are usually initially supported by only one user agent. When features not in the specification are used, many user agents may not support the feature for a while or ever. Furthermore, lacking standard specifications for the use of these features, different user agents may provide varying support. This impacts accessibility because assistive technologies, developed with fewer resources than mainstream user agents, may take a long time if ever to add useful support. Therefore, authors should avoid features not defined in HTML and XHTML to prevent unexpected accessibility problems.</p>
                  </item>
                  <item>
                     <p>
                        <emph role="bold">Using features in the manner prescribed by the specification</emph> The HTML specification provides specific guidance about how particular elements, attributes, and attribute values are to be processed and understood semantically. Sometimes, however, authors use features in a manner that is not supported by the specification, for example, using semantic elements to achieve visual effects without intending the underlying semantic message to be conveyed. This leads to confusion for user agents and assistive technologies that rely on correct semantic information to present a coherent representation of the page. It is important to use HTML features only as prescribed by the HTML specification.</p>
                  </item>
                  <item>
                     <p>
                        <emph role="bold">Making sure the content can be parsed</emph> HTML and XHTML also define how content should be encoded in order to be correctly processed by user agents. Rules about the structure of start and end tags, attributes and values, nesting of elements, etc. ensure that user agents will parse the content in a way to achieve the intended document representation. Following the structural rules in these specifications is an important part of using these technologies according to specification. </p>
                  </item>
               </olist>
            </description>
            <resources>
               <see-also>
                  <p>Refer to the resources section of <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="G134" linktype="general"
                          locn-note="G134-resources"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Validating Web
                        pages</loc>. </p>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H74"/>
               <relatedtech idref="H75"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each HTML or XHTML page:</p>
                  <olist>
                     <item>
                        <p>Check that the page uses only elements, attributes, and attribute values that are defined in the relevant specification.</p>
                     </item>
                     <item>
                        <p>Check that elements, attributes, and values are used in the manner prescribed by the relevant specification.</p>
                     </item>
                     <item>
                        <p>Check that the page can be parsed correctly, according to the rules of the relevant specification.</p>
                     </item>
                  </olist>
                  <note>
                     <p>Check #1 and #3 are most easily checked with page validation tools. Check #2 can be checked with the assistance of heuristic evaluation tools though manual judgment is usually required.</p>
                  </note>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1, #2, and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H89">
            <short-name>Using the title attribute to provide context-sensitive help</short-name>
            <applicability>
               <p>HTML and XHTML </p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-context-help"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <ulist>
                     <item>
                        <p>Some current assistive technology provide feedback to the user when form fields have title attribute content available. </p>
                     </item>
                     <item>
                        <p>Some graphical user agents will display a tool tip when the mouse hovers above a form field containing a <code>title</code> attribute. However, current user agents do not provide access to the <code>title</code> attribute content via the keyboard. </p>
                     </item>
                     <item>
                        <p>The tool tip in some common user agents disappears after a short period of time (approximately 5 seconds). This can cause difficulty accessing title attribute content for those users who can use a mouse but have fine motor skill impairment, and may result in difficulties for users who need more time to read the tool tip. </p>
                     </item>
                     <item>
                        <p>It is difficult for most users to resize, adjust background colors, reposition or otherwise control the presentation of title attribute content in many current user agents. </p>
                     </item>
                     <item>
                        <p>This technique can only be used when the element has an explicitly associated label. In the absence of a lable, the title will be used as the Name in the accessibility API of current user agents that support one. The help text described below makes a poor name. </p>
                     </item>
                  </ulist>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide context sensitive help for users as they enter data in forms by providing the help information in a <code>title</code> attribute. The help may include format information or examples of input. </p>
               <note>
                  <p>Current user agents and assistive technologies do not always provide the information contained in the <code>title</code> attribute to users. Avoid using this technique in isolation until the <code>title</code> attribute has wide-spread support. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A mapping application provides a form consisting of a label "Address:", an input box and a submit button with value "Find map". The input box has a <code>title</code> attribute value with an example of the address format the user should enter. </p>
                  </description>
                  <code>
&lt;label for="searchAddress"&gt;Address: &lt;/label&gt;
&lt;input id="searchAddress" type="text" size="30" value="" name="searchAddress" 
 title="Address example: 101 Collins St, Melbourne, Australia" /&gt;
             </code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A form that allows users to pay their bill online requires the user to enter their account number. The input box associated with the "Account number" label has a <code>title</code> attribute providing information on locating the account number. </p>
                  </description>
                  <code>
&lt;label for="accNum1"&gt;Account number: &lt;/label&gt;
&lt;input id="accNum1" type="text" size="10" value="" title="Your account number 
 can be found in the top right-hand corner of your bill." /&gt;
             </code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="H65"/>
               <relatedtech idref="G71"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify form controls that require text input. </p>
                     </item>
                     <item>
                        <p>Check that each form control has an explicitly associated label </p>
                     </item>
                     <item>
                        <p>Check that each form control has context-sensitive help provided in the <code>title</code> attribute. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H90" diff="add">
            <short-name>Indicating required form controls</short-name>
            <applicability>
               <p>HTML and XHTML controls that use external labels.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <!-- these ua issues also appear in H44 --><ua-issues>
               <ua-issue name="" version="">
                  <p>The HTML and XHTML specifications allow both implicit and explicit labels. However, some
                        assistive technologies do not correctly handle implicit labels (for example,
                        <code>&lt;label&gt;First name &lt;input type="text"
                            name="firstname"&gt;&lt;/label&gt;</code>).</p>
                  <ulist>
                     <item>
                        <p>JAWS 7.10 was tested on Windows XP with Internet Explorer 6.0 and Firefox 1.5. It
                                reads the label for explicit and implicit labels for text fields in both virtual
                                PC cursor and forms reading mode. In forms mode it does not read the label for
                                implicit labels on checkboxes and radio fields.</p>
                     </item>
                     <item>
                        <p>Window-Eyes 5.5 was tested on Windows XP with Internet Explorer 6.0 and Firefox
                                1.5. It will always speak the label for an explicitly labelled form field. It does
                                not speak the label for the implicitly labelled form control in browse on mode but
                                will speak the implicit label when navigating from control to control in browse
                                off mode. </p>
                     </item>
                  </ulist>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>User agents will display a tool tip when the mouse hovers above an <code>input</code>
                        element containing a <code>title</code> attribute. Title attributes are exposed to
                        assistive technology and are displayed as tooltips in many graphical browsers.
                        Tooltips can't be opened via the keyboard, so this information may not be available to
                        sighted keyboard users. </p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>If no <code>label</code> is available, JAWS and Window-Eyes speak the
                        <code>title</code> attribute when the form control receives focus </p>
                  <ulist>
                     <item>
                        <p>JAWS 6.0 and later can be set to speak both <code>label</code> and
                                <code>title</code> when the two items are different; however, very few users are
                                aware of this setting.</p>
                     </item>
                     <item>
                        <p>WindowEyes 5.5 has a hot key, ins-E, that will display additional information,
                                including the title attribute, for the item with focus. </p>
                     </item>
                  </ulist>
               </ua-issue>
               <!-- BBC: This UA issue (below) is not shared with H44 --><ua-issue name="" version="">
                  <p>Some user agents (specifically the Window-Eyes screen reader) do not by default voice the asterisk character in form labels. There is a preference that Window-Eyes users can modify to adjust this behavior but many users should be expected not to have made this change. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide a clear indication that a specific form control in a Web application or form is required for successful data submission. A symbol or text indicating that the control is required is programmatically associated with the field by using the <el>label</el> element, or the <el>legend</el> for groups of controls associated via <el>fieldset</el>. If a symbol is used, the user is advised of its meaning before the first use. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Using text to indicate required state</head>
                  <description>
                     <p>The text field in the example below has the explicit label of "First name (required):". The <el>label</el> element's  <att>for</att> attribute matches the <att>id</att> attribute of the <el>input</el> element and the <el>label</el> text indicates that the control is required. </p>
                  </description>
                  <code>
&lt;label for="firstname"&gt;First name (required):&lt;/label&gt; 
&lt;input type="text" name="firstname" id="firstname" /&gt;
</code>
                  <description>
                     <note>
                        <p>Some authors abbreviate "required" to "req." but there is anecdotal evidence that suggests that this abbreviation is confusing. </p>
                     </note>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Using an asterisk to indicate required state</head>
                  <description>
                     <p>The text field in the example below has an explicit label that includes an asterisk to indicate the control is required. It is important that the asterisk meaning is defined at the start of the form. In this example, the asterisk is contained within a span element to allow for the asterisk character to be styled so that it is larger than the default asterisk character, since the asterisk character can be difficult to see for those with impaired vision. </p>
                  </description>
                  <code>
CSS:
.req {font-size: 150%} 

HTML:

&lt;p&gt; Required fields are marked with an asterisk (&lt;abbr class="req" title="required"&gt;*&lt;/abbr&gt;).&lt;/p&gt;
&lt;form action="http://www.test.com" method="post"&gt;
&lt;label for="firstname"&gt;First name &lt;abbr class="req" title="required"&gt;*&lt;/abbr&gt;:&lt;/label&gt; 
&lt;input type="text" name="firstname" id="firstname" /&gt;
</code>
               </eg-group>
               <eg-group>
                  <head>Using an image to indicate required state</head>
                  <description>
                     <p>The text field in the example below has an explicit label that includes an image to indicate the control is required. It is important that the image meaning is defined at the start of the form.</p>
                  </description>
                  <code>
&lt;p&gt;&lt;img src="req_img.gif" alt="Required Control" /&gt; indicates that the form control is required&lt;/p&gt;
&lt;form action="http://www.test.com" method="post"&gt;
&lt;label for="firstname"&gt;First name &lt;img src="req_img.gif" alt="Required Control" /&gt;:&lt;/label&gt; 
&lt;input type="text" name="firstname" id="firstname" /&gt;
...
</code>
               </eg-group>
               <eg-group>
                  <head>Indicating required state for groups of radio buttons or check box controls</head>
                  <description>
                     <p>Radio buttons and checkboxes are treated differently than other interactive controls since individual radio buttons and checkboxes are not required but indicates that a response for the group is required. The methods used in examples 1-3 apply to radio buttons and checkboxes, but the indication of the required state should be placed in the <el>legend</el> element instead of the <el>label</el> element. </p>
                  </description>
                  <code>
&lt;fieldset&gt;
&lt;legend&gt;I am interested in the following (Required):&lt;/legend&gt;
&lt;input type="checkbox" id="photo" name="interests" value="ph"&gt;
&lt;label for="photo"&gt;Photography&lt;/label&gt;&lt;/br&gt;
&lt;input type="checkbox" id="watercol" name="interests" checked="checked" value="wa"&gt;
&lt;label for="watercol"&gt;Watercolor&lt;/label&gt;&lt;/br&gt;
&lt;input type="checkbox" id="acrylic" name="interests" checked="checked" value="ac"&gt;
&lt;label for="acrylic"&gt;Acrylic&lt;/label&gt;
…
&lt;/fieldset&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/interact/forms.html#h-17.9"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 form labels</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H44"/>
               <relatedtech idref="H65"/>
               <relatedtech idref="H71"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>For each required form control, check that the required status is indicated in the form control's <el>label</el> or <el>legend</el>. </p>
                     </item>
                     <item>
                        <p>For each indicator of required status that is not provided in text, check that the meaning of the indicator is explained before the form control that uses it. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="H91" diff="add">
            <short-name>Using HTML form controls and links</short-name>
            <applicability>
               <p>HTML form controls and links </p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use standard HTML form controls and link elements to provide keyboard operation and assistive technology interoperability of interactive user interface elements.</p>
               <p>User agents provide the keyboard operation of HTML form controls and links. In addition, the user agent maps the form controls and links to an accessibility API. Assistive technologies use the accessibility API to extract appropriate accessibility information, such as role, name, state, and value, and present them to users. The role is provided by the HTML element, and the name is provided by the text associated with that element. Elements for which values and states are appropriate also expose the values and states via multiple mechanisms. </p>
               <p>In some cases, the text is already associated with the control through a required attribute. For example, submit buttons use the <el>button</el> element text or image '<att>alt</att>' attribute as the name. In the case of form controls, <el>label</el> elements or '<att>title</att>' attributes are used. The following table describes how the role, name, value, and state are determined for HTML link and form controls. </p>
               <table border="1" cellpadding="5"
                      summary="Table describing how the role, name, value and state are determined for HTML links and form controls.">
                  <thead>
                     <tr>
                        <th rowspan="1" colspan="1">HTML element </th>
                        <th rowspan="1" colspan="1">Role</th>
                        <th rowspan="1" colspan="1">Name </th>
                        <th rowspan="1" colspan="1">Value </th>
                        <th rowspan="1" colspan="1">State </th>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;a&gt; </td>
                        <td rowspan="1" colspan="1"> link </td>
                        <td rowspan="1" colspan="1"> 'title' attribute, text within &lt;a&gt; element or 'alt' attribute if image link. Concatenated if both text and image 'alt' attribute are provided </td>
                        <td rowspan="1" colspan="1"> 'href' attribute </td>
                        <td rowspan="1" colspan="1">
                                
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;button&gt; </td>
                        <td rowspan="1" colspan="1"> push button </td>
                        <td rowspan="1" colspan="1"> text inside &lt;button&gt; element or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> </td>
                        <td rowspan="1" colspan="1">
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;fieldset&gt; </td>
                        <td rowspan="1" colspan="1"> grouping </td>
                        <td rowspan="1" colspan="1"> &lt;legend&gt; element </td>
                        <td rowspan="1" colspan="1"> </td>
                        <td rowspan="1" colspan="1">
                                
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;input type = "button", "submit", or "reset"&gt; </td>
                        <td rowspan="1" colspan="1"> push button </td>
                        <td rowspan="1" colspan="1"> 'value' attribute </td>
                        <td rowspan="1" colspan="1"> </td>
                        <td rowspan="1" colspan="1">
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;input type = "image"&gt; </td>
                        <td rowspan="1" colspan="1"> push button </td>
                        <td rowspan="1" colspan="1"> 'alt' attribute or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> </td>
                        <td rowspan="1" colspan="1">
                                
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;input type = "text"&gt; </td>
                        <td rowspan="1" colspan="1"> editable text </td>
                        <td rowspan="1" colspan="1"> &lt;label&gt; element associated with it or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> 'value' attribute </td>
                        <td rowspan="1" colspan="1">
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;input type = "password"&gt; </td>
                        <td rowspan="1" colspan="1"> editable text </td>
                        <td rowspan="1" colspan="1"> &lt;label&gt; element associated with it or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> </td>
                        <td rowspan="1" colspan="1">
                                
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;input type="checkbox"&gt; </td>
                        <td rowspan="1" colspan="1"> checkbox </td>
                        <td rowspan="1" colspan="1"> &lt;label&gt; element associated with it or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> </td>
                        <td rowspan="1" colspan="1"> 'checked' attribute
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;input type="radio"&gt; </td>
                        <td rowspan="1" colspan="1"> radio button </td>
                        <td rowspan="1" colspan="1"> &lt;label&gt; element associated with it or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> </td>
                        <td rowspan="1" colspan="1"> 'checked' attribute
                                
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;select&gt; </td>
                        <td rowspan="1" colspan="1"> combobox, list, or dropdown list </td>
                        <td rowspan="1" colspan="1"> &lt;label&gt; element associated with it or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> &lt;option&gt; element with 'selected' attribute set to "selected" </td>
                        <td rowspan="1" colspan="1">
                            </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1"> &lt;textarea&gt; </td>
                        <td rowspan="1" colspan="1"> editable text </td>
                        <td rowspan="1" colspan="1"> &lt;label&gt; element associated with it or 'title' attribute </td>
                        <td rowspan="1" colspan="1"> text within  &lt;textarea&gt; element </td>
                        <td rowspan="1" colspan="1">
                            </td>
                     </tr>
                  </tbody>
               </table>
            </description>
            <examples>
               <eg-group>
                  <head>Links</head>
                  <description>
                     <p>User agents provide mechanisms to navigate to and select links. In each of the following examples, the role is "link" from the &lt;a href&gt;.  Note that &lt;a name&gt; does not provide a role of "link". The value is the URI in the 'href' attribute. </p>
                     <exsubhead>Example 1a</exsubhead>
                     <p>In example 1a, the name is the text inside the link, in this case "Example Site". </p>
                  </description>
                  <code role="xhtml">&lt;a href="www.example.com"&gt;Example Site&lt;/a&gt;
                    </code>
                  <description>
                     <exsubhead>Example 1b</exsubhead>
                     <p>In example 1b of an image inside a link, the 'alt' attribute for the image provides the name. Some tools for viewing APIs, such as Microsoft Inspect Objects, will not surface this, but AT does. </p>
                  </description>
                  <code role="xhtml">&lt;a href="www.example.com"&gt;&lt;img src="example_logo.gif" alt="Example"&gt;&lt;/a&gt;
                    </code>
                  <description>
                     <exsubhead>Example 1c</exsubhead>
                     <p>In example 1c, the name will be concatenated from the different elements inside the link to read "Example Text" </p>
                  </description>
                  <code role="xhtml">&lt;a href="www.example.com"&gt;&lt;img src="example_logo.gif" alt="Example"&gt;Text&lt;/a&gt;
</code>
               </eg-group>
               <eg-group>
                  <head>Buttons</head>
                  <description>
                     <p>There are several ways to create a button in HTML, and they all map to the "push button" role.</p>
                     <exsubhead>Example 2a</exsubhead>
                     <p>In example 2a, the text is contained in the <el>button</el> element, in this case "save", as the name. There is no value.</p>
                  </description>
                  <code role="xhtml">&lt;button&gt;Save&lt;/button&gt;
                    </code>
                  <description>
                     <exsubhead>Example 2b</exsubhead>
                     <p>Example 2b uses the 'value' attribute, in this case "Save", "Submit", or "Reset" as the name.</p>
                  </description>
                  <code role="xhtml">&lt;input type="button" value="Save" /&gt; 
&lt;input type="submit" value="Submit" /&gt;  
&lt;input type="reset" value="Reset" /&gt;   
                    </code>
                  <description>
                     <exsubhead>Example 2c</exsubhead>
                     <p>Example 2c uses the 'alt' attribute, in this case "save", as the name.</p>
                  </description>
                  <code role="xhtml">&lt;input type="image" src="save.gif" alt="save" /&gt; 
                    </code>
                  <description>
                     <exsubhead>Example 2d</exsubhead>
                     <p>In example 2d, there is no 'alt' attribute so the 'title' attribute, in this case "save", is used as the name.</p>
                  </description>
                  <code role="xhtml">&lt;input type="image" src="save.gif" title="save" /&gt;
                    </code>
                  <description>
                     <exsubhead>Example 2e</exsubhead>
                     <p>Example 2e uses the 'alt' attribute of the input element, in this case "save", as the name. The title attribute is not used. </p>
                  </description>
                  <code role="xhtml">&lt;input type="image" src="save.gif" alt="save" title="save" /&gt;
</code>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <exsubhead>Example 3a</exsubhead>
                     <p>In example 3a, the input field has a role of "editable text". The <el>label</el> element is associated to the <el>input</el> element via the 'for' attribute which references the 'id' attribute of the <el>inpu</el>&gt; element. The name comes from the <el>label</el> element, in this case, "Type of fruit". Its value comes from its value attribute, in this case "bananas". </p>
                  </description>
                  <code role="xhtml">&lt;label for="text_1"&gt;Type of fruit&lt;/label&gt;
&lt;input id="text_1" type="text" value="bananas"&gt;
</code>
                  <description>
                     <exsubhead>Example 3b</exsubhead>
                     <p>In example 3b, the input field has the same role and value as example 3a, but gets its name from the 'title' attribute. </p>
                  </description>
                  <code role="xhtml">&lt;input id="text_1" type="text" value="bananas" title="Type of fruit"&gt;
</code>
               </eg-group>
               <eg-group>
                  <head>Checkbox </head>
                  <description>
                     <p>Example 4 has a role of "checkbox", from the 'type' attribute of the <el>input</el> element. The <el>label</el> element is associated with the <el>input</el> element via the 'for' attribute which refers to the 'id' attribute of the <el>input</el> element. The name comes from the <el>label</el> element, in this case "cheese". Its state can be "checked" or "unchecked" and comes from the 'checked' attribute. The state can be changed by the user's interaction with the control. </p>
                  </description>
                  <code role="xhtml">&lt;label for="cb_1"&gt;Cheese&lt;/label&gt; 
&lt;input id="cb_1" type="checkbox" checked="checked"&gt;
                    </code>
               </eg-group>
               <eg-group>
                  <head>Radio Buttons </head>
                  <description>
                     <p>Example 5 has a role of "radio button" from the 'type' attribute on the <el>input</el> element. Its name comes from the <el>label</el> element. The state can be "checked" or "unchecked" and comes from the 'checked' attribute. The state can be changed by the user. </p>
                  </description>
                  <code role="xhtml">&lt;input type="radio" name="color" id="r1" checked="checked"/&gt;&lt;label for="r1"&gt;Red&lt;/label&gt;
&lt;input type="radio" name="color" id="r2" /&gt;&lt;label for="r2"&gt;Blue&lt;/label&gt;
&lt;input type="radio" name="color" id="r3" /&gt;&lt;label for="r3"&gt;Green&lt;/label&gt;
                    </code>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <exsubhead>Example 6a</exsubhead>
                     <p>Example 6a has a role of "Combobox" from the <el>select</el> element. Its name is "Numbers" from the <el>label</el> element. Forgetting to give a name to the select is a common error. The value is the <el>option</el> element that has the 'selected' attribute set to "selected". In this case, the default value is "Two". </p>
                  </description>
                  <code role="xhtml">&lt;label for="s1"&gt;Numbers&lt;/label&gt;
&lt;select id="s1" size="1"&gt;
 &lt;option&gt;One&lt;/option&gt;
 &lt;option selected="selected"&gt;Two&lt;/option&gt;
 &lt;option&gt;Three&lt;/option&gt;
&lt;/select&gt;
                    </code>
                  <description>
                     <exsubhead>Example 6b</exsubhead>
                     <p>Example 6b has the same name, role, and value as the above, but sets the name with the 'title' attribute on the <el>select</el> element. This technique can be used when a visible label is not desirable. </p>
                  </description>
                  <code role="xhtml">&lt;select id="s1" title="Numbers" size="1"&gt;
 &lt;option&gt;One&lt;/option&gt;
 &lt;option selected="selected"&gt;Two&lt;/option&gt;
 &lt;option&gt;Three&lt;/option&gt;
&lt;/select&gt;
                    </code>
               </eg-group>
               <eg-group>
                  <head> Textarea</head>
                  <description>
                     <exsubhead>Example 7a</exsubhead>
                     <p>Example 7a has a role of "editable text" from the <el>textarea</el> element. The name is "Type your speech here" from the <el>label</el> element. The value is the content inside the <el>textarea</el> element, in this case "Four score and seven years ago". </p>
                  </description>
                  <code role="xhtml">&lt;label for="ta_1"&gt;Type your speech here&lt;/label&gt;
&lt;textarea id="ta_1" &gt;Four score and seven years ago&lt;/textarea&gt;
                    </code>
                  <description>
                     <exsubhead>Example 7b</exsubhead>
                     <p>Example 7b has the same role, name, and value, but sets the name using the 'title' attribute. </p>
                  </description>
                  <code role="xhtml">&lt;textarea id="ta_1" title="Type your speech here" &gt;Four score and seven years ago&lt;/textarea&gt;
                    </code>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <exsubhead>Radio Fieldset</exsubhead>
                     <p>The radio fieldset in example 8 has a role of "grouping". The name comes from the <el>legend</el> element. </p>
                  </description>
                  <code role="xhtml">&lt;fieldset&gt;
  &lt;legend&gt;Choose a Color:&lt;/legend&gt; 
     &lt;input id="red" type="radio" name="color" value="red" /&gt;&lt;label for="red"&gt;Red&lt;/label&gt;&lt;br /&gt; 
     &lt;input id="blue" type="radio" name="color" value="blue" /&gt;&lt;label for="blue"&gt;Blue&lt;/label&gt;&lt;br /&gt; 
     &lt;input id="green" type="radio" name="color" value="green" /&gt;&lt;label for="green"&gt;Green&lt;/label&gt; 
&lt;/fieldset&gt;
                    </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usability.com.au/resources/wcag2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms using WCAG 2.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn.microsoft.com/en-us/library/aa360193(VS.85).aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">MSDN Accessible DHTML elements</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="https://wiki.mozilla.org/Accessibility/AT-Windows-API#MSAA_Role_Support"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Mozilla Accessibility/AT-Windows-API </loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H44"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Inspect the HTML source code.</p>
                     </item>
                     <item>
                        <p>For each instance of links and form elements, check that the name, value, and state are specified as indicated in the table above. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 id="css">
         <head>CSS Techniques</head>
         <technique id="C6">
            <short-name>Positioning content based on structural markup</short-name>
            <applicability>
               <p>All technologies that support CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to demonstrate how visual appearance may be enhanced via style sheets while still maintaining a meaningful presentation when style sheets are not applied. Using the positioning properties of CSS2, content may be displayed at any position on the user's viewport. Using structural elements ensures that the meaning of the content can still be determined when styling is not available. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>In this example structural markup (definition lists) have been applied to the content. CSS has been used to style the content into columnar form. Each class absolutely positions the content into columns and the margins have been set to 0 to override the default behavior of user agents to display HTML definition lists with the DD element indented. </p>
                     <p>Here is the content to be displayed:</p>
                  </description>
                  <code role="html401">
 &lt;div class="box"&gt;
  &lt;dl&gt;
    &lt;dt class="menu1"&gt;Products&lt;/dt&gt;
    &lt;dd class="item1"&gt;Telephones&lt;/dd&gt;
    &lt;dd class="item2"&gt;Computers&lt;/dd&gt;
    &lt;dd class="item3"&gt;Portable MP3 Players&lt;/dd&gt;
    &lt;dt class="menu2"&gt;Locations&lt;/dt&gt;
    &lt;dd class="item4"&gt;Idaho&lt;/dd&gt;
    &lt;dd class="item5"&gt;Wisconsin&lt;/dd&gt;
    &lt;/dt&gt;
  &lt;/dl&gt;
 &lt;/div&gt;
</code>
                  <description>
                     <p>Here is the CSS which positions and styles the above elements:</p>
                  </description>
                  <code role="html401">
 .item1 {
   left: 0em;
   margin: 0px;
   position: absolute;
   top: 7em;
 }
 .item2 {
   left: 0em;
   margin: 0px;
   position: absolute;
   top: 8em;
 }
 .item3 {
   left: 0em;
   margin: 0px;
   position: absolute;
   top: 9em;
 }
 .item4 {
   left: 14em;
   margin: 0px;
   position: absolute;
   top: 7em;
 }
 .item5 {
   left: 14em;
   margin: 0px;
   position: absolute;
   top: 8em;
 }
 .menu1 {
   background-color: #FFFFFF;
   color: #FF0000;
   font-family: sans-serif;
   font-size: 120%;
   left: 0em;
   margin: 0px;
   position: absolute;
   top: 3em;
 }
 .menu2 {
   background-color: #FFFFFF;
   color: #FF0000;
   font-family: sans-serif;
   font-size: 120%;
   left: 10em;
   margin: 0px;
   position: absolute;
   top: 3em;
 }
 #box {
   left: 5em;
   position: absolute;
   top: 5em;
 }

</code>
                  <description>
                     <p>When style sheets are applied, the data are displayed in two columns of "Products" and "Locations." When the style sheets are not applied, the text appears in a definition list which maintains the structure and reading order. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://css-discuss.incutio.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS-Discuss Home Page</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://css-discuss.incutio.com/?page=CssLayouts"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS-Discuss on CSS Layouts</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="F1"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For content which uses CSS for positioning
							</p>
                  <olist>
                     <item>
                        <p>Remove the style information from the document or turn off use of style sheets in the user agent.</p>
                     </item>
                     <item>
                        <p>Check that the structural relations and the meaning of the content are preserved.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C7">
            <short-name>Using CSS to hide a portion of the link text </short-name>
            <applicability>
               <p>All technologies that support CSS .</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to supplement the link text by adding additional text that describes the unique function of the link but styling the additional text so that it is not rendered on the screen by user agents that support CSS. When information in the surrounding context is needed to interpret the displayed link text, this technique provides a complete description of the link's input function while permitting the less complete text to be displayed.</p>
               <p>This technique works by creating a CSS selector to target text that is to be hidden. The rule set for the selector places the text to be hidden in a 1-pixel box with overflow hidden, and positions the text outside of the viewport. This ensures the text does not display on screen but remains accessible to assistive technologies such as screen readers and braille displays. Note that the technique does not use <code>visibility:hidden</code> or <code>display:none</code> properties, since these can have the unintentional effect of hiding the text from assistive technology in addition to preventing on-screen display.</p>
               <note>
                  <p>This technique to hide link text has been advocated by some screen reader users and corporate Web authors. It has proved effective on some Web sites. Other screen reader users and accessibility experts don't recommend this as a general technique because the results can be overly chatty and constrain the ability of the experienced screen reader user to control the verbosity. The working group believes the technique can be useful for Web pages that do not have repetitive content in the hidden text areas.</p>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <specref ref="C29"/> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <p>The following examples use the CSS selector and rule set below:</p>
               <code role="html401">
a span {
height: 1px;
width: 1px;
position: absolute;
overflow: hidden;
top: -10px;
}
</code>
               <eg-group>
                  <description>
                     <p>This example describes a news site that has a series of short synopsis of stories followed by a link that says "full story". Hidden link text describes the purpose of the link.</p>
                  </description>
                  <code role="html401">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt; 
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt; 
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/xhtml; charset=UTF-8" /&gt; 
&lt;link href="access.css" rel="stylesheet" type="text/css" /&gt;
&lt;title&gt;Hidden Link Text&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt; 
&lt;p&gt;Washington has announced plans to stimulate economic growth.
  &lt;a href="#"&gt; &lt;span&gt;Washington stimulates economic growth &lt;/span&gt;
  Full Story&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>This example describes a resource that has electronic books in different formats. The title of each book is followed by links that say "HTML" and "PDF." Hidden text describes the purpose of each link.</p>
                  </description>
                  <code role="html401">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt; 
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt; 
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/xhtml; charset=UTF-8" /&gt; 
&lt;link href="access.css" rel="stylesheet" type="text/css" /&gt;
&lt;title&gt;Hidden Link Text &lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;dl&gt;
&lt;dt&gt;Winnie the Pooh &lt;/dt&gt;
   &lt;dd&gt;&lt;a href="winnie_the_pooh.html"&gt;
      &lt;span&gt;Winnie the Pooh &lt;/span&gt;HTML&lt;/a&gt;&lt;/dd&gt;
   &lt;dd&gt;&lt;a href="winnie_the_pooh.pdf"&gt;
         &lt;span&gt;Winnie the Pooh &lt;/span&gt;PDF&lt;/a&gt;&lt;/dd&gt;
&lt;dt&gt;War and Peace&lt;/dt&gt;
    &lt;dd&gt;&lt;a href="war_and_peace.html"&gt;
      &lt;span&gt;War and Peace &lt;/span&gt;HTML&lt;/a&gt;&lt;/dd&gt; 
    &lt;dd&gt;&lt;a href="war_and_peace.pdf"&gt;
      &lt;span&gt;War and Peace &lt;/span&gt;PDF&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/body&gt;
&lt;/html&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.rnib.org.uk/wacblog/css/hidden-barriers-out-of-sight/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Hidden barriers - out of sight</loc>
                        </p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://webaim.org/techniques/css/invisiblecontent/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS in Action: Invisible Content Just for Screen Reader Users</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G91"/>
               <!--<relatedtech idref="H30"/>--><relatedtech idref="H33"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each <code>anchor</code> element using this technique:
							</p>
                  <olist>
                     <item>
                        <p>Check that an element has been defined that confines its display to a pixel and positions text outside the display with overflow hidden</p>
                     </item>
                     <item>
                        <p>Check that the element of that class is included in the content of the <code>anchor</code>
                        </p>
                     </item>
                     <item>
                        <p>Check that the combined content of the <code>anchor</code> describes the purpose of the link</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C8">
            <short-name>Using CSS letter-spacing to control spacing within a word</short-name>
            <applicability>
               <p>All technologies that support CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to demonstrate how the visual appearance of spacing in text may be enhanced via style sheets while still maintaining meaningful text sequencing. The CSS <code>letter-spacing</code> property helps developers control the amount of white space between characters. This is recommended over adding blank characters to control the spacing, since the blank characters can change the meaning and pronunciation of the word.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Separating characters in a word </head>
                  <description>
                     <p>The following CSS would add the equivalent of a space between each character in a level-2 heading:</p>
                  </description>
                  <code role="html401">
h2
{
	letter-spacing: 1em;
}
</code>
                  <description>
                     <p>So for the markup:</p>
                  </description>
                  <code role="html401">
&lt;h2&gt;Museum&lt;/h2&gt;
</code>
                  <description>
                     <p>the rendered result might look something like:</p>
                  </description>
                  <code role="html401">
M u s e u m
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1998/REC-CSS2-19980512/text.html#spacing-props"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2.0: Letter and word spacing</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="F1"/>
               <relatedtech idref="F32"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each word that appears to have non-standard spacing between characters:
							</p>
                  <olist>
                     <item>
                        <p>Check whether the CSS <code>letter-spacing</code> property was used to control spacing.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C9">
            <short-name>Using CSS to include decorative images</short-name>
            <applicability>
               <p> Any technology that can use CSS to include images. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a mechanism to add purely
                        decorative images and images used for visual formatting to Web content
                        without requiring additional markup within the content. This makes it
                        possible for assistive technologies to ignore the non-text content. Some
                        user agents can ignore or turn off CSS at the user's request, so that
                        background images included with CSS simply "disappear" and do not interfere
                        with display settings such as enlarged fonts or high contrast settings. </p>
               <p>Background images can be included with the following CSS properties:</p>
               <ulist>
                  <item>
                     <p>
                        <code>background</code>, </p>
                  </item>
                  <item>
                     <p>
                        <code>background-image</code>, </p>
                  </item>
                  <item>
                     <p>
                        <code>content</code>, combined with the <code>:before</code> and
                                    <code>:after</code> pseudo-elements, </p>
                  </item>
                  <item>
                     <p>
                        <code>list-style-image</code>. </p>
                  </item>
               </ulist>
               <p>Note: This technique is not appropriate for any image that conveys
                        information or provides functionality, or for any image primarily intended
                        to create a specific sensory experience.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Background image for an HTML page </head>
                  <description>
                     <p> The stylesheet for a Web page specifies a background image for the
                                whole page.</p>
                  </description>
                  <code>
 …
&lt;style type="text/css"&gt;
body { background: #ffe url('/images/home-bg.jpg') repeat; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
…</code>
               </eg-group>
               <eg-group>
                  <head>Background image with CSS for image rollovers </head>
                  <description>
                     <p> The stylesheet for a Web page uses the CSS <code>background</code>
                                property to create a decorative rollover effects when a user hovers
                                the mouse pointer over a link. </p>
                  </description>
                  <code>
a:hover { background: #ffe url('/images/hover.gif') repeat; color: #000;
   text-decoration: none;
}</code>
               </eg-group>
               <eg-group>
                  <head>Background images with CSS to create rounded corners on
                            tabs or other elements </head>
                  <description>
                     <p> The styleseet for a Web page uses the CSS <code>background</code>
                                property to create rounded corners on elements. </p>
                  </description>
                  <code>
…
&lt;style type="text/css"&gt;
 div#theComments { width:600px; }
 div.aComment { background: url('images/middle.gif') repeat-y left top; 
 margin:0 0 30px 0; }
 div.aComment blockquote { background: url('images/top.gif') no-repeat left top; 
 margin:0; padding:8px 16px; }
 div.aComment div.submitter { background:#fff url('images/bottom.gif') no-repeat left top; 
 margin:0; padding-top:30px; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="theComments"&gt;
 &lt;div class="aComment"&gt;
  &lt;blockquote&gt;
   &lt;p&gt;Hi John, I really like this technique and I'm gonna use it on my own Website!&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;div class="submitter"&gt;
   &lt;p class="cite"&gt;&lt;a href="http://example.com/"&gt;anonymous coward&lt;/a&gt; from Elbonia&lt;/p&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class="aComment"&gt;
 …
 &lt;/div&gt;
&lt;/div&gt;
…</code>
               </eg-group>
               <eg-group>
                  <head>Image replacement used to enhance the visual appearance of a heading</head>
                  <description>
                     <p>In the following example, a decorative image is used to replace text within the heading element.</p>
                  </description>
                  <code>
&lt;style type="text/css".
h3#about {
width: 480px;
height: 34px;
position: relative;
}
h3#about span {
background: url(about.gif) no-repeat;
position: absolute;
width: 100%;
height: 100%;
}
&lt;/style&gt;
...
&lt;h3 id="about" title="About example.com"&gt; &lt;span&gt;&lt;/span&gt;About example.com &lt;/h3&gt;
            </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p> The <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1998/REC-CSS2-19980512/colors.html#propdef-background"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">background property in the CSS 2.0 specification</loc>
                        </p>
                     </item>
                     <item>
                        <p> The <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/global.html#adef-background"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 specification</loc> states that the
                                        <code>background</code> attribute of the <code>body</code>
                                    element is deprecated </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.mezzoblue.com/tests/revised-image-replacement/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Revised Image Replacement</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://css-discuss.incutio.com/?page=ImageReplacement"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">ImageReplacement - css-discuss</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="F3"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check for the presence of decorative images </p>
                     </item>
                     <item>
                        <p> Check that they are included with CSS </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If #1 is true, then #2 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C12">
            <short-name>Using percent for font sizes</short-name>
            <applicability>
               <p>CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="7-">
                  <p>When font size is specified in any absolute units of measurement, such as points or pixels, the Text Size menu commands in Internet Explorer 7 and earlier do not resize the text.</p>
               </ua-issue>
               <ua-issue name="windows" version="general">
                  <p>When High Contrast Mode has been set from the Accessibility Control Panel on Windows, IE6 increases the size of the page text as if a percentage change had been set for the outermost window via CSS. Standard CSS layout behavior causes relative scaling to be multiplied, so the scaling of text within elements will be different in subtle ways. Firefox and IE7 do not change the scaling of the content based on the system settings in a way that affects CSS layout, so this effect does not occur in those browsers.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to specify text font size proportionally so that user agents can scale content effectively. If a font-size is specified for the <el>body</el> element, all other elements inherit that value, unless overridden by a more specific selector.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Percent font sizes in CSS</head>
                  <description>
                     <p>This example defines the font size for the <el>strong</el> element so that its text will always be larger than the surrounding text, in whatever context it is used. Assuming that headings and paragraphs use different font sizes, the emphasized words in this example will each be larger than their surrounding text.</p>
                  </description>
                  <code>
strong {font-size: 120%}

...

&lt;h1&gt;Letting the &lt;strong&gt;user&lt;/strong&gt; control text size&lt;/h1&gt;
&lt;p&gt;Since only the user can know what size text works for him, 
it is &lt;strong&gt;very&lt;/strong&gt; important to let him configure the text size.  
…</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/fonts.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Cascading Style Sheets, Level 2 (CSS2), Fonts</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/fonts.html#font-size-props"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2 Font Size Property</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://css-discuss.incutio.com/?page=UsingPercentages"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS-Discuss Font Size Using Percentages</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C13"/>
               <relatedtech idref="C14"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine all CSS properties that define font size for each rule set.</p>
                     </item>
                     <item>
                        <p>Check that the value is a percentage.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C13">
            <short-name>Using named font sizes</short-name>
            <applicability>
               <p>CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="7-">
                  <p>When font size is given in absolute units of measurement, such as points or pixels, the Text Size menu commands in Internet Explorer 7 and earlier do not resize the text.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to specify a named font size that expresses the relative font size desired. These values provide hints so that the user agent can choose a font-size relative to the inherited font-size.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Named font sizes in CSS</head>
                  <description>
                     <p>This example selects a larger font size for <el>strong</el> elements so that their text will always be larger than the surrounding text, in whatever context they are used. Assuming that headings and paragraphs use different font sizes, the emphasized words in this example will each be larger than their surrounding text.</p>
                  </description>
                  <code>
strong {font-size: larger}

...

&lt;h1&gt;Letting the &lt;strong&gt;user&lt;/strong&gt; control text size&lt;/h1&gt;
&lt;p&gt;Since only the user can know what size text works for him, 
it is &lt;strong&gt;very&lt;/strong&gt; important to let him configure the text size.  
…</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/fonts.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Cascading Style Sheets, Level 2 (CSS2), Fonts</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/fonts.html#font-size-props"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2 Font Size Property</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://css-discuss.incutio.com/?page=UsingKeywords"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS-Discuss Font Size Using Keywords</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C12"/>
               <relatedtech idref="C14"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine all CSS properties that define font size of the CSS rule set.</p>
                     </item>
                     <item>
                        <p>Check that the value is one of <code>xx-small</code>, <code>xx-small</code>, <code>x-small</code>, <code>small</code>, <code>medium</code>, <code>large</code>, <code>x-large</code>, <code>xx-large</code>, <code>xsmaller</code>, or <code>larger</code>.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C14">
            <short-name>Using em units for font sizes</short-name>
            <applicability>
               <p>CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="6">
                  <p>In Internet Explorer 6, using ems for font sizes will cause the text to grow more than using % or named font sizes. So, text-size/largest, might cause the text to grow more than 200% and have clipping problems.</p>
               </ua-issue>
               <ua-issue name="IE" version="7-">
                  <p>When font size is given in absolute units of measurement, such as points or pixels, the Text Size menu commands in Internet Explorer 7 and earlier do not resize the text.</p>
               </ua-issue>
               <ua-issue name="IE" version="7">
                  <p>Internet Explorer 7 only changes the text size when the CSS is defined in a style element, keyed off an element as in the examples. When using inline style with the "style" attribute, the text size change is not supported.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to specify text font size in <code>em</code> units so that user agents can scale content effectively. Since the em is a property of the font, it scales as the font changes size. If a font-size is specified for the <el>body</el> element, all other elements inherit that value, unless overridden by a more specific selector.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Em font sizes in CSS</head>
                  <description>
                     <p>This example defines the font size for <code>strong</code> element so that its text will always be larger than the surrounding text, in whatever context it is used. Assuming that headings and paragraphs use different font sizes, the strong words in this example will each be larger than their surrounding text.</p>
                  </description>
                  <code>
strong {font-size: 1.6em}

...

&lt;h1&gt;Letting the &lt;strong&gt;user&lt;/strong&gt; control text size&lt;/h1&gt;
&lt;p&gt;Since only the user can know what size text works for him, 
it is &lt;strong&gt;very&lt;/strong&gt; important to let him configure the text size.  &lt;/p&gt;
…</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/fonts.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Cascading Style Sheets, Level 2 (CSS2), Fonts</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/fonts.html#font-size-props"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2 Font Size Property</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://css-discuss.incutio.com/?page=UsingEms"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS-Discuss Font Size Using Ems</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C12"/>
               <relatedtech idref="C13"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine all CSS properties that define font size for each rule set.</p>
                     </item>
                     <item>
                        <p>Check that the value is expressed in <code>em</code> units.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C15" diff="chg"><!-- This technique was combined with C16 --><short-name>Using CSS to change the presentation of a user interface component when it receives focus</short-name>
            <applicability>
               <p>CSS, HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Internet Explorer 6.0 and earlier versions for Windows do not support dynamic pseudo-classes for any elements except hyperlinks. Internet Explorer 7 does not support :focus styles for elements other than hyperlinks. Include the :active CSS pseudo class to achieve the same effect as :focus in Internet Explorer for (X)HTML links (a element). </p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>Firefox 1.5, Firefox 2.0 and SeaMonkey 1.1 for Windows support dynamic pseudo-classes for text input fields, text areas, radio buttons, check boxes, select elements, submit/reset buttons, and button elements. However, setting different colors or borders when a radio button or a check box receives focus is not supported. </p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>Opera 9.02 for Windows supports dynamic pseudo-classes for text input fields, text areas, radio buttons, check boxes, select elements, submit/reset buttons, but not for button elements. </p>
               </ua-issue>
               <ua-issue name="" version="">
                  <p>Firefox 2.0, Opera 9.02 and SeaMonkey 1.1 for Windows also support adjacent sibling selectors for form labels. Firefox 1.5, Internet Explorer 6.0 and earlier versions for Windows do not support adjacent sibling selectors for form labels. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p diff="chg">The objective of this technique is to demonstrate how visual appearance may be enhanced via style sheets to provide visual feedback when an interactive element has focus or when a user hovers over it using a pointing device. Highlighting the element that has focus or is hovered over can provide information such as the fact that the element is interactive or the scope of the interactive element. </p>
               <p diff="add">Providing visual feedback may be possible through more than one mode. Usually, it is attained through using a mouse to hover over the element or a keyboard to tab to the element. </p>
            </description>
            <examples>
               <eg-group diff="add">
                  <head>Link elements</head>
                  <description>
                     <p>In this example, mouse and keyboard focus indicators have been applied to the link elements. CSS has been used to apply a background color when the link elements receive focus. </p>
                     <p>Here is the content to be displayed:</p>
                  </description>
                  <code role="xhtml">
&lt;ul id="mainnav"&gt;
  &lt;li class="page_item"&gt;Home&lt;/li&gt;
  &lt;li class="page_item"&gt;&lt;a href="/services"&gt;Services&lt;/a&gt;&lt;/li&gt;
  &lt;li class="page_item"&gt;&lt;a href="/projects"&gt;Projects&lt;/a&gt;&lt;/li&gt;
  &lt;li class="page_item"&gt;&lt;a href="/demos"&gt;Demos&lt;/a&gt;&lt;/li&gt;
  &lt;li class="page_item"&gt;&lt;a href="/about-us"&gt;About us&lt;/a&gt;&lt;/li&gt;
  &lt;li class="page_item"&gt;&lt;a href="/contact-us"&gt;Contact us&lt;/a&gt;&lt;/li&gt;
  &lt;li class="page_item"&gt;&lt;a href="/links"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</code>
                  <description>
                     <p>Here is the CSS that changes the background color for the above elements when they receive mouse or keyboard focus:</p>
                  </description>
                  <code role="css">
#mainnav a:hover, #mainnav a:active, #mainnav a:focus {
  background-color: #DCFFFF;
  color:#000066;
}</code>
               </eg-group>
               <eg-group>
                  <head>Highlighting elements that receive focus</head>
                  <description>
                     <p>In this example, the :focus pseudo-class is used to change the style applied to input fields when they receive focus by changing the background color. </p>
                  </description>
                  <code role="xhtml">
&lt;html&gt;
  &lt;head&gt;
    &lt;style type="text/css"&gt;
      input.text:focus {
        background-color: #7FFF00; color: #000;
      }
      input[type=checkbox]:focus + label, input[type=radio]:focus + label {
        background-color: #FF6: color: #000; 
      }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;form method="post" action="form.php"&gt;
      &lt;p&gt;&lt;label for="fname"&gt;Name: &lt;/label&gt;
        &lt;input class="text" type="text" name="fname" id="fname" /&gt;
      &lt;/p&gt;
      &lt;p&gt;
        &lt;input type="radio" name="sex" value="male" id="sm" /&gt; &lt;label for="sm"&gt;Male&lt;/label&gt;&lt;br /&gt;
        &lt;input type="radio" name="sex" value="female" id="sf" /&gt; &lt;label for="sf"&gt;Female&lt;/label&gt;
      &lt;p&gt;
    &lt;/form&gt;
  &lt;/body&gt;
&lt;/html&gt;

            </code>
               </eg-group>
               <eg-group diff="del">
                  <head>Displaying an outline around the element that receives focus</head>
                  <description>
                     <p>In this example, the :focus pseudo-class is used to apply a highly visible yellow border around links that receive focus. Use of the "outline" property instead of the "border" property ensures that the border will not perturb the page layout, since outlines are drawn on a separate layer.</p>
                  </description>
                  <code role="xhtml">&lt;html&gt;
  &lt;head&gt;
    &lt;style type="text/css"&gt;
      a:focus {
        outline: medium solid yellow;
      }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;The &lt;a href="#"&gt;link in this paragraph&lt;/a&gt; will have a yellow
    border when it receives the focus.&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/selector.html#dynamic-pseudo-classes"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2.0: 5.11.3 The dynamic pseudo-classes: :hover, :active, and :focus</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/CSS2/selector.html#adjacent-selectors"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2.0: 5.7 Adjacent sibling selectors</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure diff="chg">
                  <p diff="add">For each element able to attain focus: </p>
                  <olist diff="add">
                     <item>
                        <p>Using a mouse, hover over the element. </p>
                     </item>
                     <item>
                        <p>Check that the background or border changes color. </p>
                     </item>
                     <item>
                        <p>Move the mouse away from the object before attempting keyboard focus. </p>
                     </item>
                     <item>
                        <p>Using a keyboard, tab to the element.</p>
                     </item>
                     <item>
                        <p>Check that the background or border changes color.</p>
                     </item>
                     <item>
                        <p>Check that the background or border changes in color are removed when the element loses focus.</p>
                     </item>
                  </olist>
                  <p diff="del">For each control or form label that is styled using the CSS :focus pseudo-class:</p>
                  <olist diff="del">
                     <item>
                        <p>Check whether the styling indicates that the control has focus when it receives focus</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p diff="chg">Checks #3, #5 and #6 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C16" diff="del"><!-- this one was created and then later combined with C15 --><short-name>Changing the background color or border of the element with hover and focus</short-name>
            <applicability>
               <p>(X)HTML, CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="">
                  <p>Internet Explorer does not support the :focus CSS pseudo class. Include the :active CSS pseudo class to achieve the same effect as :focus in Internet Explorer for (X)HTML links (a element). </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate how visual appearance may be enhanced via style sheets to provide visual feedback when an interactive element has focus or when a user hovers over it using a pointing device. Highlighting the element that has focus or is hovered over can provide information such as the fact that the element is interactive or the scope of the interactive element.</p>
               <p>Providing visual feedback may be possible through more than one mode. Usually, it is attained through using a mouse to hover over the element or a keyboard to tab to the element.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Link elements</head>
                  <description>
                     <p>In this example, mouse and keyboard focus indicators have been applied to the link elements. CSS has been used to apply a background color when the link elements receive focus.</p>
                     <p>Here is the content to be displayed:</p>
                  </description>
                  <code role="xhtml">&lt;ul id="mainnav"&gt;
 &lt;li class="page_item"&gt;Home&lt;/li&gt;
 &lt;li class="page_item"&gt;&lt;a href="/services"&gt;Services&lt;/a&gt;&lt;/li&gt;
 &lt;li class="page_item"&gt;&lt;a href="/projects"&gt;Projects&lt;/a&gt;&lt;/li&gt;
 &lt;li class="page_item"&gt;&lt;a href="/demos"&gt;Demos&lt;/a&gt;&lt;/li&gt;
 &lt;li class="page_item"&gt;&lt;a href="/about-us"&gt;About us&lt;/a&gt;&lt;/li&gt;
 &lt;li class="page_item"&gt;&lt;a href="/contact-us"&gt;Contact us&lt;/a&gt;&lt;/li&gt;
 &lt;li class="page_item"&gt;&lt;a href="/links"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</code>
                  <description>
                     <p>Here is the CSS that changes the background color for the above elements when they receive mouse or keyboard focus:</p>
                  </description>
                  <code role="css">#mainnav a:hover, #mainnav a:active, #mainnav a:focus {
  background-color: #DCFFFF;
  color:#000066;
}</code>
               </eg-group>
               <eg-group>
                  <head>Input elements</head>
                  <description>
                     <p>In this example, mouse and keyboard focus indicators have been applied to the form input element. CSS has been used to apply a background color and border when the input element receives focus.</p>
                     <p>Here is the content to be displayed:</p>
                  </description>
                  <code role="xhtml">&lt;input type="text" size="20" id="search" name="searchtext"/&gt;</code>
                  <description>
                     <p>Here is the CSS that changes the background color and border for the above input element when it receives mouse or keyboard focus:</p>
                  </description>
                  <code role="css">input:hover, input:focus {
 background-color: #FEFF7F;
 border: 1px solid #FF0000;
 color:#000000;
}</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each element able to attain focus:</p>
                  <olist>
                     <item>
                        <p>Using a mouse, hover over the element</p>
                     </item>
                     <item>
                        <p>Check that the background or border changes color</p>
                     </item>
                     <item>
                        <p>Move the mouse away from the object before atempting keyboard focus.</p>
                     </item>
                     <item>
                        <p>Using a keyboard, tab to the element </p>
                     </item>
                     <item>
                        <p>Check that the background or border changes color</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 and #5 are true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C17">
            <short-name>Scaling form elements which contain text</short-name>
            <applicability>
               <p>(X)HTML, CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure text-based form controls resize when text size is changed in the user agent. This will allow users to enter text and read what they have entered in input boxes because the text is displayed at the size required by the user.</p>
               <p>Text-based form controls include input boxes (text and textarea) as well as buttons.</p>
            </description>
            <examples>
               <eg-group>
                  <head>A Contact Form</head>
                  <description>
                     <p>A Contact Us form has some introductory information and then form controls for users to enter their first name, last name, telephone number and email address. All of the text and form controls have been implemented in a scalable way. This includes specifying a font size for the form controls themselves because the font size is not inherited in Internet Explorer.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code role="xhtml">&lt;h1&gt;Contact Us&lt;/h1&gt;
&lt;p&gt;Please provide us with your details and we will contact you as soon as we can. Note that all of the form fields are required.&lt;/p&gt;
&lt;label for="fname"&gt;First Name&lt;/label&gt;&lt;input type="text" name="fname" id="fname" /&gt;&lt;br /&gt;
&lt;label for="lname"&gt;Last Name&lt;/label&gt;&lt;input type="text" name="lname" id="lname" /&gt;&lt;br /&gt;
&lt;label for="phone"&gt;Telephone&lt;/label&gt;&lt;input type="text" name="phone" id="phone" /&gt;&lt;br /&gt;
&lt;label for="email"&gt;Email&lt;/label&gt;&lt;input type="text" name="email" id="email" /&gt;&lt;br /&gt;
&lt;input type="submit" name="Submit" value="Submit" id="Submit" /&gt;</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code role="css">h1 { font-size: 2em; }
            p, label, input { font-size: 1em; }</code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="input-resize.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Example of resizing input with CSS</loc>.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Radio button</head>
                  <description>
                     <p>This example works in IE with its text size feature. However, it doesn't scale in Firefox 2.0.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code role="xhtml">&lt;input type="radio" name="r1" value="r1" id="r1" class="geomsize" /&gt;
&lt;input type="checkbox" name="c1" id="c1" value="c1" class="geomsize" /&gt;</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code role="css">input.geomsize {
width: 1.2em;
height: 1.2em;}</code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="radio-checkbox-resize.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Example of resizing radio buttons and checkboxes with CSS</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Enter some text into text-based form controls that receive user entered text.</p>
                     </item>
                     <item>
                        <p>Increase the text size of the content by 200%.</p>
                     </item>
                     <item>
                        <p>Check that the text in text-based form controls has increased by 200%.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#3 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C18">
            <short-name>Using CSS margin and padding rules instead of spacer images for layout design</short-name>
            <applicability>
               <p>All technologies that support CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="6+">
                  <p>On the Microsoft Windows platform, Internet Explorer 5, Internet Explorer 5.5, Internet Explorer 6.0 in "quirks mode" and Internet Explorer 7 in "quirks mode" use a box model that deviates from the W3C CSS specification: in these browser versions, right and left padding, and right and left borders do not increase the total width of an element, so the space for the content inside such an element will be narrower. (This behavior is known as the "box model bug".) Internet Explorer 5.5 on Mac OS, and Internet Explorer 6 and 7 on Windows in "standards compliant mode" use the box model defined in the W3C CSS specification.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>Web designers sometimes use spacer images (usually 1x1 pixel, transparent GIFs) for better control over layout, for example in tables or to indent a paragraph. However, Cascading Style Sheets (CSS) allow sufficient control over layout to replace spacer images. The CSS properties for margins and padding can be used on their own or in combination to control the layout. The margin properties ('margin-top', 'margin-right', 'margin-bottom', 'margin-left', and the shorthand 'margin') can be used on any element that is displayed as a block; they add space at the outside of an element. The padding properties ('padding-top', 'padding-right', 'padding-bottom', 'padding-left', and the shorthand 'padding') can be used on any element; they add space inside the element.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following example consists of two parts: the CSS code, which specifies a margin on all sides of the table, and padding for the table cells; and the HTML code for the table, which does not contain spacer images and is not nested inside another table.</p>
                  </description>
                  <code role="xhtml">
              
              table { margin: .5em; border-collapse: collapse; } 
              td, th { padding: .4em; border: 1px solid #000; }
            
            ...
            
              &lt;table summary="Titles, authors and publication dates of books in Web development category"&gt;
                &lt;caption&gt;Books in the category 'Web development'&lt;/caption&gt;
                &lt;thead&gt;
                  &lt;tr&gt;
                    &lt;th&gt;Title&lt;/th&gt;
                    &lt;th&gt;Author&lt;/th&gt;
                    &lt;th&gt;Date&lt;/th&gt;
                  &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                  &lt;tr&gt;
                    &lt;td&gt;How to Think Straight About Web Standards&lt;/td&gt;
                    &lt;td&gt;Andrew Stanovich&lt;/td&gt;
                    &lt;td&gt;1 April 2007&lt;/td&gt;
                  &lt;/tr&gt;
                &lt;/tbody&gt;
              &lt;/table&gt;
            
            </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1998/REC-CSS2-19980512/box.html#margin-properties"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Margin properties: 'margin-top', 'margin-right', 'margin-bottom', 'margin-left', and 'margin' in the CSS2 specification</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/1998/REC-CSS2-19980512/box.html#padding-properties"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Padding properties: 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', and 'padding' in the CSS2 specification</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://veerle.duoh.com/blog/comments/a_css_styled_table_version_2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">A CSS styled table version 2</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://en.wikipedia.org/wiki/Internet_Explorer_box_model_bug"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">IE box model bug</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.456bereastreet.com/archive/200612/internet_explorer_and_the_css_box_model/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Internet Explorer and the CSS box model </loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests/>
         </technique>
         <technique id="C19">
            <short-name>Specifying alignment either to the left OR right in CSS</short-name>
            <applicability>
               <p>All technologies that support CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>This technique describes how to align blocks of text either left or right by setting the CSS <code>text-align</code> property.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>In the following example, text is aligned left. In the style sheet, define the class:</p>
                  </description>
                  <code>p.left {text-align: left}</code>
                  <description>
                     <p>In the content call the up the class.</p>
                  </description>
                  <code>&lt;p class="left"&gt; Lorem ipsum dolor sit …&lt;/p&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>In the following example, text is aligned right.</p>
                  </description>
                  <code>p.right {text-align: right}</code>
                  <description>
                     <p>In the content call the up the class.</p>
                  </description>
                  <code>&lt;p class="right"&gt; Lorem ipsum dolor sit …&lt;/p&gt;</code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the text is aligned either left or right.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C20">
            <short-name>Using relative measurements to set column widths so that lines can average 80 characters or less when the browser is resized</short-name>
            <applicability>
               <p>CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to ensure that CSS is used in a way that allows users to view content in such a way that line length can average 80 characters or less. This makes it possible for users with certain reading or vision disabilities that have trouble keeping their place when reading long lines of text to view and interact with the content more efficiently. This technique also allows for column width to grow wider as font sizes increase, which will reduce the possibility of clipping as the text size increases..</p>
               <p>
            Note that this technique does not require authors to use CSS to limit the width of lines of text to less than 80 characters in the default view. Rather, the recommendation to use relative measurements in CSS layouts helps to ensure that authors do not set column widths in such a way that makes it impossible for users to view content with line lengths of 80 characters or less. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>In this example the <el>div</el> width is set in ems in the stylesheet.</p>
                     <note>
                        <p>The CSS property <code>max-width</code> is not supported in versions of Internet Explorer 6 and below.</p>
                     </note>
                  </description>
                  <code>#main_content {max-width: 70em}</code>
                  <description>
                     <p>And the text block would be placed inside the <el>div</el> in the content</p>
                  </description>
                  <code>
&lt;div id="main_content"&gt; 
  &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing ...&lt;/p&gt;
&lt;/div&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>In this example the <el>div</el> width is set in percent in the stylesheet</p>
                  </description>
                  <code>#main_content {width: 90%}</code>
                  <description>
                     <p>And the text block would be placed inside the <el>div</el> in the content</p>
                  </description>
                  <code>
&lt;div id="main_content"&gt; 
  &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing ...&lt;/p&gt;
&lt;/div&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/box.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2 Box Model</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/visuren.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2 Visual formatting Model</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/visudet.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2 Visual formatting Model Details</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://css-discuss.incutio.com/?page=CssLayouts"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CssLayouts</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.456bereastreet.com/archive/200504/about_fluid_and_fixed_width_layouts/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">About fluid and fixed width layouts</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://cookiecrook.com/AIR/2003/train/accessiblecss.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible CSS</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.maxdesign.com.au/presentation/em/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Ideal line length for content</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Test to see that the columns are defined in relative units.</p>
                     </item>
                     <item>
                        <p>Check to see that line length can be set to 80 characters or less by resizing the browser window.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1 and #2 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C21">
            <short-name>Specifying line spacing in CSS</short-name>
            <applicability>
               <p>All technologies that support CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>Many people with cognitive disabilities have trouble tracking lines of text when a block of text is single spaced. Providing spacing between 1.5 to 2 allows them to start a new line more easily once they have finished the previous one.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>Setting the element to 1.5 line height. In the style sheet set the characteristics of the element.</p>
                  </description>
                  <code>p { line-height: 150%; }</code>
                  <description>
                     <p>In the content the element will now be 1.5 line height, throughout the document.</p>
                  </description>
                  <code>&lt;p&gt; Lorem ipsum dolor sit …  &lt;/p&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Setting a class to 1.5 line height. In the stylesheet, define the class.</p>
                  </description>
                  <code>p.tall {line-height:150%}</code>
                  <description>
                     <p>In the content, call up the class.</p>
                  </description>
                  <code>&lt;p class="tall"&gt; Lorem ipsum dolor sit …  &lt;/p&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Setting a class to double-spaced line height. In the stylesheet, define the class.</p>
                  </description>
                  <code>p.tall {line-height:200%}</code>
                  <description>
                     <p>In the content, call up the class.</p>
                  </description>
                  <code>&lt;p class="tall"&gt; Lorem ipsum dolor sit …  &lt;/p&gt;</code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open content in a browser.</p>
                     </item>
                     <item>
                        <p>Check that the spacing between lines in blocks of text is between 1.5 and 2.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Test Procedure #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C22" diff="add">
            <short-name>Using CSS to control visual presentation of text</short-name>
            <applicability>
               <p>All technologies that support CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="visual-audio-contrast-scale"/>
               <success-criterion idref="visual-audio-contrast-text-presentation"/>
               <success-criterion idref="visual-audio-contrast-text-images"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to demonstrate how CSS can be used to control the visual presentation of text. This will allow users to modify, via the user agent, the visual characteristics of the text to meet their requirement. The text characteristics include aspects such as size, color, font family and relative placement.</p>
               <p>CSS benefits accessibility primarily by separating document structure from presentation. Style sheets were designed to allow precise control - outside of markup - of character spacing, text alignment, object position on the page, audio and speech output, font characteristics, etc. By separating style from markup, authors can simplify and clean up the markup in their content, making it more accessible at the same time.</p>
               <p>Text within images has several accessibility problems, including the inability to:</p>
               <ulist>
                  <item>
                     <p>be scaled according to settings in the browser</p>
                  </item>
                  <item>
                     <p>be displayed in colors specified by settings in the browser or rules in user-defined style sheets</p>
                  </item>
                  <item>
                     <p>honor operating system settings, such as high contrast</p>
                  </item>
               </ulist>
               <p>It is better to use real text for the text portion of these elements, and a combination of semantic markup and style sheets to create the appropriate visual presentation. For this to work effectively, choose fonts that are likely to be available on the user's system and define fallback fonts for users who may not have the first font that is specified. Newer machines and user agents often smooth or anti-alias all text, so it is likely that your headings and buttons will look nice on these systems without resorting to images of text.</p>
               <p>The following CSS properties are useful to style text and avoid the need for text in images:</p>
               <ulist>
                  <item>
                     <p>The <code>font-family</code> property is used to display the code aspect in a monospace font family.</p>
                  </item>
                  <item>
                     <p>The <code>text-align</code> property is used to display the text to the right of the viewport.</p>
                  </item>
                  <item>
                     <p>The <code>font-size</code> property is used to display the text in a larger size.</p>
                  </item>
                  <item>
                     <p>The <code>font-style</code> property is used to display text in italics.</p>
                  </item>
                  <item>
                     <p>The <code>font-weight</code> property is used to set how thick or thin characters in text should be displayed.</p>
                  </item>
                  <item>
                     <p>The <code>color</code> property is used to display the color of text or text containers.</p>
                  </item>
                  <item>
                     <p>The <code>line-height</code> property is used to display the line height for a block of text.</p>
                  </item>
                  <item>
                     <p>The <code>text-transform</code> property is used to control the case of letters in text.</p>
                  </item>
                  <item>
                     <p>The <code>letter-spacing</code> property is used to control the spacing of letters in text.</p>
                  </item>
                  <item>
                     <p>The <code>background-image</code> property can be used to display text on a non-text background.</p>
                  </item>
                  <item>
                     <p>The <code>first-line</code> pseudo class can be used to modify the presentation of the first line in a block of text.</p>
                  </item>
                  <item>
                     <p>The <code>:first-letter</code> pseudo class can be used to modify the presentation of the first letter in a block of text.</p>
                  </item>
                  <item>
                     <p>The <code>:before</code> and <code>:after</code> pseudo classes can be used to insert decorative non-text content before or after blocks of text.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>Using CSS font-family to control the font family for text</head>
                  <description>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p&gt;The Javascript method to convert a string to uppercase is &lt;code&gt;toUpperCase()&lt;/code&gt;.&lt;/p&gt;
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
code { font-family:"Courier New", Courier, monospace }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS text-align to control the placement (alignment) of text</head>
                  <description>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p class="right"&gt;This text should be to the right of the viewport.&lt;/p&gt;  
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.right { text-align: right; }
</code>
               </eg-group>
               <eg-group>
                  <head> Using CSS font-size to control the size of text</head>
                  <description>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p&gt;09 &lt;strong class="largersize"&gt;March&lt;/strong&gt; 2008&lt;/p&gt;  
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
strong.largersize { font-size: 1.5em; }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS color to control the color of text</head>
                  <description>
                     <note>
                        <p>The style used in this example is not used to convey information, structure or relationships.</p>
                     </note>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p&gt;09 &lt;em class="highlight"&gt;March&lt;/em&gt; 2008&lt;/p&gt;  
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.highlight{ color: red; }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS font-style to italicize text</head>
                  <description>
                     <note>
                        <p>The style used in this example is not used to convey information, structure or relationships.</p>
                     </note>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p&gt;The article is available in the &lt;a href="http://www.example.com" class="featuredsite"&gt;Endocrinology 
Blog&lt;/a&gt;.&lt;/p&gt;
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.featuredsite{ font-style:italic; }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS font-weight to control the font weight of the text</head>
                  <description>
                     <note>
                        <p>The style used in this example is not used to convey information, structure or relationships.</p>
                     </note>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p&gt;This deal is available &lt;span class="highlight"&gt;now!&lt;/span&gt;&lt;/p&gt; 
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.highlight { font-weight:bold; color:#990000; }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS text-transform to control the case of text</head>
                  <description>
                     <note>
                        <p>The style used in this example is not used to convey information, structure or relationships.</p>
                     </note>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p&gt;09 &lt;span class="caps"&gt;March&lt;/span&gt; 2008&lt;/p&gt;  
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.caps { text-transform:uppercase; }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS line-height to control spacing between lines of text</head>
                  <description>
                     <p>The CSS <code>line-height</code> property is used to display the line height for the paragraph at twice the height of the font.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p&gt;Concern for man and his fate must always form the&lt;br /&gt;  
chief interest of all technical endeavors. &lt;br /&gt;
Never forget this in the  midst of your diagrams and equations. &lt;/p&gt;
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
p { line-height:2em; }
</code>
                  <description>
                     <p>The CSS <code>line-height</code> property is used to display the line height for the text at less than the height of the font. The second line of text is positioned after the first line of text and visually appears as though the text is part of the first line but dropped a little.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;h1 class="overlap"&gt;&lt;span class="upper"&gt;News&lt;/span&gt;&lt;br /&gt;
&lt;span class="byline"&gt;today&lt;/span&gt;&lt;/h1&gt;
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.overlap { line-height:0.2em;  }
.upper { text-transform:uppercase; }
.byline { color:red; font-style:italic; font-weight:bold; padding-left:3em; }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS letter-spacing to space text</head>
                  <description>
                     <p>The CSS <code>letter-spacing</code> property is used to display the letters closer together in the second line of text.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;h1 class="overlap"&gt;&lt;span class="upper"&gt;News&lt;/span&gt;&lt;br /&gt;
&lt;span class="byline"&gt;today&lt;/span&gt;&lt;/h1&gt;
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.overlap { line-height:0.2em;  }
.upper { text-transform:uppercase; }
.byline { color:red; font-style:italic; font-weight:bold; padding-left:3em; letter-spacing:-0.1em; }
</code>
                  <description>
                     <p>The CSS <code>letter-spacing</code> property is used to display the letters closer together in the second line of text.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;h1 class="upper2"&gt;News&lt;/h1&gt;
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.upper2 { text-transform:uppercase; letter-spacing:1em; }
</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS background-image to layer text and images</head>
                  <description>
                     <p>The CSS <code>font-style</code> property is used to display the textual component of a banner and <code>background-image</code> property is used to display a picture behind the text.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;div id="banner"&gt;&lt;span id="bannerstyle1"&gt;Welcome&lt;/span&gt; 
&lt;span id="bannerstyle2"&gt;to your local city council&lt;/span&gt;&lt;/div&gt;
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
#banner { 
  color:white; 
  background-image:url(banner-bg.gif); 
  background-repeat:no-repeat; 
  background-color:#003399; 
  width:29em; 
}

#bannerstyle1 { 
  text-transform:uppercase; 
  font-weight:bold; 
  font-size:2.5em;
}

#bannerstyle2 { 
  font-style:italic; 
  font-weight:bold; 
  letter-spacing:-0.1em;
  font-size:1.5em; 
}</code>
               </eg-group>
               <eg-group>
                  <head>Using CSS first-line to control the presentation of the first line of text</head>
                  <description>
                     <p>The CSS <code>:first-lin</code>e pseudo class is used to display the first line of text in a larger, red font.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p class="startline"&gt;Once upon a time...&lt;br /&gt;
...in a land far, far away...  &lt;/p&gt;  
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.startline:first-line { font-size:2em; color:#990000; }
</code>
               </eg-group>
               <eg-group>
                  <head> Using CSS first-letter to control the presentation of the first letter of text</head>
                  <description>
                     <p>The CSS <code>:first-letter</code> pseudo class is used to display the first letter in a larger font size, red and vertically aligned in the middle.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code>
&lt;p class="startletter"&gt;Once upon a time...&lt;/p&gt;  
</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code>
.startletter:first-letter { font-size:2em; color:#990000; vertical-align:middle; }
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/CSS21/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS2.1 Specification</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/Style/CSS/learning"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Learning CSS</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/CSS-access"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS and Accessibility</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C8"/>
               <relatedtech idref="C12"/>
               <relatedtech idref="C13"/>
               <relatedtech idref="C14"/>
               <relatedtech idref="C21"/>
               <!-- @@ Calculating size and position in a way that scales with text size (future technique) --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check whether CSS properties were used to control the visual presentation of text </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C23" diff="add">
            <short-name>Specifying text and background colors of secondary content such as banners, features and navigation in CSS while not specifying text and background colors of the main content</short-name>
            <applicability>
               <p>Pages that use CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="general" version="">
                  <p>Most browsers allow the user to change the color settings to override the Web page's CSS and HTML color schemes. This is supported by all versions of Internet Explorer, Firefox, Mozilla, Netscape, and Opera after version 6. </p>
               </ua-issue>
               <ua-issue name="firefox" version="all">
                  <p>When specified colors are overridden in Firefox and Netscape, most Javascript pop-up boxes and drop-down menus become unusable. Pop-up boxes gain a transparent background, superimposing the text of the box on the text of the page, and drop-down menus either become transparent or gain a dark-grey background. </p>
               </ua-issue>
               <ua-issue name="IE" version="6">
                  <p>Internet Explorer 6 will not override background colors unless the same background color has also been selected in the system settings. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>Some Web pages use colors to identify different groupings. The objective of this technique is to allow users to select specific color combinations for the text and background of the main content while retaining visual clues to the groupings and organization of the web page. When a user overrides the foreground and background colors of all the text on a page, visual clues to the grouping and organization of the Web page may be lost, making it much more difficult to understand and use. </p>
               <p>When an author does not specify the colors of the text and background of the main content, it is possible to change the colors of those regions in the browser without the need to override the colors with a user style sheet. Specifying the text and background colors of secondary content means that the browser will not override those colors.</p>
               <p>With this technique the author uses the default text color and background color of the main area. As a result the colors are completely determined by the user agent via the user's color preferences. The user can ensure that the color selection best meets his needs and provides the best reading experience. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>An HTML Web page uses CSS to specify the text and background colors of all secondary content such as navigation bars, menu bars, and the table of contents. Neither the text color nor background of the main content is specified. The user sets their own color preferences in the browser so that they view the main content in colors and contrasts that work well for them. The distinction between the separate sections of the page are still visually obvious. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A music magazine has an article that is blue text on a white background. The site provides a link near the beginning of the page which assigns a different style sheet to the page. The new style sheet does not have any colors specified for the text or background.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.bbc.co.uk/accessibility/win/seeing/colour/browser/sub_3.shtml"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BBC's Web page with instructions how to change the browser colors in most browsers</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G148"/>
               <relatedtech idref="G156"/>
               <!--  @@Specifying borders and layout in CSS to delineate areas of a Web page while not specifying text and text-background colors
              Providing a multi color selection tool on the page for foreground and background colors (future Link) --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Change the text, link and background colors in the browser settings so they are different from the default color and different from those specified in the secondary content.</p>
                        <note>
                           <p>Do not select the option that tells the browser to ignore the colors specified in the page. </p>
                        </note>
                     </item>
                     <item>
                        <p>Check that the main content uses the new text, link and background colors. </p>
                     </item>
                     <item>
                        <p>Check that the colors of the text, links and backgrounds in the secondary content has not changed. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C24" diff="add">
            <short-name>Using percentage values in CSS for container sizes</short-name>
            <applicability>
               <p>Pages that use CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to make it possible for users who need to increase the size of text in order to read it will not have to scroll horizontally in order to read a line of text. To use this technique, an author specifies the width of text containers using percent values. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A newspaper has content in the middle of the window. The width of the container for the content is specified in page percentages, so that when a person with low vision increases the font size the text reflows inside the browser window at the new size and there is no need to scroll horizontally. </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C20"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that all container widths are specified as percentage values. </p>
                     </item>
                     <item>
                        <p>Increase the text size to 200%. </p>
                     </item>
                     <item>
                        <p>Check to make sure that horizontal scrolling is not required to read any line of text. </p>
                     </item>
                     <item>
                        <p>Check that all text is still visible on the page. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1, #3, and #4 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C25" diff="add">
            <short-name>Specifying borders and layout in CSS to delineate areas of a Web page while not specifying text and text-background colors</short-name>
            <applicability>
               <p>Pages that use CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>The intent of this technique is to specify borders and layout using CSS and leave text and background colors to render according to the user's browser and/or operating system settings. This allows users to view the text in the colors they require while maintaining other aspects of the layout and page design such as columns of text, borders around sections or vertical lines between a menu and main content area. It will also prevent some display issues in some browsers when pages contain Javascript pop-up boxes or drop-down menus and have the colors overridden.</p>
               <p>Borders and layout indicators help many people with cognitive disabilities, as does flexibility over the text and background colors. Sometimes these two needs are in conflict when the user has to over-ride the author's color selection of text and background in the browser and the browser also removes the borders and the intended layout. This can mean the page is displayed in a single column with one block of content below the other, which can result in unnecessary whitespace and long lines of text. It can also mean that pop-up boxes gain a transparent background, superimposing the text of the box on the text of the page, and drop-down menus either become transparent or gain a dark-grey background. When a Web author does not specify the colors of any text and background, while specifying border colors and layout, it is possible, in most popular browsers, to change the text and background colors without affecting the other (author-specified) CSS declarations. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A Web page is designed using HTML. CSS is used to specify border colors around discrete areas of the page and to layout the content so that the menu floats to the left of the main content area. Neither the text color nor background is specified. The user sets their own colors in the browser. They can view the page in colors and contrasts that work well for them without disrupting the layout. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.bbc.co.uk/accessibility/win/seeing/colour/browser/sub_3.shtml"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">BBC's Web page with instructions how to change the browser colors in most browsers</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G17"/>
               <relatedtech idref="G18"/>
               <relatedtech idref="G145"/>
               <relatedtech idref="G148"/>
               <relatedtech idref="G156"/>
               <relatedtech idref="C23"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the Web page in a browser that allows users to change colors of HTML content. </p>
                     </item>
                     <item>
                        <p>Change the text, link and background colors in the browser settings so they are different than those currently set in the browser. </p>
                        <note>
                           <p>Make sure that you do not select the option that tells the browser to ignore the colors specified in the page.</p>
                        </note>
                     </item>
                     <item>
                        <p>Return to the page and check that it is displaying the page in the new text, link and background colors. </p>
                     </item>
                     <item>
                        <p>Check that any borders are still displayed and that the layout is retained. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #3 and Check #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C26" diff="add">
            <short-name>Providing options within the content to switch to a layout that does not require the user to scroll horizontally to read a line of text</short-name>
            <applicability>
               <p>Pages that use CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>There may be situations where an author needs to use a layout that requires horizontal scrolling. In that case, it is sufficient to provide options within the content that switch to a layout that does not require the user to scroll horizontally to read a line of text. This may be achieved using standard style switching technology. </p>
               <p>It should be noted that it is also sufficient to lay out the content in such a way that horizontal scrolling is required to access content, but that it is not necessary to scroll horizontally in order to read a line of text.</p>
               <p>For instance, a spreadsheet that requires horizontal scrolling is acceptable if no horizontal scrolling is necessary for each column individually. (i.e. scrolling is only necessary to see other columns, but not for the left or right edges of each individual column. I find it hard to formulate this in a completely unambiguous way.) </p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <specref ref="C29"/> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A real estate company has an online annual report that has an identical layout to that of their print version, and as such, requires horizontal scrolling to read a line of text. A control is on the page that switches the stylesheet and provides a layout that does not require horizontal scrolling. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A financial spreadsheet is online. It includes text explaining changes in the housing market in January. Off-screen to the right, there is a column with an explanation of changes to the market in September. The user can horizontally scroll to the September area and read each line of text without any further scrolling when the window size is maximized. </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C20"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the content that requires horizontal scrolling on a full screen window. </p>
                     </item>
                     <item>
                        <p>Check that there is an option within the content to switch to a layout that does not require the user to scroll horizontally to read a line of text. </p>
                     </item>
                     <item>
                        <p>Activate the option. </p>
                     </item>
                     <item>
                        <p>Check to make sure that horizontal scrolling is not required to read any line of text. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #4 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C27" diff="add">
            <short-name>Making the DOM order match the visual order</short-name>
            <applicability>
               <p>CSS used with HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that the order of content in the source code is the same as the visual presentation of the content. The order of content in the source code can be changed by the author to any number of visual presentations with CSS. Each order may be meaningful in itself but may cause confusion for assistive technology users. This could be due to the user switching off the author-specified presentation, by accessing the content directly from the source code (such as with a screen reader), or by interacting with the content with a keyboard. If a blind user, who reads the page with a screen reader that follows the source order, is working with a sighted user who reads the page in visual order, they may be confused when they encounter information in different orders. A user with low vision who uses a screen magnifier in combination with a screen reader may be confused when the reading order appears to skip around on the screen. A keyboard user may have trouble predicting where focus will go next when the source order does not match the visual order. </p>
               <p>There may also be situations where the visually presented order is necessary to the overall understanding of the page, and if the source order is presented differently, it may be much more difficult to understand. </p>
               <p>When the source order matches the visual order, everyone will read the content and interact with it in the same (correct) order. </p>
               <note>
                  <p>The <att>tabindex</att> attribute in HTML has two functions. One is to make an element focusable and the other is to assign the element a position in the focus order. A <att>tabindex</att> of 0 makes an element focusable, but adds it to the focus order in the order of source elements. The focus order will follow positive values of tabindex in ascending order. Setting <att>tabindex</att> values that result in an order different from the order of elements in the Document Object Model (DOM) can mean the order is incorrect for users of assistive technologies. This is largely because the tabindex property is specified in the HTML or XHTML and not the CSS. This may change in future specifications. It may also differ from the visual presentation order. </p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An online newspaper has placed a navigation bar visually in the top left corner of the page directly below its initial logo. In the source code, the navigation elements appear after the elements encoding the logo. </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.microsoft.com/downloads/details.aspx?familyid=E59C3964-672D-4511-BB3E-2D5E1DB91038&amp;displaylang=en"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Microsoft Internet Explorer Developer Toolbar</loc>. Allows examination of script-generated DOM in Microsoft Internet Explorer.</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://getfirebug.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Firebug</loc>. Allows examination of script-generated DOM in Firefox.</p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H4"/>
               <relatedtech idref="G57"/>
               <relatedtech idref="G59"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Visually examine the order of the content in the Web page as it is presented to the end user.</p>
                     </item>
                     <item>
                        <p>Examine the elements in the DOM using a tool that allows you to see the DOM. </p>
                     </item>
                     <item>
                        <p>Ensure that the the order of the content in the source code sections match the visual presentation of the content in the Web page. (e.g., for an English language page the order is from top to bottom and from left to right.) " </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Step #3 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C28" diff="add">
            <short-name>Specifying the size of text containers using em units</short-name>
            <applicability>
               <p>CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="6">
                  <p>In Internet Explorer 6, Windows High Contrast Mode will resize percent-based fonts in nested tables to be too large. Firefox and later versions of IE do not resize fonts in High Contrast Mode, and don't have this issue. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to specify the width and/or height of containers, that contain text or that will accept text input, in <code>em</code> units. This will allow user agents that support text resizing to resize the text containers in line with changes in text size settings. </p>
               <p>The width and/or height of text containers that have been specified using other units risk text cropping because it falls outside the container boundaries when the text size has been increased. </p>
               <p>The containers generally control the placement of text within the Web page and can include layout elements, structural elements and form controls. </p>
            </description>
            <examples>
               <eg-group>
                  <head> Em units for sizes for layout container containing text </head>
                  <description>
                     <p>In this example, a <el>div</el> element, with <att>id</att> value of "nav_menu", is used to position the navigation menu along the left-hand side of the main content area of the Web page. The navigation menu consists of a list of text links, with <att>id</att> value of "nav_list." The text size for the navigation links and the width of the container are specified in <code>em</code> units. </p>
                  </description>
                  <code>
#nav_menu { width: 20em; height: 100em }

#nav_list { font-size: 100%; }
</code>
               </eg-group>
               <eg-group>
                  <head>Em units for text-based form controls </head>
                  <description>
                     <p>In this example, <el>input</el> elements that contain text or accept text input by the user have been given the class name "form1." CSS rules are used to define the font size in <code>percent</code> units and width for these elements in <code>em</code> units. This will allow the text within the form control to resize in response to changes in text size settings without being cropped (because the width of the form control itself also resizes according to the font size). </p>
                  </description>
                  <code>
input.form1 { font-size: 100%; width: 15em; }
</code>
               </eg-group>
               <eg-group>
                  <head>Em units in dropdown boxes </head>
                  <description>
                     <p>In this example, <el>select</el> elements have been given the class name "pick." CSS rules are used to define the font size in <code>percent</code> units and width in <code>em</code> units. This will allow the text within the form control to resize in response to changes in text size settings without being cropped. </p>
                  </description>
                  <code>
input.pick { font-size: 100%; width: 10em; }
</code>
               </eg-group>
               <eg-group>
                  <head>Em units for non-text-based form controls </head>
                  <description>
                     <p>In this example, <el>input</el> elements that define checkboxes or radio buttons have been given the class name "choose." CSS rules are used to define the width and height for these elements in em units. This will allow the form control to resize in response to changes in text size settings. </p>
                  </description>
                  <code>
input.choose { width: 1.2em; height: 1.2em; }
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C12"/>
               <relatedtech idref="C14"/>
               <relatedtech idref="C17"/>
               <relatedtech idref="C20"/>
            </related-techniques>
            <tests>
               <procedure>
                  <ulist>
                     <item>
                        <p>Identify containers that contain text or allow text input.</p>
                     </item>
                     <item>
                        <p>Check the container's width and/or height are specified in <code>em</code> units.</p>
                     </item>
                  </ulist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C29" diff="add">
            <short-name>Using a style switcher to provide a conforming alternate version</short-name>
            <applicability>
               <p>CSS used with client-side or server-side scripting. </p>
            </applicability>
            <applies-to>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <description>
               <p>When some aspect of the default presentation of a Web page has does not meet a Success Criterion, it is possible to meet that requirement using the "Alternate Version" clause in the conformance requirements (Conformance Requirement 1). For some requirements, invoking a style switcher via a link or control on the page that can adjust the presentation so that all aspects of the page conform at the level claimed allows authors to avoid having to provide multiple versions of the same information.</p>
               <p>The objective of this technique is to demonstrate how CSS can be used in combination with scripting to provide conforming alternate versions of a Web page. In this technique, an author provides alternative views of the content by providing controls that adjust the CSS that is used to control the visual presentation of content. Controls provided within the Web page allow users to select or modify the presentation in a way that meets the success criterion at the level claimed. This makes it possible for different visual presentations to be selected by users in situations such as the following:</p>
               <ulist>
                  <item>
                     <p>the user may not be able to adjust browser or operating system settings, due to a lack of familiarity or rights </p>
                  </item>
                  <item>
                     <p>the text is provided in a manner that does not respond to browser or operating system settings (such as text within an image) </p>
                  </item>
                  <item>
                     <p>the default presentation of the content does not include sufficient contrast for some users </p>
                  </item>
               </ulist>
               <p>For this technique to be used successfully, three things must be true. </p>
               <olist>
                  <item>
                     <p>The link or control on the original page must itself meet the success criteria to be met via the alternate presentation. For example, if a style switcher is used to provide increased font sizes and the control is presented using a small font, users may not be able to activate the control and view the alternate presentation. </p>
                  </item>
                  <item>
                     <p>The new page must contain all the same information and functionality as the original page. </p>
                  </item>
                  <item>
                     <p>The new page must conform to all of the Success Criteria for the desired level of conformance. For example, an alternate stylesheet can not be used to meet one requirement if it causes a different requirement to no longer conform. </p>
                  </item>
               </olist>
               <p>When using a style switcher, it is important to consider the following challenges and limitations: </p>
               <ulist>
                  <item>
                     <p>The number and type of changes that a user can make is limited to the scope of the controls provided by the author of the Web page. A variety of presentation and preferences should be provided in order to address the needs of as wide an audience as possible. However, it is also important for authors to consider interactions between preferences and the complexity for users that might result from providing large numbers of options to users.</p>
                  </item>
                  <item>
                     <p>Maintaining the user's preference from one page to the next may be achieved by storing a cookie on the user's machine (see Resources section for more information) or by including their preferences in a profile saved on the Web server by passing a query string parameter, or by other means. </p>
                  </item>
                  <item>
                     <p>The technical method used to implement a style switcher may be subject to the support and availability of one or more technologies on the user's machine (for example, many client-side solutions require support for both JavaScript and CSS). Unless these technologies are relied upon for conformance, authors should consider using server-side technologies where client-side support and availability of technologies can not be assured. Alternatively, the use of techniques which ensure that content will transform gracefully when one or more of the technologies used are not available can be an effective way to enhance pages when support for these technologies is not relied upon for conformance.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>Using a JavaScript control to apply a different external CSS file </head>
                  <description>
                     <p>This example is of a page that provides links to change text and background colors for the page via JavaScript. The links should only be inserted if JavaScript is supported by and available on the user's system. Otherwise, selecting the links will not result in the desired changes. This can be achieved by using script to insert the links themselves (which means that the links would only be present when scripting is supported and available). </p>
                     <p>The following code shows the JavaScript-dependent color-change links and a snippet of other content in the Web page, the associated style sheet rules, and the JavaScript that changes the style sheet in use when a color-change link is selected. </p>
                     <p>The example applies only to the current page view. In a production environment, it would be advisable to save this preference in a cookie or server-side user profile, so that users would only have to make the selection once per site. </p>
                     <p>The XHTML components:</p>
                  </description>
                  <code>
In &lt;head&gt; section:

  &lt;link href="main.css" rel="stylesheet" type="text/css" /&gt;
  &lt;link id="currentCSS" href="defaultColors.css" rel="stylesheet" type="text/css" /&gt;

In &lt;body&gt; section:

&lt;div id="colorswitch"&gt;
&lt;p&gt;Change colors:&lt;/p&gt;
  &lt;ul class="inline"&gt;
    &lt;li&gt;&lt;a href="#" onClick="javascript:changeColors('altColors1.css');return false;" 
      id="altColors1"&gt;dark blue on white&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#" onClick="javascript:changeColors('altColors2.css');return false;" 
      id="altColors2"&gt;yellow on black&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#" onClick="javascript:changeColors('altColors3.css');return false;" 
      id="altColors3"&gt;black on pale yellow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#" onClick="javascript:changeColors('altColors4.css');return false;" 
      id="altColors4"&gt;black on white&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#" onClick="javascript:changeColors('defaultColors.css');return false;" 
      id="default"&gt;Reset to default&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
&lt;div id="mainbody"&gt;
  &lt;h1&gt;Conference report&lt;/h1&gt;
  &lt;p&gt;Last week's conference presented an impressive line-up of speakers...&lt;/p&gt;
&lt;/div&gt;

</code>
                  <description>
                     <p>The CSS components:</p>
                  </description>
                  <code>
In main.css:

body{ font-family: Geneva, Arial, Helvetica, sans-serif; margin: 2em; }

#mainbody { 
    padding: 1em; 
}

#colorswitch {
    float: right; 
    width: 12em; 
    border: 1px #000066 solid; 
    padding:0 1em 1em 1em; margin:0;
}

#colorswitch p { 
    padding-top:.5em; 
    font-weight:bold;
}

In defaultColors.css:

body, p { 
    color:#000000; 
    background-color:#FFFFFF; 
}

h1, h2, h3 {
        color:#990000; 
        background-color:#FFFFFF;
}

In altColors1.css:

body, h1, h2, h3, p, a { 
    color:#000066; 
    background-color:#FFFFFF; 
}

In altColors2.css:

body, h1, h2, h3, p, a { 
    color:#FFFF33; 
       background-color:#000000; 
}

In altColors3.css:

body, h1, h2, h3, p, a { 
    color:#000000; 
    background-color:#FFFF99; 
}

In altColors4.css:

body, h1, h2, h3, p, a { 
    color:#000000; 
    background-color:#FFFFFF; 
}
  </code>
                  <description>
                     <p>The JavaScript components:</p>
                  </description>
                  <code>
function changeColors (newCSS)
{
  document.getElementById('currentCSS').href = newCSS; 
}
</code>
                  <description>
                     <p>A working example of this code, <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="ex1/index.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Using a JavaScript control to apply a different external CSS file</loc>, is available.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Using a client-side JavaScript to change a CSS property </head>
                  <description>
                     <p>This example be used for simple changes to a section of content and may be less practical for complex sites or pages. The example uses a client-side JavaScript to change the class name to visually present the user's color selection (from a defined set of options) as a background for highlighting specific content. </p>
                     <note>
                        <p>The following code includes JavaScript calls within the XHTML code to aid understanding of the technique. However, the author is encouraged to use current best practice for including JavaScript (see resources for more information about Unobtrusive JavaScript and progressive enhancement). </p>
                     </note>
                     <p>The XHTML components:</p>
                  </description>
                  <code>
&lt;h1&gt;Product comparison&lt;/h1&gt;
&lt;p&gt;The products you selected to compare are listed below. 
Any differences between the products are highlighted and italicized.&lt;/p&gt;
&lt;p class="inlinePara"&gt;Change hightlight color: &lt;/p&gt;
&lt;ul class="inline"&gt;
  &lt;li&gt;&lt;a href="#" onClick="changeColor('hghltLightYellow');return false;" 
    class="hghltLightYellow"&gt;light yellow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#" onClick="changeColor('hghltBrightYellow');return false;" 
    class="hghltBrightYellow"&gt;bright yellow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#" onClick="changeColor('hghltLightBlue');return false;" 
    class="hghltLightBlue"&gt;light blue&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#" onClick="changeColor('hghltBrightBlue');return false;" 
    class="hghltBrightBlue"&gt;bright blue&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#" onClick="changeColor('hghltLightRed');return false;" 
    class="hghltLightRed"&gt;light red&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#" onClick="changeColor('hghltDrkRed');return false;" 
    class="hghltDrkRed"&gt;dark red&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table width="400" border="1"&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;/td&gt;
    &lt;th scope="col"&gt;Product 1&lt;/th&gt;
    &lt;th scope="col"&gt;Product 2&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th scope="row"&gt;Aspect 1&lt;/th&gt;
    &lt;td&gt;Yes&lt;/td&gt;
    &lt;td&gt;Yes&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th scope="row"&gt;Aspect 2&lt;/th&gt;
    &lt;td class="hghltLightYellow"&gt;Yes&lt;/td&gt;
    &lt;td class="hghltLightYellow"&gt;No&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th scope="row"&gt;Aspect 3&lt;/th&gt;
    &lt;td&gt;Yes&lt;/td&gt;
    &lt;td&gt;Yes&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

</code>
                  <description>
                     <p>The CSS components:</p>
                  </description>
                  <code>
body { color:#000000; background-color:#FFFFFF; }

.hghltLightYellow { color: #000000; background-color: #FFFF99; font-style:oblique; }
.hghltBrightYellow { color: #000000; background-color: #FFFF00; font-style:oblique; }
.hghltLightBlue { color: #000000; background-color: #33FFFF; font-style:oblique; }
.hghltBrightBlue { color: #FFFFFF; background-color: #0000FF; font-style:oblique; }
.hghltLightRed { color: #000000; background-color: #FF6266; font-style:oblique; }
.hghltDrkRed { color: #FFFFFF; background-color: #993300; font-style:oblique; }

.inlinePara {display:inline; }
.inline {display: inline; margin-left:0px; padding-left:0px; line-height:3em; }
.inline li { display:inline; }
.inline li a {padding: 0.5em 1em; border: 2px solid #000000; }

</code>
                  <description>
                     <p>The JavaScript components:</p>
                  </description>
                  <code>
function changeColor(hghltColor)
{
  // collects table data cells into an array
 
 var els = document.getElementsByTagName('td');

  // for each item in the array, look for a class name starting with "hghlt"
  // if found, change the class value to the current selection
  // note that this script assumes the  'td' class attribute is only used for highlighting

  for (var i=0; i&lt;els.length; i++)
  {
    if (els[i].className.indexOf("hghlt") == 0) { els[i].className = hghltColor; }
  }
}

</code>
                  <description>
                     <p>A working example of this code, <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="ex2/index.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Using a client-side JavaScript to change a CSS property</loc>, is available.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Using PHP $_GET to apply a different external CSS file </head>
                  <description>
                     <p>This simple example uses PHP $_GET to assign one of two available external style sheets. Similar functionality could be achieved using a variety of PHP features. The example applies only to the current page view. In a production environment, it would be advisable to save this preference in a cookie or server-side user profile, so that users would only have to make the selection once per site. </p>
                     <p>The following code is PHP, but a similar approach would work with a variety of server-side technologies. </p>
                     <p>The PHP and XHTML components: </p>
                  </description>
                  <code>
At the beginning of the PHP page:

&lt;?php
$thestyle = $_GET['set'];
if ($thestyle == "style1")
	{
	$thestyle = "style2";
	}
else
	{
	$thestyle = "style1";
	}
?&gt;

In the &lt;head&gt; section:

   &lt;link rel="stylesheet" type="text/css" media="screen" href="&lt;?php echo($thestyle);?&gt;.css" &gt;

In &lt;body&gt; section:

&lt;?php
if ($thestyle == "style1") {
	echo "&lt;a href=\"index.php?set=style1\"&gt;Switch to Style Sheet Two&lt;/a&gt;";
	}
else {
	echo "&lt;a href=\"index.php?set=style2\"&gt;Switch to Style Sheet One&lt;/a&gt;";
	}
?&gt;

&lt;div id="mainbody"&gt;
  &lt;h1&gt;Conference report&lt;/h1&gt;
  &lt;p&gt;Last week's conference presented an impressive line-up of speakers...&lt;/p&gt;
&lt;/div&gt;

</code>
                  <description>
                     <p>The CSS components: </p>
                  </description>
                  <code>
In style1.css:

  body, p { color:#000000; background-color:#FFFFFF; }
  h1, h2, h3 {color:#990000; background-color:#FFFFFF; }

In style2.css:

  body, h1, h2, h3, p, a { color:#FFFF00; background-color:#000000; }

</code>
                  <description>
                     <p>A working example of this code, <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="ex3/index.php"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Using PHP $_GET to apply a different external CSS file</loc>, is available.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Using JSP to provide an alternative style sheet </head>
                  <description>
                     <p>The example below uses two files </p>
                     <ulist>
                        <item>
                           <p>a Java Server Page (JSP) with the form and the the form processing code, and </p>
                        </item>
                        <item>
                           <p>an include file with functions used by the previous page and in other pages use the same style. </p>
                        </item>
                     </ulist>
                     <p>The server-side code outputs a normal link element for the stylesheet that the user chooses and link elements with "alternate stylesheet" for the other styles. The code can thus be used as a fallback for the client-side code in the second example. </p>
                     <p>The JSP page with the form: </p>
                  </description>
                  <code>
 &lt;%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"
 %&gt;&lt;%@include file="_jsp/styleswitch.jsp"%&gt;&lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
 &lt;html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"&gt;
 &lt;head&gt;
   &lt;meta content="text/html; charset=utf-8" http-equiv="Content-Type" /&gt;
   &lt;title&gt;Change Style&lt;/title&gt;
   &lt;%
     String fStyle = "";
     String styleName = "style";
     String defaultStyle = "default";
     Cookie[] cookies = request.getCookies();
 
     // get style from post request parameters
     if (request.getMethod().equals("POST") &amp;&amp; request.getParameter("styleSelect") != null) {
       fStyle = request.getParameter("styleSelect");
       // code that validates user input (security) not shown
       
       if (fStyle.equals("nostyle")) { // user prefers no author style
       } else { // user requests author style
         out.println(createStyleLinks(fStyle).toString());
       }
       
       storeStylePreferenceCookie(request, response, fStyle);
     } else if (request.getMethod().equals("GET")) { 
     // GET request; get style from cookie; else default style links
       // get style from cookie
       if (cookies != null) {
         // get style from cookies
         fStyle = getStyleFromCookies(cookies);
 
         if ( !fStyle.equals("NULL_STYLE") ) { // user requests author style
             out.println(createStyleLinks(fStyle).toString());
         } else { // no cookie for style; process request for style preference
           // default style links
           out.println(createStyleLinks(defaultStyle).toString());
         }
       } else { // GET request without cookies: default styles
         out.println(createStyleLinks(defaultStyle).toString());
       }//end else cookies
     }
   %&gt;
 &lt;/head&gt;
 &lt;body id="home"&gt;
   &lt;form action="_styleSwitch.jsp" method="post" id="styleswitchform" name="styleswitchform"&gt;
     &lt;p&gt;&lt;label for="styleSelect"&gt;Select style: &lt;/label&gt;
       &lt;select id="styleSelect" name="styleSelect"&gt;
         &lt;option value="default"&gt;Default (shades of green)&lt;/option&gt;
         &lt;option value="wonb"&gt;White on black&lt;/option&gt;
         &lt;option value="bonw"&gt;Black on white&lt;/option&gt;
       &lt;/select&gt;
       &lt;input type="submit" value="Change Style" /&gt;
     &lt;/p&gt;
   &lt;/form&gt;
 &lt;/body&gt;
 &lt;/html&gt;
 </code>
                  <description>
                     <p>The styleswitcher.jsp file included in the previous file: </p>
                  </description>
                  <code>
 &lt;%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%&gt;
 &lt;%!
   /**
    * Get the links (link elements) to the CSS files based on cookies, ...
   */
   private String getStyleLinks(HttpServletRequest request) {
     String styleLinks = "";
     Cookie[] cookies = request.getCookies();
     String defaultStyle = "default";
     String tempStyle = "";
     // GET request; get style from cookie; else default style links
     // get style from cookie
     if (cookies != null) {
       // get style from cookies
       tempStyle = getStyleFromCookies(cookies);
 
       if ( tempStyle.equals("NULL_STYLE") ) { 
         // no cookie for style; process request for style preference
         // default style links
         styleLinks = createStyleLinks(defaultStyle).toString();
       } else { // user requests author style
         styleLinks = createStyleLinks(tempStyle).toString();
       }
     } else { // GET request without cookies: default styles
       styleLinks = createStyleLinks(defaultStyle).toString();
     }//end else cookies
     
     return styleLinks;
   }
 
   /**
    * Get style cookie from request
   */
   private String getStyleFromCookies( Cookie[] cookies ) {
     String fStyle = "NULL_STYLE";
     for (int i = 0; i &lt; cookies.length; i++) {
       Cookie cookie = cookies[i];
       String name = cookie.getName();
       
       if ( name.equals("style") ) {
         fStyle = cookie.getValue();
         // code that validates cookie value (security) not shown
       }
     }
     return fStyle;
   }
 
   /**
    * Store the style preference in a persistent cookie
   */
   private void storeStylePreferenceCookie(HttpServletRequest request, 
     HttpServletResponse response, String theStyle) {
     final int ONE_YEAR = 60 * 60 * 24 * 365;
     Cookie styleCookie = new Cookie("style", theStyle);
     styleCookie.setMaxAge(ONE_YEAR);
     response.addCookie(styleCookie);
   }
 
   /**
    * Create the link elements for the stylesheets
   */
   private StringBuffer createStyleLinks(String prefStyle) {
     //@@todo add upString for relative path!!
     StringBuffer theStyleLinks = new StringBuffer();
     //two-dimensional array with identifiers (adding '.css' gives the name of the CSS file) 
     // and strings for the title attribute of the link element
    // the identifiers must correspond to the in the "value" attributes in the "option"
    // elements in the style switcher form
     String [] [] styles = {
       { "default", "Default style"},
       { "wonb", "White on black"},
       { "bonw", "Black on white"}
     };
 
     // loop over 2dim array: if styles[i][1] matches prefStyle, 
     // output as normal, else as alternate stylesheet
     for (int i = 0; i &lt; styles.length; i++) {
       if ( styles[i][0].equals(prefStyle) ) { // output pref stylesheet as normal stylesheet
         theStyleLinks.append("&lt;link rel=\"stylesheet\" href=\"_css/").append(styles[i][0])
           .append(".css\" title=\"").append(styles[i][1]).append("\" type=\"text/css\" /&gt;").append("\n");
       } else { // output other stylesheets as alternate stylesheets
         theStyleLinks.append("&lt;link rel=\"alternate stylesheet\" href=\"_css/")
           .append(styles[i][0]).append(".css\" title=\"").append(styles[i][1])
           .append("\" type=\"text/css\" /&gt;").append("\n");
       }
     } // end for loop
 
     return theStyleLinks;
   }
 %&gt;
 </code>
                  <description>
                     <p>Other JSP pages can use this code by means of the following include and scriptlet code:</p>
                  </description>
                  <code>
 &lt;%@include file="_jsp/styleswitch.jsp"%&gt;&lt;% out.println(getStyleLinks(request)); %&gt;
 </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://css-discuss.incutio.com/?page=StyleSwitching"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">StyleSwitching  - css-discuss</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.456bereastreet.com/archive/200608/build_your_own_php_style_sheet_switcher/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Build your own PHP style sheet switcher</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
               <see-also>
                  <head>Using cookies</head>
                  <p>A user's selection can be made persistent across pages, and from one visit to another, by storing information on the user's computer via a cookie. This functionality requires cookies to be supported by and allowed on the user's computer. Cookies can be created, read, modified and erased by using client-side scripts, such as Javascript, or by server-side scripts, such as CGI scripts. Reliance on client-side technologies will require the support and availability of the technology on the user's computer in addition to supporting and allowing cookies. </p>
                  <p>Information on creating and using cookies can be found on the web. Here are some suggestions: </p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.quirksmode.org/js/cookies.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">JavaScript - Cookies</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://webdesign.about.com/od/cookies/a/aa083198.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Write Your First HTTP Cookie</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3schools.com/ASP/asp_cookies.asp"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">ASP Cookies</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.ruby-doc.org/docs/ProgrammingRuby/html/web.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Programming Ruby</loc>
                        </p>
                     </item>
                  </ulist>
                  <p>It is recommended that authors test for cookie support and provide an extra control if cookies are not supported. This extra control should include information about the persistence of the selection, such as "Apply selection to all pages". The message or page presented to the user in response to selecting the extra control provides information about the cookie requirement and their options for solving it. In the event that the user is unable to turn cookie support on, include a statement about what this will mean for them if they choose to continue to browse the site and provide information about how they can adjust their user agent to achieve similar results. </p>
                  <p>For example, "Your browser is not configured to accept cookies. On this site, cookies are required in order to apply your selected changes across all of the pages of the site. To find out how to enable cookies on your computer, visit <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.google.com/cookies.html"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">How to Enable Cookies</loc>. Note that this may require administrative rights for the computer you are using. Without cookie support, your settings will not persist to include other pages on this site. We are endeavoring to provide this functionality without relying on your computer's capability. In the meantime, you will be able to select the change for each page that you visit." </p>
               </see-also>
               <see-also>
                  <head>Progressive Enhancement and Unobtrusive Javascript</head>
                  <p>Current best practice for implementing JavaScript in an HTML or XHTML page is to use it in a way that separates the behavior of content from its structure and presentation. The terms 'Progressive Enhancement' and 'Unobtrusive JavaScript' are often used to describe scripts that enhance or improve the functionality of a page, yet transform gracefully so that content continues to function even when JavaScript is not supported.</p>
                  <p>Here are some suggested starting points for more information: </p>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.alistapart.com/articles/behavioralseparation"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Behavioral Separation</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://en.wikipedia.org/wiki/Unobtrusive_JavaScript"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Wikipedia: Unobtrusive JavaScript</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://javascript.about.com/library/blunobtrusive.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">About.com: Unobtrusive JavaScript</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://en.wikipedia.org/wiki/Progressive_enhancement"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Progressive enhancement</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://domscripting.com/blog/display/41"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Hijax </loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G140"/>
               <relatedtech idref="G174"/>
               <relatedtech idref="G178"/>
               <relatedtech idref="G188"/>
               <relatedtech idref="G189"/>
               <relatedtech idref="C7"/>
               <relatedtech idref="C22"/>
               <relatedtech idref="C26"/>
               <!-- Providing a link, button, or other mechanism that reloads the page without the blinking content @@ --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the Web page contains controls that allow users to select alternate presentations. </p>
                     </item>
                     <item>
                        <p>Check that the control changes the presentation. </p>
                     </item>
                     <item>
                        <p>Verify that the resulting page is a conforming alternate version for the original page. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="C30" diff="add">
            <short-name>Using CSS to replace text with images of text and providing user interface controls to switch</short-name>
            <applicability>
               <p>Any technology that supports CSS. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-text-presentation"/>
               <success-criterion idref="visual-audio-contrast-text-images"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to demonstrate how CSS can be used to replace structured HTML text with images of text in a way that makes it possible for users to view content according to their preferences. To use this technique, an author starts by creating an HTML page that uses semantic elements to mark up the structure of the page. The author then designs two or more stylesheets for that page. One stylesheet presents the HTML text as text and the second uses CSS features to replace some of the HTML text with images of text. Finally, through the use of server-side or client-side scripting, the author provides a control that allows the user to switch between the available views. </p>
               <p>This technique can be used to meet Success Criterion 1.4.5 or 1.4.9 if a presentation that does not include images of text is available and as long as the user interface control that is provided to allow users to switch to an alternate presentation meets the relevant criteria. Where possible, authors should deliver the presentation that does not include images of text as the default presentation. In addition, the control used to switch should be located near the beginning of the page. </p>
               <p>A variety of "image replacement" techniques have been developed to address a variety of user agent, configuration and compatibility with assistive technology issues (See resources for more information). While there are a variety of approaches authors may use to replace text, it is important to consider compatibility with assistive technology, whether the technique will work correctly if scripting, CSS, images (or combinations of these) are turned off. Since it can be difficult to find a single solution that works in all cases, this technique recommends the use of a control that allows users to switch to a presentation that does not include an image replacement technique. </p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <specref ref="C29"/> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A design studio site uses a style switcher to allow users to view two presentations of their home page. For the default version, the heading text is replaced with images of text. A control on the page allows users to switch to a version that presents the headings as text. </p>
                     <p>The CSS component: </p>
                  </description>
                  <code>...
&lt;div id="Header"&gt; 
  &lt;h1&gt;&lt;span&gt;Pufferfish Design Studio&lt;/span&gt;&lt;/h1&gt; 
  &lt;h2&gt;&lt;span&gt;Surprising Identity and Design Solutions&lt;/span&gt;&lt;/h2&gt; 
  &lt;/div&gt; 
...
</code>
                  <description>
                     <p>The CSS for the presentation that includes images of text follows. Note that the CSS uses positioning to place the contents of the heading elements offscreen so that the text remains available to screen reader users.</p>
                  </description>
                  <code>...
#Header h1 {
	background-image: url(pufferfish-logo.png);
	height: 195px;
	width: 290px;
	background-repeat: no-repeat;
	margin-top: 0px;
	position: absolute;
	}
#Header h1 span {
	position: absolute;
        left: -999em;
	}
#Header h2 {
	background-image: url(beauty.png);
	background-repeat: no-repeat;
	height: 234px;
	width: 33px;
	margin-left: 8px;
	position: absolute;
	margin-top: 250px;
	}
#Header h2 span {
	position: absolute;
        left: -999em;
	}
	</code>
                  <description>
                     <p>The CSS for the presentation that does not include images of text. </p>
                  </description>
                  <code>...
#Header h1 {
	font: normal 200%/100% Garamond, "Times New Roman", serif;
	margin-bottom: 0;
	color: #000099;
	background: #ffffff;
	}

#Header h2 {
	font: normal 160%/100% Garamond, "Times New Roman", serif;
	margin-bottom: 0;
	color: #336600;
	background: #ffffff;
	}
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://phark.typepad.com/phark/2003/08/accessible_imag.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Image Replacement</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://moronicbajebus.com/wordpress/wp-content/cssplay/image-replacement/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Image Replacement—No Span</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.kryogenix.org/code/browser/lir/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Another image replacement technique</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://wellstyled.com/css-replace-text-by-image.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Replacing Text By An Image</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.alistapart.com/articles/fir/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Facts and Opinion About Fahrner Image Replacement</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.digital-web.com/articles/in_defense_of_fahrner_image_replacement/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">In Defense of Fahrner Image Replacement</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://en.wikipedia.org/wiki/Fahrner_Image_Replacement"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Fahrner Image Replacement</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/colors.html#background-properties"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS2: 14.2.1 Background properties: 'background-color', 'background-image', 'background-repeat', 'background-attachment', 'background-position', and 'background'</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://wiki.novemberborn.net/sifr/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">sIFR</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C29"/>
               <relatedtech idref="F3"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that the Web page includes a control that allows users to select an alternate presentation. </p>
                     </item>
                     <item>
                        <p>Check that when the control is activated the resulting page includes text (programmatically determined text) wherever images of text had been used. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> All of the above checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 id="client-side-script">
         <head>Client-side Scripting Techniques</head>
         <technique id="SCR1">
            <short-name>Allowing the user to extend the default time limit
        </short-name>
            <applicability>
               <p>
            Time limits that are controlled by client-side scripting.
</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to allow user to extend the default time limit by providing a mechanism to extend the time when scripts provide functionality that has default time limits. In order to allow the user to request a longer <phrase diff="del">than default </phrase>time limit, the script can provide a form (for example) allowing the user to enter a larger <phrase diff="del">default </phrase>time limit <phrase diff="add">or indicating that more time is needed</phrase>. <phrase diff="del">Making this available as a preference setting allows users to indicate their requirements in advance. </phrase>If warning the user a time limit is about to expire (see <specref ref="SCR16"/>), this form can be made available from the warning dialog. <phrase diff="add">The user can extend the time limit to at least 10 times the default time limit, either by allowing the user to indicate how much additional time is needed or by repeatedly allowing the user to extend the time limit.</phrase>
               </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>
A Web page contains current stock market statistics and is set to refresh periodically. When the user is warned prior to refreshing the first time, the user is provided with an option to extend the time period between refreshes. 
    </p>
                  </item>
                  <item>
                     <p>
In an online chess game, each player is given a time limit for completing each move. When the player is warned that time is almost up for this move, the user is provided with an option to increase the time.
    </p>
                  </item>
               </ulist>
            </examples>
            <resources>
               <see-also>
                  <olist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.jayeckles.com/tutorials/servlets.pc"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">setting session and default time limits using Java servlets</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://viral.media.mit.edu/peers/doc/d756cb761d93c8aff5fb0aadf16d5c41ae1f353c.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Overriding timeouts in peers applications</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.phpbuilder.com/tips/item.php?id=141"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">PHPBuilder Time-out Info</loc>
                        </p>
                     </item>
                  </olist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SCR16"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
On a Web page that uses scripts to enforce a time limit, wait until the time limit has expired.
    </p>
                     </item>
                     <item>
                        <p>
Determine if an option was provided to extend the time limit.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
#2 is true and more time is provided to complete the interaction.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR2" diff="add">
            <short-name>Using redundant keyboard and mouse event handlers</short-name>
            <applicability>
               <p>HTML and XHTML with scripting support. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="keyboard-operation-all-funcs"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to demonstrate using device independent events to change a decorative image in response to a mouse or focus event. Use the <code>onmouseover</code> and onmouseout events to change a decorative image when the mouse moves on top of or away from an element on the page. Also, use the <code>onfocus</code> and <code>onblur</code> events to change the image when the element receives and loses focus.</p>
               <p>The example below has a decorative image in front of an anchor element. When the user mouses over the anchor tag, the decorative image in front of the anchor is changed. When the mouse moves off of the anchor, the image is changed back to its original version. The same image change effect occurs when the user gives keyboard focus to the anchor element. When focus is received the image changes, when focus is lost the image is changed back. This is accomplished by attaching <code>onmouseover</code>, <code>onmouseout</code>, <code>onfocus</code> and <code>onblur</code> event handlers to the anchor element. The event handler is a JavaScript function called updateImage(), which changes the src attribute of the image. The updateImage() is called in response to the onmouseover, onmouseout, onfocus, and onblur events.</p>
               <p>Each image is given a unique id. This unique id is passed to updateImage() along with a boolean value indicating which image is to be used: <code>updateImage(imgId, isOver);</code>. The boolean value of true is passed when the mouse is over the anchor element or it has focus. A false value is passed when the mouse moves off of the anchor element or it loses focus. The updateImage() function uses the image id to load the image and then changes the src attribue based on the boolean value. Note that since the image is for decorative purposes, it has a null alt attribute. </p>
               <note>
                  <p>It is best to use images that are similar in size and to specify the height and width attributes on the image element. This will prevent any changes to the layout of the page when the image is updated. This example uses images which are identical in size. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <code>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  "http://www.w3.org/TR/html4/loose.dtd" &gt;
 &lt;html lang="en"&gt;
 &lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt;
 &lt;title&gt;Changing Image Source in a Device Independent Manner&lt;/title&gt;
 &lt;script type="text/javascript"&gt;
 /* This function will change the image src of an image element.
  * param imgId - the id of the image object to change
  * param isOver - true when mouse is over or object has focus,
  *                false when mouse move out or focus is lost
 */
 function updateImage(imgId, isOver) {
   var theImage = document.getElementById(imgId);
   if (theImage != null) { //could use a try/catch block for user agents supporting at least JavaScript 1.4
                           // These browsers support try/catch - NetScape 6, IE 5, Mozilla, Firefox
      if (isOver) {
        theImage.setAttribute("src","yellowplus.gif");
      }
      else {
        theImage.setAttribute("src","greyplus.gif");
      }
   }
 }
 &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;p&gt;Mouse over or tab to the links below and see the image change.&lt;/p&gt;
 &lt;a href="http://www.w3.org/wai" onmouseover="updateImage('wai', true);" onfocus="updateImage('wai', true);"
   onmouseout="updateImage('wai',false);" onblur="updateImage('wai',false);"&gt;
 &lt;img src="greyplus.gif" border="0" alt="" id="wai"&gt;
   W3C Web Accessibility Initiative&lt;/a&gt; &amp;
 &lt;a href="http://www.w3.org/International/" onmouseover="updateImage('i18n', true);" 
   onfocus="updateImage('i18n',true);" onmouseout="updateImage('i18n',false);"
   onblur="updateImage('i18n',false);"&gt;
   &lt;img src="greyplus.gif" border="0" alt="" id="i18n"&gt;
   W3C Internationalization&lt;/a&gt;
 &lt;/body&gt;
 &lt;/html&gt;
</code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <p>Load the Web page and test the events using a mouse and via the keyboard. </p>
                  <olist>
                     <item>
                        <p>Check that the "standard" image is displayed as expected when the Web page is loaded. </p>
                     </item>
                     <item>
                        <p>Using the Mouse </p>
                        <olist>
                           <item>
                              <p>Move the mouse over the element containing the event handlers (in this example it is an anchor element). Check that the image changes to the expected image.</p>
                           </item>
                           <item>
                              <p>Move the mouse off of the element. Check that the image changes back to the "standard" image. </p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p>Using the Keyboard </p>
                        <olist>
                           <item>
                              <p>Use the keyboard to set focus to the element containing the event handlers. Check that the image changes to the expected image. </p>
                           </item>
                           <item>
                              <p>Use the keyboard to remove focus from the element (generally by moving focus to another element). Check that the image changes to the "standard" image.</p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p>Verify that the layout of other elements on the page is not affected when the image is changed. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the steps for the above checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR14">
            <short-name>Using scripts to make nonessential alerts optional</short-name>
            <applicability>
               <p>Scripting technologies which use scripting alerts for non-emergency communication.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-postponed"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="JAWS" version="6.2">
                  <p>This technique was tested successfully with JAWS 6.2</p>
               </ua-issue>
               <ua-issue name="WindowsEyes" version="5.5">
                  <p>This technique was tested successfully with WindowEyes 5.5</p>
               </ua-issue>
               <ua-issue name="HomePage Reader" version="3.04">
                  <p>This technique was tested successfully with HomePage Reader 3.04</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to display a dialog containing a message (alert) to the user.  When the alert is displayed, it receives focus and the user must activate the OK button on the dialog to dismiss it. Since these alerts cause focus to change they may distract the user, especially when used for non-emergency information. Alerts for non-emergency purposes such as displaying a quote of the day, helpful usage tip, or count down to a particular event, are not presented unless the user enables them through an option provided in the Web page.</p>
               <p>This technique assigns a global JavaScript variable to store the user preference for displaying alerts. The default value is false. A wrapper function is created to check the value of this variable before displaying an alert. All calls to display an alert are made to this wrapper function rather than calling the alert() function directly. Early in the page, a button is provided for the user to enable the display of alerts on the page. This technique works on a visit by visit basis.     Each time the page is loaded, alerts will be disabled and the user must manually enable them. Alternatively, the author could use cookies to store user preferences across sessions.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The script below will display a quote in an alert box every ten seconds, if the user selects the "Turn Alerts On" button. The user can turn the quotes off again by choosing "Turn Alerts Off".</p>
                  </description>
                  <code>
&lt;script type="text/javascript"&gt;
var bDoAlerts = false;  // global variable which specifies whether to 
                                       // display alerts or not
/* function to enable/disable alerts.
 * param boolean bOn - true to enable alerts, false to disable them.
*/
function modifyAlerts(isEnabled) {
   bDoAlerts = isEnabled;
}
/* wrapper function for displaying alerts.  Checks the value of bDoAlerts
*and only calls the alert() function when bDoAlerts is true.
*/
function doAlert(aMessage) {
    if (bDoAlerts) {
       alert(aMessage);
    }
}
// example usage - a loop to display famous quotes.
var gCounter = -1;  // global to store counter
// quotes variable would be initialized with famous quotations
var quotes = new Array("quote 1", "quote 2", "quote 3", "quote 4", "quote 5");
function showQuotes() {
   if (++gCounter &gt;= quotes.length) {
     gCounter = 0;
   }
   doAlert(quotes[gCounter]);
   setTimeout("showQuotes();", 10000);
}
showQuotes();
&lt;/script&gt;
</code>
                  <description>
                     <p>Within the body of the page, include a way to turn the alerts on and off. Below is one example:</p>
                  </description>
                  <code>
&lt;body&gt;
&lt;p&gt;Press the button below to enable the display of famous quotes 
using an alert box&lt;br /&gt;
&lt;button id="enableBtn" type="button" onclick="modifyAlerts(true);"&gt;
Turn Alerts On&lt;/button&gt;&lt;br /&gt;
&lt;button id="disableBtn" type="button" onclick="modifyAlerts(false);"&gt;
Turn Alerts Off&lt;/button&gt;&lt;/p&gt;
</code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="enablealerts.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Demonstration of Alerts</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <p>For a Web page that supports non-emergency interruptions using a JavaScript alert:</p>
                  <olist>
                     <item>
                        <p>Load the Web page and verify that no non-emergency alerts are displayed.</p>
                     </item>
                     <item>
                        <p>Verify there is a mechanism to activate the non-emergency alerts.</p>
                     </item>
                     <item>
                        <p>Activate the non-emergency alerts and verify that the alerts are displayed.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>For a Web page that supports non-emergency interruptions using a JavaScript alert, checks 1, 2, and 3 above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR16">
            <short-name>Providing a script that warns the user a time limit is about to expire</short-name>
            <applicability>
               <p>
Time limits exist that are controlled by script.
</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
            </applies-to>
            <description>
               <p>
The objective of this technique is to notify users that they are almost out of time to complete an interaction. When scripts provide functionality that has time limits, the script can include functionality to warn the user of imminent time limits and provide a mechanism to request more time. 20 seconds or more before the time limit occurs, the script provides a confirm dialog that states that a time limit is imminent and asks if the user needs more time. If the user answers "yes" then the time limit is reset. If the user answers "no" or does not respond, the time limit is allowed to expire.
</p>
               <p>
This technique involves time limits set with the <code>window.setTimeout()</code> method. If, for example, the time limit is set to expire in 60 seconds, you can set the time limit for 40 seconds and provide the confirm dialog. When the confirm dialog appears, a new time limit is set for the remaining 20 seconds. Upon expiry of the "grace period time limit" the action that would have been taken at the expiry of the 60 second time limit in the original design is taken.
</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>
A page of stock market quotes uses script to refresh the page every five minutes in order to ensure the latest statistics remain available. 20 seconds before the five minute period expires, a confirm dialog appears asking if the user needs more time before the page refreshes. This allows the user to be aware of the impending refresh and to avoid it if desired.
</p>
                  </description>
                  <code>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"&lt;url&gt;http://www.w3.org/TR/html4/loose.dtd"&gt;http://www.w3.org/TR/html4/loose.dtd&lt;/title&gt;"&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;title&gt;Stock Market Quotes&lt;/title&gt;
&lt;script type="text/javascript"&gt;
&lt;!--
function timeControl() {
	// set timer for 4 min 40 sec, then ask user to confirm.
	setTimeout('userCheck()', 280000);
}
function userCheck() {
	// set page refresh for 20 sec
	var id=setTimeout('pageReload()', 20000);
	// If user selects "OK" the timer is reset 
	// else the page will refresh from the server.
	if (confirm("This page is set to refresh in 20 seconds. 
	Would you like more time?"))
	{
	clearTimeout(id);
	timeControl();
	}
}
function pageReload() {
	window.location.reload(true);
}
timeControl();
--&gt;
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Stock Market Quotes&lt;/h1&gt;
...etc...
&lt;/body&gt;
&lt;/html&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="SCR1"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>
On a Web page that has a time limit controlled by a script: </p>
                  <olist>
                     <item>
                        <p>
load the page and start a timer that is 20 seconds less than the time limit.
    </p>
                     </item>
                     <item>
                        <p>
when the timer expires, check that a confirmation dialog is displayed warning of the impending time limit.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
#2 is true.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR18">
            <short-name>Providing client-side validation and alert</short-name>
            <applicability>
               <p>Content that validates user input.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-identified"/>
               <success-criterion idref="minimize-error-suggestions"/>
               <success-criterion idref="minimize-error-reversible"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to validate user input as values are entered for each field, by means of client-side scripting. If errors are found, an alert dialog describes the nature of the error in text. Once the user dismisses the alert dialog, it is helpful if the script positions the keyboard focus on the field where the error occurred.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following script will check that a valid date has been entered in the form control.</p>
                  </description>
                  <code>
&lt;label for="date"&gt;Date:&lt;/label&gt;
&lt;input type="text" name="date" id="date" 
onchange="if(isNaN(Date.parse(this.value))) 
alert('This control is not a valid date. 
Please re-enter the value.');" /&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G89"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For form fields that require specific input:</p>
                  <olist>
                     <item>
                        <p>enter invalid data</p>
                     </item>
                     <item>
                        <p>determine if an alert describing the error is provided.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR19">
            <short-name>Using an onchange event on a select element without causing a change of
                    context</short-name>
            <applicability>
               <p> HTML and XHTML with support for scripting. This technique uses the try/catch
                        construct of JavaScript 1.4. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>This technique has been tested on Windows XP using JAWS 7.0 and WindowEyes 5.5 with both Firefox 1.5 and IE 6. Note that JavaScript must be enabled in the browser. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p> The objective of this technique is to demonstrate how to correctly use an
                        onchange event with a select element to update other elements on the Web page. This technique will not cause a change of context. When there are one
                        or more select elements on the Web page, an onchange event on one, can
                        update the options in another select element on the Web page. All of the
                        data required by the select elements is included within the Web page. </p>
               <p> It is important to note that the select item which is modified is after the
                        trigger select element in the reading order of the Web page. This ensures
                        that assistive technologies will pick up the change and users will encounter
                        the new data when the modified element receives focus. This technique relies
                        on JavaScript support in the user agent. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p> This example contains two select elements. When an item is selected
                                in the first select, the choices in the other select are updated
                                appropriately. The first select element contains a list of
                                continents. The second select element will contain a partial list of
                                countries located in the selected continent. There is an onchange
                                event associated with the continent select. When the continent
                                selection changes, the items in the country select are modified
                                using JavaScript via the Document Object Model (DOM). All of the
                                data required, the list of countries and continents, is included
                                within the Web page. </p>
                     <p>Overview of the code below</p>
                     <ulist>
                        <item>
                           <p> countryLists array variable which contains the list of
                                        countries for each continent in the trigger select element.
                                    </p>
                        </item>
                        <item>
                           <p> countryChange() function which is called by the onchange
                                        event of the continent select element. </p>
                        </item>
                        <item>
                           <p> The XHTML code to create the select elements in the body of
                                        the Web page. </p>
                        </item>
                     </ulist>
                  </description>
                  <code>
&lt;?xml version="1.0" encoding="UTF-8"?&gt; 
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; 
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt; 
  &lt;head&gt; 
    &lt;meta http-equiv="content-type" content="text/xhtml; charset=utf-8" /&gt; 
    &lt;title&gt;Dynamic Select Statements&lt;/title&gt; 
&lt;script type="text/javascript"&gt;
 //&lt;![CDATA[ 
 // array of possible countries in the same order as they appear in the country selection list 
 var countryLists = new Array(4) 
 countryLists["empty"] = ["Select a Country"]; 
 countryLists["North America"] = ["Canada", "United States", "Mexico"]; 
 countryLists["South America"] = ["Brazil", "Argentina", "Chile", "Ecuador"]; 
 countryLists["Asia"] = ["Russia", "China", "Japan"]; 
 countryLists["Europe"]= ["Britain", "France", "Spain", "Germany"]; 
 /* CountryChange() is called from the onchange event of a select element. 
 * param selectObj - the select object which fired the on change event. 
 */ 
 function countryChange(selectObj) { 
 // get the index of the selected option 
 var idx = selectObj.selectedIndex; 
 // get the value of the selected option 
 var which = selectObj.options[idx].value; 
 // use the selected option value to retrieve the list of items from the countryLists array 
 cList = countryLists[which]; 
 // get the country select element via its known id 
 var cSelect = document.getElementById("country"); 
 // remove the current options from the country select 
 var len=cSelect.options.length; 
 while (cSelect.options.length &gt; 0) { 
 cSelect.remove(0); 
 } 
 var newOption; 
 // create new options 
 for (var i=0; i&lt;cList.length; i++) { 
 newOption = document.createElement("option"); 
 newOption.value = cList[i];  // assumes option string and value are the same 
 newOption.text=cList[i]; 
 // add the new option 
 try { 
 cSelect.add(newOption);  // this will fail in DOM browsers but is needed for IE 
 } 
 catch (e) { 
 cSelect.appendChild(newOption); 
 } 
 } 
 } 
//]]&gt;
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;noscript&gt;This page requires JavaScript be available and enabled to function properly&lt;/noscript&gt;
  &lt;h1&gt;Dynamic Select Statements&lt;/h1&gt;
  &lt;label for="continent"&gt;Select Continent&lt;/label&gt;
  &lt;select id="continent" onchange="countryChange(this);"&gt;
    &lt;option value="empty"&gt;Select a Continent&lt;/option&gt;
    &lt;option value="North America"&gt;North America&lt;/option&gt;
    &lt;option value="South America"&gt;South America&lt;/option&gt;
    &lt;option value="Asia"&gt;Asia&lt;/option&gt;
    &lt;option value="Europe"&gt;Europe&lt;/option&gt;
  &lt;/select&gt;
  &lt;br/&gt;
  &lt;label for="country"&gt;Select a country&lt;/label&gt;
  &lt;select id="country"&gt;
    &lt;option value="0"&gt;Select a country&lt;/option&gt;
  &lt;/select&gt;
&lt;/body&gt;
 &lt;/html&gt;</code>
                  <description>
                     <p> Here is a working example: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="dynselect.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Dynamic
                                    Select</loc>
                     </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usability.com.au/resources/wcag2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms using WCAG 2.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Navigate to the trigger select element (in this example, the one
                                    to select continents) and change the value of the select. </p>
                     </item>
                     <item>
                        <p> Navigate to the select element that is updated by the trigger
                                    (in this example, the one to select countries). </p>
                     </item>
                     <item>
                        <p> Check that the matching option values are displayed in the other
                                    select element. </p>
                     </item>
                     <item>
                        <p> Navigate to the trigger select element, navigate through the
                                    options but do not change the value. </p>
                     </item>
                     <item>
                        <p> Check that the matching option values are still displayed in the
                                    associated element. </p>
                     </item>
                  </olist>
                  <p>It is recommended that the select elements are tested with an assistive
                            technology to verify that the changes to the associated element are
                            recognized. </p>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Step #3 and #5 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR20">
            <short-name>Using both keyboard and other device-specific functions</short-name>
            <applicability>
               <p>Applies to all content that uses Script to implement functionality.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="keyboard-operation-all-funcs"/>
            </applies-to>
            <description>
               <p>
                        The objective of this technique is to illustrate the use of both keyboard-specific and mouse-specific events with code that has a scripting function associated with an event. Using both keyboard-specific and mouse-specific events together ensures that content can be operated by a wide range of devices. For example, a script may perform the same action when a keypress is detected that is performed when a mouse button is clicked. This technique goes beyond the Success Criterion requirement for keyboard access by including not only keyboard access but access using other devices as well. 
                    </p>
               <p>
                    In JavaScript, commonly used event handlers include, onblur, onchange, onclick, ondblclick, onfocus, onkeydown, onkeypress, onkeyup, onload, onmousedown, onmousemove, onmouseout, onmouseover, onmouseup, onreset, onselect, onsubmit, onunload. Some mouse-specific functions have a logical corresponding keyboard-specific function (such as 'onmouseover' and 'onfocus'). The keyboard event handler should be provided, that executes the same function as the mouse event handler.
                    </p>
               <p>
                        The following table suggests keyboard event handlers to pair mouse event handlers.
                    </p>
               <table border="1" cellspacing="0">
                  <caption>Device Handler Correspondences</caption>
                  <tbody>
                     <tr>
                        <th scope="col" rowspan="1" colspan="1">Use...</th>
                        <th scope="col" rowspan="1" colspan="1">...with</th>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">
                           <code>mousedown</code>
                        </td>
                        <td rowspan="1" colspan="1">
                           <code>keydown</code>
                        </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">
                           <code>mouseup</code>
                        </td>
                        <td rowspan="1" colspan="1">
                           <code>keyup</code>
                        </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">
                           <code>click 
								</code>
                           <sup>[1]</sup>
                        </td>
                        <td rowspan="1" colspan="1">
                           <code>keypress 
								</code>
                           <sup>[2]</sup>
                        </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">
                           <code>mouseover</code>
                        </td>
                        <td rowspan="1" colspan="1">
                           <code>focus</code>
                        </td>
                     </tr>
                     <tr>
                        <td rowspan="1" colspan="1">
                           <code>mouseout</code>
                        </td>
                        <td rowspan="1" colspan="1">
                           <code>blur</code>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <p>
                  <sup>1</sup> Although <code>click</code> is in principle a mouse event handler, most HTML and XHTML user agents process this event when the control is activated, regardless of whether it was activated with the mouse or the keyboard. In practice, therefore, it is not necessary to duplicate this event. It is included here for completeness since non-HTML user agents do have this issue.</p>
               <p>
                  <sup>2</sup> Since the <code>keypress</code> event handler reacts to any key, the event handler function should check first to ensure the Enter key was pressed before proceeding to handle the event. Otherwise, the event handler will run each time the user presses any key, even the tab key to leave the control, and this is usually not desirable.
                    </p>
               <p>
                    Some mouse-specific functions (such as <code>dblclick</code> and <code>mousemove</code>) do  not have a corresponding keyboard-specific function. This means that some functions may need  to be implemented differently for each device (for example, including a series of buttons to execute, via keyboard, the equivalent mouse-specific functions implemented).</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>In this example of an image link, the image is changed when the user positions the pointer over the image. To provide keyboard users with a similar experience, the image is also changed when the user tabs to it.
                            </p>
                  </description>
                  <code>
&lt;a href="menu.php" onmouseover="swapImageOn('menu')" onfocus="swapImageOn('menu')" 
onmouseout="swapImageOff('menu')" onblur="swapImageOff('menu')"&gt; 
&lt;img id="menu" src="menu_off.gif" alt="Menu" /&gt; 
&lt;/a&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>
                                This example shows an image for which the keyboard can be used to activate the function. The mouse event <code>onclick</code> is duplicated by an appropriate keyboard event <code>onkeypress</code>. The <code>tabindex</code> attribute ensures that the keyboard will have a tab stop on the image. Note that in this example, the <code>nextPage()</code> function should check that the keyboard key pressed was Enter, otherwise it will respond to all keyboard actions while the image has focus, which is not the desired behavior.</p>
                  </description>
                  <code>
&lt;img onclick="nextPage();" onkeypress="nextPage();" tabindex="0" src="arrow.gif" 
alt="Go to next page"&gt; </code>
                  <description>
                     <note>
                        <p>This example uses tabindex on an <code>img</code> element. Even though this is currently invalid, it is provided as a transitional technique to make this function work.</p>
                     </note>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/javascript/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Overview of Creating Accessible JavaScript</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G90"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
                                Find all interactive functionality
                            </p>
                     </item>
                     <item>
                        <p>
                                Check that all interactive functionality can be accessed using the keyboard alone
                            </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
                                #2 is true
                            </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR21">
            <short-name>Using functions of the Document Object Model (DOM) to add content to a page</short-name>
            <applicability>
               <p>ECMAScript used inside HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>This example was successfully tested on Windows XP with IE 6 and Firefox 1.5.0.1 using both JAWS 7 and WindowEyes 5.5. Note that when adding new content onto a page, the screen readers may not automatically speak the new content.  In order to insure that new content is spoken, set focus to the new element or make certain that it is added below the current location and will be encountered as the user continues to traverse the page.
</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate how to use functions of the Document Object Model (DOM) to add content to a page instead of using <code>document.write</code> or <code>object.innerHTML</code>. The <code>document.write()</code> method does not work with XHTML when served with the correct MIME type (application/xhtml+xml), and the <code>innerHTML</code> property is not part of the DOM specification and thus should be avoided.  If the DOM functions are used to add the content, user agents can access the DOM to retrieve the content. The <code>createElement()</code> function can be used to create elements within the DOM.  The <code>createTextNode()</code> is used to create text associated with elements.  The <code>appendChild()</code>, <code>removeChild()</code>, <code>insertBefore()</code> and <code>replaceChild()</code> functions are used to add and remove elements and nodes. Other DOM functions are used to assign attributes to the created elements.</p>
               <note>
                  <p>When adding focusable elements into the document, do not add <code>tabindex</code> attributes to explicitly set the tab order as this can cause problems when adding focusable elements into the middle of a document. Let the default tab order be assigned to the new element by not explicitly setting a <code>tabindex</code> attribute.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example demonstrates use of client-side scripting to validate a form. If errors are found appropriate error messages are displayed.  The example uses the DOM functions to add error notification consisting of a title, a short paragraph explaining that an error has occurred, and a list of errors in an ordered list. The content of the title is written as a link so that it can be used to draw the user's attention to the error using the focus method. Each item in the list is also written as a link that places the focus onto the form field in error when the link is followed.</p>
                     <p>For simplicity, the example just validates two text fields, but can easily be extended to become a generic form handler. Client-side validation should not be the sole means of validation , and should be backed up with server-side validation. The benefit of client-side validation is that you can provide immediate feedback to the user to save them waiting for the errors to come back from the server, and it helps reduce unnecessary traffic to the server.</p>
                     <p>Here is the script that adds the event handlers to the form. If scripting is enabled, the validateNumbers() function will be called to perform client-side validation before the form is submitted to the server. If scripting is not enabled, the form will be immediately submitted to the server, so validation should also be implemented on the server. 
              </p>
                  </description>
                  <code role="html401">
window.onload = initialise;
function initialise()
{
  // Ensure we're working with a relatively standards compliant user agent
  if (!document.getElementById || !document.createElement || !document.createTextNode)
    return;

  // Add an event handler for the number form
  var objForm = document.getElementById('numberform');
  objForm.onsubmit= function(){return validateNumbers(this);};
}
</code>
                  <description>
                     <p>Here is the validation function.  Note the use of the createElement(), createTextNode(), and appendChild() DOM functions to create the error message elements.</p>
                  </description>
                  <code role="html401">
function validateNumbers(objForm)
{
  // Test whether fields are valid
  var bFirst = isNumber(document.getElementById('num1').value);
  var bSecond = isNumber(document.getElementById('num2').value);
  // If not valid, display errors
  if (!bFirst || !bSecond)
  {
    var objExisting = document.getElementById('validationerrors');
    var objNew = document.createElement('div');
    var objTitle = document.createElement('h2');
    var objParagraph = document.createElement('p');
    var objList = document.createElement('ol');
    var objAnchor = document.createElement('a');
    var strID = 'firsterror';
    var strError;
    // The heading element will contain a link so that screen readers
    // can use it to place focus - the destination for the link is 
    // the first error contained in a list
    objAnchor.appendChild(document.createTextNode('Errors in Submission'));
    objAnchor.setAttribute('href', '#firsterror');
    objTitle.appendChild(objAnchor);
    objParagraph.appendChild(document.createTextNode('Please review the following'));
    objNew.setAttribute('id', 'validationerrors');
    objNew.appendChild(objTitle);
    objNew.appendChild(objParagraph);
    // Add each error found to the list of errors
    if (!bFirst)
    {
      strError = 'Please provide a numeric value for the first number';
      objList.appendChild(addError(strError, '#num1', objForm, strID));
      strID = '';
    }
    if (!bSecond)
    {
      strError = 'Please provide a numeric value for the second number';
      objList.appendChild(addError(strError, '#num2', objForm, strID));
      strID = '';
    }
    // Add the list to the error information
    objNew.appendChild(objList);
    // If there were existing errors, replace them with the new lot,
    // otherwise add the new errors to the start of the form
    if (objExisting)
      objExisting.parentNode.replaceChild(objNew, objExisting);
    else
    {
      var objPosition = objForm.firstChild;
      objForm.insertBefore(objNew, objPosition);
    }
    // Place focus on the anchor in the heading to alert
    // screen readers that the submission is in error
    objAnchor.focus();
    // Do not submit the form
    objForm.submitAllowed = false;
    return false;
  }
  return true;
}

// Function to validate a number
function isNumber(strValue)
{
  return (!isNaN(strValue) &amp;&amp; strValue.replace(/^\s+|\s+$/, '') !== '');
} 
</code>
                  <description>
                     <p>Below are the helper functions to create the error message and to set focus to the associated form field.</p>
                  </description>
                  <code role="html401">
// Function to create a list item containing a link describing the error
// that points to the appropriate form field
function addError(strError, strFragment, objForm, strID)
{
  var objAnchor = document.createElement('a');
  var objListItem = document.createElement('li');
  objAnchor.appendChild(document.createTextNode(strError));
  objAnchor.setAttribute('href', strFragment);
  objAnchor.onclick = function(event){return focusFormField(this, event, objForm);};
  objAnchor.onkeypress = function(event){return focusFormField(this, event, objForm);};
  // If strID has a value, this is the first error in the list
  if (strID.length &gt; 0)
    objAnchor.setAttribute('id', strID);
  objListItem.appendChild(objAnchor);
  return objListItem;
}

// Function to place focus to the form field in error
function focusFormField(objAnchor, objEvent, objForm)
{
  // Allow keyboard navigation over links
  if (objEvent &amp;&amp; objEvent.type == 'keypress')
    if (objEvent.keyCode != 13 &amp;&amp; objEvent.keyCode != 32)
      return true;
  // set focus to the form control
  var strFormField = objAnchor.href.match(/[^#]\w*$/);
  objForm[strFormField].focus();
  return false;
}</code>
                  <description>
                     <p>Here is the HTML for the example form.</p>
                  </description>
                  <code role="html401">
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;ECMAScript Form Validation&lt;/title&gt;
	&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
	&lt;script type="text/javascript" src="validate.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Form Validation&lt;/h1&gt;
&lt;form id="numberform" method="post" action="form.php"&gt;
&lt;fieldset&gt;
&lt;legend&gt;Numeric Fields&lt;/legend&gt;
&lt;p&gt;
&lt;label for="num1"&gt;Enter first number&lt;/label&gt;
&lt;input type="text" size="20" name="num1" id="num1"&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;label for="num2"&gt;Enter second number&lt;/label&gt;
&lt;input type="text" size="20" name="num2" id="num2"&gt;
&lt;/p&gt;
&lt;/fieldset&gt;
&lt;p&gt;
&lt;input type="submit" name="submit" value="Submit Form"&gt;
&lt;/p&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</code>
                  <description>
                     <p>This example is limited to client-side scripting, and should be backed up with server-side validation. The example is limited to the creation of error messages when client-side scripting is available. 
              </p>
                     <p>Here is a link to a working example: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="ex1.html" linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Form Validation</loc>
                     </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webreference.com/js/column44/index.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">The Document Object Model, More methods</loc> from Webreference.com
									</p>
                     </item>
                     <item>
                        <p diff="add">
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.usability.com.au/resources/wcag2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Forms using WCAG 2.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For pages that dynamically create new content:</p>
                  <olist>
                     <item>
                        <p>Examine the source code and check that the new content is not created using document.write(), innerHTML, outerHTML, innerText or outerText.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #1 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR22">
            <short-name>Using scripts to control blinking and stop it in five seconds or less</short-name>
            <applicability>
               <p>Technologies that support script-controlled blinking of content.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to control blinking with script so it can be set to stop in less than five seconds by the script. Script is used to start the blinking effect of content, control the toggle between visible and hidden states, and also stop the effect at five seconds or less. The <code>setTimeout()</code> function can be used to toggle blinking content between visible and hidden states, and stop when the number of iterations by the time between them adds up to nearly five seconds.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example uses JavaScript to control blinking of some HTML and XHTML content. JavaScript creates the blinking effect by changing the visibility status of the content. It controls the start of the effect and stops it within five seconds.</p>
                  </description>
                  <code>
...
&lt;div id="blink1" class="highlight"&gt;New item!&lt;/div&gt;
&lt;script type="text/javascript"&gt;
&lt;!--
// blink "on" state
function show()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "visible";
}
// blink "off" state
function hide()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "hidden";
}
// toggle "on" and "off" states every 450 ms to achieve a blink effect
// end after 4500 ms (less than five seconds)
for(var i=900; i &lt; 4500; i=i+900)
{
	setTimeout("hide()",i);
	setTimeout("show()",i+450);
}
--&gt;
&lt;/script&gt;
...
            </code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="ex1.html" linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Using script to control blinking</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <p>For each instance of blinking content:</p>
                  <olist>
                     <item>
                        <p>Start a timer for 5 seconds at the start of the blink effect.</p>
                     </item>
                     <item>
                        <p>When the timer expires, determine if the blinking has stopped.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>For each instance of blinking content, #2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR24">
            <short-name>Using progressive enhancement to open new windows on user request</short-name>
            <applicability>
               <p> HTML 4.01 and XHTML 1.0 </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to avoid confusion that may be caused by
                        the appearance of new windows that were not requested by the user. Suddenly
                        opening new windows can disorient or be missed completely by some users.
                        If the document type does not allow the <code>target</code> attribute (it
                        does not exist in HTML 4.01 Strict or XHTML 1.0 Strict) or if the developer
                        prefers not to use it, new windows can be opened with ECMAScript. The
                        example below demonstrates how to open new windows with script: it adds an
                        event handler to a link (<code>a</code> element) and warns the user that the
                        content will open in a new window. </p>
            </description>
            <examples>
               <eg-group>
                  <head/>
                  <description>
                     <p>Markup:</p>
                     <p> The script is included in the head of the document, and the link has
                                an id that can be used as a hook by the script. </p>
                  </description>
                  <code>
&lt;script type="text/javascript" src="popup.js"&gt;&lt;/script&gt;
…
&lt;a href="help.html" id="newwin"&gt;Show Help&lt;/a</code>
                  <description>
                     <p>Script:</p>
                  </description>
                  <code> 
// Use traditional event model whilst support for event registration
// amongst browsers is poor.
window.onload = addHandlers;

function addHandlers()
{
  var objAnchor = document.getElementById('newwin');

  if (objAnchor)
  {
    objAnchor.firstChild.data = objAnchor.firstChild.data + ' (opens in a new window)';
    objAnchor.onclick = function(event){return launchWindow(this, event);}
    // UAAG requires that user agents handle events in a device-independent manner
    // but only some browsers do this, so add keyboard event to be sure
    objAnchor.onkeypress = function(event){return launchWindow(this, event);}
  }
}

function launchWindow(objAnchor, objEvent)
{
  var iKeyCode, bSuccess=false;

  // If the event is from a keyboard, we only want to open the
  // new window if the user requested the link (return or space)
  if (objEvent &amp;&amp; objEvent.type == 'keypress')
  {
    if (objEvent.keyCode)
      iKeyCode = objEvent.keyCode;
    else if (objEvent.which)
      iKeyCode = objEvent.which;

    // If not carriage return or space, return true so that the user agent
    // continues to process the action
    if (iKeyCode != 13 &amp;&amp; iKeyCode != 32)
      return true;
  }

  bSuccess = window.open(objAnchor.href);

  // If the window did not open, allow the browser to continue the default
  // action of opening in the same window
  if (!bSuccess)
    return true;

  // The window was opened, so stop the browser processing further
  return false;
}</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://en.wikipedia.org/wiki/Progressive_enhancement"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Wikipedia: Progressive Enhancement</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H83"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Activate each link in the document to check if it opens a new window. </p>
                     </item>
                     <item>
                        <p>For each link that opens a new window, check that it uses script to accomplish each of the following:</p>
                        <olist>
                           <item>
                              <p>indicates that the link will open in a new window,</p>
                           </item>
                           <item>
                              <p>uses device-independent event handlers, and</p>
                           </item>
                           <item>
                              <p>allows the browser to open the content in the same window if a new window was not opened.</p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #2 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR26">
            <short-name>Inserting dynamic content into the Document Object Model immediately following its trigger element</short-name>
            <applicability>
               <p>HTML and XHTML, script</p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to place inserted user interface elements into the Document Object Model (DOM) in such a way that the tab order and screen-reader reading order are set correctly by the default behavior of the user agent. This technique can be used for any user interface element that is hidden and shown, such as menus and dialogs.</p>
               <p>The reading order in a screen-reader is based on the order of the HTML or XHTML elements in the Document Object Model, as is the default tab order. This technique inserts new content into the DOM immediately following the element that was activated to trigger the script. The triggering element must be a link or a button, and the script must be called from its onclick event. These elements are natively focusable, and their onclick event is device independent. Focus remains on the activated element and the new content, inserted after it, becomes the next thing in both the tab order and screen-reader reading order.</p>
               <p>Note that this technique works for synchronous updates. For asynchronous updates (sometimes called AJAX), an additional technique is needed to inform the assistive technology that the asynchronous content has been inserted. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example creates a menu when a link is clicked and inserts it after the link. The onclick event of the link is used to call the ShowHide script, passing in an ID for the new menu as a parameter.</p>
                  </description>
                  <code role="xhtml">&lt;a href="#" onclick="ShowHide('foo',this)"&gt;Toggle&lt;/a&gt;</code>
                  <description>
                     <p>The ShowHide script creates a div containing the new menu, and inserts a link into it. The last line is the core of the script. It finds the parent of the element that triggered the script, and appends the div it created as a new child to it. This causes the new div to be in the DOM after the link. When the user hits tab, the focus will go to the first focusable item in the menu, the link we created.</p>
                  </description>
                  <code role="script">function ShowHide(id,src)
{
	var el = document.getElementById(id);
	if (!el)
	{
		el = document.createElement("div");
		el.id = id;
		var link = document.createElement("a");
		link.href = "javascript:void(0)";
		link.appendChild(document.createTextNode("Content"));
		el.appendChild(link);
		src.parentElement.appendChild(el);
	}
	else
	{
		el.style.display = ('none' == el.style.display ? 'block' : 'none');
	}
}</code>
                  <description>
                     <p>CSS is used to make the div and link look like a menu.</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find all areas of the page that trigger dialogs that are not pop-up windows.</p>
                     </item>
                     <item>
                        <p>Check that the dialogs are triggered from the click event of a button or a link.</p>
                     </item>
                     <item>
                        <p>Using a tool that allows you to inspect the DOM generated by script, check that the dialog is next in the DOM.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 and #3 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR27">
            <short-name>Reordering page sections using the Document Object Model</short-name>
            <applicability>
               <p>HTML and XHTML, script</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a mechanism for re-ordering component which is both highly usable and accessible. The two most common mechanisms for reordering are to send users to a set-up page where they can number components, or to allow them to drag and drop components to the desired location. The drag and drop method is much more usable, as it allows the user to arrange the items in place, one at a time, and get a feeling for the results. Unfortunately, drag and drop relies on the use of a mouse. This technique allows users to interact with a menu on the components to reorder them in place in a device independent way. It can be used in place of, or in conjunction with drag and drop reordering functionality.</p>
               <p>The menu is a list of links using the device-independent onclick event to trigger scripts which re-order the content. The content is re-ordered in the Document Object Model (DOM), not just visually, so that it is in the correct order for all devices. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example does up and down reordering. This approach can also be used for two-dimensional reordering by adding left and right options.</p>
                     <p>The components in this example are list items in an unordered list. Unordered lists are a very good semantic model for sets of similar items, like these components. The menu approach can also be used for other types of groupings.</p>
                     <p>The modules are list items, and each module, in addition to content in div elements, contains a menu represented as a nested list. </p>
                  </description>
                  <code role="xhtml">&lt;ul id="swapper"&gt;
    &lt;li id="black"&gt;
        &lt;div class="module"&gt;
            &lt;div class="module_header"&gt;
                &lt;!-- menu link --&gt;
                &lt;a href="#" onclick="ToggleMenu(event);"&gt;menu&lt;/a&gt;
                &lt;!-- menu --&gt;
                &lt;ul class="menu"&gt;
                    &lt;li&gt;&lt;a href="#" onclick="OnMenuClick(event)" 
                        onkeypress="OnMenuKeypress(event);"&gt;up&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#" onclick="OnMenuClick(event)" 
                        onkeypress="OnMenuKeypress(event);"&gt;down&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;div class="module_body"&gt;
                Text in the black module
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/li&gt;
    ...
&lt;/ul&gt;</code>
                  <description>
                     <p>Since we've covered the showing and hiding of menus in the simple tree samples, we'll focus here just on the code that swaps the modules. Once we harmonize the events and cancel the default link action, we go to work. First, we set a bunch of local variables for the elements with which we'll be working: the menu, the module to be reordered, the menuLink. Then, after checking the reorder direction, we try to grab the node to swap. If we find one, we then call swapNode() to swap our two modules, and PositionElement() to move the absolutely-positioned menu along with the module, and then set focus back on the menu item which launched the whole thing.</p>
                  </description>
                  <code role="script">function MoveNode(evt,dir)
{
    HarmonizeEvent(evt);
    evt.preventDefault();

    var src = evt.target;
    var menu = src.parentNode.parentNode;
    var module = menu.parentNode.parentNode.parentNode;
    var menuLink = module.getElementsByTagName("a")[0];
    var swap = null;
    
    switch(dir)
    {
        case 'up':
        {
            swap = module.previousSibling;
            while (swap &amp;&amp; swap.nodeType != 1)
            {
                swap = swap.previousSibling;
            }
            break;
        }
        case 'down':
        {
            swap = module.nextSibling;
            while (swap &amp;&amp; swap.nodeType != 1)
            {
                swap = swap.nextSibling;
            }
            break;
        }
    }
    if (swap &amp;&amp; swap.tagName == node.tagName)
    {
        module.swapNode(swap);
        PositionElement(menu,menuLink,false,true);
    }
    src.focus();
}</code>
                  <description>
                     <p>The CSS for the node swap is not much different than that of our previous tree samples, with some size and color adjustment for the modules and the small menu.</p>
                  </description>
                  <code role="css">ul#swapper { margin:0px; padding:0px; list-item-style:none; }
ul#swapper li { padding:0; margin:1em; list-style:none; height:5em; width:15em; 
    border:1px solid black; }
ul#swapper li a { color:white; text-decoration:none; font-size:90%; }

ul#swapper li div.module_header { text-align:right; padding:0 0.2em; }
ul#swapper li div.module_body { padding:0.2em; }

ul#swapper ul.menu { padding:0; margin:0; list-style:none; background-color:#eeeeee; 
    height:auto; position:absolute; text-align:left; border:1px solid gray; display:none; }
ul#swapper ul.menu li { height:auto; border:none; margin:0; text-align:left; 
    font-weight:normal; width:5em; }
ul#swapper ul.menu li a { text-decoration:none; color:black; padding:0 0.1em; 
    display:block; width:100%; }
</code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find all components in the Web Unit which can be reordered via drag and drop.</p>
                     </item>
                     <item>
                        <p>Check that there is also a mechanism to reorder them using menus build of lists of links.</p>
                     </item>
                     <item>
                        <p>Check that the menus are contained within the reorderable items in the DOM.</p>
                     </item>
                     <item>
                        <p>Check that scripts for reordering are triggered only from the onclick event of links.</p>
                     </item>
                     <item>
                        <p>Check that items are reordered in the DOM, not only visually.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 through #5 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR28" diff="add">
            <short-name>Using an expandable and collapsible menu to bypass block of content</short-name>
            <applicability>
               <p>Technologies that provide client side scripting.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-skip"/>
            </applies-to>
            <description>
               <p>This technique allows users to skip repeated material by placing that material in a menu that can be expanded or collapsed under user control. The user can skip the repeated material by collapsing the menu. The user invokes a user interface control to hide or remove the elements of the menu. The resources section lists several techniques for menus, toolbars and trees, any of which can be used to provide a mechanism for skipping navigation.</p>
               <note>
                  <p>Similiar approaches can be implemented using server-side scripting and reloading a modified version of the Web page.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The navigation links at top of a Web page are all entries in a menu implemented using HTML, CSS, and Javascript. When the navigation bar is expanded, the navigation links are available to the user. When the navigation bar is collapsed, the links are not available.</p>
                  </description>
                  <code>
...

  &lt;script type="text/javascript"&gt;
  function toggle(id){
    var n = document.getElementById(id);
    n.style.display =  (n.style.display != 'none' ? 'none' : '' );
  }
  &lt;/script&gt;

...

  &lt;a href="#" onclick="toggle("navbar")"&gt;Toggle Navigation Bar&lt;/a&gt;

  &lt;ul&gt; id="navbar"&gt;
  &lt;li&gt;&lt;a href="http://target1.html"&gt;Link 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://target2.html"&gt;Link 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://target3.html"&gt;Link 3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://target4.html"&gt;Link 4&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

...
</code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="toggle-navbar.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Toggle navigation bar with a link</loc>.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>The table of contents for a set of Web pages is repeated near the beginning of each Web page. A button at the beginning of the table of contents lets the user remove or restore it on the page.</p>
                  </description>
                  <code>
...

   &lt;script type="text/javascript"&gt;
  function toggle(id){
    var n = document.getElementById(id);
    n.style.display =  (n.style.display != 'none' ? 'none' : '' );
  }
  &lt;/script&gt;

  ...

  &lt;button onclick="return toggle('toc');"&gt;Toggle Table of Contents&lt;/button&gt;
  &lt;div id="toc"&gt;
    ...
  &lt;/div&gt;

...
</code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="toggle-toc.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Toggle table of contents with a button</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.bobbyvandersluis.com/articles/unobtrusive_show_hide/index.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Unobtrusive show/hide behavior reloaded</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.dustindiaz.com/seven-togglers/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Seven ways to toggle an element with JavaScript</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H69"/>
               <relatedtech idref="H50"/>
               <relatedtech idref="H70"/>
               <!--  @@  the following were unaccepted wiki drafts at the time this tech was xmlized
                    # Using lists and links to make a click menu
                    # Using lists and links to make a hover menu
                    # Using lists and links to make a toolbar
                    # Using lists and links to make a menu bar
                    # Using lists and links to make a tree control --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that some user interface control allows the repeated content to be expanded or collapsed.</p>
                     </item>
                     <item>
                        <p>Check that when the content is expanded, it is included in the programmatically determined content at a logical place in the reading order.</p>
                     </item>
                     <item>
                        <p>Check that when the content is collapsed, it is not part of the programmatically determined content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR29" diff="add">
            <short-name>Adding keyboard-accessible actions to static HTML elements</short-name>
            <applicability>
               <p>HTML and XHTML, Script</p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="keyboard-operation-all-funcs"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>
                     <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.w3.org/TR/html4/interact/forms.html#adef-tabindex"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">HTML 4.01</loc> only defines the tabindex attribute for <code>a</code>, <code>area</code>, <code>button</code>, <code>input</code>, <code>object</code>, <code>select</code>, and <code>textarea</code>, and limits its value to the range between 0 and 32767. The use of <code>tabindex</code> with other element types and the tabindex value -1 is supported in Internet Explorer 5.01 and higher, and Firefox 1.5 and higher, Opera 9.5 and higher and Camino. Note that modifying focus through script can cause unpredictable behavior in screen readers that use a virtual cursor. 
                </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to demonstrate how to provide keyboard access to a user interface control that is implemented by actions to static HTML elements such as <code>div</code> or <code>span</code>. This technique ensures that the element is focusable by setting the <code>tabindex</code> attribute, and it ensures that the action can be triggered from the keyboard by providing an <code>onkeyup</code> or <code>onkeypress</code> handler in addition to an <code>onclick</code> handler. </p>
               <p>When the <code>tabindex</code> attribute has the value 0, the element can be focused via the keyboard and is included in the tab order of the document. When the <code>tabindex</code> attribute has the value -1, the element cannot be tabbed to, but focus can be set programmatically, using <code>element.focus()</code>.</p>
               <p>Because static HTML elements do not have actions associated with them, it is not possible to provide a backup implementation or explanation in environments in which scripting is not available. This technique should only be used in environments in which client-side scripting can be relied upon.</p>
               <note>
                  <p> Such user interface controls must still satisfy Success Criterion 4.1.2. Applying this technique without also providing role, name, and state information about the user interface control will results in Failure F59, Failure of Success Criterion 4.1.2 due to using script to make div or span a user interface control in HTML.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head> Adding a JavaScript action to a div element</head>
                  <description>
                     <p>The <code>div</code> element on the page is given a unique <code>id</code> attribute and a <code>tabindex</code> attribute with value 0.  A script uses the Document Object Model (DOM) to find the <code>div</code> element by its id and add the <code>onclick</code> handler and the <code>onkeyup</code> handler. The <code>onkeyup</code> handler will invoke the action when the Enter key is pressed. Note that the <code>div</code> element must be loaded into the DOM before it can be found and modified. This is usually accomplished by calling the script from the <code>onload</code> event of the <code>body</code> element.  The script to add the event handlers will only execute if the user agent supports and has JavaScript enabled.   </p>
                  </description>
                  <code>
...
&lt;script type="text/javascript"&gt;
 // this is the function to perform the action. This simple example toggles a message.
 function doSomething(event) {
   var msg=document.getElementById("message");
   msg.style.display = msg.style.display=="none" ? "" : "none";
   //return false from the function to make certain that the href of the link does not get invoked
   return false;
 }
 // this is the function to perform the action when the Enter key has been pressed.  
 function doSomethingOnEnter(event) {
   var key = 0;
   // Determine the key pressed, depending on whether window.event or the event object is in use
   if (window.event) {
     key = window.event.keyCode;
   } else if (event) {
     key = event.keyCode;
   }
   // Was the Enter key pressed?
   if (key == 13) {
     return doSomething(event);
   } 
   // The event has not been handled, so return true
   return true;
 }
 // This setUpActions() function must be called to set the onclick and onkeyup event handlers onto the existing 
 // div element. This function must be called after the div element with id="active" has been loaded into the DOM.
 // In this example the setUpActions() function is called from the onload event for the body element.
 function setUpActions() {
   // get the div object
   var active=document.getElementById("active");
   // assign the onclick handler to the object.
   // It is important to return false from the onclick handler to prevent the href attribute
   // from being followed after the function returns.
   active.onclick=doSomething;
   // assign the onkeyup handler to the object.
   active.onkeyup=doSomethingOnEnter;
 }
 &lt;/script&gt;

 &lt;body onload="setUpActions();"&gt;
 &lt;p&gt;Here is the link to modify with a javascript action:&lt;/p&gt;
 &lt;div&gt;
  &lt;span id="active" tabindex="0"&gt;Do Something&lt;/span&gt;
 &lt;/div&gt;
 &lt;div id="message"&gt;Hello, world!&lt;/div&gt;
...
</code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="action-on-div.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Creating Divs with Actions using JavaScript</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/interact/scripts.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Scripts</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.11"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Giving focus to an element</loc>
                        </p>
                     </item>
                     <item>
                        <p>Accessible Rich Internet Applications (WAI-ARIA) Version 1.0 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/wai-aria/#global_states"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Global States and Properties</loc>
                        </p>
                     </item>
                     <item>
                        <p>WAI-ARIA Primer, <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/wai-aria-primer/#focus"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Provision of the keyboard or input focus</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/DOM/DOMTR"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Document Object Model (DOM) Technical Reports</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://developer.mozilla.org/en/docs/Accessible_DHTML"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Firefox support for ARIA: Accessible Rich Internet Applications</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn.microsoft.com/en-us/library/ms534654(VS.85).aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Internet Explorer, HTML and DHTML Reference, tabIndex Property</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SCR20"/>
               <relatedtech idref="SCR24"/>
               <relatedtech idref="F59"/>
               <!-- @@ Making JavaScript actions keyboard accessible by using the onclick event of anchors and buttons  --></related-techniques>
            <tests>
               <procedure>
                  <p>In a user agent that supports Scripting:</p>
                  <olist>
                     <item>
                        <p>Click on the control with the mouse</p>
                     </item>
                     <item>
                        <p>Check that the scripting action executes properly</p>
                     </item>
                     <item>
                        <p>Check that it is possible to navigate to and give focus to the control via the keyboard</p>
                     </item>
                     <item>
                        <p>Set keyboard focus to the control</p>
                     </item>
                     <item>
                        <p>Check that pressing ENTER invokes the scripting action.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the checks are true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR30" diff="add">
            <short-name>Using scripts to change the link text</short-name>
            <applicability>
               <p>Client-side scripting used with HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <description>
               <p>The purpose of this technique is to allow users to choose to have additional information added to the text of links so that the links can be understood out of context.</p>
               <p>Some users prefer to have links that are self-contained, where there is no need to explore the context of the link. Other users find including the context information in each link to be repetitive and to reduce their ability to use a site. Among users of assistive technology, the feedback to the working group on which is preferable has been divided. This technique allows users to pick the approach that works best for them.</p>
               <p>A link is provided near the beginning of the page that will expand the link text of the links on the page so that no additional context is needed to understand the purpose of any link. It must always be possible to understand purpose of the expansion link directly from its link text.</p>
               <p>This technique expands the links only for the current page view. It is also possible, and in some cases would be advisable, to save this preference in a cookie or server-side user profile, so that users would only have to make the selection once per site. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example uses Javascript to add contextual information directly to the text of a link. The link class is used to determine which additional text to add. When the "Expand Links" link is activated, each link on the page is tested to see whether additional text should be added.</p>
                  </description>
                  <code>
...
&lt;script&gt;
 var linkContext = {
   "hist":" version of The History of the Web",
   "cook":" version of Cooking for Nerds"
 };

 function doExpand() {
   var links = document.links;
   var link;

   for (link in links) {
     var cn = links[link].className;
     if (linkContext[cn]) {
       links[link].appendChild(document.createTextNode(linkContext[cn]));
     }
   }
 }
&lt;/script&gt;

&lt;h1&gt;Books for download&lt;/h1&gt;
&lt;p&gt;&lt;a href="#" onclick="doExpand();"&gt;Expand Links&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The History of the Web: 
&lt;a href="history.docx" class="hist"&gt;Word&lt;/a&gt;, 
&lt;a href="history.pdf" class="hist"&gt;PDF&lt;/a&gt;, 
&lt;a href="history.html" class="hist"&gt;HTML&lt;/a&gt;
&lt;/li&gt;

&lt;li&gt;Cooking for Nerds: 
&lt;a href="history.docx" class="cook"&gt;Word&lt;/a&gt;, 
&lt;a href="history.pdf" class="cook"&gt;PDF&lt;/a&gt;, 
&lt;a href="history.html" class="cook"&gt;HTML&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

...
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G91"/>
               <relatedtech idref="H30"/>
               <relatedtech idref="H33"/>
               <relatedtech idref="C7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that there is a link near the beginning of the page to expand links</p>
                     </item>
                     <item>
                        <p>If the link identified in step 1 is a link, check that it can be identified from link text alone</p>
                     </item>
                     <item>
                        <p>Find any links on the page that cannot be identified from link text alone</p>
                     </item>
                     <item>
                        <p>Activate the control identified in step 1</p>
                     </item>
                     <item>
                        <p>Check that the purpose of the links identified in step 3 can now be identified from link text alone</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #1, #2, and #5 are true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR31" diff="add">
            <short-name>Using script to change the background color or border of the element with focus</short-name>
            <applicability>
               <p>HTML and XHTML, CSS, Script</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>This technique can be used on user agents that don't support the <code>:focus</code> pseudoclass but do support script, including Microsoft Internet Explorer.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>This purpose of this technique is to allow the author to use JavaScript to apply CSS, in order to make the focus indicator more visible than it would ordinarily be. When an element receives focus, the background color or border is changed to make it visually distinct. When the element loses focus, it returns to its normal styling. This technique can be used on any HTML user agent that supports Script and CSS, regardless of whether it supports the :focus pseudoclass.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>In this example, when the link receives focus, its background turns yellow. When it loses focus, the yellow is removed. Note that if the link had a background color to begin with, you would use that color rather than "" in the script.</p>
                  </description>
                  <code>
...
&lt;script&gt;
 function toggleFocus(el)
 {
  el.style.backgroundColor =  el.style.backgroundColor=="yellow" ? "inherit" : "yellow";
 }
&lt;/script&gt;

...

&lt;a href="example.html" onfocus="toggleFocus(this)" onblur="toggleFocus(this)"&gt;focus me&lt;/a&gt;
...
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C15"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Tab to each element in the page</p>
                     </item>
                     <item>
                        <p>Check that the focus indicator is visible</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Step #2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR32" diff="add">
            <short-name>Providing client-side validation and adding error text via the DOM</short-name>
            <applicability>
               <p>Script used with HTML or XHTML.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-identified"/>
               <success-criterion idref="minimize-error-suggestions"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to demonstrate the display of an error message when client side validation of a form field has failed. Anchor elements are used to display the error messages in a list and are inserted above the fields to be validated. Anchor elements are used in the error messages so that focus can be placed on the error message(s), drawing the user's attention to it. The <att>href</att> of the anchor elements contain an in-page link which references the fields where error(s) have been found. </p>
               <p>In a deployed application, if Javascript is turned off, client side validation will not occur. Therefore, this technique would only be sufficient in situations where scripting is relied upon for conformance or when server side validation techniques are also used to catch any errors and return the page with information about the fields with errors. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example validates required fields as well as fields where a specific format is required. When an error is identified, the script inserts a list of error messages into the DOM and moves focus to them.</p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/SCR32/form2.jpg"
                              alt="Screenshot showing the error messages for several fields that were not filled out correctly. Error messages appear as a list of links near the top of the form."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                     <p>
                        <emph role="strong">HTML and Javascript code </emph>
                     </p>
                     <p>Here is the HTML for the example form: </p>
                  </description>
                  <code>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Form Validation&lt;/title&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"/&gt;
        &lt;link href="css/validate.css" rel="stylesheet" type="text/css"/&gt;
        &lt;script type="text/javascript" src="scripts/validate.js"/&gt;
    &lt;/head&gt;
    &lt;body&gt;

        &lt;h1&gt;Form Validation&lt;/h1&gt;

        &lt;p&gt;The following form is validated before being submitted if scripting is available,
            otherwise the form is validated on the server. All fields are required, except those
            marked optional. If errors are found in the submission, the form is cancelled and 
            a list of errors is displayed at the top of the form.&lt;/p&gt;

        &lt;p&gt; Please enter your details below. &lt;/p&gt;

        &lt;h2&gt;Validating Form&lt;/h2&gt;

        &lt;form id="personalform" method="post" action="index.php"&gt;
            &lt;div class="validationerrors"/&gt;
            &lt;fieldset&gt;
                &lt;legend&gt;Personal Details&lt;/legend&gt;
                &lt;p&gt;
                    &lt;label for="forename"&gt;Please enter your forename&lt;/label&gt;
                    &lt;input type="text" size="20" name="forename" id="forename" class="string"
                        value=""/&gt;
                &lt;/p&gt;
                &lt;p&gt;
                    &lt;label for="age"&gt;Please enter your age&lt;/label&gt;
                    &lt;input type="text" size="20" name="age" id="age" class="number" value=""/&gt;
                &lt;/p&gt;
                &lt;p&gt;
                    &lt;label for="email"&gt;Please enter your email address&lt;/label&gt;
                    &lt;input type="text" size="20" name="email" id="email" class="email" value=""/&gt;
                &lt;/p&gt;
            &lt;/fieldset&gt;
            &lt;p&gt;
                &lt;input type="submit" name="signup" value="Sign up"/&gt;
            &lt;/p&gt;
        &lt;/form&gt;
        &lt;h2&gt;Second Form&lt;/h2&gt;
        &lt;form id="secondform" method="post" action="index.php#focuspoint"&gt;
            &lt;div class="validationerrors"/&gt;
            &lt;fieldset&gt;
                &lt;legend&gt;Second Form Details&lt;/legend&gt;
                &lt;p&gt;
                    &lt;label for="suggestion"&gt;Enter a suggestion&lt;/label&gt;
                    &lt;input type="text" size="20" name="suggestion" id="suggestion" 
                      class="string" value=""/&gt;
                &lt;/p&gt;
                &lt;p&gt;
                    &lt;label for="optemail"&gt;Please enter your email address (optional)&lt;/label&gt;
                    &lt;input type="text" size="20" name="optemail" id="optemail"
                        class="optional email" value=""/&gt;
                &lt;/p&gt;
                &lt;p&gt;
                    &lt;label for="rating"&gt;Please rate this suggestion&lt;/label&gt;
                    &lt;input type="text" size="20" name="rating" id="rating" 
                      class="number" value=""/&gt;
                &lt;/p&gt;
                &lt;p&gt;
                    &lt;label for="jibberish"&gt;Enter some jibberish (optional)&lt;/label&gt;
                    &lt;input type="text" size="20" name="jibberish" id="jibberish" value=""/&gt;
                &lt;/p&gt;

            &lt;/fieldset&gt;
            &lt;p&gt;
                &lt;input type="submit" name="submit" value="Add Suggestion"/&gt;
            &lt;/p&gt;
        &lt;/form&gt;
    &lt;/body&gt;
&lt;/html&gt;                      </code>
                  <description>
                     <p>Here is the Javascript which performs the validation and inserts the error messages: </p>
                  </description>
                  <code>
window.onload = initialise;

function initialise()
{
   var objForms = document.getElementsByTagName('form');
   var iCounter;

   // Attach an event handler for each form
   for (iCounter=0; iCounter&lt;objForms.length; iCounter++)
   {
      objForms[iCounter].onsubmit = function(){return validateForm(this);};
   }
}


// Event handler for the form
function validateForm(objForm)
{
   var arClass = [];
   var iErrors = 0;
   var objField = objForm.getElementsByTagName('input');
   var objLabel = objForm.getElementsByTagName('label');
   var objList = document.createElement('ol');
   var objError, objExisting, objNew, objTitle, objParagraph, objAnchor, objPosition;
   var strLinkID, iFieldCounter, iClassCounter, iCounter;

   // Get the id or name of the form, to make a unique
   // fragment identifier
   if (objForm.id)
   {
      strLinkID = objForm.id + 'ErrorID';
   }
   else
   {
      strLinkID = objForm.name + 'ErrorID';
   }

   // Iterate through input form controls, looking for validation classes
   for (iFieldCounter=0; iFieldCounter&lt;objField.length; iFieldCounter++)
   {
      // Get the class for the field, and look for the appropriate class
      arClass = objField[iFieldCounter].className.split(' ');
      for (iClassCounter=0; iClassCounter&lt;arClass.length; iClassCounter++)
      {
         switch (arClass[iClassCounter])
         {
            case 'string':
               if (!isString(objField[iFieldCounter].value, arClass))
               {
                  if (iErrors === 0)
                  {
                     logError(objField[iFieldCounter], objLabel, objList, strLinkID);
                  }
                  else
                  {
                     logError(objField[iFieldCounter], objLabel, objList, '');
                  }
                  iErrors++;
               }
               break;
            case 'number':
               if (!isNumber(objField[iFieldCounter].value, arClass))
               {
                  if (iErrors === 0)
                  {
                     logError(objField[iFieldCounter], objLabel, objList, strLinkID);
                  }
                  else
                  {
                     logError(objField[iFieldCounter], objLabel, objList, '');
                  }
                  iErrors++;
               }
               break;

            case 'email' :
               if (!isEmail(objField[iFieldCounter].value, arClass))
               {
                  if (iErrors === 0)
                  {
                     logError(objField[iFieldCounter], objLabel, objList, strLinkID);
                  }
                  else
                  {
                     logError(objField[iFieldCounter], objLabel, objList, '');
                  }
                  iErrors++;
               }
               break;
         }
      }
   }

   if (iErrors &gt; 0)
   {
      // If not valid, display error messages
      objError = objForm.getElementsByTagName('div');
      
      // Look for existing errors
      for (iCounter=0; iCounter&lt;objError.length; iCounter++)
      {
         if (objError[iCounter].className == 'validationerrors')
         {
            objExisting = objError[iCounter];
         }
      }

      objNew = document.createElement('div');
      objTitle = document.createElement('h2');
      objParagraph = document.createElement('p');
      objAnchor = document.createElement('a');

      if (iErrors == 1)
      {
         objAnchor.appendChild(document.createTextNode('1 Error in Submission'));
      }
      else
      {
         objAnchor.appendChild(document.createTextNode(iErrors + ' Errors in Submission'));
      }
      objAnchor.href = '#' + strLinkID;
      objAnchor.className = 'submissionerror';

      objTitle.appendChild(objAnchor);
      objParagraph.appendChild(document.createTextNode('Please review the following'));
      objNew.className = 'validationerrors';

      objNew.appendChild(objTitle);
      objNew.appendChild(objParagraph);
      objNew.appendChild(objList);
      
      // If there were existing error, replace them with the new lot,
      // otherwise add the new errors to the start of the form
      if (objExisting)
      {
         objExisting.parentNode.replaceChild(objNew, objExisting);
      }
      else
      {
         objPosition = objForm.firstChild;
         objForm.insertBefore(objNew, objPosition);
      }

      // Allow for latency
      setTimeout(function() { objAnchor.focus(); }, 50);
      
      // Don't submit the form
      objForm.submitAllowed = false;
      return false;
   }

   // Submit the form
   return true;
}

// Function to add a link in a list item that points to problematic field control
function addError(objList, strError, strID, strErrorID)
{
   var objListItem = document.createElement('li');
   var objAnchor = document.createElement('a');
   
   // Fragment identifier to the form control
   objAnchor.href='#' + strID;

   // Make this the target for the error heading
   if (strErrorID.length &gt; 0)
   {
      objAnchor.id = strErrorID;
   }

   // Use the label prompt for the error message
   objAnchor.appendChild(document.createTextNode(strError));
   // Add keyboard and mouse events to set focus to the form control
   objAnchor.onclick = function(event){return focusFormField(this, event);};
   objAnchor.onkeypress = function(event){return focusFormField(this, event);};
   objListItem.appendChild(objAnchor);
   objList.appendChild(objListItem);
}

function focusFormField(objAnchor, objEvent)
{
   var strFormField, objForm;

   // Allow keyboard navigation over links
   if (objEvent &amp;&amp; objEvent.type == 'keypress')
   {
      if (objEvent.keyCode != 13 &amp;&amp; objEvent.keyCode != 32)
      {
         return true;
      }
   }

   // set focus to the form control
   strFormField = objAnchor.href.match(/[^#]\w*$/);
   objForm = getForm(strFormField);
   objForm[strFormField].focus();
   return false;
}

// Function to return the form element from a given form field name
function getForm(strField)
{
   var objElement = document.getElementById(strField);

   // Find the appropriate form
   do
   {
      objElement = objElement.parentNode;
   } while (!objElement.tagName.match(/form/i) &amp;&amp; objElement.parentNode);

   return objElement;
}

// Function to log the error in a list
function logError(objField, objLabel, objList, strErrorID)
{
   var iCounter, strError;

   // Search the label for the error prompt
   for (iCounter=0; iCounter&lt;objLabel.length; iCounter++)
   {
      if (objLabel[iCounter].htmlFor == objField.id)
      {
         strError = objLabel[iCounter].firstChild.nodeValue;
      }
   }

   addError(objList, strError, objField.id, strErrorID);
}

// Validation routines - add as required

function isString(strValue, arClass)
{
   var bValid = (typeof strValue == 'string' &amp;&amp; strValue.replace(/^\s*|\s*$/g, '') 
     !== '' &amp;&amp; isNaN(strValue));

   return checkOptional(bValid, strValue, arClass);
}

function isEmail(strValue, arClass)
{
   var objRE = /^[\w-\.\']{1,}\@([\da-zA-Z\-]{1,}\.){1,}[\da-zA-Z\-]{2,}$/;
   var bValid = objRE.test(strValue);

   return checkOptional(bValid, strValue, arClass);
}

function isNumber(strValue, arClass)
{
   var bValid = (!isNaN(strValue) &amp;&amp; strValue.replace(/^\s*|\s*$/g, '') !== '');

   return checkOptional(bValid, strValue, arClass);
}

function checkOptional(bValid, strValue, arClass)
{
   var bOptional = false;
   var iCounter;

   // Check if optional
   for (iCounter=0; iCounter&lt;arClass.length; iCounter++)
   {
      if (arClass[iCounter] == 'optional')
      {
         bOptional = true;
      }
   }

   if (bOptional &amp;&amp; strValue.replace(/^\s*|\s*$/g, '') === '')
   {
      return true;
   }

   return bValid;
   }
   </code>
                  <description>
                     <p>Here is a working example of this technique implemented using PHP, Javascript, CSS and XHTML: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="index.php" linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Form Validation Example</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G83"/>
               <relatedtech idref="G85"/>
               <relatedtech idref="SCR18"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>Create error messages using anchor tags and appropriate scripting via the technique above. </p>
                  <olist>
                     <item>
                        <p>Load the page.</p>
                     </item>
                     <item>
                        <p>Enter a valid value in the field(s) associated with an error message and verify that no error messages are displayed. </p>
                     </item>
                     <item>
                        <p>Enter an invalid value in the field(s) associated with an error message and verify that the correct error message for the field is displayed. </p>
                     </item>
                     <item>
                        <p>Verify that the error messages receive focus.</p>
                     </item>
                     <item>
                        <p>Enter a valid value in the field(s) associated with the displayed error message and verify that the error message is removed. </p>
                     </item>
                     <item>
                        <p>Repeat for all fields with associated error messages created via anchor tags. </p>
                     </item>
                  </olist>
                  <note>
                     <p>It is recommended that you also run the above procedure using an assistive technology. </p>
                  </note>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2, #3, #4, and #5 are all true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR33" diff="add">
            <short-name>Using script to scroll content, and providing a mechanism to pause it</short-name>
            <applicability>
               <p>Technologies that support script-controlled scrolling of content. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a way for users to stop scrolling content when the scrolling is created by a script. Scrolling content can be difficult or impossible to read by users with low vision or with cognitive disabilities. The movement can also be distracting for some people making it difficult for them to concentrate on other parts of the Web page. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>In this example CSS and Javascript are used to visually present some text in a scrolling format. A link is included to pause the scrolling movement. </p>
                     <p>This implementation will display the full text and omit the link when Javascript or CSS are unsupported or inactive. </p>
                     <p>The following code is an amended version of webSemantic's Accessible Scroller (as at July 2008). </p>
                     <p>The XHTML component: </p>
                  </description>
                  <code>
...
&lt;div id="scroller"&gt;
&lt;p id="tag"&gt;This text will scroll and a Pause/Scroll link will be present 
when Javascript and CSS are supported and active.&lt;/p&gt;
&lt;/div&gt;
...
</code>
                  <description>
                     <p>The CSS component: </p>
                  </description>
                  <code>
...
body {font:1em verdana,sans-serif; color:#000; margin:0}

/* position:relative and overflow:hidden are required */
#scroller { position:relative; overflow:hidden; width:15em; border:1px solid #008080; }

/* add formatting for the scrolling text */
#tag { margin:2px 0; }

/* #testP must also contain all text-sizing properties of #tag  */
#testP { visibility:hidden; position:absolute; white-space:nowrap; } 

/* used as a page top marker and to limit width */
#top { width:350px; margin:auto; }
...
</code>
                  <description>
                     <p>The JavaScript component: </p>
                  </description>
                  <code>
var speed=50        // speed of scroller
var step=3          // smoothness of movement
var StartActionText= "Scroll"  // Text for start link
var StopActionText = "Pause"   // Text for stop link

var x, scroll, divW, sText=""

function onclickIE(idAttr,handler,call){
  if ((document.all)&amp;&amp;(document.getElementById)){idAttr[handler]="Javascript:"+call}
}

function addLink(id,call,txt){
  var e=document.createElement('a')
  e.setAttribute('href',call)
  var linktext=document.createTextNode(txt)
  e.appendChild(linktext)
  document.getElementById(id).appendChild(e)
}

function getElementStyle() {
    var elem = document.getElementById('scroller');
    if (elem.currentStyle) {
        return elem.currentStyle.overflow;
    } else if (window.getComputedStyle) {
        var compStyle = window.getComputedStyle(elem, '');
        return compStyle.getPropertyValue("overflow");
    }
    return "";
}

function addControls(){
// test for CSS support first 
// test for the overlow property value set in style element or external file
if (getElementStyle()=="hidden") {
  var f=document.createElement('div');
  f.setAttribute('id','controls');
  document.getElementById('scroller').parentNode.appendChild(f);
  addLink('controls','Javascript:clickAction(0)',StopActionText);
  onclickIE(document.getElementById('controls').childNodes[0],"href",'clickAction(0)');
  document.getElementById('controls').style.display='block';
  }
}

function stopScroller(){clearTimeout(scroll)}

function setAction(callvalue,txt){
  var c=document.getElementById('controls')
  c.childNodes[0].setAttribute('href','Javascript:clickAction('+callvalue+')')
  onclickIE(document.getElementById('controls').childNodes[0],"href",'clickAction

('+callvalue+')')
  c.childNodes[0].firstChild.nodeValue=txt
}

function clickAction(no){
  switch(no) {
    case 0:
      stopScroller();
      setAction(1,StartActionText);
      break;
    case 1:
      startScroller();
      setAction(0,StopActionText);
  }
}

function startScroller(){
  document.getElementById('tag').style.whiteSpace='nowrap'
  var p=document.createElement('p')
  p.id='testP'
  p.style.fontSize='25%' //fix for mozilla. multiply by 4 before using
  x-=step
  if (document.getElementById('tag').className) p.className=document.getElementById

('tag').className
  p.appendChild(document.createTextNode(sText))
  document.body.appendChild(p)
  pw=p.offsetWidth
  document.body.removeChild(p)
  if (x&lt;(pw*4)*-1){x=divW}
  document.getElementById('tag').style.left=x+'px'
  scroll=setTimeout('startScroller()',speed)
}

function initScroller(){
  if (document.getElementById &amp;&amp; document.createElement &amp;&amp; document.body.appendChild) {
    addControls();
    divW=document.getElementById('scroller').offsetWidth;
    x=divW;
    document.getElementById('tag').style.position='relative';
    document.getElementById('tag').style.left=divW+'px';
    var ss=document.getElementById('tag').childNodes;
    for (i=0;i&lt;ss.length;i++) {sText+=ss[i].nodeValue+" "};
    scroll=setTimeout('startScroller()',speed);
  }
}

function addLoadEvent(func) {
  if (!document.getElementById | !document.getElementsByTagName) return
  var oldonload = window.onload
  if (typeof window.onload != 'function') {
    window.onload = func;
  } else {
    window.onload = function() {
      oldonload()
      func()
    }
  }
}

addLoadEvent(initScroller)
</code>
                  <description>
                     <p>A working example of this code, <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="Overview.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Example of using script to scroll content and providing a mechanism to pause it</loc>, is available.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.websemantics.co.uk/tutorials/accessible_scroller/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">webSemantics Accessible Scroller</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G4"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that a mechanism is provided to pause the scrolling content. </p>
                     </item>
                     <item>
                        <p>Use the pause mechanism to pause the scrolling content. </p>
                     </item>
                     <item>
                        <p>Check that the scrolling has stopped and does not restart by itself. </p>
                     </item>
                     <item>
                        <p>Check that a mechanism is provided to restart the paused content. </p>
                     </item>
                     <item>
                        <p>Use the restart mechanism provided to restart the scrolling content. </p>
                     </item>
                     <item>
                        <p>Check that the scrolling has resumed from the point where it was stopped. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #3 and #6 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR34" diff="add">
            <short-name>Calculating size and position in a way that scales with text size</short-name>
            <applicability>
               <p>Client-side scripting.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Calculating size and position can be complex and different browsers can produce different results. This can occur when the CSS styling mixes padding, margins and widths for an object, or when it mixes an offset and plain value, e.g., offsetWidth and width. Some of these behave differently in reaction to zooming. See <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://msdn.microsoft.com/en-us/library/bb250395(VS.85).aspx#cssenhancements_topic3"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">MSDN: Fix the Box Instead of Thinking Outside It</loc> for an explanation of the way that Internet Explorer 6 and later differ from earlier versions of Internet Explorer. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to calculate the size and position of elements in a way that will scale appropriately as the text size is scaled. </p>
               <p>There are four properties in JavaScript that help determine the size and position of elements: </p>
               <ulist>
                  <item>
                     <p>
                        <code>offsetHeight</code> (the height of the element in pixels) </p>
                  </item>
                  <item>
                     <p>
                        <code>offsetWidth</code> (the width of the element in pixels) </p>
                  </item>
                  <item>
                     <p>
                        <code>offsetLeft</code> (the distance of the element from the left of its parent (offsetParent) in pixels) </p>
                  </item>
                  <item>
                     <p>
                        <code>offsetTop</code> (the distance of the element from the top of its parent (offsetParent) in pixels) </p>
                  </item>
               </ulist>
               <p>Calculating the height and width using <code>offsetHeight</code> and <code>offsetWidth</code> is straightforward, but when calculating an object's left and top position as absolute values, we need to consider the parent element. The <code>calculatePosition</code> function below iterates through all of an element's parent nodes to give a final value. The function takes two parameters; <code>objElement</code> (the name of the element in question), and the offset property (<code>offsetLeft</code> or <code>offsetTop</code>): </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The Javascript function:</p>
                  </description>
                  <code>
function calculatePosition(objElement, strOffset)
{
    var iOffset = 0;

    if (objElement.offsetParent)
    {
        do 
        {
            iOffset += objElement[strOffset];
            objElement = objElement.offsetParent;
        } while (objElement);
    }

    return iOffset;
}

</code>
                  <description>
                     <p>The following example illustrates using the function above by aligning an object beneath a reference object, the same distance from the left: </p>
                  </description>
                  <code>
// Get a reference object
var objReference = document.getElementById('refobject');
// Get the object to be aligned
var objAlign = document.getElementById('lineup');

objAlign.style.position = 'absolute';
objAlign.style.left = calculatePosition(objReference, 'offsetLeft') + 'px';
objAlign.style.top = calculatePosition(objReference, 'offsetTop') + objReference.offsetHeight + 'px'; 
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn.microsoft.com/en-us/library/bb250395(VS.85).aspx#cssenhancements_topic3"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">MSDN: Fix the Box Instead of Thinking Outside It</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C12"/>
               <relatedtech idref="C14"/>
               <relatedtech idref="C17"/>
               <relatedtech idref="C20"/>
               <relatedtech idref="C24"/>
               <relatedtech idref="C26"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open a page that is designed to adjust container sizes as text size changes. </p>
                     </item>
                     <item>
                        <p>Increase the text size up to 200% using the browser's text size adjustment (not the zoom feature). </p>
                     </item>
                     <item>
                        <p>Examine the text to ensure the text container size is adjusted to accommodate the size of the text. </p>
                     </item>
                     <item>
                        <p>Ensure that no text is "clipped" or has disappeared as a result of the increase in text size. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #3 and #4 are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR35" diff="add">
            <short-name>Making actions keyboard accessible by using the onclick event of anchors and buttons</short-name>
            <applicability>
               <p>Script used with HTML or XHTML.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="keyboard-operation-all-funcs"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to demonstrate how to invoke a scripting function in a way that is keyboard accessible by attaching it to a keyboard-accessible control. In order to ensure that scripted actions can be invoked from the keyboard, they are associated with "natively actionable" HTML elements (links and buttons). The onclick event of these elements is device independent. While "onclick" sounds like it is tied to the mouse, the onclick event is actually mapped to the default action of a link or button. The default action occurs when the user clicks the element with a mouse, but it also occurs when the user focuses the element and hits enter or space, and when the element is triggered via the accessibility API.</p>
               <p>Although this technique relies on client-side scripting, it is beneficial to provide a backup implementation or explanation for environments in which scripting is not available. When using anchor elements to invoke a JavaScript action, a backup implementation or explanation is provided via the <att>href</att> attribute. When using buttons, it is provided via a form post. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>Link that runs a script and has no fallback for non-scripted browsers. This approach should only be used when script is relied upon as an Accessibility Supported Tecnology.</p>
                     <p>Even though we do not want to navigate from this link, we must use the href attribute on the <el>a</el> element in order to make this a true link and get the proper eventing. In this case, we're using "#" as the link target, but you could use anything. This link will never be navigated.</p>
                     <p>The "return false;" at the end of the doStuff() event handling function tells the browser not to navigate to the URI. Without it, the page would refresh after the script ran. </p>
                  </description>
                  <code>
&lt;script&gt; 
function doStuff()
 {
  //do stuff
    return false;
  }
&lt;/script&gt;
&lt;a href="#" onclick="return doStuff();"&gt;do stuff&lt;/a&gt;
</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Link that runs script, but navigates to another page when script is not available. This approach can be used by sites that don't rely on script, if and only if the navigation target provides the same functionality as the script. This example is identical to the example 1, except that its href is now set to a real page, dostuff.htm. Dostuff.htm must provide the same functionality as the script.The "return false;" at the end of the doStuff() event handling function tells the browser not to navigate to the URI. Without it, the browser would navigate to dostuff.htm after the script ran.</p>
                  </description>
                  <code>
&lt;script&gt; 
function doStuff() 
 {  
  //do stuff  
  return false; 
 }
&lt;/script&gt;
&lt;a href="dostuff.htm" onclick="return doStuff();"&gt;do stuff&lt;/a&gt;
</code>
                  <description>
                     <p>A working example of this code is available. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="jslink.html" linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Creating Action Links using JavaScript</loc>.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Button that runs a script and falls back to a form post for users without script. This approach can be used by sites that do not rely on script, if and only if the form post provides the same functionality as the script. The onsubmit="return false;" prevents the form from submitting. </p>
                  </description>
                  <code>
&lt;script&gt;
  function doStuff()
 {
     //do stuff
 }
&lt;/script&gt;
&lt;form action="doStuff.aspx" onsubmit="return false;"&gt;
 &lt;input type="submit" value="Do Stuff" onclick="doStuff();" /&gt;
&lt;/form&gt;
</code>
                  <description>
                     <p>A working example of this code is available. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="jsbutton.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Creating Action Buttons using JavaScriptt</loc>.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Button that runs a script, implemented with <code>input type="image"</code>. Note that a title attribute must be added to the <el>input</el> to provide a text equivalent for the image. This approach should only be used when script is relied upon. </p>
                  </description>
                  <code>
&lt;script&gt;
  function doStuff()
  {
     //do stuff
   return false;
  }
&lt;/script&gt;
&lt;input  type="image"  src="stuff.gif"  title="Do stuff"  onclick="return doStuff();" /&gt;
</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Button that runs a script, implemented with <code>input type="submit"</code>, <code>input type="reset"</code> or <code>input type="button"</code>. This approach should only be used when script is relied upon.  </p>
                  </description>
                  <code>
&lt;input type="submit" onclick="return doStuff();" value=”Do Stuff” /&gt;
</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p>Button that runs a script, implemented with <el>button</el>…<el>/button</el>. This is valuable when you want more control over the look of your button. In this particular example, the button contains both an icon and some text. This approach should only be used when script is relied upon. </p>
                  </description>
                  <code>
&lt;button onclick="return doStuff();"&gt;
 &lt;img src="stuff.gif" alt="stuff icon"&gt;
 Do Stuff
&lt;/button&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/interact/scripts.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 Scripts</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/interact/forms.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 Forms</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-html40/struct/links.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 Links</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/DOM/DOMTR"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Document Object Model (DOM) Technical Reports</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G90"/>
               <relatedtech idref="G108"/>
               <!-- @@ Using HTML form controls and links (future link) --><relatedtech idref="SCR20"/>
               <relatedtech idref="SCR24"/>
               <relatedtech idref="F42"/>
               <relatedtech idref="F59"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For all script actions associated with <el>a</el>, <el>button</el>, or <el>input</el> elements: </p>
                  <olist>
                     <item>
                        <p>In a user agent that supports Scripting </p>
                        <ulist>
                           <item>
                              <p>Click on the control with the mouse. </p>
                           </item>
                           <item>
                              <p>Check that the scripting action executes properly. </p>
                           </item>
                           <item>
                              <p>If the control is an anchor element, check that the URI in the <att>href</att> attribute of the anchor element is not invoked. </p>
                           </item>
                           <item>
                              <p>Check that it is possible to navigate to and give focus to the control via the keyboard.</p>
                           </item>
                           <item>
                              <p>Set keyboard focus to the control.</p>
                           </item>
                           <item>
                              <p>Check that pressing ENTER invokes the scripting action. </p>
                           </item>
                           <item>
                              <p>If the control is an anchor element, check that the URI in the <att>href</att> attribute of the anchor element is not invoked. </p>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p>In a user agent that does not support Scripting </p>
                        <ulist>
                           <item>
                              <p>Click on the control with the mouse.</p>
                           </item>
                           <item>
                              <p>If the control is an anchor element, check that the URI in the <att>href</att> attribute of the anchor element is invoked. </p>
                           </item>
                           <item>
                              <p>Check that it is possible to navigate to and give focus to the control via the keyboard.</p>
                           </item>
                           <item>
                              <p>Set keyboard focus to the control.</p>
                           </item>
                           <item>
                              <p>If the control is an anchor element, check that pressing ENTER invokes the URI of the anchor element's <att>href</att> attribute.</p>
                           </item>
                        </ulist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the above checks are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SCR36" diff="add">
            <short-name>Providing a mechanism to allow users to display moving, scrolling, or auto-updating text in a static window or area</short-name>
            <applicability>
               <p>Any technology that moves, blinks, or updates text and can create a static block of text. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
            </applies-to>
            <description>
               <p>Some Web pages display scrolling text because there is limited space available. Scrolling the text in a small text window makes the content available for users who can read quickly enough, but causes problems for users who read more slowly or use assistive technology. This technique provides a mechanism to stop the movement and make the entire block of text available statically. The text may be made available in a separate window or in a (larger) section of the page. Users can then read the text at their own speed. </p>
               <p>This technique does not apply when the text that is moving can not be displayed all at once on the screen (e.g., a long chat conversation).</p>
               <note>
                  <p>This technique can be used in combination with a style switching technique to present a page that is a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                          linktype="glossary"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">conforming alternate version</loc> for non-conforming content. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="C29" linktype="css"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">C29: Using a style switcher to provide a conforming alternate version</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conformance"
                          locn-note="uc-conforming-alt-versions-head"
                          linktype="understanding"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">Understanding Conforming Alternate Versions</loc> for more information. </p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>Expanding Scrolling Text in Place </head>
                  <description>
                     <p>A large block of text is scrolled through a small marquee area of the page. A button lets the user stop the scrolling and display the entire block of text. </p>
                     <note>
                        <p>This code example requires that both CSS and JavaScript be turned on and available. </p>
                     </note>
                     <p>The CSS component:</p>
                  </description>
                  <code role="css">#scrollContainer {
        visibility: visible;
        overflow: hidden;
        top: 50px; left: 10px;
        background-color: darkblue;
      }
      .scrolling {
        position: absolute;
        width: 200px;
        height: 50px;
      }
      .notscrolling {
        width: 500px;
        margin:10px;
      }
      #scrollingText {
        top: 0px;
        color: white;
      }
      .scrolling #scrollingText {
        position: absolute;
      }
      &lt;/a&gt;    </code>
                  <description>
                     <p>The script and HTML content:</p>
                  </description>
                  <code role="css">&lt;script type="text/javascript"&gt;

      var tid;
      function init() {
        var st = document.getElementById('scrollingText');
        st.style.top = '0px';
        initScrolling();
      }
      function initScrolling () {
        tid = setInterval('scrollText()', 300);
      }
      function scrollText () {
        var st = document.getElementById('scrollingText');
        if (parseInt(st.style.top) &gt; (st.offsetHeight*(-1) + 8)) {
          st.style.top = (parseInt(st.style.top) - 5) + 'px';
        } else {
          var sc = document.getElementById('scrollContainer');
          st.style.top = parseInt(sc.offsetHeight) + 8 + 'px';
        }
      }
      function toggle() {
        var scr = document.getElementById('scrollContainer');
        if (scr.className == 'scrolling') {
          scr.className = 'notscrolling';
          clearInterval(tid);
           document.getElementById('scrollButton').value="Shrink";
        } else {
          scr.className = 'scrolling';
          initScrolling();
          document.getElementById('scrollButton').value="Expand";
        }
      }
  &lt;input type="button" id="scrollButton" value="Expand" onclick="toggle()" /&gt;
  &lt;div id="scrollContainer" class="scrolling"&gt;
    &lt;div id="scrollingText" class="on"&gt;
    .... Text to be scrolled ...
    &lt;/div&gt;
  &lt;/div&gt;
...
</code>
                  <description>
                     <p>Here is a working example of this code: <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="scrolltext.html"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Expanding Scrolling Text in Place</loc>.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G4"/>
               <relatedtech idref="G187"/>
               <relatedtech idref="SCR33"/>
               <relatedtech idref="SCR22"/>
            </related-techniques>
            <tests/>
         </technique>
         <technique id="SCR37" diff="add">
            <short-name>Creating Custom Dialogs in a Device Independent Way</short-name>
            <applicability>
               <p>HTML and XHTML used with script.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
            </applies-to>
            <description>
               <p>Site designers often want to create dialogs that do not use the pop-up windows supplied by the browser. This is typically accomplished by enclosing the dialog contents in a <el>div</el> and placing the <el>div</el> above the page content using z-order and absolute positioning in CSS. </p>
               <p>To be accessible, these dialogs must follow a few simple rules. </p>
               <olist>
                  <item>
                     <p>Trigger the script that launches the dialog from the <code>onclick</code> event of a link or button.</p>
                  </item>
                  <item>
                     <p>Place the dialog <el>div</el> into the Document Object Model (DOM) immediately after the element that triggered it. The triggering element will maintain focus, and inserting the dialog content after that element will make the content inside the dialog next in the screen-reader reading order and next in the tab order. The dialog can still be absolutely positioned to be elsewhere on the page visually. This can be done either by creating the dialog in the HTML and hiding it with CSS, as in the example below, or by inserting it immediately after the triggering element with script. </p>
                  </item>
                  <item>
                     <p>Ensure that the HTML inside the dialog div meets the same accessibility standard as other content.</p>
                  </item>
               </olist>
               <p>It is also nice, but not always necessary, to make the launching link toggle the dialog open and closed, and to close the dialog when the keyboard focus leaves it. </p>
            </description>
            <examples>
               <eg-group>
                  <head>An options button that opens a dialog</head>
                  <description>
                     <p>The HTML for this example includes a triggering Element, in this case a button, and a div that acts as the frame for the dialog. </p>
                     <p>The triggering element is a button and the script is triggered from the onclick event. This sends the appropriate events to the operating system so that assistive technology is aware of the change in the DOM. </p>
                     <p>In this example, the Submit and Reset buttons inside the dialog simply hide the <el>div</el>. </p>
                  </description>
                  <code role="xhtml1">...
&lt;button onclick="TogglePopup(event,true)"
	name="pop0001"&gt;Options&lt;/button&gt;

&lt;div class="popover" id="pop0001"&gt;
  &lt;h3&gt;Edit Sort Information&lt;/h3&gt;
  &lt;form action="default.htm" onsubmit="this.parentNode.style.display='none'; return false;" onreset="this.parentNode.style.display='none'; return false;"&gt;
    &lt;fieldset&gt;
      &lt;legend&gt;Sort Order&lt;/legend&gt; 
      &lt;input type="radio" name="order" id="order_alpha" /&gt;&lt;label for="order_alpha"&gt;Alphabetical&lt;/label&gt;
      &lt;input type="radio" name="order" id="order_default" checked="true" /&gt;&lt;label for="order_default"&gt;Default&lt;/label&gt;
    &lt;/fieldset&gt;
&lt;div class="buttons"&gt;
  &lt;input type="submit" value="OK" /&gt;
  &lt;input type="reset" value="Cancel" /&gt;
&lt;/div&gt;
&lt;/form&gt;

&lt;/div&gt;
...
</code>
                  <description>
                     <p>The <el>div</el>, heading and <el>form</el> elements are styled with CSS to look like a dialog. </p>
                  </description>
                  <code role="css">...
a { color:blue; }
a.clickPopup img { border:none; width:0; }

div.popover { position:absolute; display:none; border:1px outset; background-color:beige; font-size:80%; background-color:#eeeeee; color:black; }
div.popover h3 { margin:0; padding:0.1em 0.5em; background-color:navy; color:white; }
#pop0001 { width:20em; }
#pop0001 form { margin:0; padding:0.5em; }
#pop0001 fieldset { margin-bottom:0.3em; padding-bottom:0.5em; }
#pop0001 input, #pop0001 label { vertical-align:middle; }
#pop0001 div.buttons { text-align:right; }
#pop0001 div.buttons input { width:6em; }
...
</code>
                  <description>
                     <p>The script toggles the display of the popup <el>div</el>, showing it and hiding it. </p>
                  </description>
                  <code role="css">...
function TogglePopup(evt,show)
{
	HarmonizeEvent(evt);
	var src = evt.target;
	if ("click" == evt.type)
	{
		evt.returnValue = false;
	}
	var popID = src.getAttribute("name");
	if (popID)
	{
		var popup = document.getElementById(popID);
		if (popup)
		{
			if (true == show)
			{
				popup.style.display = "block";
			}
			else if (false == show)
			{
				popup.style.display = "none";
			}
			else
			{
				popup.style.display = "block" == popup.style.display ? "none" : "block";
			}
			if ("block" == popup.style.display)
			{
				//window.alert(document.documentElement.scrollHeight);
				popup.style.top = ((document.documentElement.offsetHeight - popup.offsetHeight) / 2 ) + 'px';
				popup.style.left = ((document.documentElement.offsetWidth - popup.offsetWidth) / 2) + 'px';
			}
		}
	}
}

function SubmitForm(elem)
{ 
	elem.parentNode.style.display='none'; 
	return false;
}

function ResetForm(elem)
{ 
	elem.parentNode.style.display='none'; 
	return false;
}
...
</code>
                  <description>
                     <p>A working example, <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="default.htm" linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">An options button that opens a dialog</loc>, is available. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w4a.info/2007/prog/8-shelly.pdf"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">W4A Paper: Accessibility for Simple to Moderate-Complexity DHTML Web Sites</loc>  by Cynthia C. Shelly and George Young, Microsoft Corporation. (PDF Format)</p>
                     </item>
                     <item>
                        <p>Microsoft Developer Network Whitepaper:<loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://download.microsoft.com/download/0/f/5/0f5e941c-c495-401a-9031-eab8315da35e/writing_accessible_web_applications.doc"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest"> Writing Accessible Web Applications</loc> by Cynthia C. Shelly and George Young. (Microsoft Word Format)</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.microsoft.com/downloads/details.aspx?familyid=3755582A-A707-460A-BF21-1373316E13F0&amp;displaylang=en"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Microsoft Active Accessibility 2.0 SDK</loc>. Includes Inspect32.exe and other MSAA tools.</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.microsoft.com/downloads/details.aspx?familyid=E59C3964-672D-4511-BB3E-2D5E1DB91038&amp;displaylang=en"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Microsoft Internet Explorer Developer Toolbar.</loc>. Allows examination of script-generated DOM in Microsoft Internet Explorer</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://getfirebug.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Firebug</loc>. Allows examination of script-generated DOM in Firefox. </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SCR26"/>
               <relatedtech idref="G59"/>
               <!-- @@ Inserting Inline Error Messages  --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find all areas of the page that trigger dialogs that are not pop-up windows. </p>
                     </item>
                     <item>
                        <p>Check that the dialogs can be opened by tabbing to the area and hitting enter. </p>
                     </item>
                     <item>
                        <p>Check that, once opened, the dialog is next in the tab order. </p>
                     </item>
                     <item>
                        <p>Check that the dialogs are triggered from the click event of a button or a link. </p>
                     </item>
                     <item>
                        <p>Using a tool that allows you to inspect the DOM generated by script, check that the dialog is next in the DOM. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2, #3, #4 and #5 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 id="server-side-script">
         <head>Server-side Scripting Techniques</head>
         <technique id="SVR1">
            <short-name>Implementing automatic redirects on the server side instead of on the
                    client side</short-name>
            <applicability>
               <p> Server-side technologies, including server-side scripting languages and
                        server configuration files with URLs or URL patterns for redirects. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to avoid confusion that may be caused
                        when two new pages are loaded in quick succession because one page (the one
                        requested by the user) redirects to another. Some user agents support the
                        use of the HTML <code>meta</code> element to redirect the user to another page
                        after a specified number of seconds. This makes a page inaccessible to some
                        users, especially users with screen readers. Server-side technologies
                        provide methods to implement redirects in a way that does not confuse users.
                        A server-side script or configuration file can cause the server to send an
                        appropriate HTTP response with a status code in the 3xx range and a Location
                        header with another URL. When the browser receives this response, the location
                        bar changes and the browser makes a request with the new URL. </p>
            </description>
            <examples>
               <eg-group>
                  <head>JSP/Servlets</head>
                  <description>
                     <p> In Java Servlets or JavaServer Pages (JSP), developers can use
                                    <code>HttpServletResponse.sendRedirect(String url)</code>. </p>
                  </description>
                  <code>
…
public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
…
  response.sendRedirect("/newUserLogin.do");
}</code>
                  <description>
                     <p> This sends a response with a 302 status code ("Found") and a
                                Location header with the new URL to the user agent. It is also
                                possible to set another status code with
                                    <code>response.sendError(int code, String message)</code> with
                                one of the constants defined in the interface
                                javax.servlet.http.HttpServletResponse as status code. </p>
                  </description>
                  <code>
…
public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
…
  response.sendError(response.SC_MOVED_PERMANENTLY, "/newUserLogin.do");
}</code>
                  <description>
                     <p> If an application uses <code>HttpServletResponse.encodeURL(String
                                    url)</code> for URL rewriting because the application depends on
                                sessions, the method
                                    <code>HttpServletResponse.encodeRedirectURL(String url)</code>
                                should be used instead of
                                    <code>HttpServletResponse.sendRedirect(String url)</code>. It is
                                also possible to rewrite a URL with
                                    <code>HttpServletResponse.encodeURL(String url)</code> and then
                                pass this URL to <code>HttpServletResponse.sendRedirect(String
                                url)</code>. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>ASP</head>
                  <description>
                     <p> In Active Server Page (ASP) with VBScript, developers can use
                                    <code>Response.Redirect</code>. </p>
                  </description>
                  <code>
  Response.Redirect "newUserLogin.asp"</code>
                  <description>
                     <p> or </p>
                  </description>
                  <code>
Response.Redirect("newUserLogin.asp")</code>
                  <description>
                     <p> The code below is a more complete example with a specific HTTP
                                status code. </p>
                  </description>
                  <code>
Response.Clear
Response.Status = 301
Response.AddHeader "Location", "newUserLogin.asp"
Response.Flush
Response.End</code>
               </eg-group>
               <eg-group>
                  <head>PHP</head>
                  <description>
                     <p> In PHP, developers can send a raw HTTP header with the
                                <code>header</code> method. The code below sends a 301 status code
                                and a new location. If the status is not explicitly set, the
                                redirect response sends an HTTP status code 302. </p>
                  </description>
                  <code>
 &lt;?php
header("HTTP/1.1 301 Moved Permanently);
header("Location: http://www.example.com/newUserLogin.php");
?&gt;</code>
               </eg-group>
               <eg-group>
                  <head>Apache</head>
                  <description>
                     <p> Developers can configure the Apache Web server to handle redirects,
                                as in the following example. </p>
                  </description>
                  <code>
redirect 301 /oldUserLogin.jsp http://www.example.com/newUserLogin.do</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/QA/Tips/reback"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Use standard
                                        redirects: do not break the back button!</loc> (W3C QA Tip).
                                </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTTP/1.1 Status Code Definitions: Redirection 3xx</loc>.
                                </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.somacon.com/p145.php"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTTP 301 Permanent
                                        Redirection Techniques</loc> by Shailesh N. Humbad. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://java.sun.com/products/servlet/2.3/javadoc/javax/servlet/http/HttpServletResponse.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Interface javax.servlet.http.HttpServletResponse</loc> in
                                    the Java Servlets 2.3 API documentation. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://php.net/header"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">header</loc> in the PHP
                                    Manual. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://httpd.apache.org/docs/2.2/mod/mod_alias.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Apache Module mod_alias</loc> in the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://httpd.apache.org/docs/2.2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Apache HTTP Server
                                        Version 2.2 Documentation</loc> describes how redirects can
                                    be specified in Apache 2.2. </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://httpd.apache.org/docs/1.3/mod/mod_alias.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Module mod_alias</loc> in the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://httpd.apache.org/docs/1.3/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Apache HTTP Server
                                        Version 1.3 Documentation</loc> describes how redirects can
                                    be specified in Apache 1.3. </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find each link or programmatic reference to another page or
                                    Web page. </p>
                     </item>
                     <item>
                        <p> For each link or programmatic reference to a URI in the set of
                                    Web pages being evaluated, check if the referenced
                                    Web page contains code (e.g. meta element or script) that
                                    causes a client-side redirect. </p>
                     </item>
                     <item>
                        <p> For each link or programmatic reference to a URI in the set of
                                    Web pages being evaluated, check if the referenced URI
                                    does not cause a redirect OR causes a server-side redirect
                                    without a time-out. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Step 2 is false AND step 3 is true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SVR2">
            <short-name>Using .htaccess to ensure that the only way to access non-conforming content is from conforming content</short-name>
            <applicability>
               <p>Content residing on a Web server that supports .htaccess (typically Apache) where a conforming version of content is provided as an alternative to a non-conforming version.</p>
            </applicability>
            <applies-to>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to ensure that users can always access an accessible version of the content when non-conforming versions are also available. Whenever content is provided in a format that does not conform to WCAG, the site as a whole can still conform if alternate versions of the inaccessible content are provided. Conformance Criterion 4 requires that alternate versions can be derived from the nonconforming content or from its URI. 
</p>
               <p>Since it is not always possible to provide an accessible link from within non-conforming content, this technique describes how authors can use Apache's Module "mod_access" to ensure that non-conforming content can only be accessed from URIs that serve as alternate versions to the non-conforming content or from pages that include links to both the non-conforming version and the alternative version.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following .htaccess file uses Apache's mod_redirect module to redirect requests for "inaccessible.html" to "accessible.html" unless the request comes from "accessible.html".</p>
                  </description>
                  <code role="htaccess">
# If the request for inaccessible content comes from a file 
# called accessible.html, then set an environment variable that 
# allows the inaccessible version to be displayed.
SetEnvIf Referer .*(accessible.html)$ let_me_in
&lt;FilesMatch ^(inaccessible.html)$&gt;
    Order Deny,Allow
    Deny from all
    Allow from env=let_me_in
&lt;/FilesMatch&gt;

# If the request comes from anyplace but accessible.html, then 
# redirect the error condition to a location where the accessible 
# version resides
ErrorDocument 403 /example_directory/accessible.html
</code>
                  <!--description><p>
Refer to <loc href="inaccessible.html" linktype="examples">Inacessible Content</loc> for a working example.
</p></description--><!-- BC: Working example at http://preview.trace.wisc.edu/test/force_accessible/accessible.html, but w3.org does not allow this (refer to April 9 sysreq email--></eg-group>
               <eg-group>
                  <description>
                     <p>This example assumes a directory structure where documents are available in multiple formats. One of the formats does not meet WCAG at the level claimed and uses the file extension "jna" (Just Not Accessible). All of these files are stored in a folder called "jna" with an .htaccess file which ensures that any direct request for a file with the .jna extension from pages where inaccessible versions are not already available is redirected to an index page that lists all of the available formats.</p>
                  </description>
                  <code role="htaccess">
# If the request for inaccessible content comes from a file at 
# http://example.com/documents/index.html, then set an environment 
# variable that allows the inaccessible version to be displayed.
SetEnvIf Referer ^http://example.com/documents/index.html$ let_me_in
&lt;FilesMatch ^(.*\.jna)$&gt;
    Order Deny,Allow
    Deny from all
    Allow from env=let_me_in
&lt;/FilesMatch&gt;

# If the request comes from anyplace but http://example.com/documents/index.html, then 
# redirect the error condition to a location where a link the accessible 
# version resides
ErrorDocument 403 http://example.com/documents/index.html
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://httpd.apache.org/docs/2.2/mod/mod_env.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Apache Module mod_env</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://httpd.apache.org/docs/2.2/howto/auth.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Authentication, Authorization and Access Control</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://httpd.apache.org/docs/2.0/howto/htaccess.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Apache Tutorial: .htaccess files</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G136"/>
               <!--@@ insert link to tech on environment variables when complete --></related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Identify pages that do not conform to WCAG at the conformance Level claimed where accessible alternatives are served based on the use of .htaccess files.
    </p>
                     </item>
                     <item>
                        <p>Visit the URI of the non-conforming content.
    </p>
                     </item>
                     <item>
                        <p>Verify that the resulting page is one of the following:</p>
                        <olist>
                           <item>
                              <p>a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                                      linktype="guideline"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">conforming alternate version</loc> for the non-conforming content</p>
                           </item>
                           <item>
                              <p>a page that includes a link to both the conforming alternate version and the non-conforming content</p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3.1 or #3.2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SVR3">
            <short-name>Using HTTP referer to ensure that the only way to access non-conforming content is from conforming content</short-name>
            <applicability>
               <p>Content created using server-side scripting where a conforming version of content is provided as an alternative to a non-conforming version based on HTTP Referer.</p>
            </applicability>
            <applies-to>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <ua-issues><!-- BBC: I was unable to find good resources on where these UA issues come up. However, indications seem to be that this was a larger issue in the IE 4.0 era... --><ua-issue name="general" version="4-">
                  <p>Because some user agents do not support the HTTP referer header, can be configured not to send one or are behind a proxy or firewall that strips it out, it is possible that some users will be unable to access the non-conforming content when this technique is implemented.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to ensure that users can obtain an accessible version of content where both non-conforming and conforming versions are provided.</p>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="cc1" linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Conformance Requirement 1</loc> allows non-conforming pages to be included within the scope of conformance as long as they have a "<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">conforming alternate version</loc>". It is not always possible for authors to include accessibility supported links to conforming content from within non-conforming content. Therefore, authors may need to rely on the use of Server Side Scripting technologies (ex. PHP, ASP, JSP) to ensure that the non-conforming version can only be reached from a conforming page.</p>
               <p>This technique describes how to use information provided by the <code>HTTP referer</code> to ensure that non-conforming content can only be reached from a conforming page. The <code>HTTP referer</code> header is set by the user agent and contains the URI of the page (if any) which referred the user agent to the non-conforming page.</p>
               <p>To implement this technique, an author identifies the URI for the conforming version of the content, for each non-conforming page. When a request for the non-conforming version of a page is received, the server compares the value of the <code>HTTP referer</code> header against the URI of the conforming version to determine whether the link to the non-conforming version came from the conforming version. The non-conforming version is only served if the <code>HTTP referer</code> matches the URI of the non-conforming version. Otherwise, the user is redirected to the conforming version of the content. Note that when comparing the URI in the HTTP referer header, non-relevant variations in the URI, such as in the query and target, should be taken into account.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Interactive demonstrations of physical processes</head>
                  <description>
                     <p>An online physics course uses a proprietary modeling language to provide interactive demonstrations of physical processes. The user agent for the modeling language is not compatible with assistive technology. The site includes a script that uses the HTTP referer to ensure that unless users attempt to access the interactive demonstration from a page that contains a conforming description of the process and models, the server redirects the request to a conforming page which contains a link to the non-conforming version. Students may choose to access the non-conforming, interactive version, but those who do not are still able to learn about the process.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Using Http referer in PHP</head>
                  <description>
                     <p>The following example illustrates how this technique can be used in PHP. It includes two files, conforming.php and non-conforming.php which work together to ensure that the only way to access non-conforming content is from conforming content.</p>
                     <p>conforming.php:</p>
                  </description>
                  <code role="php">
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
	&lt;head&gt;
    		&lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /&gt;
    		&lt;title&gt;Conforming Content&lt;/title&gt;
    	&lt;/head&gt;
	&lt;body&gt;
		&lt;h1&gt;This is a conforming page&lt;/h1&gt;
		&lt;p&gt;From here, you can visit the &lt;a href="non-conforming.php"&gt;non-conforming 
		page&lt;/a&gt;. &lt;/p&gt;
	&lt;/body&gt;
&lt;/html&gt;
    				</code>
                  <description>
                     <p>non-conforming.php:</p>
                  </description>
                  <code role="php">
&lt;?php 
// if the request comes from a file that contains the string "conforming.php" then render the page
	if(stristr($_SERVER['HTTP_REFERER'], "conforming.php")) {
?&gt;

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
	&lt;head&gt;
		&lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /&gt;
		&lt;title&gt;Non-Conforming Content&lt;/title&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;h1&gt;This is a non-conforming page&lt;/h1&gt;
		&lt;p&gt;Because you came from &lt;?php echo $_SERVER['HTTP_REFERER']; ?&gt;, you are 
			able to view the content on this page. &lt;/p&gt;
	&lt;/body&gt;
&lt;/html&gt;
&lt;?php
}
// if the referring page is not conforming.php, then redirect the user to the conforming version
else  {
header("Location: conforming.php");
}
?&gt;					
    				</code>
                  <description>
                     <p>
                        <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="non-conforming.php"
                             linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Working Example</loc>
                     </p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="G136"/>
               <relatedtech idref="SVR2"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>Where WCAG conforming alternatives are provided for non-conforming content:</p>
                  <olist>
                     <item>
                        <p>Identify pages that do not conform to WCAG at the conformance Level claimed where accessible alternatives are served based on HTTP Referrer.</p>
                     </item>
                     <item>
                        <p>Visit the URI of the non-conforming content.</p>
                     </item>
                     <item>
                        <p>Verify that the resulting page is one of the following:</p>
                        <olist>
                           <item>
                              <p>a <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="conforming-alternate-versiondef"
                                      linktype="guideline"
                                      xlink:type="simple"
                                      xlink:show="replace"
                                      xlink:actuate="onRequest">conforming alternate version</loc> for the non-conforming content</p>
                           </item>
                           <item>
                              <p>a page that includes a link to both the conforming alternate version and the non-conforming content</p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #3.1 or #3.2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SVR4" diff="add">
            <short-name>Allowing users to provide preferences for the display of conforming alternate versions</short-name>
            <applicability>
               <p>Content created using server-side scripting to store preferences.</p>
            </applicability>
            <applies-to>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a mechanism for users to select a preference for an alternate conforming version of a Web page.</p>
               <p>Providing preferences to allow users to view conforming alternate versions can be accomplished in several ways. One common method is to provide a link which triggers a server-side process that sets a session or persistent cookie that the Web server uses to modify the page or redirect the user to the alternate version. Other methods include providing user-specific choices that are stored as part of the user's login information for a system where users sign in to access a Web page or service. </p>
               <p>Users requiring an alternate version will need the mechanism provided in the non-conforming page to be accessible in order to find and use it. The mechanism itself should conform to the accessibility level being claimed. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Setting a session or persistent cookie to store a user preference </head>
                  <description>
                     <p>A Web site offers a link to a "preferences" page on pages within the site. On this page, there is an option to view an alternate version of the site. There may be various aspects of the page that are affected, or the user may be opting to view an entirely alternate version of the site. The preference may be to display a version of the site where video included on the site displays captioning, or it may be offered because the primary site contains accessibility conformance issues that are addressed only via the alternative. </p>
                     <p>A Web page author may choose to handle this preference via a cookie, which may be handled via a server-side scripting language such as PHP.</p>
                     <p>The preferences page may be offered as follows: </p>
                  </description>
                  <code> &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
  &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
      &lt;head&gt;
      &lt;title&gt;Site Preferences&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
      &lt;h1&gt;Site Preferences&lt;/h1&gt;
      &lt;form id="form1" name="site_prefs" method="post" action="pref.php"&gt;
          &lt;fieldset&gt;
              &lt;legend&gt;Which version of the site do you want to view?&lt;/legend&gt;
              &lt;input type="radio" name="site_pref" id="site_pref_reg" value="reg" /&gt;
              &lt;label for="site_pref_reg"&gt;Main version of site&lt;/label&gt;
              &lt;input type="radio" name="site_pref" id="site_pref_axx" value="axx" /&gt;
              &lt;label for="site_pref_axx"&gt;Accessibility-conforming version&lt;/label&gt;
          &lt;/fieldset&gt; 
      &lt;/form&gt;
  &lt;/body&gt;
  &lt;/html&gt;</code>
                  <description>
                     <p>The form is submitted to the pref.php file for processing. A cookie is set, and in this simple example the user's browser is directed to the site home page.</p>
                     <p>pref.php: </p>
                  </description>
                  <code>&lt;?php
    if(isset($site_pref)) {
        setcookie("site_pref",$site_pref, time() + (86400 * 30)); //set for 30 days
        header("location: http://www.example.com"); //redirects to home page
    }
?&gt;
</code>
                  <description>
                     <p>The home page starts with code that implements the user's preference. </p>
                     <p>index.php: </p>
                  </description>
                  <code>&lt;?
if(isset($site_pref)) {
	if($site_pref="axx") {
	header("location: ./accessible/index.php");
}
?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
...
</code>
                  <description>
                     <p>For a login-based system, the preference is stored in the user's database record and referred to by the server-side script generating the pages for the user to view. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://php.net/setcookie"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Setting and using cookies in PHP</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C29"/>
               <relatedtech idref="SVR2"/>
               <relatedtech idref="SVR3"/>
               <relatedtech idref="G136"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Change a preference for how pages on the site are displayed. </p>
                     </item>
                     <item>
                        <p>Check that the preference itself or a link to that page where it can be set can be reached from each non-conforming page. </p>
                     </item>
                     <item>
                        <p>Check that Web pages are displayed according to the selected preference. </p>
                     </item>
                     <item>
                        <p>Check that when the preference(s) are set, the Web page conforms as claimed. </p>
                     </item>
                     <item>
                        <p>Verify that the resulting page is a conforming alternate version for the original page. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Checks #2 and #3 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 id="smil">
         <head>SMIL Techniques</head>
         <technique id="SM1">
            <short-name>Adding extended audio description in SMIL 1.0</short-name>
            <applicability>
               <p> Applies whenever SMIL 1.0 player is available </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
               <success-criterion idref="media-equiv-audio-desc-only"/>
               <success-criterion idref="media-equiv-extended-ad"/>
            </applies-to>
            <description>
               <p> The purpose of this technique is to allow there to be more audio description than will fit into the gaps in the dialogue of the audio-visual material.</p>
               <p>With SMIL 1.0 there is no easy way to do this but it can be done by breaking the audio and video files up into a series of files that are played sequentially. Additional audio description is then played while the audio-visual program is frozen. The last frame of the video file is frozen so that it remains on screen while the audio file plays out.</p>
               <p>The effect is that the video appears to play through from end to end but freezes in places while a longer audio description is provided. It then continues automatically when the audio description is complete.</p>
               <p>To turn the extended audio description on and off one could use script to switch back and forth between two SMIL scripts, one with and one without the extended audio description lines. Or script could be used to add or remove the extended audio description lines from the SMIL file so that the film clips would just play sequentially.</p>
               <p>If scripting is not available then two versions of the video could be provided, one with and one without extended audio descriptions.</p>
            </description>
            <examples>
               <eg-group>
                  <head>SMIL 1.0 Video with audio descriptions that pause the main media in 4 locations to allow extended audio description</head>
                  <code>   
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns:qt="http://www.apple.com/quicktime/resources/smilextensions" 
xmlns="http://www.w3.org/TR/REC-smil" qt:time-slider="true"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout background-color="black" height="266" width="320"/&gt;
      &lt;region id="videoregion" background-color="black" top="26" left="0" 
      height="144" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
  &lt;par&gt;
   &lt;seq&gt;
     &lt;par&gt;
       &lt;video src="video.rm" region="videoregion" clip-begin="0s" clip-end="5.4" 
       dur="8.7" fill="freeze" alt="videoalt"/&gt;   
       &lt;audio src="no1.wav" begin="5.4" alt="audio alt"/&gt;
     &lt;/par&gt;
     &lt;par&gt;
       &lt;video src="video.rm" region="videoregion" clip-begin="5.4" clip-end="24.1" 
       dur="20.3" fill="freeze" alt="videoalt"/&gt;
       &lt;audio src="no2.wav" begin="18.7" alt="audio alt"/&gt;
     &lt;/par&gt;
     &lt;par&gt;
       &lt;video src="video.rm" region="videoregion" clip-begin="24.1" clip-end="29.6" 
       dur="7.7" fill="freeze" alt="videoalt"/&gt;
       &lt;audio src="no3.wav" begin="5.5" alt="audio alt"/&gt;
     &lt;/par&gt;
     &lt;par&gt;
       &lt;video src="video.rm" region="videoregion" clip-begin="29.6" clip-end="34.5" 
       dur="5.7" fill="freeze" alt="videoalt"/&gt;
       &lt;audio src="no4.wav" begin="4.9" alt="audio alt"/&gt;
     &lt;/par&gt;
     &lt;par&gt;
       &lt;video src="video.rm" region="videoregion" clip-begin="77.4" alt="video alt"/&gt;
     &lt;/par&gt;
   &lt;/seq&gt;
  &lt;/par&gt;
&lt;/body&gt;
&lt;/smil&gt;
</code>
                  <description>
                     <p>The markup above is broken into five <code>&lt;par&gt;</code> segments. In each, there is a <code>&lt;video&gt;</code> and an <code>&lt;audio&gt;</code> tag (the last <code>&lt;par&gt;</code> has no <code>&lt;audio&gt;</code> tag intentionally). The convention with extended audio descriptions is that the main media pauses during the description. The way to make this happen in SMIL 1.0 is to set a "<code>clip-begin</code>" and "<code>clip-end</code>" which dictate the start and end of the video clip, and to set a duration for the clip that is longer than what is defined by the "<code>clip-begin</code>" and "<code>clip-end</code>". The <code>fill="freeze"</code> holds the last frame of the video during the extended description. The <code>&lt;audio&gt;</code> tag has a "<att>begin</att>" attribute with a value that is equal to the "<code>clip-end</code>" value of the preceding <code>&lt;video&gt;</code> tag.</p>
                     <p>The way to determine the values for "<code>clip-begin</code>," "<code>clip-end</code>", and "<att>dur</att>" is to find out the time the portion of the video before the audio description starts and ends, and to find out the total length of the extended audio description. The "<code>clip-begin</code>" and "<code>clip-end</code>" define their own values, but the "<att>dur</att>" value is the sum of the length of the extended description and the clip defined by the "<code>clip-begin</code>" and "<code>clip-end</code>". In the first <code>&lt;par&gt;</code>, the video clip starts at 0 seconds, ends and 5.4 seconds, and the description length is 3.3 seconds, so the "<att>dur</att>" value is 5.4s + 3.3s = 8.7s.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-smil/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized
                                        Multimedia Integration Language (SMIL) 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia
                                        Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL
                                    Templates</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SM2"/>
               <relatedtech idref="SM6"/>
               <relatedtech idref="G81"/>
               <relatedtech idref="SM11"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Play file with extended audio descriptions</p>
                     </item>
                     <item>
                        <p> Play file with audio description </p>
                     </item>
                     <item>
                        <p>Check whether video freezes in places and plays extended audio description</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SM2">
            <short-name>Adding extended audio description in SMIL 2.0</short-name>
            <applicability>
               <p> Applies whenever SMIL 2.0 player is available </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
               <success-criterion idref="media-equiv-audio-desc-only"/>
               <success-criterion idref="media-equiv-extended-ad"/>
            </applies-to>
            <description>
               <p> The purpose of this technique is to allow there to be more audio description
                        than will fit into the gaps in the dialogue of the audio-visual material. </p>
               <p> With SMIL 2.0 it is possible to specify that particular audio files be
                        played at particular times, and that the program be frozen (paused) while
                        the audio file is being played. </p>
               <p> The effect is that the video appears to play through from end to end but
                        freezes in places while a longer audio description is provided. It then
                        continues automatically when the audio description is complete. </p>
               <p> To turn the extended audio description on and off one could use script to
                        switch back and forth between two SMIL scripts, one with and one without the
                        extended audio description lines. Or script could be used to add or remove
                        the extended audio description lines from the SMIL file so that the film
                        clips would just play uninterrupted. </p>
               <p> If scripting is not available then two versions of the SMIL file could be
                        provided, one with and one without extended audio description. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Video with extended audio description.</head>
                  <code>
&lt;smil xmlns="//www.w3.org/2001/SMIL20/Language"&gt; 
&lt;head&gt; 
&lt;layout&gt; 
&lt;root-layout backgroundColor="black" height="266" width="320"/&gt; 
&lt;region id="video" backgroundColor="black" top="26" left="0" 
height="144" width="320"/&gt; 
&lt;/layout&gt; 
&lt;/head&gt; 
&lt;body&gt;	 
&lt;excl&gt; 
&lt;priorityClass peers="pause"&gt; 
&lt;video src="movie.rm" region="video" title="video" alt="video" /&gt; 
&lt;audio src="desc1.rm" begin="12.85s" alt="Description 1" /&gt; 
&lt;audio src="desc2.rm" begin="33.71s" alt="Description 2" /&gt; 
&lt;audio src="desc3.rm" begin="42.65s" alt="Description 3" /&gt; 
&lt;audio src="desc4.rm" begin="59.80s" alt="Description 4" /&gt; 
&lt;/priorityClass&gt; 
&lt;/excl&gt; 
&lt;/body&gt; 
     &lt;/smil&gt; </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia
                                        Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL
                                    Templates</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G81"/>
               <relatedtech idref="SM7"/>
               <relatedtech idref="SM11"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Play file with extended audio description </p>
                     </item>
                     <item>
                        <p> Check whether video freezes in places and plays extended audio
                                    description </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #2 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SM6">
            <short-name>Providing audio description in SMIL 1.0</short-name>
            <applicability>
               <p> Applies whenever SMIL 1.0 player is available </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to provide a way for people who are blind
                        or otherwise have trouble seeing the video in audio-visual material to be
                        able to access the material. With this technique a description of the video
                        is provided via audio description that will fit into the gaps in the dialogue
                        in the audio-visual material. </p>
            </description>
            <examples>
               <eg-group>
                  <head> SMIL 1.0 audio description sample for QuickTime player</head>
                  <code>   
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns:qt="http://www.apple.com/quicktime/resources/smilextensions" 
  xmlns="http://www.w3.org/TR/REC-smil" qt:time-slider="true"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout background-color="black" height="266" width="320"/&gt;
      &lt;region id="videoregion" background-color="black" top="26" left="0" 
      height="144" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video dur="0:01:20.00" region="videoregion" src="salesdemo.mov" 
      alt="Sales Demo"/&gt;
      &lt;audio dur="0:01:20.00" src="salesdemo_ad.mp3" 
      alt="Sales Demo Audio Description"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt; </code>
               </eg-group>
               <eg-group>
                  <head> SMIL 1.0 audio description sample for RealTime player</head>
                  <code> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns="http://www.w3.org/TR/REC-smil"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout background-color="black" height="266" width="320"/&gt;
      &lt;region id="videoregion" background-color="black" top="26" left="0" 
      height="144" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video src="salesdemo.mov" region="videoregion" title="Sales Demo" 
      alt="Sales Demo"/&gt;
      &lt;audio src="salesdemo_ad.mp3" title="audio description" 
      alt="Sales Demo Audio Description"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-smil/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized
                                        Multimedia Integration Language (SMIL) 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia
                                        Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL
                                    Templates</loc>
                        </p>
                     </item>
                     <!-- BBC: Broken link, commented out for now item>
                <p>
                  <loc href="http://developer.apple.com/documentation/QuickTime/REF/refDataExchange.6.htm">QuickTime QTText</loc>
                </p>
              </item--><item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://service.real.com/help/library/guides/realone/ProductionGuide/HTML/htmfiles/realtext.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Realtext</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn2.microsoft.com/en-us/library/ms971327.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">SAMI 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SM2"/>
               <relatedtech idref="SM7"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find method for turning on audio description from
                                    content/player (unless it is always played by default) </p>
                     </item>
                     <item>
                        <p> Play file with audio description </p>
                     </item>
                     <item>
                        <p> Check whether audio description is played </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SM7">
            <short-name>Providing audio description in SMIL 2.0</short-name>
            <applicability>
               <p>
                        Applies whenever SMIL 2.0 player is available
                    </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-audio-desc"/>
            </applies-to>
            <description>
               <p>
                    The objective of this technique is to provide a way for people who are blind or otherwise have trouble seeing the video in audio-visual material to be able to access the material. With this technique a description of the video is provided via audio description that will fit into the gaps in the dialogue in the audio-visual material.
                    </p>
            </description>
            <examples>
               <eg-group>
                  <head>SMIL 2.0 audio description sample for RealMedia player</head>
                  <code>
&lt;smil xmlns="//www.w3.org/2001/SMIL20/Language"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout backgroundColor="black" height="266" width="320"/&gt;
      &lt;region id="video" backgroundColor="black" top="26" left="0" 
      height="144" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video src="salesdemo.mpg" region="video" title="Sales Demo" 
      alt="Sales Demo"/&gt;
      &lt;audio src="salesdemo_ad.mp3" begin="33.71s" title="audio description" 
      alt="Sales Demo Audio Description"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;
</code>
                  <description>
                     <p>
        The example shows a <code>&lt;par&gt;</code> segment containing an <code>&lt;audio&gt;</code> and a <code>&lt;video&gt;</code> tag. The audio stream is not started immediately.
    </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL Templates</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SM2"/>
               <relatedtech idref="SM6"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
                        Find method for turning on audio description from content/player (unless it is always played by default)
                    </p>
                     </item>
                     <item>
                        <p>
                        Play file with audio description
                    </p>
                     </item>
                     <item>
                        <p>
                        Check whether audio description is played
                    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
                        #2 is true
                    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SM11">
            <short-name>Providing captions through synchronized text streams in SMIL 1.0</short-name>
            <applicability>
               <p> Applies to SMIL 1.0 </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-real-time-captions"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>There is no universal standard format for representing captions in SMIL 1.0.
      				Different user agents support different caption formats. A file in a
      				supported format must be provided as the textstream src argument for the
      				caption textstream. </p>
                  <p>QuickTime supports QTText caption files. Real-based players, such as
      				RealPlayer and GRiNS, support RealText caption files. WindowsMedia supports
      				SAMI files, but does not support SMIL. Flash does not support a specific file type, but can parse XML-based caption file; actually the FLVPlayback component support for SMIL is intended to detect parameters like movie/server url or multi-bandwidth indications specified in a &lt;switch&gt; tag.
            </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p> The objective of this technique is to provide a way for people who are deaf
                        or otherwise have trouble hearing the dialogue in audio visual material to be
                        able to view the material. With this technique all of the dialogue and
                        important sounds are available in a text stream that is displayed in a
                        caption area. </p>
               <p> With SMIL 1.0, separate regions can be defined for the video and the
                        captions. The captions and video playback are synchronized, with the caption
                        text displayed in one region of the screen, while the corresponding video is
                        displayed in another region. </p>
            </description>
            <examples>
               <eg-group>
                  <head>SMIL 1.0 caption sample for Quickime player</head>
                  <code> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns:qt="http://www.apple.com/quicktime/resources/smilextensions" 
  xmlns="http://www.w3.org/TR/REC-smil" qt:time-slider="true"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout width="320" height="300" background-color="black"/&gt;
      &lt;region top="0" width="320" height="240" left="0" background-color="black" 
      id="videoregion"/&gt;
      &lt;region top="240" width="320" height="60" left="0" background-color="black" 
      id="textregion"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video dur="0:01:20.00" region="videoregion" src="salesdemo.mov" 
      alt="Sales Demo"/&gt;
      &lt;textstream dur="0:01:20.00" region="textregion" src="salesdemo_cc.txt" 
      alt="Sales Demo Captions"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt; </code>
               </eg-group>
               <eg-group>
                  <head>SMIL 1.0 caption sample for RealMedia player</head>
                  <code> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns="http://www.w3.org/TR/REC-smil"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout background-color="black" height="310" width="330"/&gt;
      &lt;region id="video" background-color="black" top="5" left="5" 
      height="240" width="320"/&gt;
      &lt;region id="captions" background-color="black" top="250" 
      height="60" left="5" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video src="salesdemo.mpg" region="video" title="Sales Demo" 
      alt="Sales Demo"/&gt;
      &lt;textstream src="salesdemo_cc.rt" region="captions" 
      system-captions="on" title="captions" 
      alt="Sales Demo Captions"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;</code>
                  <description>
                     <p> The example shows a <code>&lt;par&gt;</code> segment
                                containing a <code>&lt;video&gt; and a
        &lt;code&gt;&lt;![CDATA[&lt;textstream&gt;</code> tag. The system-captions attribute indicates that the
                                textstream should be displayed when the user's player setting for
                                captions indicates the preference for captions to be displayed. The
                                    <code>&lt;layout&gt;</code> section defines the regions
                                used for the video and the captions. </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>SMIL 1.0 caption sample with internal text streams </head>
                  <code>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns="http://www.w3.org/TR/REC-smil"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout background-color="black" height="310" width="330"/&gt;
      &lt;region id="video" background-color="black" top="5" left="5" 
      height="240" width="320"/&gt;
      &lt;region id="captions" background-color="black" top="250" 
      height="60" left="5" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video src="salesdemo.mpg" region="video" title="Sales Demo" 
      alt="Sales Demo"/&gt;
      &lt;text src="data:,This%20is%20inline%20text." region="captions" begin="0s" 
      dur="3" alt="Sales Demo Captions"&gt;
        &lt;param name="charset" value="iso-8859-1"/&gt;
        &lt;param name="fontFace" value="System"/&gt;
        &lt;param name="fontColor" value="yellow"/&gt;
        &lt;param name="backgroundColor" value="blue"/&gt;
      &lt;/text&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;
</code>
                  <description>
                     <p> This example shows a <code>&lt;text&gt;</code> element that
                                includes synchronized text streams within the SMIL file. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-smil/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized
                                        Multimedia Integration Language (SMIL) 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia
                                        Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL
                                    Templates</loc>
                        </p>
                     </item>
                     <!--item>
                <p>
                  <loc href="http://developer.apple.com/documentation/QuickTime/REF/refDataExchange.6.htm">QuickTime QTtext</loc>
                </p>
              </item--><item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://service.real.com/help/library/guides/realone/ProductionGuide/HTML/htmfiles/realtext.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">RealText</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn2.microsoft.com/en-us/library/ms971327.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">SAMI 1.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SM12"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Enabled caption preference in player, if present </p>
                     </item>
                     <item>
                        <p> Play file with captions </p>
                     </item>
                     <item>
                        <p> Check whether captions are displayed </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SM12">
            <short-name>Providing captions through synchronized text streams in SMIL 2.0</short-name>
            <applicability>
               <p> Applies to SMIL 2.0 </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-real-time-captions"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Only RealPlayer supports SMIL 2.0.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide a way for people who are deaf
                        or otherwise have trouble hearing the dialogue in audio visual material to be
                        able to view the material. With this technique all of the dialogue and
                        important sounds are available in a text stream that is displayed in a
                        caption area.</p>
               <p> With SMIL 2.0, separate regions can be defined for the video and the
                        captions. The captions and video playback are synchronized, with the caption
                        text displayed in one region of the screen, and the corresponding video
                        displayed in another region. </p>
            </description>
            <examples>
               <eg-group>
                  <head>SMIL 2.0 caption sample for RealMedia player</head>
                  <code>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns="//www.w3.org/2001/SMIL20/Language"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout backgroundColor="black" height="310" width="330"/&gt;
      &lt;region id="video" backgroundColor="black" top="5" left="5" 
      height="240" width="320"/&gt;
      &lt;region id="captions" backgroundColor="black" top="250" 
      height="60" left="5" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video src="salesdemo.mpg" region="video" title="Sales Demo"
      alt="Sales Demo"/&gt;
      &lt;textstream src="salesdemo_cc.rt" region="captions" systemCaptions="on" 
      title="captions" alt="Sales Demo Captions"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;
</code>
                  <description>
                     <p> The example shows a <code>&lt;par&gt;</code> segment
                                containing a <code>&lt;video&gt;</code> and a
                                    <code>&lt;textstream&gt;</code> tag. The systemCaptions
                                attribute indicates that the textstream should be displayed when the
                                user's player setting for captions indicates the preference for
                                captions to be displayed. The <code>&lt;layout&gt;</code>
                                section defines the regions used for the video and the captions.
                            </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>SMIL 2.0 caption sample with internal text streams for
                            RealMedia player</head>
                  <code> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns="//www.w3.org/2001/SMIL20/Language"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout backgroundColor="black" height="310" width="330"/&gt;
      &lt;region id="video" backgroundColor="black" top="5" left="5" 
      height="240" width="320"/&gt;
      &lt;region id="captions" backgroundColor="black" top="250" 
      height="60" left="5" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video src="salesdemo.mpg" region="video" title="Sales Demo" 
      alt="Sales Demo"/&gt;
      &lt;text src="data:,This%20is%20inline%20text." region="captions" 
      begin="0s" dur="3"&gt;
        &lt;param name="charset" value="iso-8859-1"/&gt;
        &lt;param name="fontFace" value="System"/&gt;
        &lt;param name="fontColor" value="yellow"/&gt;
        &lt;param name="backgroundColor" value="blue"/&gt;
      &lt;/text&gt;
      &lt;text src="data:,This%20is%20a%20second%20text." 
      region="captions" begin="3s" dur="3"&gt;
        &lt;param name="charset" value="iso-8859-1"/&gt;
        &lt;param name="fontFace" value="System"/&gt;
        &lt;param name="fontColor" value="yellow"/&gt;
        &lt;param name="backgroundColor" value="blue"/&gt;
      &lt;/text&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;
</code>
                  <description>
                     <p>This example shows a <code>&lt;text&gt;</code> element that
                                includes synchronized text streams within the SMIL file.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia
                                        Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL
                                    Templates</loc>
                        </p>
                     </item>
                     <!--item>
                <p>
                  <loc href="http://developer.apple.com/documentation/QuickTime/REF/refDataExchange.6.htm">QuickTime QTtext</loc>
                </p>
              </item--><item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://service.real.com/help/library/guides/realone/ProductionGuide/HTML/htmfiles/realtext.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">RealText</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn2.microsoft.com/en-us/library/ms971327.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">SAMI 1.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SM11"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Enabled caption preference in player, if present </p>
                     </item>
                     <item>
                        <p> Play file with captions </p>
                     </item>
                     <item>
                        <p> Check whether captions are displayed </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SM13">
            <short-name>Providing sign language interpretation through synchronized video
                    streams in SMIL 1.0</short-name>
            <applicability>
               <p> Applies whenever SMIL 1.0 player is available </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-sign"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a way for people who are deaf
                        or otherwise have trouble hearing the dialogue in audio visual material to be
                        able to view the material. With this technique all of the dialogue and
                        important sounds are available in a sign-language interpretation video that
                        is displayed in a caption area. </p>
               <p> With SMIL 1.0, separate regions can be defined for the two videos. The two
                        video playbacks are synchronized, with the content video displayed in one
                        region of the screen, while the corresponding sign-language interpretation
                        video is displayed in another region. </p>
            </description>
            <examples>
               <eg-group>
                  <head>SMIL 1.0 sign-language interpretation sample for QuickTime
                            player </head>
                  <code> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns:qt="http://www.apple.com/quicktime/resources/smilextensions" 
  xmlns="http://www.w3.org/TR/REC-smil" qt:time-slider="true"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout width="320" height="300" background-color="black"/&gt;
      &lt;region top="0" width="320" height="240" left="0" background-color="black" 
      id="videoregion"/&gt;
      &lt;region top="240" width="320" height="60" left="0" background-color="black" 
      id="signingregion"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video dur="0:01:20.00" region="videoregion" src="salesdemo.mov" 
      alt="Sales Demo"/&gt;
      &lt;video dur="0:01:20.00" region="signingregion" system-captions="on" 
      src="salesdemo_si.mov" alt="Sales Demo Sign Language Interpretation"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;</code>
               </eg-group>
               <eg-group>
                  <head>SMIL 1.0 sign-language sample for RealMedia player:</head>
                  <code> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;smil xmlns="http://www.w3.org/TR/REC-smil"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout background-color="black" height="310" width="330"/&gt;
      &lt;region top="0" width="320" height="240" left="0" background-color="black"
       id="videoregion"/&gt;
      &lt;region top="240" width="320" height="60" left="0" background-color="black" 
      id="signingregion"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video dur="0:01:20.00" region="videoregion" src="salesdemo.mov" 
      alt="Sales Demo"/&gt;
      &lt;video dur="0:01:20.00" region="signingregion" system-captions="on" 
      src="salesdemo_si.mov" alt="Sales Demo Sign Language Interpretation"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;</code>
                  <description>
                     <p> The example shows a <code>&lt;par&gt;</code> segment
                                containing two <code>&lt;video&gt;</code> tags. The
                                system-captions attribute indicates that the sign language video
                                should be displayed when the user's player setting for captions
                                indicates the preference for captions to be displayed. The
                                    <code>&lt;layout&gt;</code> section defines the regions
                                used for the main video and the sign language interpretation video.
                            </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/REC-smil/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia Integration Language (SMIL) 1.0</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL Templates</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SM14"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Enable control in content player to turn on sign language
                                    interpretation (unless it is always shown) </p>
                     </item>
                     <item>
                        <p> Play file with sign-language interpretation </p>
                     </item>
                     <item>
                        <p> Check whether sign language interpretation is displayed </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="SM14">
            <short-name>Providing sign language interpretation through synchronized video
                    streams in SMIL 2.0</short-name>
            <applicability>
               <p>SMIL 2.0</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-sign"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to provide a way for people who are deaf
                        or otherwise have trouble hearing the dialogue in audio visual material to be
                        able to view the material. With this technique all of the dialogue and
                        important sounds are available in a sign-language interpretation video that
                        is displayed in a caption area. </p>
               <p> With SMIL 2.0, separate regions can be defined for the two videos. The two
                        video playbacks are synchronized, with the content video displayed in one
                        region of the screen, while the corresponding sign-language interpretation
                        video is displayed in another region. </p>
            </description>
            <examples>
               <eg-group>
                  <head>SMIL 2.0 sign-language video sample for RealMedia player</head>
                  <code>
&lt;smil xmlns="//www.w3.org/2001/SMIL20/Language"&gt;
  &lt;head&gt;
    &lt;layout&gt;
      &lt;root-layout backgroundColor="black" height="310" width="330"/&gt;
      &lt;region id="video" backgroundColor="black" top="5" left="5" 
      height="240" width="320"/&gt;
      &lt;region id="signing" backgroundColor="black" top="250" 
      height="60" left="5" width="320"/&gt;
    &lt;/layout&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;par&gt;
      &lt;video src="salesdemo.mpg" region="video" title="Sales Demo" 
      alt="Sales Demo"/&gt;
      &lt;video src="salesdemo_signing.mpg" 
      region="signing" systemCaptions="on" 
      title="sign language interpretation" 
      alt="Sales Demo Sign Language Interpretation"/&gt;
    &lt;/par&gt;
  &lt;/body&gt;
&lt;/smil&gt;
</code>
                  <description>
                     <p>The example shows a <code>&lt;par&gt;</code> segment containing
                                two <code>&lt;video&gt;</code> tags. The systemCaptions
                                attribute indicates that the sign language video should be displayed
                                when the user's player setting for captions indicates the preference
                                for captions to be displayed. The <code>&lt;layout&gt;</code>
                                section defines the regions used for the main video and the sign
                                language interpretation video. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/SMIL/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Synchronized Multimedia
                                        Integration Language (SMIL 2.0)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/SMIL-access/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessibility
                                        Features of SMIL</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://ncam.wgbh.org/richmedia/tutorials/smiltemplates.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">NCAM Rich Media Accessibility, Accessible SMIL
                                    Templates</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SM13"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Enable control in content or player to turn on sign language
                                    interpretation (unless it is always shown) </p>
                     </item>
                     <item>
                        <p> Play file with sign-language interpretation </p>
                     </item>
                     <item>
                        <p> Check whether sign language interpretation is displayed </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> #3 is true </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 id="text">
         <head>Plain Text Techniques</head>
         <technique id="T1">
            <short-name>Using standard text formatting conventions for paragraphs</short-name>
            <applicability>
               <p>Plain text documents. Not applicable to technologies that contain markup.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to recognize a paragraph in a plain text document. A paragraph is a coherent block of text, such as a group of related sentences that develop a single topic or a coherent part of a larger topic. </p>
               <p>The beginning of a paragraph is indicated by
</p>
               <ulist>
                  <item>
                     <p>the beginning of the content, that is, the paragraph is the first content in the document, or</p>
                  </item>
                  <item>
                     <p>exactly one blank line preceding the paragraph text</p>
                  </item>
               </ulist>
               <p>The end of a paragraph is indicated by 
</p>
               <ulist>
                  <item>
                     <p>the end of the content, that is, the paragraph is the last content in the document, or</p>
                  </item>
                  <item>
                     <p>one or more blank lines following the paragraph text</p>
                  </item>
               </ulist>
               <p>A blank line contains zero or more non-printing characters, such as space or tab, followed by a new line.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>Two paragraphs. Each starts and ends with a blank line.</p>
                  </description>
                  <code>
						
This is the first sentence in this
paragraph. Paragraphs may be long
or short.
   
    In this paragraph the first line is
indented. Indented and non-indented
sentences are allowed. White space within
the paragraph lines is ignored in
defining paragraphs. Only completely blank
lines are significant.

</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each paragraph:
							</p>
                  <olist>
                     <item>
                        <p>Check that the paragraph is preceded by exactly one blank line, or that the paragraph is the first content in the Web page</p>
                     </item>
                     <item>
                        <p>Check that the paragraph is followed by at least one blank line, or that the paragraph is the last content in the Web page.</p>
                     </item>
                     <item>
                        <p>Check that no paragraph contains any blank lines</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are all true for each paragraph.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="T2">
            <short-name>Using standard text formatting conventions for lists</short-name>
            <applicability>
               <p>Plain text documents. Not applicable to technologies that contain markup.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use text formatting conventions to create simple lists of related items. Hierarchical lists or nested lists cannot be represented using this technique and should be represented using a different technology. </p>
               <p>A list is a sequence of list items. A list item is a paragraph that begins with a label. For unordered lists, asterisks, dashes, and bullet characters may be used as the label, but the same label characters must be used for all the items in a list. For ordered lists, the label may be alphabetic or numeric, and may be terminated by a period or a right parenthesis. The labels must be in ascending order, that is,
						</p>
               <ulist>
                  <item>
                     <p>numbers must be in numeric order,</p>
                  </item>
                  <item>
                     <p>alphabetic labels must be in alphabetical order or in numeric order when interpreted as Roman numerals.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group>
                  <head>Unordered list</head>
                  <code>
						
- unordered list item
 
- unordered list item
 
- unordered list item

</code>
               </eg-group>
               <eg-group>
                  <head>Numeric ordered list</head>
                  <code>
						
1. Ordered list item
 
2. Ordered list item
 
3. Ordered list item

</code>
               </eg-group>
               <eg-group>
                  <head>Roman numeral ordered list</head>
                  <code>
						
i.   Ordered list item
 
ii.  Ordered list item
 
iii. Ordered list item
 
iv.  Ordered list item

</code>
               </eg-group>
               <eg-group>
                  <head>Alphabetic ordered list</head>
                  <code>
						
A) Ordered list item
 
B) Ordered list item
 
C) Ordered list item

</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each list in the text content
							</p>
                  <olist>
                     <item>
                        <p>Check that each list item is a paragraph that starts with a label</p>
                     </item>
                     <item>
                        <p>Check that the list contains no lines that are not list items</p>
                     </item>
                     <item>
                        <p>Check that all list items in a list use the same style label</p>
                     </item>
                     <item>
                        <p>Check that the labels in ordered lists are in sequential order</p>
                     </item>
                     <item>
                        <p>Check that the labels in each unordered list are the same</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All checks above are all true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="T3">
            <short-name>Using standard text formatting conventions for headings</short-name>
            <applicability>
               <p>Plain text documents. Not applicable to technologies that contain markup.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to use text formatting conventions to convey the structure of the content. Headings are used to locate and label sections of a text document, showing the organization of the document.</p>
               <p>The beginning of a heading is indicated by
						</p>
               <ulist>
                  <item>
                     <p>two blank lines preceding the heading</p>
                  </item>
               </ulist>
               <p>
The end of a heading is indicated by 
						</p>
               <ulist>
                  <item>
                     <p>a blank line following the heading</p>
                  </item>
               </ulist>
               <p>A blank line contains any number of non-printing characters, such as space or tab, followed by a new line.</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>A paragraph is followed by two blank lines, then a heading, then one blank line, then another paragraph:</p>
                  </description>
                  <code>
						
...this is the end of paragraph 1.


The Text of the Heading

This is the beginning of paragraph 2.


</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <p>For each heading in the content:
							</p>
                  <olist>
                     <item>
                        <p>Check that each heading is preceded by two blank lines</p>
                     </item>
                     <item>
                        <p>Check that each heading is followed by a blank line</p>
                     </item>
                     <item>
                        <p>Check that no heading contains any blank lines</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>All of the checks above are true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 id="aria">
         <head>ARIA Techniques</head>
         <technique id="ARIA1">
            <short-name>Using Accessible Rich Internet Application describedby property to provide a descriptive, programmatically determined label
        </short-name>
            <applicability>
               <p>HTML and XHTML with scripting and Accessible Rich Internet Applications.</p>
               <ednote>
                  <edtext>This technique will be applicable when  Accessible Rich Internet Application specifications reach W3C recommendation status.</edtext>
               </ednote>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-title"/>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="WE5.5+">
                  <p>As of October, 2006, Accessible Rich Internet Application techniques are supported in Firefox 1.5 or later on Windows and Window-Eyes version 5.5 or later. Support in other user agents and assistive technologies is in progress. This particular technique relies on updates made to Firefox 2.0 to allow the use of the <code>describedby</code> attribute by itself without also defining a role for the element.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The purpose of this technique is to demonstrate how to use the Accessible Rich Internet Application (ARIA) <code>descibedby</code> property to provide descriptive information about a user interface control that can be programmatically determined by user agents. ARIA techniques provide the ability to add programmatically determined information to an element which can provide additional information about the element. The user agent can provide this additional information to assistive technology for presentation to the user.  For example, the <code>describedby</code> property can be used to provide information that is available in the content surrounding the user interface control but would not normally be available when the user is navigating from control to control using an assistive technology.
</p>
            </description>
            <examples>
               <eg-group>
                  <head>HTML</head>
                  <description>
                     <p>This example uses scripting to add the <code>describedby</code> property to user interface controls on the page. The use of scripting is necessary because the "describedby" attribute is not in the HTML specification and adding it directly to the markup would prevent the markup from validating. In user agents which support namespaces, the required state is assigned using the <code>setAttributeNS()</code> application programming interface (API). For other user agents the required state is assigned using the <code>setAttribute()</code> API and the namespace is simulated by adding a static text string to the front of the <code>describedby</code> attribute.</p>
                     <p>In the example below two array variables, <code>buttonIds</code> and <code>linkIds</code>, are created. 
Each array holds the ids of the elements that contain the description text. Each array is indexed via the id of the elements which need a <code>describedby</code> property.  The <code>setDescribedBy()</code> function is called from the onload event of window object.</p>
                     <p>The <code>setDescribedBy()</code> function finds all of the button elements on the page. It loops through all of the button elements found and, using the button id as the index,  looks in the <code>buttonIds</code> array for an associated id value. This id is the <code>id</code> attribute of the element which contains the description text to be associated with the button. If an associated id is found, the script assigns the <code>describedby</code> property to the button using the <code>setAttrNS()</code> function.
</p>
                     <p>The <code>setDescribedBy()</code> function also finds all of the anchor elements on the page and performs a similar process. It looks for associated ids in the <code>linksId</code> array and assigns the <code>describedby</code> property to each link using the <code>setAttrNS()</code> function. </p>
                     <p>
The <code>setAttrNS()</code> function will call the <code>setAttributeNS()</code> API when it is available to set the required attribute. It uses the appropriate namespace URI, "http://www.w3.org/2005/07/aaa", for the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                             href="http://www.w3.org/TR/aria-state/"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">States and Properties Module for Accessible Rich Internet Applications (ARIA States and Properties)</loc>. If the <code>setAttributeNS()</code> API is not available in the user agent, a static, simulated namespace of "aaa:" is added to the required attribute name and it is set using the <code>setAttribute()</code> API.</p>
                     <p>Using a user agent and/or assistive technology which supports ARIA, the additional description will be provided when the user interface controls receive focus.</p>
                  </description>
                  <code diff="chg">
 &lt;head&gt;
 &lt;meta http-equiv="content-type" content="text/xhtml; charset=utf-8" /&gt;
 &lt;title&gt;Demonstration of describedby property&lt;/title&gt;
 &lt;style type="text/css"&gt;
 div.form p { clear:left; margin: 0.3em 0;}
.left {
  float:left;
  width:400px;
}
.right {
	width:100px;
	text-align:right;
}
 &lt;/style&gt;
 &lt;script type="text/javascript"&gt;
 //&lt;![CDATA[

 // array entries for each button on the page that associates the button id 
 // with the id of the element containing the text which describes the button
 var buttonIds = new Array();
 buttonIds["fontB"]= "fontDesc";
 buttonIds["colorB"] = "colorDesc";
 buttonIds["customB"] = "customDesc";
 // array entries for each link on the page that associates the link id with
 // the id of the element containing the text which describes the link
 var linkIds = new Array();
 linkIds["iceberg"] = "icebergInfo";

 // function that is run after the page has loaded to set the describedBy
 // property on each of the elements referenced by the array of id values
 function setDescribedBy(){
	if (buttonIds){
		var buttons = document.getElementsByTagName("button");
		if (buttons){
			var buttonId;
			for(var i=0; i&lt;buttons.length; i++){
				buttonId = buttons[i].id;
				if (buttonId &amp;&amp; buttonIds[buttonId]){
					setAttrNS(buttons[i], "describedby", buttonIds[buttonId]);
				}
			}
		}
	}
	if (linkIds){
		var links = document.getElementsByTagName("a");
		if (links){
			var linkId;
			for(var k=0; k&lt;links.length; k++){
				linkId = links[k].id;
				if (linkId &amp;&amp; linkIds[linkId]){
					setAttrNS(links[k], "describedby", linkIds[linkId]);
				}
			}
		}
	}
 }

 // method to set the attribute values based on the capability of the browser.  
 // Use setAttributeNS if it is available, otherwise append a namespace 
 // indicator string to the attribute and set its value.
 function setAttrNS(elemObj, theAttr, theValue){
         elemObj.setAttribute("aria-" + theAttr, theValue);
 }

 // simulated action function - currently just displays an alert
 function doAction(theAction){
	alert("Perform the " + theAction + " action");
 }

 window.onload=setDescribedBy;

//]]&gt;
 &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;p&gt;The buttons on this page use the Accessible Rich Internet Applications 
 describedby property to provide more detailed information 
 about the button action
 &lt;/p&gt;
 &lt;div class="form"&gt;
 &lt;p&gt;&lt;span class="left" id="fontDesc" &gt;Select the font faces and sizes to be used on this page&lt;/span&gt;
    &lt;span class="right"&gt;&lt;button id="fontB" onclick="doAction('Fonts');"&gt; Fonts &lt;/button&gt;&lt;/span&gt;
 &lt;/p&gt;
 &lt;p&gt;&lt;span class="left" id="colorDesc" &gt;Select the colors to be used on this page&lt;/span&gt;
    &lt;span class="right"&gt;&lt;button id="colorB" onclick="doAction('Colors');"&gt; Colors &lt;/button&gt;&lt;/span&gt;
 &lt;/p&gt;
 &lt;p&gt;&lt;span class="left" id="customDesc" &gt;Customize the layout and styles used on this page&lt;/span&gt;
    &lt;span class="right"&gt;&lt;button id="customB" onclick="doAction('Customize');"&gt; Customize &lt;/button&gt;&lt;/span&gt;
 &lt;/p&gt;
 &lt;/div&gt;
 &lt;p&gt;The link in this paragraph has been updated with the Accessible Rich 
 Internet Applications describedby property to provide more information
 about the link&lt;/p&gt;
 &lt;p&gt; &lt;span id="icebergInfo"&gt;Alaskan storm cracks iceberg in Antarctica. &lt;/span&gt; 
 A bad storm in Alaska last October generated an ocean swell that broke apart 
 a giant iceberg near Antarctica six days later, U.S. researchers reported on Monday. 
 &lt;a href="http://www.sciencemag.com/iceberg.html" id="iceberg"&gt;More Info...&lt;/a&gt;.
 &lt;/p&gt;
 &lt;/body&gt;
 </code>
                  <description>
                     <p>
                        <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="ex1.html" linktype="examples"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Working HTML example of use of describedy property</loc>
                     </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>XHTML</head>
                  <description>
                     <p>This is the same example coded in XHTML with a MIME type of application:xhtml+xml.  This MIME type is not supported in all user agents.  It declares an xml namespace to access the <code>describedby</code> property.   The <code>describedby</code> information is added directly into the XHTML markup and no additional scripting is needed.</p>
                  </description>
                  <code>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
    "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;
 &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 xmlns:waistate="http://www.w3.org/2005/07/aaa" &gt;
 &lt;head&gt;
 &lt;meta http-equiv="content-type" content="application:xhtml+xml; charset=utf-8" /&gt;
 &lt;title&gt;Demonstration of describedby property&lt;/title&gt;
 &lt;style type="text/css"&gt;
 div.form p { clear:left; margin: 0.3em 0;}
 .left {
   float:left;
   width:400px;
 }
 .right {
   width:100px;
   text-align:right;
 }
 &lt;/style&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;p&gt;The buttons on this page use the Accessible Rich Internet Applications describedby property 
 to provide more detailed information about the button action&lt;/p&gt;
 &lt;div class="form"&gt;
 &lt;p&gt;&lt;span class="left" id="fontDesc" &gt;Select the font faces and sizes to be used on this page&lt;/span&gt;
 &lt;span class="right"&gt;&lt;button id="fontB" onclick="doAction('Fonts');" waistate:describedby="fontDesc"&gt;
 Fonts &lt;/button&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p&gt;&lt;span class="left" id="colorDesc" &gt;Select the colors to be used on this page&lt;/span&gt;
 &lt;span class="right"&gt;&lt;button id="colorB" onclick="doAction('Colors');" waistate:describedby="colorDesc"&gt;
 Colors &lt;/button&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p&gt;&lt;span class="left" id="customDesc" &gt;Customize the layout and styles used on this page&lt;/span&gt;
 &lt;span class="right"&gt;&lt;button id="customB" onclick="doAction('Customize');" 
 waistate:describedby="customDesc"&gt; Customize &lt;/button&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;/div&gt;
 &lt;p&gt;The link in the next paragraph has been updated with the Accessible Rich Internet Applications 
 describedby property to provide more information about the link&lt;/p&gt;
 &lt;p&gt; &lt;span id="icebergInfo"&gt;Alaskan storm cracks iceberg in Antarctica. &lt;/span&gt; 
 A bad storm in Alaska last October generated an ocean swell that broke apart a giant 
 iceberg near Antarctica six days later, U.S. researchers reported on Monday. 
 &lt;a href="http://www.sciencemag.com/iceberg.html" id="iceberg" waistate:describedby="icebergInfo"&gt;More Info...&lt;/a&gt;.
 &lt;/p&gt;
 &lt;/body&gt;
 &lt;/html&gt;
 </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/aria-roadmap/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Roadmap for Accessible Rich Internet Applications (ARIA Roadmap)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/aria-role/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Roles for Accessible Rich Internet Applications (ARIA Roles)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/aria-state/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">States and Properties Module for Accessible Rich Internet Applications (ARIA States and Properties)</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="ARIA4"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Load the page using a user agent and/or assistive technology that supports Accessible Rich Internet Applications.
    </p>
                     </item>
                     <item>
                        <p>
Using a user agent that supports ARIA, navigate to each user interface control modified with a <code>describedby</code> property and verify that the description is made available to the user.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
Check #2 is true.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="ARIA2">
            <short-name>Identifying required fields with the "required" property
            
          
        </short-name>
            <applicability>
               <p>Technologies that support  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/aria-state/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">States and Properties for Accessible Rich Internet Applications</loc>.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-suggestions"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="firefox" version="2">
                  <p>WAI-ARIA is partially supported in Firefox 2.0, which maps roles and properties to platform accessibility APIs. JAWS and Window-Eyes have been successfully tested presenting these properties to the user. FireVox, a self-voicing extension to Firefox, also supports WAI-ARIA via direct DOM access.</p>
               </ua-issue>
               <ua-issue name="other" version="">
                  <p>At this time, there is not additional user agent support.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to indicate that the completion of a user input field is mandatory in a programmatically determinable way. The WAI-ARIA <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/aria-state/#required"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">required</loc> state indicates that user input is required before submission. The "required" state can have values of "true" or "false". For example, if a user must fill in an address field, then "required" is set to true.
</p>
               <note>
                  <p>The fact that the element is required is often visually presented (such as a sign or symbol after the control). Using the "required" property makes it much easier for user agents to pass on this important information to the user in a user agent-specific manner.</p>
               </note>
               <p>WAI-ARIA States and Properties is a module supported in XHTML 1.1 and higher, and the specification documents how to provide the properties in XHTML and other XML-based languages. Refer to <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/WAI/PF/adaptable/HTML4/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Embedding Accessibility Role and State Metadata in HTML Documents</loc> for information on how to provide WAI-ARIA States and Properties with HTML and XHTML 1.0. WAI-ARIA States and Properties is compatible with other languages as well; refer to documentation in those languages.</p>
               <note>
                  <p>at this time, WAI-ARIA is a Working Draft. This technique is provided as an advisory technique for organizations that wish to experiment with achieving WCAG conformance using WAI-ARIA. When WAI-ARIA becomes a formal specification and is supported in user agents, this technique is anticipated to become a sufficient technique.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>A required text input field in XHTML</head>
                  <description>
                     <p>The following source code shows an XHTML document using the "required" property to indicate that a form field must be submitted. The mandatory nature of the field is also indicated in the label as a fallback for user agents that do not support ARIA.</p>
                  </description>
                  <code>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 
    For Accessible Adaptable Applications//EN"
  "http://www.w3.org/2005/07/aaa/xhtml11-aaa.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" 
          xmlns:aaa="http://www.w3.org/2005/07/aaa" 
          xml:lang="en"&gt;
  &lt;head&gt;
    &lt;title&gt;Required Input&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Required Input&lt;/h1&gt;
    &lt;p&gt;The following form input field must be completed by the user
    before the form can be submitted.&lt;/p&gt;
    &lt;form action="http://example.com/submit"&gt;
      &lt;p&gt;
        &lt;label for="test"&gt;Test (required)&lt;/label&gt;
        &lt;input name="test" id="test" aaa:required="true" /&gt;
      &lt;/p&gt;
      &lt;p&gt;
        &lt;input type="submit" value="Submit" /&gt;
      &lt;/p&gt;
    &lt;/form&gt;
  &lt;/body&gt;
&lt;/html&gt;
 </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/aria-state/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">States and Properties Module for Accessible Rich Internet Applications</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/WAI/PF/adaptable/HTML4/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Embedding Accessibility Role and State Metadata in HTML Documents</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="ARIA3"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Access a page with mandatory form fields in a user agent that supports the Accessible Rich Internet Applications specification.
    </p>
                     </item>
                     <item>
                        <p>
Leaving mandatory form fields empty, attempt to submit the form.
    </p>
                     </item>
                     <item>
                        <p>
Check that that the user agent notifies of the missing information.
    </p>
                     </item>
                     <item>
                        <p>
Provide values for the mandatory fields.
    </p>
                     </item>
                     <item>
                        <p>
Check that the user agent allows form submission to proceed.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
#3 and #5 are true
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="ARIA3">
            <short-name>Identifying valid range information with the "valuemin" and "valuemax" properties</short-name>
            <applicability>
               <p>Technologies that support         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/aria-state/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">States and Properties for Accessible Rich Internet Applications</loc>.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-suggestions"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="firefox" version="2.0">
                  <p>WAI-ARIA is partially supported in Firefox 2.0, which maps roles and properties to platform accessibility APIs. JAWS and Window-Eyes have been successfully tested presenting these properties to the user. FireVox, a self-voicing extension to Firefox, also supports WAI-ARIA via direct DOM access.</p>
               </ua-issue>
               <ua-issue name="all" version="">
                  <p>At this time there is not additional user agent support.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The objective of this technique is to provide information about the allowable range of an entry field in a programmatically determinable way. The WAI-ARIA <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/aria-state/#valuemin"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">valuemin</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/aria-state/#valuemax"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">valuemax</loc> states provide the minimum and maximum (respectively) values that may be provided by the user. User agents will not permit users to enter values outside that range, or will generate a validation error if users do so.</p>
               <p>
Various types of data can be constrained in this way. For instance, a form control may accept a range of numbers, or a range of dates. The WAI-ARIA <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/aria-state/#datatype"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">datatype</loc> property should be used to indicate to what type of data the range constraint applies. The value of the "datatype" property should be the name of an <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/xmlschema-2/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">XML Schema Datatype</loc>, and the values of "valuemin" and "valuemax" must match the constraints of that datatype.
</p>
               <p>WAI-ARIA States and Properties is a module supported in XHTML 1.1 and higher, and the specification documents how to provide the properties in XHTML and other XML-based languages. Refer to         <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/WAI/PF/adaptable/HTML4/"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Embedding Accessibility Role and State Metadata in HTML Documents</loc> for information on how to provide WAI-ARIA States and Properties with HTML and XHTML 1.0. ARIA States and Properties is compatible with other languages as well; refer to documentation in those languages.</p>
               <note>
                  <p>at this time, WAI-ARIA is a Working Draft. This technique is provided as an advisory technique for organizations that wish to experiment with achieving WCAG conformance using WAI-ARIA. When WAI-ARIA becomes a formal specification and is supported in user agents, this technique is anticipated to become a sufficient technique.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <head>A text entry field that accepts dates during the year 2007</head>
                  <description>
                     <p>The following text entry field requires the user to enter a date value with a value during the year 2007:
</p>
                  </description>
                  <code>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 
    For Accessible Adaptable Applications//EN"
  "http://www.w3.org/2005/07/aaa/xhtml11-aaa.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" 
  xmlns:aaa="http://www.w3.org/2005/07/aaa"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema-datatypes"
  xml:lang="en"&gt;
&lt;head&gt;
  &lt;title&gt;Date Entry&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Date Entry&lt;/h1&gt;
  &lt;p&gt;Text entry accepts a date in the year 2007.&lt;/p&gt;
  &lt;form action="http://example.com/submit"&gt;
    &lt;p&gt;&lt;label for="test"&gt;Enter a date in 2007:&lt;/label&gt;
    &lt;input name="test" id="test" 
      aaa:valuemin="2007-01-01" aaa:valuemax="2007-12-31"
      aaa:datatype="xsd:date" /&gt;&lt;/p&gt;
    &lt;p&gt;&lt;input type="submit" value="Submit" /&gt;&lt;/p&gt;
  &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
 </code>
               </eg-group>
               <eg-group>
                  <head>A spinner control that provides values between 1 and 100</head>
                  <description>
                     <p>The following spin button allows users to enter a number between 1 and 100.</p>
                  </description>
                  <code>
	&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 
  For Accessible Adaptable Applications//EN" "http://www.w3.org/2005/07/aaa/xhtml11-aaa.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" 
  xmlns:wairole="http://www.w3.org/2005/01/wai-rdf/GUIRoleTaxonomy#"
  xmlns:aaa="http://www.w3.org/2005/07/aaa"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema-datatypes"
  xml:lang="en"&gt;
&lt;head&gt;
  &lt;title&gt;Spin Button&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Spin Button&lt;/h1&gt;
  &lt;p&gt;Spin button allows users to enter a number between 1 and 100. It is 
    implemented as a text input, to which user agents that do not support 
    ARIA roles fall back.&lt;/p&gt;
  &lt;form action="http://example.com/submit"&gt;
    &lt;p&gt;&lt;label for="test"&gt;Enter a number between 1 and 100&lt;/label&gt;
    &lt;input name="test" id="test" role="wairole:spinbutton" 
      aaa:valuemin="1" aaa:valuemax="100" aaa:datatype="xsd:integer" /&gt;&lt;/p&gt;
    &lt;p&gt;&lt;input type="submit" value="Submit" /&gt;&lt;/p&gt;
  &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
 </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/aria-state/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">States and Properties Module for Accessible Rich Internet Applications</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/xmlschema-2/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">XML Schema Part 2: Datatypes</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/WAI/PF/adaptable/HTML4/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Embedding Accessibility Role and State Metadata in HTML Documents</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="ARIA2"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Access a page with form fields that require data in a certain range, using a user agent that supports the Accessible Rich Internet Applications specification.
    </p>
                     </item>
                     <item>
                        <p>
Provide information that is outside the allowable range, and attempt to submit the form.
    </p>
                     </item>
                     <item>
                        <p>
Check that the user agent notifies of the invalid data.
    </p>
                     </item>
                     <item>
                        <p>
Provide information that is inside the allowable range, and attempt to submit the form.
    </p>
                     </item>
                     <item>
                        <p>
Check that the user agent accepts the data and allows the submit to proceed.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
#3 and #5 are true
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="ARIA4">
            <short-name>Using Accessible Rich Internet Applications to programmatically identify form fields as required</short-name>
            <applicability>
               <p>HTML and XHTML with scripting and Accessible Rich Internet Application support. </p>
               <ednote>
                  <edtext>This technique will be applicable when Accessible Rich Internet Application specifications reach W3C recommendation status.</edtext>
               </ednote>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>As of January 2007,  the current version of the Accessible Rich Internet Application (ARIA) specification is supported in Firefox 1.5 or later on Windows using Window-Eyes version 5.5 or later and  partially supported using JAWS 8.0 or later. Support in other user agents and assistive technologies is in progress. Since ARIA  is not yet supported in all technologies, it is important to also use other sufficient techniques to mark a field as required. This particular technique relies on updates made to Firefox 2.0 to allow the use of the required attribute by itself without also defining a role for the element.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>
The purpose of this technique is to demonstrate how to use Accessible Rich Internet Applications to programmatically identify form components for which user input or selection are required.  Accessible Rich Internet Applications techniques provide the ability to add additional information about elements which can be programmatically determined.  The user agent can provide this additional information to assistive technology for presentation to the user.
</p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>This example uses scripting to add the required state to a form element. In user agents which support namepaces, the required state is assigned using the <code>setAttributeNS()</code> application programming interface (API). For other user agents the required state is assigned using the <code>setAttribute()</code> API and the namespace is simulated by adding a static text string to the front of the required attribute.  </p>
                     <p>

In the example below an array variable, requiredIds, is created with the ids of the elements which need to marked as required. The <code>setRequired()</code> function is called from the <code>onload </code>event of window object.  </p>
                     <p>The <code>setRequired()</code> function loops through all of the ids provided, retrieves the element and assigns the required state of true using the <code>setAttrNS()</code> function.  </p>
                     <p>The <code>setAttrNS()</code> function will call the <code>setAttributeNS()</code> API when it is available to set the required attribute. It uses the appropriate namespace URI, "<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/2005/07/aaa"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">http://www.w3.org/2005/07/aaa</loc>", for the Accessible Rich Internet Applications States and Properties Module.  If the <code>setAttributeNS()</code> API is not available in the user agent, a static, simulated namespace of, "aaa:" is added to the required attribute name and it is set using the setAttribute() API.  </p>
                     <p>When this page is accessed using Firefox 2.0 or later or Window-Eyes 5.5 or later, Window-Eyes will speak "required" when reading the label for the input fields.  </p>
                  </description>
                  <code>
&lt;head&gt;
 &lt;script type="text/javascript"&gt;
 //&lt;![CDATA[
 
 // array or ids on the required fields on this page
 var requiredIds = new Array( "firstName", "lastName");
 
 // function that is run after the page has loaded to set the required role on each of the 
 //elements in requiredIds array of id values
 function setRequired(){
 	if (requiredIds){
 		var field;
 		for (var i = 0; i&lt; requiredIds.length; i++){
 			field = document.getElementById(requiredIds[i]);
 			setAttrNS(field, "required", "true");
 		}
 	}
 }
 
 // method to set the attribute values based on the capability of the browser.  
 // Use setAttributeNS if it is available,
 // otherwise append a namespace indicator string to the attribute and set its value.
 function setAttrNS(elemObj, theAttr, theValue){
 	if (typeof document.documentElement.setAttributeNS != 'undefined') {
 		elemObj.setAttributeNS("http://www.w3.org/2005/07/aaa", theAttr, theValue);
 	}else{
 		elemObj.setAttribute("aaa:" + theAttr, theValue);
 	}
 }
 window.onload=setRequired;
//]]&gt;
 &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;p&gt;Please enter the following data.  Required fields have been programmatically identified 
 as required and  marked with an asterisk (*) following the field label.&lt;/p&gt;
 &lt;form action="submit.php"&gt;
 &lt;p&gt;
 &lt;label for="firstName"&gt;First Name *: &lt;/label&gt;&lt;input type="text" name="firstName" 
    id="firstName" value="" /&gt;
 &lt;label for="lastName"&gt;Last Name *: &lt;/label&gt;&lt;input type="text" name="lastName" 
    id="lastName"  value="" /&gt;
 &lt;/p&gt;
 &lt;/form&gt;
 &lt;/body&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/aria-roadmap/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Roadmap for Accessible Rich Internet Applications (ARIA Roadmap)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/aria-role/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Roles for Accessible Rich Internet Applications (ARIA Roles)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/aria-state/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">States and Properties Module for Accessible Rich Internet Applications (ARIA States and Properties)</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Load the page using an user agent and/or assistive technology that supports Accessible Rich Internet Applications. 
    </p>
                     </item>
                     <item>
                        <p>
Navigate to each required form element and verify that "required" is spoken.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>Check #2 is true</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
      <div1 role="failures" id="failures">
         <head>Common Failures</head>
         <technique id="F1">
            <short-name>Failure of Success Criterion 1.3.2 due to changing the meaning of content by
                    positioning information with CSS</short-name>
            <applicability>
               <p>All technologies that support CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>This describes the failure condition that results when CSS, rather than
                        structural markup, is used to modify the visual layout of the content, and
                        the modified layout changes the meaning of the content. Using the
                        positioning properties of CSS2, content may be displayed at any position on
                        the user's viewport. The order in which items appear on a screen may be
                        different than the order they are found in the source document. Assistive
                        technologies rely on the source code or other programmatically determined
                        order to render the content in the correct sequence. Thus, it is important
                        not to rely on CSS to visually position content in a specific sequence if this sequence results in a meaning that is different from the programmatically determined reading order. 
          </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>The following example demonstrates how CSS has been improperly used
                                to create a set of columns. In addition, the text appears visually
                                in the browser in a different order than in the markup. </p>
                     <p>In this example a class is defined for each object that is being
                                positioned. When style sheets are applied, the text appears in two
                                columns. Elements of class "menu1" (Products) and "menu2"
                                (Locations) appear as column headings. "Telephones, Computers, and
                                Portable MP3 Players" are listed under Products and "Idaho" and
                                "Wisconsin" are listed under Locations (note the different order for
                                Idaho and Wisconsin in the source code order). </p>
                     <p>Since appropriate structural elements have not been used, when style
                                sheets are not applied, all of the text appears in one line in the
                                source order, "Products Locations Telephones Computers Portable MP3
                                Players Wisconsin Idaho." </p>
                     <p>Here is the HTML content:</p>
                  </description>
                  <code role="html401">
&lt;div class="box"&gt;      
     &lt;span class="menu1"&gt;Products&lt;/span&gt;       
     &lt;span class="menu2"&gt;Locations&lt;/span&gt;       
     &lt;span class="item1"&gt;Telephones&lt;/span&gt;       
     &lt;span class="item2"&gt;Computers&lt;/span&gt;       
     &lt;span class="item3"&gt;Portable MP3 Players&lt;/span&gt;       
     &lt;span class="item5"&gt;Wisconsin&lt;/span&gt;       
     &lt;span class="item4"&gt;Idaho&lt;/span&gt;
&lt;/div&gt;
</code>
                  <description>
                     <p>Here are the styles for the above content:</p>
                  </description>
                  <code role="html401">
.menu1 { 
     position: absolute; 
     top: 3em; 
     left: 0em;     
     margin: 0px; 
     font-family: sans-serif;     
     font-size: 120%; 
     color: red; 
     background-color: white 
}        
.menu2 { 
     position: absolute; 
     top: 3em; 
     left: 10em;     
     margin: 0px; 
     font-family: sans-serif;     
     font-size: 120%; 
     color: red; 
     background-color: white 
}      
.item1 { 
     position: absolute; 
     top: 7em; 
     left: 0em; 
     margin: 0px 
}      
.item2 { 
     position: absolute; 
     top: 8em; 
     left: 0em; 
     margin: 0px 
}      
.item3 { 
     position: absolute; 
     top: 9em; 
     left: 0em; 
     margin: 0px 
}      
.item4 { 
     position: absolute; 
     top: 7em; 
     left: 14em; 
     margin: 0px 
}      
.item5 { 
     position: absolute; 
     top: 8em; left: 14em; 
     margin: 0px 
}      
#box { 
     position: absolute; 
     top: 5em; 
     left: 5em 
} 
</code>
                  <description>
                     <p>A better solution for this content would be to use more meaningful
                                elements, such as a table or a definition list.</p>
                     <ulist>
                        <item>
                           <p>
                              <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="cssposfailure.html"
                                   linktype="examples"
                                   xlink:type="simple"
                                   xlink:show="replace"
                                   xlink:actuate="onRequest">Example
                                            of CSS positioning failure</loc>
                           </p>
                        </item>
                        <item>
                           <p>
                              <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="cssposfailurenostyle.html"
                                   linktype="examples"
                                   xlink:type="simple"
                                   xlink:show="replace"
                                   xlink:actuate="onRequest">Example of CSS positioning failure with styles
                                        removed</loc>
                           </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="C6"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For content which uses CSS for positioning: </p>
                  <olist>
                     <item>
                        <p>Remove the style information from the document or turn off use of
                                    style sheets in the user agent.</p>
                     </item>
                     <item>
                        <p>Check that the reading order of the content is correct and the
                                    meaning of the content is preserved.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F2">
            <short-name>Failure of Success Criterion 1.3.1 due to using changes in text presentation to convey information without using the appropriate markup or text</short-name>
            <applicability>
               <p>All technologies that support images or presentation markup.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>This document describes a failure that occurs when a change in the appearance of text conveys meaning without using appropriate semantic markup. This failure also applies to images of text that are not enclosed in the appropriate semantic markup.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Using CSS to style the <el>p</el> element to look like a heading</head>
                  <description>
                     <p>The author intended to make a heading but didn't want the look of the default HTML heading. So they used CSS to style the P element to look like a heading and they called it a heading. But they failed to use the proper HTML heading element. Therefore, the Assisitive Technology could not distinguish it as a heading.</p>
                  </description>
                  <code role="html401">
 &lt;style type="text/css"&gt;
 .heading1{
        font-family: Times, serif;
        font-size:200%;
        font-weight:bold;
 }
 &lt;/style&gt;

 &lt;p class="heading1"&gt;Introduction&lt;/p&gt;
 &lt;p&gt;This introduction provides detailed information about how to use this 
 ........
 &lt;/p&gt;
</code>
                  <description>
                     <note>
                        <p>In this case, the proper approach would be to use CSS to style the <el>H1</el> element in HTML.</p>
                     </note>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head>Images of text used as headings where the images are not marked up with heading tags</head>
                  <description>
                     <p>Chapter1.gif is an image of the words, "Chapter One" in a Garamond font sized at 20 pixels. This is a failure because at a minimum the img element should be enclosed within a header element. A better solution would be eliminate the image and to enclose the text within a header element which has been styled using CSS.</p>
                  </description>
                  <code role="html401">
&lt;img src="Chapter1.gif" alt="Chapter One"&gt;
 
&lt;p&gt;Once upon a time in the land of the Web.....
&lt;/p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Using CSS to visually emphasize a phrase or word without conveying that emphasis semantically</head>
                  <description>
                     <p>The following example fails because the information conveyed by using the CSS <code>font-weight</code> property to change to a bold font is not conveyed through semantic markup or stated explicitly in the text.</p>
                     <p>Here is a CSS class to specify bold:</p>
                  </description>
                  <code role="html401">
.yell {
  font-weight:bold;
  text-transform: uppercase;
}
</code>
                  <description>
                     <p>And here is the corresponding HTML:</p>
                  </description>
                  <code role="html401">
&lt;p&gt;
 "I said, &lt;span class="yell"&gt;no&lt;/span&gt;, not before dinner!", 
 was the exasperated response when Timmy asked his mother for the 
 fourth time for an ice cream cone. 
 &lt;/p&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H42"/>
               <relatedtech idref="H49"/>
               <relatedtech idref="G115"/>
               <relatedtech idref="G117"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>For images of text:</p>
                        <olist>
                           <item>
                              <p>Check if any images of text are used to convey structural information of the document.</p>
                           </item>
                           <item>
                              <p>Check that the proper semantic structure (e.g. HTML headings) is used with the text to convey the information.</p>
                           </item>
                        </olist>
                     </item>
                     <item>
                        <p>For styled text that conveys information:</p>
                        <olist>
                           <item>
                              <p>Check if there is any styled text that conveys structural information.</p>
                           </item>
                           <item>
                              <p>Check that in addition to styling, the proper semantic structure is used with the text to convey the information.</p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #1.1 is true, then #1.2 is true.</p>
                     </item>
                     <item>
                        <p>If check #2.1 is true, then #2.2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F3">
            <short-name>Failure of Success Criterion 1.1.1 due to using CSS to include images that convey
                    important information</short-name>
            <applicability>
               <p> All technologies that support CSS. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> The CSS background-image property provides a way to include images in the
                        document with CSS without any reference in the HTML code. The CSS
                        background-image property was designed for decorative purposes and it is not
                        possible to associate text alternatives with images that are included via
                        CSS. Text alternatives are necessary for people who cannot see images that
                        convey important information. Therefore, it is a failure to use this
                        property to add images to convey important information. </p>
               <note>
                  <p>Embedding information into a background image can also cause problems for people who use alternate backgrounds in order to increase legibility and for users of high contrast mode in some operating systems. These users, would lose the information in the background image due to lack of any alternative text.</p>
               </note>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> In the following example, part of the content is contained in an
                                image that is presented by CSS alone. In this example, the image
                                TopRate.png is a 180 by 200 pixel image that contains the text,
                                "19.3% APR Typical Variable." </p>
                  </description>
                  <code> The CSS contains: 
p#bestinterest {
  padding-left: 200px;
  background: transparent url(/images/TopRate.png) no-repeat top left;
}</code>
                  <description>
                     <p> It is used in this excerpt: </p>
                  </description>
                  <code> 
&lt;p id="bestinterest"&gt;
  Where else would you find a better interest rate?
&lt;/p&gt;</code>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> A book distributor uses background images to provide icons against a
                                list of book titles to indicate whether they are new, limited,
                                in-stock, or out of stock. </p>
                     <p>The CSS contains: </p>
                  </description>
                  <code>
ul#booklist li {
  padding-left: 20px;
}

ul#booklist li.new {
  background: transparent url(new.png) no-repeat top left; 
}
                            
ul#booklist li.limited {
  background: transparent url(limited.png) no-repeat top left; 
}
                            
ul#booklist li.instock {
  background: transparent url(instock.png) no-repeat top left; 
}

ul#booklist li.outstock {
  background: transparent url(outstock.png) no-repeat top left; 
}</code>
                  <description>
                     <p>It is used in this excerpt: </p>
                  </description>
                  <code>
&lt;ul id="booklist"&gt;
  &lt;li class="new"&gt;Some book&lt;/li&gt;
  &lt;li class="instock"&gt;Some other book&lt;/li&gt;
  &lt;li class="limited"&gt;A book we desperately want to get rid of&lt;/li&gt;
  ...
  &lt;li class="outstock"&gt;A book you actually want &lt;/li&gt;
&lt;/ul&gt;</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H37"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Examine all images added to the content via CSS. </p>
                     </item>
                     <item>
                        <p> Check that the images do not convey important information. </p>
                     </item>
                     <item>
                        <p>If an image does convey important information,  the information is
                provided to assistive technologies and is also available when the CSS image is
                not displayed.  </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #2 and step #3 are both false, then this failure condition applies and the content fails this Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F4">
            <short-name>Failure of Success Criterion 2.2.2 due to using text-decoration:blink without a
                    mechanism to stop it in less than five seconds</short-name>
            <applicability>
               <p>Cascading Style Sheets.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="*">
                  <p>The <code>blink</code> value of the <code>text-decoration</code> property
                            is not supported by Internet Explorer. It is supported in
                            Netscape/Mozilla family browsers. Not tested in others (e.g., Safari,
                            Opera).</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>CSS defines the <code>blink</code> value for the <code>text-decoration</code>
                        property. When used, it causes any text in elements with this property to
                        blink at a predetermined rate. This cannot be interrupted by the user, nor
                        can it be disabled as a user agent preference. The blinking continues as
                        long as the page is displayed. Therefore, content that uses
                            <code>text-decoration:blink</code> fails the Success Criterion because
                        blinking can continue for more than three seconds.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>A product list page uses the <code>text-decoration:blink</code> style
                                on an element to draw attention to sale prices. This fails the
                                Success Criterion because users cannot control the blink.</p>
                  </description>
                  <code>
&lt;p&gt;My Great Product &lt;span style="text-decoration:blink"&gt;Sale! $44,995!&lt;/span&gt;&lt;/p&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/CSS2/text.html#propdef-text-decoration"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2 text-decoration property</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="SCR22"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine inline styles, internal stylesheets, and external
                                    stylesheets for the <code>text-decoration</code> property with a
                                    value of "blink".</p>
                     </item>
                     <item>
                        <p>If the property is used, determine if the ID, class, or element
                                    identified by selectors on which this property is defined are
                                    used in the document.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1 and step #2 are true, the content fails the success
                                criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F7">
            <short-name>Failure of Success Criterion 2.2.2 due to an object or applet, such as Java or Flash,
                    that has blinking content without a mechanism to pause the content that blinks
                    for more than five seconds</short-name>
            <applicability>
               <p>Technologies that support blinking content within an object, applet, or a
                        plug-in.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>When content that is rendered by a plug-in or contained in an applet blinks,
                        there may be no way for the user agent to pause the blinking. If neither the
                        plug-in, applet, nor the content itself provides a mechanism to pause the
                        content, the user may not have sufficient time to read the content between
                        blinks or it may be so distracting that the user will not be able to read
                        other content on the page.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An applet displays an advertisement on a news site. The applet blinks
                                key words in the advertisement in order to call the user's attention
                                to it. The blinking cannot be paused through any user agent settings
                                and the applet does not provide a mechanism to stop it.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="SCR22"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each page that has blinking content in a plugin or applet:</p>
                  <olist>
                     <item>
                        <p>Determine if the content continues to blink for longer than 5
                                    seconds.</p>
                     </item>
                     <item>
                        <p>Determine if there is a means to pause the blinking content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1 is true and step #2 is false, the content fails the success
                                    criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F8">
            <short-name>Failure of Success Criterion 1.2.2 due to captions omitting some dialogue or important
                    sound effects</short-name>
            <applicability>
               <p> Applies to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-captions"/>
            </applies-to>
            <description>
               <p> This describes a failure condition for all techniques involving captions. If
                        the "caption" does not include all of the dialogue (either verbatim or in
                        essence) as well as all important sounds then the 'Captions' are not real
                        captions. </p>
               <p> NOTE: Captions sometimes simplify the spoken text both to make it easier to
                        read and to avoid forcing the viewer to read at very high speed. This is
                        standard procedure and does not invalidate a caption. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p> Examples of text streams that are not captions include: </p>
                     <ulist>
                        <item>
                           <p>text that contains the dialogue (possibly simplified dialogue) but that does not describe important sounds 
                  </p>
                        </item>
                        <item>
                           <p> text that omits dialogue during portions of the material </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> View the material with captioning turned on. </p>
                     </item>
                     <item>
                        <p> Check that all dialogue is accompanied by a caption. </p>
                     </item>
                     <item>
                        <p> Check that all important sounds are captioned. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> Step #2 and step #3 are true. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F9">
            <short-name>Failure of Success Criterion 3.2.5 due to changing the context when the user removes
                    focus from a form element</short-name>
            <applicability>
               <p>General. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p>This document describes a failure that occurs when removing focus from a form
                        element, such as by moving to the next element, causes a change of context.
                    </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> The user is going through the form filling out the fields in order.
                                When he moves from the third field to the forth, the form submits.
                            </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="F37"/>
               <relatedtech idref="F60"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find all form elements. </p>
                     </item>
                     <item>
                        <p> Go through them in order. </p>
                     </item>
                     <item>
                        <p> Check if the form submits when you move from one field to the
                                    next. </p>
                     </item>
                     <item>
                        <p> Check if moving from one field to the next launches any new
                                    windows. </p>
                     </item>
                     <item>
                        <p> Check if moving from one filed to the next navigates to another
                                    screen. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #3, step #4, or step #5 is true, then this failure condition applies and
                                    the content fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F10">
            <short-name>Failure of Success Criterion 2.1.2 and Conformance Requirement 5 due to combining multiple content formats in a way
                    that traps users inside one format type</short-name>
            <applicability>
               <p>Applies when content creates a situation where the user can enter the content
                        using the keyboard, but cannot exit the content using the keyboard.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-trapping"/>
               <conformance-criterion idref="cc5"/>
            </applies-to>
            <description>
               <p>When content includes multiple formats, one or more user agents or plug-ins
                        are often needed in order to successfully present the content to users. For
                        example, a page that includes XHTML, SVG, SMIL and XForms may require a
                        browser to load as many as three different plug-ins in order for a user to
                        successfully interact with the content. Some plug-ins create a common
                        situation in which the keyboard focus can become "stuck" in a
                        plug-in, leaving a keyboard-only user with no way to return to the
                        other content. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>
                        <emph role="bold">A plug-in traps the user </emph>A user tabs into a
                                plug-in and is unable to return to content outside the plug-in
                                content with the keyboard. The user has to restart their browser in
                                order to regain control and navigate to a new page and is unable to
                                access any content that appears beyond the plug-in content. </p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G21"/>
               <relatedtech idref="SCR20"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Using a keyboard, navigate through the content. </p>
                     </item>
                     <item>
                        <p> Check to see that the keyboard focus is not "trapped" and it is
                                    possible to move keyboard focus out of the plug-in content
                                    without closing the user agent or restarting the system. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If the keyboard focus becomes "trapped," then this failure
                                    condition applies and content fails the Success Criterion and conformance requirement 5. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F12">
            <short-name>Failure of Success Criterion 2.2.5 due to having a session time limit without a mechanism
                    for saving user's input and re-establishing that information upon
                    re-authentication</short-name>
            <applicability>
               <p>Sites that require user login to submit input and that terminate the session
                        after a some period of inactivity.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-server-timeout"/>
            </applies-to>
            <description>
               <p>Web servers that require user authentication usually have a session mechanism
                        in which a session times out after a period of inactivity from the user.
                        This is sometimes done for security reasons, to protect users who are
                        assumed to have left their computer exposed in a state where someone could
                        do something harmful to them such as transfer bank funds or make an
                        unauthorized purchase. A user with a disability may actually still be
                        working to complete the form as it may take him or her longer to complete
                        the form than would normally be expected. Upon re-authentication, if the
                        state of the user's session is not restored, including all data that had
                        been previously entered into the form, he or she will have to start over.
                        And for these users, it is likely that the session will time out again
                        before they can complete the form. This sets up a situation where a user who
                        needs more time to complete the form can never complete it.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A user submits a form on an authenticated site after their login has
                                expired. On submitting the form, they are prompted to log in again,
                                and then taken to a general welcome page. The data is not processed
                                and they must try again.</p>
                  </item>
                  <item>
                     <p>A user submits a form on an authenticated site after their login has
                                expired. On submitting the form, they are prompted to log in again,
                                and then taken back to the page they were on just before the login,
                                which in this case contains the form they attempted to submit.
                                However, the form is not populated with the data they just entered,
                                and they must re-enter it.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G105"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>On a site where authentication is required, user input is collected, and
                            which ends the user's session after a known period of inactivity:</p>
                  <olist>
                     <item>
                        <p>Provide user input as required but allow the session to time out,
                                    then submit the form.</p>
                     </item>
                     <item>
                        <p>When requested, re-authenticate with the server.</p>
                     </item>
                     <item>
                        <p>Determine if the function is performed using the previously
                                    submitted data.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #3 is false, the site fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F13">
            <short-name>Failure of Success Criterion 1.4.1 due to having a text alternative that does not
                    include information that is conveyed by color differences in the image</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe the failure that occurs when
                        an image uses color differences to convey information, but the text alternative for the
                        image does not convey that information. This can cause problems for people
                        who are blind or colorblind because they will not be able to perceive the
                        information conveyed by the color differences.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A bar chart of sales data is provided as an image. The chart includes
                                yearly sales figures for four employees in the Sales Department. The
                                text alternative for the image says, "The following bar chart
                                displays the yearly sales figures for the Sales Department. Mary
                                sold 3.1 Million; Fred, 2.6 Million; Bob, 2.2 Million; and Andrew,
                                3.4 Million. The red bars indicate sales that were below the yearly
                                quota". This text alternative fails to provide the information which
                                is conveyed by the color red in the image. The alternative should
                                indicate which people did not meet the sales quota rather than
                                relying on color.</p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G94"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For all images in the content that convey information by way of color differences: </p>
                  <olist>
                     <item>
                        <p>Check that the information conveyed by color differences is not included in
                                    the text alternative for the image.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1 is true, then this failure condition applies and
                                    content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F14">
            <short-name>Failure of Success Criterion 1.3.3 due to identifying content only by its shape or
                    location</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-understanding"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to show how identifying content only by
                        its shape or location makes content difficult to understand and operate.
                        When only visual identification or location is used, users with visual
                        disabilities may find it difficult to locate content since they cannot see
                        the screen or may perceive only a small portion of the screen at one time.
                        Also, location of content can vary if page layout varies due to variations
                        in font, window, or screen size.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>The navigation instructions for a site state, "To go to next page,
                                press the button to the right. To go back to previous page, press
                                the button to the left." </p>
                  </item>
                  <item>
                     <p>A user is reading a news article in an on-line newspaper. The article
                                contains an illustration and additional links for more information.
                                Within the text of the article is a statement, "Please see sidebar
                                to the left of the illustration for links to additional
                                information." An assistive technology user would have difficulty
                                finding the illustration and the sidebar. Some alternatives would be
                                to include the list of links within the text; to provide an in-page
                                link within the text which links to the sidebar; to provide a
                                heading for the sidebar which can be used for navigation and refer
                                to the heading in the instructions.</p>
                  </item>
                  <item>
                     <p>A user is completing an on-line survey. There are three buttons at
                                the bottom of the survey form. The instructions state, "Press the
                                square button to exit the survey without saving, Press the triangle
                                button to save in-progress survey results. You may return later to
                                complete the survey. Press the round button to submit the survey
                                results." A screen reader user cannot determine which button is
                                square, triangular, or round. The buttons must have additional
                                information to indicate their functions.</p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G96"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the Web page for textual references to content within the
                                    Web page. </p>
                     </item>
                     <item>
                        <p>Check that the references do not rely on only the shape or
                                    location of the content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F15">
            <short-name>Failure of Success Criterion 4.1.2 due to implementing custom controls that do not use
                    an accessibility API for the technology, or do so incompletely</short-name>
            <applicability>
               <p> Applies to all technologies that support an accessibility API. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p> When standard controls from accessible technologies are used, they usually
                        are programmed in a way that uses and supports the accessibility API. If
                        custom controls are created, however, then it is up to the programmer to be
                        sure that the newly created control supports the accessibility API. If this
                        is not done, then assistive technologies will not be able to understand what
                        the control is or how to operate it or may not even know of its existence.
                    </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>A music player is designed with custom controls that look like
                                musical notes that are stretched for volume, tone etc. The
                                programmer does not make the new control support the Accessibility
                                API. As a result - the controls cannot be identified or controlled
                                from AT. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn2.microsoft.com/en-us/library/ms696082.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Active Accessibility Checker (AccExplorer)</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://java.sun.com/developer/earlyAccess/jaccesshelper/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">JAVA Accessibility Helper</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Using the accessibility checker for the technology (or if
                                    that is not available, inspect the code or test with an
                                    assistive technology), check the controls to see if they support
                                    the accessibility API. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #1 is false, then this failure condition applies and the
                                    content fails this Success Criterion </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F16">
            <short-name>Failure of Success Criterion 2.2.2 due to including scrolling content where movement is not essential to the activity without also including a mechanism to pause and restart the content</short-name>
            <applicability>
               <p>All technologies that support visual movement or scrolling.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>In this failure technique, there is moving or scrolling content that cannot
                        be paused and resumed by users. In this case, some users with low vision or
                        cognitive disabilities will not be able to perceive the content.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A page has a scrolling news ticker without a mechanism to pause it.
                                Some users are unable to read the scrolling content.</p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G4"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>On a page with moving or scrolling content,</p>
                  <olist>
                     <item>
                        <p>Check that a mechanism is provided in the Web page or user agent
                                    to pause moving or scrolling content.</p>
                     </item>
                     <item>
                        <p>Use the pause mechanism to pause the moving or scrolling
                                content.</p>
                     </item>
                     <item>
                        <p>Check that the moving or scrolling has stopped and does not
                                    restart by itself.</p>
                     </item>
                     <item>
                        <p>Check that a mechanism is provided in the Web page or user agent
                                    to restart the paused content.</p>
                     </item>
                     <item>
                        <p>Use the restart mechanism provided to restart the moving
                                content.</p>
                     </item>
                     <item>
                        <p>Check that the movement or scrolling has resumed from the point
                                    where it was stopped.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If steps step #1, step #3, step #4, or step #6 are false, then the content fails the success
                                    criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F17">
            <short-name>Failure of Success Criterion 1.3.1 and 4.1.1 due to insufficient information in DOM to determine
                    one-to-one relationships (e.g., between labels with same id) in HTML</short-name>
            <applicability>
               <p> Applies to the Document Object Model (DOM) for HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to ensure that Web pages can be
                        interpreted consistently by user agents, including assistive technology. If
                        it is ambiguous, different user agents including assistive technologies
                        could present different information to their users. Users of assistive
                        technology for example may have different information presented to them than
                        users of other mainstream user agents. Some elements and attributes in
                        markup languages are required to have unique values, and if this requirement
                        is not honored, the result can be irregular or not uniquely resolvable
                        content. For example, when id attribute values are not unique, they are
                        particularly problematic when referenced by labels, headers in data tables,
                        or used as fragment identifiers, as user agents do not have enough
                        information to provide determine essential relationships (i.e. to determine
                        which label goes with which item). </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <ulist>
                        <item>
                           <p> A label element whose for attribute value is an idref that
                                        points to a non-existent id </p>
                        </item>
                        <item>
                           <p> An id attribute value that is not unique. </p>
                        </item>
                        <item>
                           <p> An accesskey attribute value that is not unique </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check for id and accesskey values which are not unique within
                                    the document. </p>
                     </item>
                     <item>
                        <p> Check that attribute values that have an idref value have a
                                    corresponding id value. </p>
                     </item>
                     <item>
                        <p>For tables that use the axis attribute, check that all values
                                    listed in the axis attribute have a corresponding id value in a
                                    table header cell in the same table.</p>
                     </item>
                     <item>
                        <p>For client-side image maps, check that the value of the usemap
                                    attribute has a corresponding id value if the usemap attribute
                                    is not a URI.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1, step #3 or step #4 is true or step #2 is false, then this failure
                                    condition applies and the content fails the success
                                criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F19">
            <short-name>Failure of Conformance Requirement 1 due to not providing a method for the user to find the alternative conforming version of a non-conforming Web page</short-name>
            <applicability>
               <p> Sites that provide alternative, WCAG conforming versions of nonconforming
                        primary content.</p>
            </applicability>
            <applies-to>
               <conformance-criterion idref="cc1"/>
            </applies-to>
            <description>
               <p> This failure technique describes the situation in which an alternate, conforming version of the content is provided, but there is no direct way for a user to tell that it is available or where to find it. Such content fails the Success Criterion because the user cannot find the conforming version.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p> A link or a search takes a user directly to one of the nonconforming
                                pages in the Web site. There is neither an indication that an
                                alternate page is available, nor a path to the alternate page from
                                the nonconforming page. </p>
                  </item>
                  <item>
                     <p> Nonconforming pages on the Web site inform the user that a
                                conforming version is available and provide a link to the home page.
                                However, the user must search the site for the conforming version of
                                the page, so the functionality does not meet the requirements of the
                                Success Criterion. </p>
                  </item>
                  <item>
                     <p> A user is able to use the nonconforming Web site for most pages. But
                                when the user is not able to access a particular page, there is no
                                way to find the conforming version of the page. </p>
                  </item>
               </ulist>
            </examples>
            <related-techniques>
               <relatedtech idref="G136"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Identify a nonconforming page that has an alternative conforming
                                    version. </p>
                     </item>
                     <item>
                        <p> Determine if the nonconforming page provides a link to the
                                    conforming version. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <olist>
                     <item>
                        <p> If step #2 is false, the content fails the Success Criterion. </p>
                     </item>
                  </olist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F20">
            <short-name>Failure of Success Criterion 1.1.1 and 4.1.2 due to not updating text alternatives when
                    changes to non-text content occur</short-name>
            <applicability>
               <p> Applies to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p> The objective of this failure condition is to address situations where the
                        non-text content is updated, but the text alternative is not updated at the
                        same time. If the text in the text alternative cannot still be used in
                        place of the non-text content without losing information or function, then
                        it fails because it is no longer a text alternative for the non-text
                        content. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>
                        <emph role="bold">Failure Example 1:</emph> A Sales chart is updated
                                to October results, but the text alternative still describes
                                September results. </p>
                  </item>
                  <item>
                     <p>
                        <emph role="bold">Failure Example 2:</emph> Pictures on a home page
                                change daily, but text alternatives are not updated at the same
                                time. </p>
                  </item>
                  <item>
                     <p>
                        <emph role="bold">Failure Example 3:</emph> The source attribute of
                                images on a page is updated periodically using script, but the text
                                alternatives are not updated at the same time. </p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check each text alternative to see if it is describing content
                                    other than the currently-displayed non-text content. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #1 is true then the text alternative is not up to date with
                                    current item, this failure condition applies, and content fails
                                    these Success Criteria. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F22">
            <short-name>Failure of Success Criterion 3.2.5 due to opening windows that are not requested by the
                    user</short-name>
            <applicability>
               <p>General </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p> Failure due to opening new windows when the user does not expect them. New
                        windows take the focus away from what the user is reading or doing. This is
                        fine when the user has interacted with a piece of User Interface and expects
                        to get a new window, such as an options dialogue. The failure comes when
                        pop-ups appear unexpectedly. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>When a user navigates to a page, a new window appears over the
                                existing user agent window, and the focus is moved to the new
                                window.</p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> A user clicks on a link, and a new window appears. The original link
                                has no associated text saying that it will open a new window. </p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>A user clicks on the body of a page and a new window appears. No
                                indication that the area that was clicked has functionality is
                                present. </p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>A user clicks on undecorated text within the page and a new window
                                appears. The page has no visible indication that the area is functional. 
                
              </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="SCR24"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Load the Web page. </p>
                     </item>
                     <item>
                        <p> Check if new (additional) windows open. </p>
                     </item>
                     <item>
                        <p> Find every actionable element, such as links and buttons, in the
                                    Web page. </p>
                     </item>
                     <item>
                        <p> Activate each element. </p>
                     </item>
                     <item>
                        <p> Check if activating the element opens a new window. </p>
                     </item>
                     <item>
                        <p> Check if elements that open new windows have associated text
                                    saying that will happen. The text can be displayed in the link,
                                    or available through a hidden association such as an HTML title
                                    attribute. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #2 is true, the failure condition applies and the content
                                    fails the Success Criterion </p>
                     </item>
                     <item>
                        <p> If step #5 is true and step #6 is false, the failure condition applies and
                                    the content fails the Success Criterion </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F23">
            <short-name>Failure of  1.4.2 due to playing a sound longer than 3 seconds where
                    there is no mechanism to turn it off</short-name>
            <applicability>
               <p> Applies to all technologies except those for voice interaction. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-dis-audio"/>
            </applies-to>
            <description>
               <p> This describes a failure condition for Success Criteria involving sound. If sound does not
                        turn off automatically within 3 seconds and there is no way to turn the
                        sound off then Success Criterion 1.4.2 would not be met. Sounds that play over 3 seconds
                        when there is no mechanism to turn off the sound included in the content
                        would fall within this failure condition. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <ulist>
                        <item>
                           <p> A site that plays continuous background music </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <ulist>
                        <item>
                           <p> A site with a narrator that lasts more than 3 seconds before
                  	stopping, and there is no mechanism to stop it. </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check that there is a way in a Web page to turn off any sound that
                                    plays automatically for more than three seconds.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #1 is not true then content fails Success Criterion 1.4.2
                                </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F24">
            <short-name>Failure of Success Criterion 1.4.3, 1.4.6 and 1.4.8 due to specifying foreground colors without
                    specifying background colors or vice versa</short-name>
            <applicability>
               <p> All technologies that allow user agents to control foreground and background
                        colors through personal stylesheets or other means. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-contrast"/>
               <success-criterion idref="visual-audio-contrast7"/>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p diff="add">Users with vision loss or cognitive, language and learning challenges often prefer specific foreground and background color combinations. In some cases, individuals with low vision will find it much easier to see a Web page that has white text on a black background, and they may have set their user agent to present this contrast. Many user agents make it possible for authors to choose a preference about the foreground or background colors they would like to see without overriding all author-specified styles. This makes it possible for users to view pages pages where colors have not been specified by the author in their preferred color combination.</p>
               <p diff="add">Unless an author specifies both foreground and background colors, then they (the author) can no longer guarantee that the user will get a contrast that meets the contrast requirements. If, for example, the author specifies, that text should be grey, then it may override the settings of the user agent and render a page that has grey text (specified by the author) on a light grey background (that was set by the user in their user agent). This principle also works in reverse. If the author forces the background to be white, then the white background specified by the author could be similar in color to the text color preference expressed by the user in their user agent settings, thus rendering the page unusable to the user. Because an author can not predict how a user may have configured their preferences, if the author specifies a foreground text color then they should also specify a background color which has sufficient contrast with the foreground and vice versa.</p>
               <p diff="add">It is not necessary that the foreground and background colors both be defined on the same CSS rule. Since CSS color properties inherit from ancestor elements, it is sufficient if both foreground and background colors are defined either directly or through inheritance by the time that color is applied to a given element.<issue id="i2665" status="open">
                     <p>2665</p>
                  </issue>
               </p>
               <p diff="del"> Users with vision loss or cognitive challenges often require specific
                        foreground and background color combinations. For instance, many people with
                        low vision find it much easier to see a Web page that has white text on a
                        black background, so they may have set their user agent to create this
                        contrast. If the author specifies that the text must be black, then it may
                        override the settings of the user agent and render a page that has black
                        text (specified by the author) on black background (that was set in the user
                        agent). This principle also works in reverse. If the Webmaster forces the
                        background to be white, then the white background specified by the author
                        would be the same color as the white text (which was set in the user agent)
                        rendering the page unusable to the user. Therefore, if the author specifies
                        a foreground text color then they should also specify a background color
                        which has sufficient contrast (link) with the foreground and vice versa.
                    </p>
               <note>
                  <p diff="chg">
                Best practice is to include all states of the text. For example, text, link text, visited link text, link text with hover and keyboard focus, etc.</p>
               </note>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Specifying only background color with <att>bgcolor</att> in HTML </head>
                  <description>
                     <p>In the example below the background color is defined on the body
                                element, however the foreground color is not defined. Therefore, the
                                example fails the Success Criterion.</p>
                  </description>
                  <code>   
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
  &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
      &lt;html&gt;
          &lt;head&gt;
              &lt;title&gt;A study of population dynamics&lt;/title&gt;
          &lt;/head&gt;
          &lt;body bgcolor="white"&gt;
              &lt;p&gt; ... document body...&lt;/p&gt;
          &lt;/body&gt;
  &lt;/html&gt;</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Specifying only foreground color with <att>color</att> in HTML </head>
                  <description>
                     <p>In the example below the foreground color is defined on the body
                                element, however the background color is not defined. Therefore, the
                                example fails the Success Criterion. </p>
                  </description>
                  <code>
 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;html&gt;
&lt;head&gt;
 &lt;title&gt;A study of population dynamics&lt;/title&gt;

&lt;/head&gt;
&lt;body color="white"&gt;
  &lt;p&gt;... document body...&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Specifying only background color with CSS</head>
                  <description>
                     <p>In the example below the background color is defined on the CSS
                                stylesheet, however the foreground color is not defined. Therefore,
                                the example fails the Success Criterion.</p>
                  </description>
                  <code>
  &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;html&gt;
&lt;head&gt;
 &lt;title&gt;Setting the canvas background&lt;/title&gt;
    &lt;style type="text/css"&gt;

       body {background-color:white}
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;My background is white.&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Specifying only background color with CSS</head>
                  <description>
                     <p>In the example below the foreground color is defined on the CSS
                                stylesheet, however the background color is not defined. Therefore,
                                the example fails the Success Criterion. </p>
                  </description>
                  <code>
 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;html&gt;
&lt;head&gt;
 &lt;title&gt;Setting the canvas background&lt;/title&gt;
    &lt;style type="text/css"&gt;
       body {color:white}
    &lt;/style&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;p&gt;My foreground is white.&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Specifying foreground color of link text with CSS</head>
                  <description>
                     <p>In the example below the link text (foreground) color is defined on
                                the body element. However, the background color is not defined.
                                Therefore, the example fails the Success Criterion. </p>
                  </description>
                  <code>
  &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" 
    "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;html&gt;
&lt;head&gt;
 &lt;title&gt;A study of population dynamics&lt;/TITLE&gt;
 &lt;style type="text/css"&gt;
  a:link { color: red }
  a:visited { color: maroon }
  a:active { color: fuchsia }
 &lt;/style&gt;

&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;... document body... &lt;a href="foo.htm"&gt;Foo&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-CSS2/cascade.html#inheritance"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Assigning property values, Cascading, and Inheritance</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="C23"/>
               <relatedtech idref="C25"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the code of the Web page.</p>
                     </item>
                     <item>
                        <p>Check to see if <phrase diff="add">an author-specified</phrase> foreground color is <phrase diff="add">present</phrase>
                           <phrase diff="del">specified</phrase>
                        </p>
                     </item>
                     <item>
                        <p>Check to see if <phrase diff="add">an author-specified</phrase> background color is <phrase diff="add">present</phrase>
                           <phrase diff="del">specified</phrase>
                        </p>
                     </item>
                  </olist>
                  <note>
                     <p>
                Color and background color may be specified at any level in the cascade of preceding selectors, by external stylesheets or through inheritance rules.
              </p>
                     <p>
                Background color may also be specified using a background image with the CSS property 'background-image' or with the CSS property 'background' (with the URI of the image, e.g. 'background: url("images/bg.gif")'). With background images, it is still necessary to specify a background color, because users may have images turned off in their browser. But the background image and the background color need to be checked. 
                
              </p>
                  </note>
               </procedure>
               <expected-results>
                  <p>If step #2 is true but step #3 is false, OR if step #3 is true but step #2 is false then this
                            failure condition applies and content fails these Success Criteria.</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="F25">
            <short-name>Failure of Success Criterion 2.4.2 due to the title of a Web page not identifying the
                    contents</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-title"/>
            </applies-to>
            <description>
               <p>This describes a failure condition when the Web page has a title, but the
                        title does not identify the contents or purpose of the Web page. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>Examples of text that are not titles include: </p>
                     <ulist>
                        <item>
                           <p>Authoring tool default titles, such as </p>
                           <ulist>
                              <item>
                                 <p>"Enter the title of your HTML document here," </p>
                              </item>
                              <item>
                                 <p>"Untitled Document" </p>
                              </item>
                              <item>
                                 <p>"No Title" </p>
                              </item>
                              <item>
                                 <p>"Untitled Page" </p>
                              </item>
                              <item>
                                 <p>"New Page 1"</p>
                              </item>
                           </ulist>
                        </item>
                        <item>
                           <p>Filenames that are not descriptive in their own right, such
                                        as "report.html" or "spk12.html"</p>
                        </item>
                        <item>
                           <p>Empty text</p>
                        </item>
                        <item>
                           <p>Filler or placeholder text</p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>A site generated using templates includes the same title for each
                                page on the site. So the title cannot be used to distinguish among
                                the pages.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H25"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check whether the title of each Web page identifies the contents
                                    or purpose of the Web page .</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F26">
            <short-name>
          Failure of Success Criterion 1.3.3 due to using a graphical symbol alone to convey information
          
        </short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-understanding"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to show how using a graphical symbol to convey information can make content difficult to comprehend. A graphical symbol may be an image, an image of text or a pictorial or decorative character symbol (glyph) which imparts information nonverbally. Examples of graphical symbols include an image of a red circle with a line through it, a "smiley" face, or a glyph which represents a check mark, arrow, or other symbol but is not the  character with that meaning. Assistive technology users may have difficulty determining the meaning of the graphical symbol. If a graphical symbol is used to convey information, provide an alternative using features of the technology or use a different mechanism that can be marked with an alternative to represent the graphical symbol. For example, an image with a text alternative can be used instead of the glyph.  
          </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Glyphs Used to Indicate Status</head>
                  <description>
                     <p>
                A shopping cart uses two simple glyphs to indicate whether an item is available for immediate shipment. A check mark indicates that the item is in stock and ready to ship. An "x" mark indicates that the item is currently on back order and not available for immediate shipment. An assistive technology user could not determine the status of the current item. 
                
              </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H37"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the page for non-text marks that convey information. </p>
                     </item>
                     <item>
                        <p>Check whether there are other means to determine the information
                                    conveyed by the non-text marks.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F30">
            <short-name>Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not
                    alternatives (e.g. filenames or placeholder text)</short-name>
            <applicability>
               <p> Applies to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="media-equiv-av-only-alt"/>
            </applies-to>
            <description>
               <p> This describes a failure condition for all techniques involving text
                        alternatives. If the text in the "text alternative" cannot be used in place
                        of the non-text content without losing information or function then it fails
                        because it is not, in fact, an alternative to the non-text content. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p> Examples of text that are not text alternatives include: </p>
                     <ulist>
                        <item>
                           <p> placeholder text such as " " or "spacer" or "image" or
                                        "picture" etc that are put into the 'text alternative'
                                        location on images or pictures. </p>
                        </item>
                        <item>
                           <p> programming references that do not convey the information or
                                        function of the non-text content such as "picture 1",
                                        "picture 2" or "0001", "0002" or "Intro#1", "Intro#2". </p>
                        </item>
                        <item>
                           <p> filenames that are not valid text alternatives in their own
                                        right such as "Oct.jpg" or "Chart.jpg" or
                                        "sales\\oct\\top3.jpg" </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check each text alternative to see if it is not actually a text
                                    alternative for the non-text content. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #1 is true then this failure condition applies and content
                                    fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F31">
            <short-name>Failure of Success Criterion 3.2.4 due to using two different labels for the same function on different Web pages within a set of Web pages 
            
          
        </short-name>
            <applicability>
               <p> Applies to all technologies. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-consistent-functionality"/>
            </applies-to>
            <description>
               <p> Components that have the same function in different Web pages are more
                        easily recognized if they are labeled consistently. If the naming is not
                        consistent, some users may get confused. </p>
               <note>
                  <p>Text alternatives that are "consistent" are not always "identical." For
                            instance, you may have an graphical arrow at the bottom of a Web page
                            that links to the next Web page. The text alternative may say "Go to
                            page 4." Naturally, it would not be appropriate to repeat this exact
                            text alternative on the next Web page. It would be more appropriate to
                            say "Go to page 5". Although these text alternatives would not be
                            identical, they would be consistent, and therefore would not be failures
                            for this Success Criterion.</p>
               </note>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> One of the most common examples of using inconsistent labels for
                                components with the same function is to use a button that says
                                "search" in one page and to use a button that says "find" on another
                                page when they both serve the identical function. </p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>An online authoring tool that uses a button with "Save page" on one
                                page and "Save" on another page, in both cases for the same
                                function. </p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> In a set of Web pages, find components with the same function
                                    that are repeated in multiple Web pages. </p>
                     </item>
                     <item>
                        <p> For each component with the same function found in step #1, check
                                    that the naming is consistent. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p> If step #2 is false then this failure condition applies and content fails
                            the Success Criterion. </p>
               </expected-results>
            </tests>
         </technique>
         <technique id="F32">
            <short-name>Failure of Success Criterion 1.3.2 due to using white space characters to control
                    spacing within a word</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe how using white space characters, such as space, tab, line break, or carriage return, to format individual words visually can be a failure to present meaningful sequences properly. When blank characters are inserted to control letter spacing within a word, they may change the interpretation of the word or cause it not to be programmatically recognized as a single word. 
          </p>
               <p>Inserting white space characters into an initialism is not an example of this
                        failure, since the white space does not change the interpretation of the
                        initialism and may make it easier to understand.</p>
               <p>The use of white space between words for visual formatting is not a failure,
                        since it does not change the interpretation of the words.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Failure due to adding white space in the middle of a word</head>
                  <description>
                     <p>This example has white spaces within a word to space out the letters
                                in a heading. Screen readers may read each letter individually
                                instead of the word "Welcome."</p>
                  </description>
                  <code role="html401">
&lt;h1&gt;W e l c o m e&lt;/h1&gt;
</code>
                  <description>
                     <p>&amp;nbsp; can also be used to add white space, producing similar
                                failures:</p>
                  </description>
                  <code role="html401">
&lt;h1&gt;H&amp;nbsp;E&amp;nbsp;L&amp;nbsp;L&amp;nbsp;O&lt;/h1&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>White space in the middle of a word changing its meaning</head>
                  <description>
                     <p>In Japanese, Han characters (Kanji) may have multiple readings that
                                mean very different things. In this example, the word is read
                                incorrectly because screen readers may not recognize these
                                characters as a word because of the white space between the
                                characters. The characters mean "Tokyo," but screen readers say
                                "Higashi Kyo".</p>
                  </description>
                  <code role="html401">
&lt;h1&gt;東　京&lt;/h1&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Using line break characters to format vertical text</head>
                  <description>
                     <p>In the row header cell of a data table containing Japanese text,
                                authors often create vertical text by using line break characters.
                                However screen readers are not able to read the words in vertical
                                text correctly because the line breaks occur within the word. In the
                                following example, "東京都"(Tokyo-to) will be read "Higashi Kyo
                                Miyako".</p>
                  </description>
                  <code role="html401">
&lt;table&gt;
&lt;caption&gt;表1.　都道府県別一覧表&lt;/caption&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;th scope="col"&gt;（見出しセル 1.）&lt;/th&gt;
&lt;th scope="col"&gt;（見出しセル 2.）&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope="row"&gt;東&lt;br /&gt;京&lt;br /&gt;都&lt;/th&gt;
&lt;td&gt;（データセル 1.）&lt;/td&gt;
&lt;td&gt;（データセル 2.）&lt;/td&gt;
&lt;/tr&gt;
・・・・・・
&lt;/table&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="C8"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each word that appears to have non-standard spacing between
                            characters: </p>
                  <olist>
                     <item>
                        <p>Check whether any words in the text of the content contain white
                                    space characters .</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1 is true, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F33">
            <short-name>Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to
                    create multiple columns in plain text content</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe how using white space
                        characters, such as space, tab, line break, or carriage return, to format columns of
                        data in text content is a failure to use structure properly. Assistive
                        technologies will interpret content in the reading order of the current
                        language. Using white space characters to create multiple columns does not
                        provide the information in a natural reading order. Thus, the assistive
                        technology user will not be presented with the information in an
                        understandable manner.</p>
               <p>Plain text is not suitable for displaying multiple columns of text. Modify
                        the content to present the data in a different layout. Alternatively, use a
                        technology that provides structural elements to represent columnar data.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>The following example incorrectly uses white space characters to
                                format a paragraph into a two column format.</p>
                  </description>
                  <code role="html401">
Web Content Accessibility Guidelines      including blindness and low vision, 
2.0 (WCAG 2.0) covers a wide range of     deafness and hearing loss, learning 
issues and recommendations for making     difficulties, cognitive limitations, limited 
Web content more accessible. This         movement, speech difficulties, and 
document contains principles,             others. Following these guidelines will 
guidelines, Success Criteria, benefits,   also make your Web content more 
and examples that define and explain      accessible to the vast majority of users, 
the requirements for making Web-based     including older users. It will also enable
information and applications accessible.  people to access Web content using 
"Accessible" means usable to a wide       many different devices - including a 
range of people with disabilities,        wide variety of assistive technologies.
</code>
                  <description>
                     <p>If this table was to be interpreted and spoken by a screen reader it
                                would speak the following lines:</p>
                     <ulist>
                        <item>
                           <p>Web Content Accessibility Guidelines including blindness and
                                        low vision,</p>
                        </item>
                        <item>
                           <p>2.0 (WCAG 2.0) covers a wide range of deafness and hearing
                                        loss, learning</p>
                        </item>
                        <item>
                           <p>issues and recommendations for making difficulties, cognitive
                                        limitations, limited</p>
                        </item>
                        <item>
                           <p>Web content more accessible. This movement, speech
                                        difficulties, and</p>
                        </item>
                        <item>
                           <p>(additional lines eliminated for brevity) </p>
                        </item>
                     </ulist>
                     <p>If the text were reflowed, or changed from a fixed to a variable
                                font, or increased in size until lines no longer fit on the page,
                                similar interpretation issues would arise in the visual
                                presentation.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the document for data or information presented in
                                    columnar format.</p>
                     </item>
                     <item>
                        <p>Check whether the columns are created using white space
                                    characters to lay out the information.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #2 is true, then this failure condition applies and the
                                    content fails these Success Criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F34">
            <short-name>Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to
                    format tables in plain text content</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe how using white space
                        characters, such as space, tab, line break, or carriage return, to format tables in text
                        content is a failure to use structure properly. When tables are created in
                        this manner there is no way to indicate that a cell is intended to be a
                        header cell, no way to associate the table header cells with the table data
                        cells, or to navigate directly to a particular cell in a table.</p>
               <p>In addition, assistive technologies will interpret content in the reading
                        order of the current language. Using white space to organize data in a
                        visual table does not provide the information in a natural reading order in
                        the source of the document. Thus, the assistive technology user will not be
                        presented with the information in a logical reading order.</p>
               <p>Plain text is not suitable for displaying complex information like tables
                        because the structure of the table cannot be perceived. Rather than using
                        visual formatting to represent tabular relations, 
            tabular information would need to be presented using a different technology or presented linearly. (See Presenting tabular information in plain text)
            
          </p>
               <!-- BBC: The above should link to the undrafted technique by the same name in 1.3.1--></description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>The following example incorrectly uses white space to format a Menu
                                as a visual table.</p>
                  </description>
                  <code role="html401">
Menu
         Breakfast        Lunch           Dinner

Monday   2 fried eggs    tomato soup     garden salad
         bacon           hamburger       Fried Chicken
         toast           onion rings     green beans
                         Oatmeal cookie  mashed potatoes

Tuesday   Pancakes       vegetable soup  Caesar salad
          sausage        hot dogs        Spaghetti with meatballs
          orange juice   potato salad    Italian bread
                         brownie         ice cream
</code>
                  <description>
                     <p>If this table was to be interpreted and spoken by a screen reader it
                                would speak the following lines:</p>
                     <ulist>
                        <item>
                           <p>Menu</p>
                        </item>
                        <item>
                           <p>Breakfast Lunch Dinner</p>
                        </item>
                        <item>
                           <p>Monday 2 fried eggs tomato soup garden salad</p>
                        </item>
                        <item>
                           <p>bacon hamburger Fried Chicken</p>
                        </item>
                        <item>
                           <p>toast onion rings green beans</p>
                        </item>
                        <item>
                           <p>Oatmeal cookie mashed potatoes</p>
                        </item>
                     </ulist>
                     <p>This reading order does not make sense since there is no structure in
                                the table for the assistive technology to identify it as a table. If
                                the text were reflowed, or changed from a fixed to a variable font,
                                or increased in size until lines no longer fit on the page, similar
                                issues would arise in the visual presentation.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H51"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the document for visually formatted tables.</p>
                     </item>
                     <item>
                        <p>Check whether the tables are created using white space characters
                                    to layout the tabular data.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #2 is true, then this failure condition applies and the
                                    content fails these Success Criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F36">
            <short-name>Failure of Success Criterion 3.2.2 due to automatically submitting a form and
                    presenting new content without prior warning when the last field in the form is
                    given a value</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
            </applies-to>
            <description>
               <p>Forms are frequently designed so that they submit automatically when the user
                        has filled in all the fields, or when focus leaves the last field. There are
                        two problems with this approach. First is that a disabled user who needs
                        more context may move focus away from the field to the directions on how to
                        fill in the form, or to other text, accidentally submitting the form. The
                        other is that, with some form elements, the value of the field changes as
                        each item is navigated with the keyboard, again accidentally submitting the
                        form. It is better to rely on the standard form behavior of the submit
                        button and enter key. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> This failure example submits a form when the user leaves the last
                                field of a three-field telephone number form. The form will submit
                                if the user leaves the field after editing it, even navigating
                                backwards in the tab order. Developers should not use this method to
                                submit a form, and should instead use a submit button, or rely on
                                the form's default behavior of submitting when the user hits enter
                                in a text field. </p>
                  </description>
                  <code> 
&lt;form method="get" id="form1"&gt;
  &lt;input type="text" name="text1" size="3" maxlength="3"&gt; - 
  &lt;input type="text" name="text2" size="3" maxlength="3"&gt; - 
  &lt;input type="text" name="text3" size="4" maxlength="4" onchange="form1.submit();"&gt;
&lt;/form&gt; </code>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>This is a  example that submits a form when the user
                                selects an option from the menu when there is no warning of this behavior in advance. The form will submit as soon as an item from the menu is selected. A user using a keyboard will not be able to navigate past the first item in the menu. Blind users and users with hand tremors can easily make a mistake on which item on the dropdown menu to choose and they are taken to the wrong destination before they can correct it.
                
              </p>
                  </description>
                  <code> 
&lt;form method="get" id="form2"&gt;
 &lt;input type="text" name="text1"&gt;
  &lt;select name="select1" onchange="form2.submit();"&gt;
    &lt;option&gt;one&lt;/option&gt;
    &lt;option&gt;two&lt;/option&gt;
    &lt;option&gt;three&lt;/option&gt;
    &lt;option&gt;four&lt;/option&gt;
  &lt;/select&gt;
&lt;/form&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Enter data in all fields on page starting at top. </p>
                     </item>
                     <item>
                        <p> Enter data in last field and exit from it (tab out of it).</p>
                     </item>
                     <item>
                        <p> Check whether leaving the last field causes change of
                                context.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #3 is true, then this failure condition applies and content
                                    fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F37">
            <short-name>Failure of Success Criterion 3.2.2 due to launching a new window without prior warning
                    when the status of a radio button, check box or select list is changed</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="6">
                  <p>Internet Explorer 6 also triggers the onclick event when a radio button
                            with onclick receives focus; adding other event handlers (onxxx
                            attributes) to prevent this does not work. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p> This document describes a failure that occurs when changing the status of a
                        radio button, a check box or an item in a select list causes a new window to
                        open. It is possible to use scripting to create an <code>input</code>
                        element that causes a change of context (submit the form, open a new page, a
                        new window) when the element is selected. Developers can instead use a
                        submit button (see <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="G80" linktype="general"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Providing a submit
                            button to initiate a change of context</loc>) or clearly indicate the
                        expected action. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> The example below fails the Success Criterion because it processes
                                the form when a radio button is selected instead of using a submit
                                button. </p>
                  </description>
                  <code>  
&lt;script type="text/JavaScript"&gt; 
  function goToMirror(theInput) {
   var mirrorSite = "http://download." + theInput.value + "/"; 
   window.open(mirrorSite); 
  }
&lt;/script&gt;
  …
&lt;form name="mirror_form" id="mirror_form" action="" method="get"&gt;
       &lt;p&gt;Please select a mirror download site:&lt;/p&gt; 
       &lt;p&gt; 
       &lt;input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_belnet" value="belnet.be" /&gt; 
       &lt;label for="mirror_belnet"&gt;belnet (&lt;abbr&gt;BE&lt;/abbr&gt;)&lt;/label&gt;&lt;br /&gt; 
       &lt;input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_surfnet" value="surfnet.nl" /&gt; 
       &lt;label for="mirror_surfnet"&gt;surfnet (&lt;abbr&gt;NL&lt;/abbr&gt;)&lt;/label&gt;&lt;br /&gt; 
       &lt;input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_puzzle" value="puzzle.ch" /&gt; 
       &lt;label for="mirror_puzzle"&gt;puzzle (&lt;abbr&gt;CH&lt;/abbr&gt;)&lt;/label&gt;&lt;br /&gt; 
       &lt;input type="radio" onclick="goToMirror(this);" name="mirror" 
       id="mirror_voxel" value="voxel.com" /&gt; 
       &lt;label for="mirror_voxel"&gt;voxel (&lt;abbr&gt;US&lt;/abbr&gt;)&lt;/label&gt;&lt;br /&gt; 
       &lt;/p&gt; 
&lt;/form&gt;</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find each form in a page. </p>
                     </item>
                     <item>
                        <p> For each form control that is a radio button, check box or an
                                    item in a select list, check if changing the status of the
                                    control launches a new window. </p>
                     </item>
                     <item>
                        <p> For each new window resulting from step 2, check if the user is
                                    warned in advance. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p> If step #3 is false, then this failure condition applies and content
                            fails the Success Criterion. </p>
               </expected-results>
            </tests>
         </technique>
         <technique id="F38">
            <short-name>Failure of Success Criterion 1.1.1 due to omitting the alt-attribute for non-text
                    content used for decorative purposes only in HTML</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> This describes a failure condition for text alternatives for images that
                        should be ignored by AT. If there is no alt attribute at all assistive
                        technologies are not able to ignore the non-text content. The alt attribute
                        must be proved and have a null value (i.e. <code>alt=""</code> or
                            <code>alt=" "</code>) to avoid a failure of this Success Criterion. </p>
               <note>
                  <p>Although <code>alt=" "</code> is valid, <code>alt=""</code> is
                            recommended. </p>
               </note>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>Failure Example 1: Decorative images that have no <att>alt</att>
                                attribute </p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Identify any <code>img</code> and <code>applet</code> elements
                                    that are used for purely decorative content; </p>
                     </item>
                     <item>
                        <p> Check that the <code>alt</code> attribute for these elements
                                    exists. </p>
                     </item>
                     <item>
                        <p> Check that the <code>alt</code> attribute for these elements is
                                    null. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> if step #2 or step #3 is false, this failure condition applies and
                                    content fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F39">
            <short-name>Failure of Success Criterion 1.1.1 due to providing a text alternative that is not
                    null. (e.g. alt="spacer" or alt="image") for images that should be ignored by assistive technology</short-name>
            <applicability>
               <p> Applies to HTML and XHTML. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p> This describes a failure condition for text alternatives for images that
                        should be ignored by AT. If there is no alt attribute at all assistive
                        technologies are not able to ignore the non-text content. The alt attribute
                        must be proved and have a null value (i.e. <code>alt=""</code> or
                            <code>alt=" "</code>) to avoid a failure of this Success Criterion. </p>
               <p>Note: Although <code>alt=" "</code> is valid, <code>alt=""</code> is
                        recommended. </p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>Failure Example 1: Decorative images that have no <att>alt</att>
                                attribute </p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Identify any <code>img</code> and <code>applet</code> elements
                                    that are used for purely decorative content; </p>
                     </item>
                     <item>
                        <p> Check that the <code>alt</code> attribute for these elements
                                    exists. </p>
                     </item>
                     <item>
                        <p> Check that the <code>alt</code> attribute for these elements is
                                    null. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step #2 or step #3 is false, this failure condition applies and
                                    content fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F40">
            <short-name>Failure of Success Criterion 2.2.1 and 2.2.4 due to using meta redirect with a time limit
        </short-name>
            <applicability>
               <p> All pages</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
               <success-criterion idref="time-limits-postponed"/>
            </applies-to>
            <description>
               <p>
                  <code>meta</code>
                  <code>http-equiv</code> of {time-out}; url=... is often used to
                        automatically redirect users. When this occurs after a time delay, it is an
                        unexpected change of context that may interrupt the user.</p>
               <p>It is acceptable to use the <code>meta</code> element to create a redirect
                        when the time-out is set to zero, since the redirect is instant and will not
                        be perceived as a change of context. However, it is preferable to use
                        server-side methods to accomplish this. See <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="SVR1" linktype="server"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Implementing automatic redirects on the server side
                            instead of on the client side</loc>.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p> The page below is a failure because it will redirect to the URI
                                http://www.example.com/newpage after a time limit of 5 seconds.</p>
                  </description>
                  <code>
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
   &lt;head&gt;     
      &lt;title&gt;Do not use this!&lt;/title&gt;     
      &lt;meta http-equiv="refresh"
      content="5; url=http://www.example.com/newpage" /&gt;   
   &lt;/head&gt;   
   &lt;body&gt;     
      &lt;p&gt;       
         If your browser supports Refresh, you'll be       
         transported to our        
         &lt;a href="http://www.example.com/newpage"&gt;new site&lt;/a&gt;        
         in 5 seconds, otherwise, select the link manually.     
      &lt;/p&gt;   
   &lt;/body&gt; 
&lt;/html&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html401/struct/global.html#h-7.4.4"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">HTML 4.01 META element</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <!--
Related techniques
<ulist>
    <item><p>
        <loc href="">Using meta refresh to create an instant client-side redirect</loc>
    </p></item>
</ulist>
--><tests>
               <procedure>
                  <olist>
                     <item>
                        <p> View a page. </p>
                     </item>
                     <item>
                        <p> Check that the page does not redirect after a time-out. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <olist>
                     <item>
                        <p> #2 is true. </p>
                     </item>
                  </olist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F41">
            <short-name>Failure of Success Criterion 2.2.1, 2.2.4, and 3.2.5 due to using meta refresh with a
                    time-out</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
               <success-criterion idref="time-limits-postponed"/>
               <!-- Bruces raises concern this mapping could mislead people, should expand technique to clarify --><success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p>
                  <code>meta</code>
                  <code>http-equiv</code> of refresh is often used to periodically refresh
                        pages or to redirect users to another page. If the time interval is too
                        short, people who are blind will not have enough time to make their screen
                        readers read the page before the page refreshes unexpectedly and causes the
                        screen reader to begin reading at the top. Sighted users may also be
                        disoriented by the unexpected refresh.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p> This is a deprecated example that changes the user's page at regular
                                intervals. Content developers should not use this technique to
                                simulate "push" technology. Developers cannot predict how much time
                                a user will require to read a page; premature refresh can disorient
                                users. Content developers should avoid periodic refresh and allow
                                users to choose when they want the latest information. (The number
                                in the <code>content</code> attribute is the refresh interval in
                                seconds.)</p>
                  </description>
                  <code>
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;   
  &lt;head&gt;     
    &lt;title&gt;HTML Techniques for WCAG 2.0&lt;/title&gt;     
    &lt;meta http-equiv="refresh" content="60" /&gt;   
  &lt;/head&gt;   
  &lt;body&gt;
    ...     
  &lt;/body&gt; 
&lt;/html&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>This is a deprecated example that redirects the user to another page
                                after a number of seconds. Content developers are recommended to
                                user server-side redirects instead. (The number in the
                                <code>content</code> attribute is the refresh interval in
                            seconds.)</p>
                  </description>
                  <code>
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;   
  &lt;head&gt;     
    &lt;title&gt;The Tudors&lt;/title&gt;     
    &lt;meta http-equiv="refresh" content="10;URL='http://example.com/'" /&gt;   
  &lt;/head&gt;   
  &lt;body&gt;
    &lt;p&gt;This page has moved to a &lt;a href="http://example.com/"&gt;
    example.com&lt;/a&gt;. Please note that we now have our own 
    domain name and will redirect you in a few seconds. Please update 
    your links and bookmarks.&lt;/p&gt;
  &lt;/body&gt; 
&lt;/html&gt;</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="SVR1"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find <code>meta</code> elements in the document. </p>
                     </item>
                     <item>
                        <p> For each <code>meta</code> element, check if it contains the
                                    attribute <code>http-equiv</code> with value "refresh"
                                    (case-insensitive) and the <code>content</code> attribute with a
                                    number (representing seconds) greater than 0. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step 2 is true then this failure condition applies and content
                                    fails these Success Criteria. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F42">
            <short-name>Failure of Success Criterion 1.3.1 and 2.1.1 due to using scripting events to emulate links <phrase diff="add">in a way that is not programmatically determinable</phrase>
            </short-name>
            <applicability>
               <p>HTML and XHTML with Scripting.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p>This failure occurs when JavaScript event handlers are attached to elements
                        to ''emulate links''. A control or link created in this  manner cannot be tabbed to from the keyboard and does not gain keyboard focus like other controls and/or links.
            If scripting events are used to emulate links, user
                        agents including assistive technology may not be able to identify the links
                        in the content as links. They may not be recognized as interactive controls
                        by assistive technology, or they may be recognized as interactive controls
                        but still not recognized as links. Such elements do not appear in the links
                        list generated by user agents or assistive technology.</p>
               <p>The <code>&lt;a href&gt;</code> and <code>&lt;area&gt;</code>
                        elements are intended to mark up links.</p>
               <p>Attaching event handlers to elements that are not normally interactive, such
                        as <code>span</code> and <code>div</code>, can be quite disorienting to
                        users. Even if care is taken to provide keyboard access to such elements,
                        users may have a difficult time discovering that there are interactive
                        controls in the content or understanding what type of behavior to expect
                        from them. For example, users may not know which keystrokes are supported by
                        the script to activate the element. Additionally, these elements do not
                        generate the same operating system events as interactive elements, so
                        assistive technology may not be notified when the user activates them.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Scripting a <code>&lt;span&gt;</code> element</head>
                  <description>
                     <p>Scripted event handling is added to a <code>span</code> element so
                                that it functions as a link when clicked with a mouse. Assistive
                                technology does not recognize this element as a link.</p>
                  </description>
                  <code role="html401">
&lt;span onclick="this.location.href='newpage.html'"&gt;
    Fake link
&lt;/span&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Scripting an <code>&lt;img&gt;</code> element</head>
                  <description>
                     <p>Scripted event handling is added to an <code>img</code> element so
                                that it functions as a link when clicked with a mouse. Assistive
                                technology does not recognize this element as a link.</p>
                  </description>
                  <code role="html401">
   src="go.gif" 
   alt="go to the new page" 
   onclick="this.location.href='newpage.html'"
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Scripting an <code>&lt;img&gt;</code> element, with keyboard
                            support</head>
                  <description>
                     <p>Scripted event handling is added to an <code>img</code> element so
                                that it functions as a link. In this example, the link functionality
                                can be invoked with the mouse or via the Enter key if the user agent
                                includes the element in the tab chain. Nevertheless, the element
                                will not be recognized as a link.</p>
                  </description>
                  <code role="html401">
function doNav(url)
{
   window.location.href = url;
}

function doKeyPress(url)
{
   //if the enter key was pressed
   if (window.event.type == "keypress" &amp;&amp;
       window.event.keyCode == 13)
   {
      doNav(url);
   }
}
</code>
                  <description>
                     <p>The markup for the image is:</p>
                  </description>
                  <code role="html401">
&lt;p&gt;
	&lt;img src="bargain.jpg"
		tabindex="0" 
		alt="View Bargains"
		onclick="doNav('viewbargains.html');"
		onkeypress="doKeyPress('viewbargains.html');"
	&gt;
&lt;/p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Scripting a <code>&lt;div&gt;</code> element</head>
                  <description>
                     <p>This example uses script to make a <code>div</code> element behave
                                like a link. Although the author has provided complete keyboard
                                access and separated the event handlers from the markup to enable
                                repurposing of the content, the <code>div</code> element will not be
                                recognized as a link by assistive technology.</p>
                  </description>
                  <code role="html401">
window.onload = init;

function init()
{
	var objAnchor = document.getElementById('linklike');

	objAnchor.onclick = function(event){return changeLocation(event,
'surveyresults.html');};
	objAnchor.onkeypress = function(event){return changeLocation(event,
'surveyresults.html');};
}

function changeLocation(objEvent, strLocation)
{
	var iKeyCode;

	if (objEvent &amp;&amp; objEvent.type == 'keypress')
	{
		if (objEvent.keyCode)
			iKeyCode = objEvent.keyCode;
		else if (objEvent.which)
			iKeyCode = objEvent.which;

		if (iKeyCode != 13 &amp;&amp; iKeyCode != 32)
			return true;
	}

	window.location.href = strLocation;
}
</code>
                  <description>
                     <p>The markup for the <code>div</code> element is:</p>
                  </description>
                  <code role="html401">
&lt;div id="linklike"&gt;
View the results of the survey.
&lt;/div&gt;
</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w3.org/TR/wai-aria/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Rich Internet Applications (WAI-ARIA) Version 1.0</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G115"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check whether there are JavaScript event handlers on an element
                                    that emulates a link.</p>
                     </item>
                     <item>
                        <p>Check whether the programmatically determined role of the element
                                    is <emph>link</emph>.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #1 is true and check #2 is false, then this failure
                                    condition applies and content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F43">
            <short-name>Failure of Success Criterion 1.3.1 due to using structural markup in a way that does
                    not represent relationships in the content</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe a failure that occurs when
                        structural markup is used to achieve a presentational effect, but indicates
                        relationships that do not exist in the content. This is disorienting to
                        users who are depending on those relationships to navigate the content or to
                        understand the relationship of one piece of the content to another. Note
                        that the use of HTML tables for layout is not an example of this failure as
                        long as the layout table does not include improper structural markup such as
                            <code>&lt;th&gt;</code> or <code>&lt;caption&gt;</code>
                        elements.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>A heading used only for visual effect</head>
                  <description>
                     <p>In this example, a heading element is used to display an address in a
                                large, bold font. The address does not identify a new section of the
                                document, however, so it should not be marked as a heading.</p>
                  </description>
                  <code role="html401">
&lt;p&gt;Interested in learning more? Write to us at&lt;/p&gt; 
&lt;h4&gt;3333 Third Avenue, Suite 300 · New York City&lt;/h4&gt;

&lt;p&gt;And we'll send you the complete informational packet absolutely Free!&lt;/p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Using heading elements for presentational effect</head>
                  <description>
                     <p>In this example, heading markup is used in two different ways: to
                                convey document structure and to create visual effects. The
                                <code>h1</code> and <code>h2</code> elements are used appropriately
                                to mark the beginning of the document as a whole and the beginning
                                of the abstract. However, the <code>h3</code> and <code>h4</code>
                                elements between the title and the abstract are used only for visual
                                effect — to control the fonts used to display the authors' names and
                                the date.</p>
                  </description>
                  <code role="html401">
&lt;h1&gt;Study on the Use of Heading  Elements in Web Pages&lt;/h1&gt;
&lt;h3&gt;Joe Jones and Mary Smith&lt;h3&gt;
&lt;h4&gt;March 14, 2006&lt;/h4&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;A study was conducted in early 2006 ...
&lt;/p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Using <code>blockquote</code> elements to provide additional
                            indentation</head>
                  <description>
                     <p>The following example uses <code>blockquote</code> for text that is
                                not a quotation to give it prominence by indenting it when displayed
                                in graphical browsers.</p>
                  </description>
                  <code role="html401">
&lt;p&gt;After extensive study of the company Web site, the task force 
identified the following common problem.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The use of markup for presentational effects made Web 
pages confusing to screen reader users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The committee lists particular examples of the problems 
introduced by this practice below.&lt;/p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Using the <code>fieldset</code> and <code>legend</code> elements to
                            give a border to text</head>
                  <code role="html401">
&lt;fieldset&gt;
&lt;legend&gt;Bargain Corner&lt;/legend&gt;
&lt;p&gt;Buy today, and save 20%&lt;/p&gt;
&lt;/fieldset&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="F46"/>
               <relatedtech idref="G115"/>
               <relatedtech idref="H39"/>
               <relatedtech idref="H42"/>
               <relatedtech idref="H73"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that each element's semantic meaning is appropriate for the
                                    content of the element.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #1 is false, then this failure condition applies and the
                                    content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F44">
            <short-name>Failure of Success Criterion 2.4.3 due to using tabindex to create a tab order that
        	does not preserve meaning and operability</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
            </applies-to>
            <description>
               <p>This document describes a failure that occurs when the tab order does not
                        follow logical relationships and sequences in the content.</p>
               <p>Focusable elements like links and form elements have a <code>tabindex</code>
                        attribute. The elements receive focus in ascending order of the value of the
                            <code>tabindex</code> attribute. When the values of the
                        <code>tabindex</code> attribute are assigned in a different order than the
                        relationships and sequences in the content, the tab order no longer follows
                        the relationships and sequences in the content.</p>
               <p>One of the most common causes of this failure occurs when editing a page
                        where <code>tabindex</code> has been used. It is easy for the tab order and
                        the content order to fall out of correspondence when the content is edited
                        but the <code>tabindex</code> attributes are not updated to reflect the
                        changes to the content.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>The following example incorrectly uses tabindex to specify an
                                alternative tab order:</p>
                  </description>
                  <code role="html401">
&lt;ul&gt;
   &lt;li&gt;&lt;a href="main.html" tabindex="1"&gt;Homepage&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="chapter1.html" tabindex="4"&gt;Chapter 1&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="chapter2.html" tabindex="3"&gt;Chapter 2&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href="chapter3.html" tabindex="2"&gt;Chapter 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code>
                  <description>
                     <p>If this list is navigated by the tab key, the list is navigated in
                                the order Homepage, chapter 3, chapter 2, chapter 1, which does not
                                follow the sequence in the content.</p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>The tab order has been set explicitly in a Web page by providing
                                    <code>tabindex</code> attributes for all fields. Later, the page
                                is modified to add a new field in the middle of the page, but the
                                author forgets to add a <code>tabindex</code> attribute to the new
                                field. As a result, the new field is at the end of the tab
                            order.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>HTML 4.01 <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/interact/forms.html#adef-tabindex"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Tabbing navigation</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H4"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>If <code>tabindex</code> is used, check that the tab order
                                    specified by the <code>tabindex</code> attributes follows
                                    relationships in the content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #1 is false, then this failure condition applies and
                                    content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F46">
            <short-name>Failure of Success Criterion 1.3.1 due to using <code>th</code> elements,
                    <code>caption</code> elements, or non-empty <code>summary</code> attributes in
                    layout tables</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe a failure that occurs when a
                        table used only for layout includes either <code>th</code> elements, a
                            <code>summary</code> attribute, or a <code>caption</code> element. This
                        is a failure because it uses structural (or semantic) markup only for
                        presentation. The intent of the HTML and XHTML table elements is to present data. </p>
               <p>Although not commonly used in a layout table, the following structural markup would also be failures of Success Criterion 1.3.1 if used in a layout table: </p>
               <ulist>
                  <item>
                     <p>
                        <att>headers</att> attributes </p>
                  </item>
                  <item>
                     <p>
                        <att>scope</att> attributes 
              </p>
                  </item>
               </ulist>
               <p>Assistive technologies use the structure of an HTML or XHTML table to present data to
                        the user in a logical manner. The <code>th</code> element is used to mark
                        the column and row headers of the table. A screen reader uses the
                        information in <code>th</code> elements to speak the header information that
                        changes as the user navigates the table. The summary attribute on the
                            <code>table</code> element provides a textual description of the table
                        that describes its purpose and function. Assistive technologies make the
                            <code>summary</code> attribute information available to users. The
                            <code>caption</code> element is part of the table and identifies the
                        table.</p>
               <p>
            Although WCAG 2 does not prohibit the use of layout tables, CSS-based layouts are recommended in order to retain the defined semantic meaning of the HTML table elements and to conform to the coding practice of separating presentation from content. 
            When a table is used
                        for layout purposes the <code>th</code> element should not be used. Since
                        the table is not presenting data there is no need to mark any cells as
                        column or row headers. Likewise, there is no need for an additional
                        description of a table which is only used to layout content. Do not include
                        a <code>summary</code> attribute and do not use the <code>summary</code>
                        attribute to describe the table as, for instance, "layout table". When
                        spoken, this information does not provide value and will only distract users
                        navigating the content via a screen reader. Empty <code>summary</code>
                        attributes are acceptable on layout tables, but not recommended.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>Here is a simple example that uses a table to layout content in a
                                three column format. The navigation bar is in the left column, the
                                main content in the middle column, and an additional sidebar is on
                                the right. At the top is a page title. The example marks the page
                                title as <code>&lt;th&gt;</code>, and provides a summary
                                attribute indicating that the table is a layout table.</p>
                  </description>
                  <code role="html401">
 &lt;table summary="layout table"&gt;
 &lt;tr&gt;
   &lt;th colspan=3&gt;Page Title&lt;/th&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
   &lt;td&gt;&lt;div&gt;navigation content&lt;/div&gt;&lt;/td&gt;
   &lt;td&gt;&lt;div&gt;main content&lt;/div&gt;&lt;/td&gt;
   &lt;td&gt;&lt;div&gt;right sidebar content&lt;/div&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
   &lt;td colspan=3&gt;footer&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H39"/>
               <relatedtech idref="H51"/>
               <relatedtech idref="H73"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine the source code of the HTML or XHTML document for the
                                    <code>table</code> element</p>
                     </item>
                     <item>
                        <p>If the table is used only to visually lay out elements within the
                                    content </p>
                        <olist>
                           <item>
                              <p>Check that the table does not contain any <code>th</code>
                                            elements.</p>
                           </item>
                           <item>
                              <p>Check that the <code>table</code> element does not
                                            contain a non-empty summary attribute.</p>
                           </item>
                           <item>
                              <p>Check that the <code>table</code> element does not
                                            contain a <code>caption</code> element.</p>
                           </item>
                        </olist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If any check above is false, then this failure condition applies
                                    and the content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F47">
            <short-name>Failure of Success Criterion 2.2.2 due to using the blink element</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="*">
                  <p>The <code>blink</code> element is not supported by Internet Explorer 6 on Windows. It is supported in Netscape/Mozilla family of user agents and Opera on Windows. 
              
            </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The <code>blink</code> element, while not part of the official HTML or XHTML
                        specification, is supported by many user agents. It causes any text inside
                        the element to blink at a predetermined rate. This cannot be interrupted by
                        the user, nor can it be disabled as a preference. The blinking continues as
                        long as the page is displayed. Therefore, content that uses
                        <code>blink</code> fails the Success Criterion because blinking can continue
                        for more than three seconds.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>A product list page uses the <code>blink</code> element to draw
                                attention to sale prices. This fails the Success Criterion because
                                users cannot control the blink.</p>
                  </description>
                  <code>
&lt;p&gt;My Great Product &lt;blink&gt;Sale! $44,995!&lt;/blink&gt;&lt;/p&gt;
</code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine code for the presence of the <code>blink</code>
                                element.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If #1 is true, the content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F48">
            <short-name>Failure of Success Criterion 1.3.1 due to using the <code>pre</code> element to markup
                    tabular information</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <description>
               <p>This document describes a failure caused by use of the HTML <code>pre</code>
                        element to markup tabular information. The <code>pre</code> element
                        preserves only visual formatting. If the <code>pre</code> element is used to
                        markup tabular information, the visually implied logical relationships
                        between the table cells and the headers are lost if the user cannot see the
                        screen or if the visual presentation changes significantly.</p>
               <p>Instead, the HTML <code>table</code> element is intended to present tabular
                        data. Assistive technologies use the structure of an HTML table to present
                        data to the user in a logical manner. This structure is not available when
                        using the <code>pre</code> element.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>A schedule formatted with tabs between columns </head>
                  <code role="html401">
 &lt;pre&gt;
 	Monday	Tuesday	Wednesday	Thursday	Friday
 8:00-
 9:00	Meet with Sam				
 9:00-
 10:00			Dr. Williams	Sam again	Leave for San Antonio
 &lt;/pre&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Election results displayed using preformatted text</head>
                  <code role="html401">
 &lt;pre&gt;
   CIRCUIT COURT JUDGE BRANCH 3
                                                  W
                                                   R
                                          M R E     I
                                           A . L     T
                                     M L    R   B     E
                                      I A    Y   E     -
                                       K N        R     I
                                        E G        T     N
                                       -----   -----   -----
0001 TOWN OF ALBION WDS 1-2               22      99       0
0002 TOWN OF BERRY WDS 1-2                52     178       0
0003 TOWN OF BLACK EARTH                  16      49       0
0004 TOWN OF BLOOMING GROVE WDS 1-3       44     125       0
0005 TOWN OF BLUE MOUNDS                  33     117       0
0006 TOWN OF BRISTOL WDS 1-3             139     639       1
0007 TOWN OF BURKE WDS 1-4                80     300       0
0008 TOWN OF CHRISTIANA WDS 1-2           22      50       0

 &lt;/pre&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H51"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check to see if the <code>pre</code> element is used</p>
                     </item>
                     <item>
                        <p>For each occurrence of the <code>pre</code> element, check
                                    whether the enclosed information is tabular.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is true, then this failure condition applies and the
                                    content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F49">
            <short-name>
          Failure of Success Criterion 1.3.2 due to using an HTML layout table that does not make sense when linearized 
          
        </short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-sequence"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Early screen readers literally read Web content from the screen, which
                            lead to problems when tables were used for layout where one table cell
                            was meant to be read in its entirety before reading the next table cell.
                            Today's screen readers work with the underlying markup, which means that
                            they do read a table cell in its entirety before moving on to the next
                            cell, but layout tables may still inadvertently introduce problems with
                            the natural reading order of the content.</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>Although WCAG 2 does not prohibit the use of layout tables, CSS-based layouts are recommended in order to retain the defined semantic meaning of the HTML <el>table</el> elements and to conform to the coding practice of separating presentation from content. If a layout table is used, however, it is important that the content make sense when linearized.
          </p>
               <p>This failure occurs when a meaningful sequence of content conveyed through
                        presentation is lost because HTML tables used to control the visual
                        placement of the content do not “linearize" correctly. Tables present
                        content in two visual dimensions, horizontal and vertical. However, screen
                        readers present this two-dimensional content in linear order of the content
                        in the source, beginning with the first cell in the first row and ending
                        with the last cell in the last row. The screen reader reads the table from
                        top to bottom, reading the entire contents of each row before moving to the
                        next row. The complete content of each cell in each row is spoken—including
                        the complete content of any table nested within a cell. This is called
                        linearization.</p>
               <p>Suppose that a Web page is laid out using a table with 9 columns and 22 rows.
                        The screen reader speaks the content of the cell at Column 1, Row 1 followed
                        by the cells in columns 2, 3, 4 and so on to column 9. However, if any cell
                        contains a nested table, the screen reader will read the entire nested table
                        before it reads the next cell in the original (outer) table. For example, if
                        the cell at column 3, row 6 contains a table with 6 columns and 5 rows, all
                        of those cells will be read before Column 4, Row 6 of the original (outer)
                        table. As a result, the meaningful sequence conveyed through visual
                        presentation may not be perceivable when the content is spoken by a screen
                        reader.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>A layout table that does not linearize correctly</head>
                  <description>
                     <p>An advertisement makes clever use of visual positioning, but changes
                                meaning when linearized.</p>
                  </description>
                  <code role="html401">
&lt;table&gt;
&lt;tr&gt;
  &lt;td &gt;&lt;img src="logo.gif" alt="XYZ mountaineering"&gt;&lt;/td&gt;
  &lt;td rowspan="2" valign="bottom"&gt;top!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td&gt;XYZ gets you to the&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;</code>
                  <description>
                     <p>The reading order from this example would be: </p>
                     <ulist>
                        <item>
                           <p>XYZ mountaineering top! </p>
                        </item>
                        <item>
                           <p>XYZ gets you to the</p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head>A layout table that separates a meaningful sequence when linearized</head>
                  <description>
                     <p>A Web page from a museum exhibition positions a navigation bar
                                containing a long list of links on the left side of the page. To the
                                right of the navigation bar is an image of one of the pictures from
                                the exhibition. To the right of the image is the kind of "placard"
                                text you'd see on the wall next to the object if you were at the
                                museum. Below that text is a heading that says "Description," and
                                below that heading is a description of the image. The image, placard
                                text, Description heading, and text of the description form a
                                meaningful sequence.</p>
                     <p>A layout table is used to position the elements of the page. The
                                links in the navigation bar are split into different cells in the
                                leftmost column.</p>
                  </description>
                  <code role="html401">
&lt;table&gt;
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 1&lt;/a&gt;&lt;/td&gt;
	&lt;td rowspan="20"&gt;&lt;img src="img.png" alt="Museum Picture"&gt;&lt;/td&gt;
	&lt;td rowspan="6"&gt;&lt;img src="placard.png" alt="Placard text"&gt;&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 4&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 5&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 6&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 7&lt;/a&gt;&lt;/td&gt;
	&lt;td rowspan="2"&gt;&lt;h2&gt;Image Heading&lt;/h2&gt;&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 8&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 9&lt;/a&gt;&lt;/td&gt;
	&lt;td rowspan="12"&gt;Description of the image&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 10&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
 ...
&lt;tr&gt;
	&lt;td&gt;&lt;a href="#"&gt;Link 20&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</code>
                  <description>
                     <p>The reading order from this example would be: </p>
                     <ulist>
                        <item>
                           <p>Link 1</p>
                        </item>
                        <item>
                           <p>Image</p>
                        </item>
                        <item>
                           <p>Placard Text</p>
                        </item>
                        <item>
                           <p>Link 2</p>
                        </item>
                        <item>
                           <p>Link 3</p>
                        </item>
                        <item>
                           <p>Link 4</p>
                        </item>
                        <item>
                           <p>Link 5</p>
                        </item>
                        <item>
                           <p>Link 6</p>
                        </item>
                        <item>
                           <p>Link 7</p>
                        </item>
                        <item>
                           <p>Image Heading</p>
                        </item>
                        <item>
                           <p>Link 8</p>
                        </item>
                        <item>
                           <p>Link 9</p>
                        </item>
                        <item>
                           <p>Link 10</p>
                        </item>
                        <item>
                           <p>...</p>
                        </item>
                        <item>
                           <p>Link 20</p>
                        </item>
                     </ulist>
                     <p>Because the navigation bar links are interleaved with the content
                                describing the image, screen readers cannot present the content in a
                                meaningful sequence corresponding to the sequence presented
                                visually.</p>
                  </description>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="C6"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Linearize the content in either of the following ways: </p>
                        <ulist>
                           <item>
                              <p>Present the content in source code order</p>
                           </item>
                           <item>
                              <p>Remove the table markup from around the content</p>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p>Check that the linear reading order matches any meaningful
                                    sequence conveyed through presentation.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is false, then this failure condition applies and the
                                    content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F50">
            <short-name>Failure of Success Criterion 2.2.2 due to a script that causes a blink effect without a
                    mechanism to stop the blinking at 5 seconds or less</short-name>
            <applicability>
               <p>Technologies that support script-controlled blinking of content.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-pause"/>
            </applies-to>
            <description>
               <p>Scripts can be used to blink content by toggling the content's visibility on and off at regular intervals. It is a failure for the script not to include a mechanism to stop the blinking at 5 seconds or earlier. See <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="SCR22" linktype="script"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Using scripts to control blinking and stop it in five seconds or less</loc> for information about how to modify the technique to stop the blinking.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>The following example uses script to blink content, but the blink
                                continues indefinitely rather than stopping after five seconds.</p>
                  </description>
                  <code>
...
&lt;script type="text/javascript"&gt;
&lt;!--
// blink "on" state
function show()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "visible";
	settime-out("hide()", 450);
}
// blink "off" state
function hide()
{
	if (document.getElementById)
	document.getElementById("blink1").style.visibility = "hidden";
	settime-out("show()", 450);
}
// kick it off
show();
//--&gt;
&lt;/script&gt;
...
&lt;span id="blink1"&gt;This content will blink&lt;/span&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="SCR22"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each instance of blinking content:</p>
                  <olist>
                     <item>
                        <p>Determine if the blinking stops in 5 seconds or less.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p>If #1 is false, then the content fails the Success Criterion.</p>
               </expected-results>
            </tests>
         </technique>
         <technique id="F52">
            <short-name>Failure of Success Criterion 3.2.1 due to opening a new window as soon as a new page is
                    loaded </short-name>
            <applicability>
               <p>Applies when scripting is used to open new windows. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-receive-focus"/>
            </applies-to>
            <description>
               <p> Some Web sites open a new window when a page is loaded, to advertise a
                        product or service. The objective of this technique is to ensure that pages
                        do not disorient users by opening up one or more new windows as soon as a
                        page is loaded. </p>
            </description>
            <examples>
               <note>
                  <p>There are multiple methods by which this failure may be triggered. Two
                            common examples that are supported differently in various versions of
                            user agents are listed as examples below. </p>
               </note>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>The following example is commonly used in HTML 4.01 to open new
                                windows when pages are loaded.</p>
                  </description>
                  <code>
window.onload = showAdvertisement;
 function showAdvertisement()
 {
  window.open('advert.html', '_blank', 'height=200,width=150');
 }</code>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>The following example commonly used in XHTML to open new windows when
                                pages are loaded.</p>
                  </description>
                  <code>
if (window.addEventListener) { 
    window.addEventListener("load", showAdvertisement, true);
}
if (window.attachEvent) {
    window.attachEvent("onload", showAdvertisement);
}
function showAdvertisement()
{
window.open('noscript.html', '_blank', 'height=200,width=150');
}</code>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="G107"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> load a new page </p>
                     </item>
                     <item>
                        <p> check to see whether a new window has been opened as a result of
                                    loading the new page </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If step 2 is true, then this failure condition applies and
                                    content fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F54">
            <short-name>Failure of Success Criterion 2.1.1 due to using only pointing-device-specific event
                    handlers (including gesture) for a function</short-name>
            <applicability>
               <p>Technologies that have event handlers specific to pointing devices.</p>
               <p> User Agent and Assistive Technology Support Notes</p>
               <ulist>
                  <item>
                     <p> None listed. </p>
                  </item>
               </ulist>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
            </applies-to>
            <description>
               <p>When pointing device-specific event handlers are the only mechanism available
                        to invoke a function of the content, users with no vision (who cannot use
                        devices such as mice that require eye-hand coordination) as well as users
                        who must use alternate keyboards or input devices that act as keyboard
                        emulators will be unable to access the function of the content. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>The following example is of an image that responds to a mouse click
                                to go to another page. This is a failure because the keyboard cannot
                                be used to move to the next page. <code> 
&lt;p&gt;&lt;img onmousedown="nextPage();" src="nextarrow.gif" 
alt="Go to next page"&gt;&lt;/p&gt;</code>
                     </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="SCR20"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check to see whether pointing-device-specific event handlers are
                                    the only means to invoke scripting functions.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If any are found, then this failure condition applies and content
                                    fails the Success Criterion. </p>
                     </item>
                  </ulist>
                  <!--<p>Test n.n will fail the test (<code>onMouseDown</code> is used and  keyboard-specific event handler is not used)</p>
            <p>
              <code><![CDATA[   
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01  
  Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <title>Script has device dependent event handler (onmousedown)</title>
  </head>
  <body>
    <p>
      <a onMouseDown="window.location.href='nextpage.html';">mouse-only link</a>
    </p>
  </body>
</html>]]></code>
            </p>
            <p>Test n.n will fail the test (<code>onMouseOver</code> is used and  keyboard-specific event handler is not used)</p>
            <p>
              <code><![CDATA[ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01  
         Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
         <html> 
         <head> 
         <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
         <title>Script has device dependent event handler (onmouseover)</title> 
         </head> 
         <body> 
         <p><a onMouseOver="this.value='this will not work with the keyboard';">mouse-only link</a></p> 
         </body> 
         </html> ]]></code>
            </p>--></expected-results>
            </tests>
         </technique>
         <technique id="F55">
            <short-name>
          Failure of Success Criteria 2.1.1, 2.4.7, and 3.2.1 due to using script to remove focus when focus is received
          
        </short-name>
            <applicability>
               <p>Applies to all content that supports script.</p>
               <p> User Agent and Assistive Technology Support Notes</p>
               <ulist>
                  <item>
                     <p> None listed. </p>
                  </item>
               </ulist>
            </applicability>
            <applies-to>
               <success-criterion idref="keyboard-operation-keyboard-operable"/>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
               <success-criterion idref="consistent-behavior-receive-focus"/>
            </applies-to>
            <description>
               <p>Content that normally receives focus when the content is accessed by keyboard may have this focus removed by scripting. This is sometimes done when designer considers the system focus indicator to be unsightly.  However, the system focus indicator is an important part of accessibility for keyboard users.  In addition, by this practice removes focus entirely, which means the content can only be accessed by a pointer device, such as a mouse. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <code>&lt;input type="submit" onFocus="this.blur();"&gt; </code>
               </eg-group>
               <eg-group role="failure">
                  <code>&lt;a onFocus="this.blur()" href="Page.html"&gt;&lt;img src="myImage.gif"&gt;&lt;/a&gt; </code>
               </eg-group>
               <eg-group role="failure">
                  <code>&lt;a href="link.html" onfocus="if(this.blur)this.blur();"&gt;Link Phrase&lt;/a&gt; </code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Use the keyboard to verify that you can get to all interactive
                                    elements using the keyboard. </p>
                     </item>
                     <item>
                        <p> Check that when focus is placed on each element, focus remains
                                    there until user moves it. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If #2 is false then this failure condition applies and content
                                    fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F58">
            <short-name>Failure of Success Criterion 2.2.1 due to using server-side techniques to automatically
                    redirect pages after a time-out</short-name>
            <applicability>
               <ulist>
                  <item>
                     <p> Any server-side scripting language </p>
                  </item>
                  <item>
                     <p> Content does not meet the exceptions in the Success Criterion for
                                permitted time limits. </p>
                  </item>
               </ulist>
            </applicability>
            <applies-to>
               <success-criterion idref="time-limits-required-behaviors"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="6.0">
                  <p> The Refresh header is not defined in HTTP/1.1 or HTTP/1.0, but it is
                            widely supported by browsers (tested in Firefox 1.0 and IE 6 on
                            Windows).</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p> Server-side scripting languages allow developers to set the non-standard
                        HTTP header "Refresh" with a time-out (in seconds) and a URI to which the
                        browser is redirected after the specified time-out. If the time interval is
                        too short, people who are blind will not have enough time to make their
                        screen readers read the page before the page refreshes unexpectedly and
                        causes the screen reader to begin reading at the top. Sighted users may also
                        be disoriented by the unexpected refresh.</p>
               <p>The HTTP header that is set is <code>Refresh: {time in seconds}; url={URI of
                            new location}</code>. It is also possible to omit the URI and obtain a
                        periodically refreshing page, which causes the same problem. The HTTP header
                        that is set is <code>Refresh: {time in seconds}</code>.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p> The following example is a failure because a timed server-side
                                redirect is implemented in Java Servlets or JavaServer Pages
                            (JSP).</p>
                  </description>
                  <code>
public void doGet (HttpServletRequest request, HttpServletResponse response)
      throws IOException, ServletException {
        response.setContentType("text/html");
	PrintWriter out = response.getWriter();
	response.setHeader("Refresh", "10; URL=TargetPage.html");
	out.println("&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"
	 \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;");
	out.println("&lt;html&gt;&lt;head&gt;&lt;title&gt;Redirect&lt;/title&gt;&lt;/head&gt;&lt;body&gt;");
	out.println("&lt;p&gt;This page will redirect you in 10 seconds.&lt;/p&gt;");
	out.println("&lt;/body&gt;&lt;/html&gt;");
  }
</code>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>The following example is a failure because a timed server-side
                                redirect is implemented in Active Server Pages (ASP) with VBScript.</p>
                  </description>
                  <code>
 &lt;% @Language = "VBScript" %&gt;
 &lt;% option explicit 
 Response.Clear
 Response.AddHeader "Refresh", "5; URL=TargetPage.htm"
 %&gt;&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
 &lt;html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"&gt;
 …
 &lt;!--HTML code for content that is shown before the redirect is triggered--&gt;
 </code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.ietf.org/rfc/rfc1945.txt"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Hypertext
                                        Transfer Protocol -- HTTP/1.0 (IETF Request for Comments
                                        1945)</loc> (plain text) </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.ietf.org/rfc/rfc2616.txt"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Hypertext
                                        Transfer Protocol -- HTTP/1.1 (IETF Request for Comments
                                        2616)</loc> (plain text) </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://wp.netscape.com/assist/net_sites/pushpull.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">An Exploration of Dynamic Documents</loc> by Netscape
                                    describes the nonstandard Refresh header that was introduced
                                    with Netscape Navigator 1.1. </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="F40"/>
               <relatedtech idref="F41"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> When a Web page is rendered, check to see if it automatically
                                    redirects to another page after some period of time without the
                                    user taking any action. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If such a redirect is found then this failure condition applies
                                    and content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F59">
            <short-name>Failure of Success Criterion 4.1.2 due to using script to make div or span a user
                    interface control in HTML</short-name>
            <applicability>
               <p> HTML and XHTML with scripting </p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p> This failure demonstrates how using generic HTML elements to create user
                        interface controls can make the controls inaccessible to assistive
                        technology. Assistive technologies rely on knowledge of the role and current
                        state of a component in order to provide that information to the user. Many
                        HTML elements have well defined roles, such as links, buttons, text fields,
                        etc. Generic elements such as <code>div</code> and <code>span</code> do not
                        have any predefined roles. When these generic elements are used to create
                        user interface controls in HTML the assistive technology may not have the
                        necessary information to describe and interact with the control. </p>
               <p> See the resources section below for links to specifications which describe
                        mechanisms to provide the necessary role and state information to create
                        fully accessible user interface controls. </p>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>The following example fails because it creates a checkbox using a
                                span and an image.</p>
                  </description>
                  <code>
  &lt;p&gt; 
  &lt;span  onclick="toggleCheckbox('chkbox')"&gt; 
  &lt;img src="unchecked.gif"  id="chkbox" alt=""&gt; Include Signature 
  &lt;/span&gt; 
  &lt;/p&gt;</code>
               </eg-group>
               <eg-group>
                  <description>
                     <p> Here is the scripting code which changes the image source when the
                                    <code>span</code> is clicked with the mouse. </p>
                  </description>
                  <code> 
  var CHECKED = "check.gif"; 
  var UNCHECKED = "unchecked.gif"; 
  function toggleCheckbox(imgId) { 
  var theImg = document.getElementById(imgId); 
  if ( theImg.src.lastIndexOf(CHECKED)!= -1 ) { 
  theImg.src = UNCHECKED; 
  // additional code to implement unchecked action 
  } 
  else { 
  theImg.src = CHECKED; 
  // additional code to implement checked action 
  } 
  } </code>
                  <description>
                     <p> A checkbox created in this manner will not work with assistive
                                technology since there is no information that identifies it as a
                                checkbox. In addition, this example is also not operable from the
                                keyboard and would fail guideline 2.1. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/WAI/PF/roadmap/DHTMLRoadmap040506.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Dynamic Accessible Web Content Roadmap</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://developer.mozilla.org/en/docs/Accessible_DHTML"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible
                                        DHTML</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="F42"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Examine the source code for elements which have event handlers
                                    assigned within the markup or via scripting. </p>
                     </item>
                     <item>
                        <p> If those elements are acting as user interface controls, check
                                    that the role of the control is defined. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p>If check #2 is false and the created user interface control does not have
                            role information, this failure condition applies. </p>
               </expected-results>
            </tests>
         </technique>
         <technique id="F60">
            <short-name>Failure of Success Criterion 3.2.5 due to launching a new window when a user enters
                    text into an input field</short-name>
            <applicability>
               <p>General</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p>This document describes a failure that occurs when a new window is created in
                        response to a user filling in a text field for other than error reporting.
                    </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p> This is a deprecated example showing a failure: A user is filling in
                                his mailing address. When he fills in his postal code, a new window
                                opens containing advertisements for services available in his city.
                            </p>
                  </description>
               </eg-group>
               <eg-group>
                  <head/>
                  <description>
                     <p>This example is acceptable: A user is filling in his mailing address
                                in a form. When he fills in the postal code field, a script runs to
                                validate that it is a valid postal code. If the value is not valid,
                                a window opens with instructions on how to fill in the field. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques>
               <relatedtech idref="F37"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Find all text input form fields </p>
                     </item>
                     <item>
                        <p> Change the value in each form field </p>
                     </item>
                     <item>
                        <p> Check if new windows open </p>
                     </item>
                     <item>
                        <p> For any new windows that open, check if they contain an error
                                    message and a button that closes the window returning focus to
                                    the initiating form element. </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If #3 is true and #4 is false then failure condition applies and
                                    the content fails this Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F61">
            <short-name>Failure of Success Criterion 3.2.5 due to complete change of main content through an
                    automatic update that the user cannot disable from within the content</short-name>
            <applicability>
               <p>General </p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
            </applies-to>
            <description>
               <p> This document describes a failure that occurs when the content filling the
                        user's entire viewport is automatically updated, and the content does not
                        contain options for disabling this behavior. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>A news site automatically refreshes itself to ensure that it has the
                                newest headlines. There is no option to disable this behavior. </p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>A slideshow fills the entire viewport and advances to the next slide
                                automatically. There is no stop button. </p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> open the content </p>
                     </item>
                     <item>
                        <p> leave the content open for 24 hours </p>
                     </item>
                     <item>
                        <p> check if the content changed </p>
                     </item>
                     <item>
                        <p> confirm that the content does not contain any settings to disable automatic changes</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <olist>
                     <item>
                        <p> If both 3 and 4 are true, then this failure condition applies and the content fails this Success Criterion. </p>
                     </item>
                  </olist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F62">
            <short-name>Failure of Success Criterion 1.3.1 and 4.1.1 due to insufficient information in DOM to determine
                    specific relationships in XML</short-name>
            <applicability>
               <p> Applies to the Document Object Model (DOM) for XML. </p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p> The objective of this technique is to ensure that Web pages can be
                        interpreted consistently by user agents, including assistive technology. If
                        specific relationships in a Web page are ambiguous, different user agents,
                        including assistive technologies, could present different information to
                        their users. Users of assistive technology, for example, may have different
                        information presented to them than users of other mainstream user agents.
                        Some elements and attributes in markup languages are required to have unique
                        values, and if this requirement is not honored, the result can be irregular
                        or not uniquely resolvable content. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <ulist>
                        <item>
                           <p> An id attribute value that is not unique. </p>
                        </item>
                        <item>
                           <p> An SVG document uses <code>id</code> attributes on
                                            <code>title</code> elements (for alternative text) in
                                        order to reuse in other locations in the document. However,
                                        one of the <code>title</code> elements has an id that is
                                        also used elsewhere in the document, so the document is
                                        ambiguous. </p>
                        </item>
                        <item>
                           <p> A DAISY document uses the <code>imgref</code> attribute on
                                        the <code>caption</code> element to link captions with
                                        images. However, <code>imgref</code> attribute value does
                                        not refer to the <code>id</code> attribute of the
                                        <code>img</code> element to which it belongs, so the user
                                        agent cannot find the caption for that image. </p>
                        </item>
                     </ulist>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also/>
            </resources>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p> Check that all id values within the document (as defined by the
                                    schema) are unique. </p>
                     </item>
                     <item>
                        <p> Check that elements or attributes that refer to unique
                                    identifiers inside the same document have a corresponding id
                                    value. </p>
                     </item>
                  </olist>
                  <p> Note that for XML document types defined by a DTD, this refers to
                            attributes of type ID, IDREF or IDREFS. For XML document types defined
                            by a W3C XML Schema, this refers to elements or attributes of type ID,
                            IDREF or IDREFS. (For compatibility, the types ID, IDREF and IDREFS
                            should only be used on attributes, but using them for elements is
                            possible, according to <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.w3.org/TR/xmlschema-2/#terminology"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">XML Schema Part
                                2: Datatypes Second Edition</loc>.) For other schema languages,
                            check the corresponding mechanisms for specifying IDs and references to
                            IDs. </p>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p> If #1 or #2 is false, then this failure condition applies and
                                    the content fails the Success Criterion. </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F63">
            <short-name>Failure of Success Criterion 2.4.4 due to providing link context only in content that is not related to the link</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
            </applies-to>
            <description>
               <p>This describes a failure condition when the context needed for understanding the purpose of a link is located in content that is not programmatically determined link context.  If the context for the link is not in the same sentence, paragraph, list item, or table cell as the link, then the user will not be able to find out where the link is going with any ease. If the user must leave the link to search for the context, the context is not programmatically determined link context and this failure condition occurs.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>A News Service</head>
                  <description>
                     <p>
A news service lists the first few sentences of an article in a paragraph. The next paragraph contains the link "Read More...". Because the link is not in the same paragraph as the lead sentence, the user cannot easily discover what the link will let him read more about.
</p>
                  </description>
                  <code>
&lt;p&gt;A British businessman has racked up 2 million flyer miles and plans to 
travel on the world's first commercial tourism flights to space.&lt;/p&gt;

&lt;p&gt;&lt;a href="ff.html"&gt;Read More...&lt;/a&gt;&lt;/p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Downloading a Free Player</head>
                  <description>
                     <p>An audio site provides links to where its player can be downloaded. The information about what would be downloaded by the link is in the preceding row of the layout table, which is not programmatically determined context for the link.</p>
                  </description>
                  <code>
 &lt;table&gt;
   &lt;tr&gt; 
       &lt;td&gt;Play music from your browser&lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
       &lt;td&gt;
       &lt;a href="http://www.example.com/download.htm"&gt;
       &lt;img src="download.jpg" width="165" height="32" alt="Download now"&gt;&lt;/a&gt;
       &lt;/td&gt;
   &lt;/tr&gt;
 &lt;/table&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Using a Definitions List</head>
                  <description>
                     <p>
                In HTML and XHTML, definition lists provide a programmatic association between the term and its definition. So theoretically, a link provided in a definition could use the definition term as its context. However, support is particularly bad for definitions lists, and there would be no way for users of today's assistive technology to discover the context using a definition list alone. Definition lists are a useful mechanism for providing associative relationships, but at this moment in time could not be considered sufficient for <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="navigation-mechanisms-refs"
                             linktype="guideline"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">Success Criterion 2.4.2</loc>.</p>
                  </description>
                  <code>
&lt;dl&gt;
    &lt;dt&gt;Harry Potter and the Chamber of Secrets&lt;/dt&gt;
    &lt;dd&gt;Story of a boy with magical powers who has to face Lord Voldemort.&lt;/dd&gt;
    &lt;dd&gt;&lt;a href="potter.php?id=123"&gt;Buy now&lt;/a&gt;&lt;/dd&gt;
    &lt;dt&gt;Harry Potter and the Goblet of Fire&lt;/dt&gt;
    &lt;dd&gt;Harry finds himself selected as an underaged competitor in a dangerous multi-wizardry school competition.&lt;/dd&gt;
    &lt;dd&gt;&lt;a href="potter.php?id=124"&gt;Buy now&lt;/a&gt;&lt;/dd&gt;
    &lt;dt&gt;Harry Potter and the Prisoner of Azkaban&lt;/dt&gt;
    &lt;dd&gt;
Something wicked this way comes. It's Harry's third year at Hogwarts; 
not only does he have a new "Defense Against the Dark Arts" teacher, 
but there is also trouble brewing. Convicted murderer Sirius Black has 
escaped the Wizards' Prison and is coming after Harry.
    &lt;/dd&gt;
    &lt;dd&gt;&lt;a href="potter.php?id=125"&gt;Buy now&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;            
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Locate content needed to understand how link text describes the purpose of the link.
    </p>
                     </item>
                     <item>
                        <p>
Check whether the content is contained in the same sentence, paragraph, list item, or table cell, or in the preceding heading.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
If check 2 is false, the content fails the Success Criterion.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F65">
            <short-name>Failure of Success Criterion 1.1.1 due to omitting the alt attribute on img elements, area elements, and input elements of type "image"</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>This describes a failure condition for text alternatives on images. If there is no alt attribute, then assistive technologies are not able to identify the image or to convey its purpose to the user.</p>
               <p>
Some Assistive Technology might attempt to compensate for the missing alt text by reading the file name of the image. But it is insufficient to rely simply on the file name for many reasons. For example, file names may not be descriptive (e.g., images/nav01.gif), and technology specifications do not require descriptive file names. Some assistive technology may not read the file name if alt text is absent.
</p>
            </description>
            <examples>
               <eg-group>
                  <head>Missing <code>alt</code> text</head>
                  <description>
                     <p>In the code example below, the person using a screen reader would not know the purpose of the image.</p>
                  </description>
                  <code role="html401">
&lt;img src="../images/animal.jpg" /&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="H67"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
identify any <code>img</code>, <code>area</code> and <code>input</code> elements of type "image" 
    </p>
                     </item>
                     <item>
                        <p>
check that the <code>alt</code> attribute for these elements exists.
    </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is false, this failure condition applies and content fails the Success Criterion.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F66">
            <short-name>Failure of Success Criterion 3.2.3 due to presenting navigation links in a different relative order on different pages</short-name>
            <applicability>
               <p>Applies to all technologies</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-consistent-locations"/>
            </applies-to>
            <description>
               <p>This describes a failure condition for  all techniques involving navigation mechanisms that are repeated on multiple Web pages within a set of Web pages (Success Criterion 3.2.3). If the mechanism presents the order of links in a different order on two or more pages, then the failure is triggered.
</p>
            </description>
            <examples>
               <eg-group>
                  <head>An XHTML menu presenting a series of links that are in a different relative order on two different pages</head>
                  <description>
                     <p>Examples of a navigation mechanism that presents links in a different order.</p>
                     <p>
                        <emph role="bold">Page 1 Menu</emph>
                     </p>
                  </description>
                  <code role="html401">
&lt;div id="menu"&gt; 
    &lt;a href="Brazil.htm"&gt;Brazil&lt;/a&gt;&lt;br /&gt;
    &lt;a href="Canada.htm"&gt;Canada&lt;/a&gt;&lt;br /&gt;
    &lt;a href="Germany.htm"&gt;Germany&lt;/a&gt;&lt;br /&gt;
    &lt;a href="Poland.htm"&gt;Poland&lt;/a&gt; 
&lt;/div&gt;
</code>
                  <description>
                     <p>
                        <emph role="bold">Page 2 Menu</emph>
                     </p>
                  </description>
                  <code role="html401">
&lt;div id="menu"&gt; 
    &lt;a href="Canada.htm"&gt;Canada&lt;/a&gt;&lt;br /&gt;
    &lt;a href="Brazil.htm"&gt;Brazil&lt;/a&gt;&lt;br /&gt;
    &lt;a href="Germany.htm"&gt;Germany&lt;/a&gt;&lt;br /&gt;
    &lt;a href="Poland.htm"&gt;Poland&lt;/a&gt; 
&lt;/div&gt;
</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
Check to see if a navigation mechanism is being used on more than one Web page.
    </p>
                     </item>
                     <item>
                        <p>
Check the default presentation of the navigation mechanism on each page to see if the list of links are in the same relative order on each Web page.
    </p>
                     </item>
                  </olist>
                  <note>
                     <p>"Same relative order" means that secondary navigation items may be in between the link items on some pages. They can be present without affecting the outcome of this test.</p>
                  </note>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>
If #1 is true and #2 is false, then this failure condition applies and content fails the Success Criterion.
    </p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F67">
            <short-name>Failure of Success Criterion 1.1.1 and 1.2.1 due to providing long description for non-text content that does not serve the same purpose or does not present the same information</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
               <success-criterion idref="media-equiv-av-only-alt"/>
            </applies-to>
            <description>
               <p>The objective of this technique is to describe the failure that occurs when the long description for non-text content does not serve the same purpose or does not present the same information as the non-text content.  This can cause problems for people who cannot interpret the non-text content because they rely on the long description to provide the necessary information conveyed by the non-text content.  Without a long description that provides complete information, a person may not be able to comprehend or interact with the Web page.
</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>An image showing the locations of venues for events at the Olympic Games displayed on a street map. The image also contains an icon for each type of sporting event held at each venue.  The long description states, "Map showing the location of each Olympic venue.  Skating, hockey and curling are held at the Winter Park Ice Arena, Downhill skiing and jumping are held at Snow Mountain, Gymnastics is held at the JumpUp Arena, Cross Country Skiing is held at the Kilometer Forest".  While this description provides useful information, it does not convey the same information as the image because it provides no specific location information such as the address or the distance of each location from some fixed point.  Note that long descriptions do not always need to be in prose form; sometimes the information may best be presented in a table or other alternate format.
    </p>
                  </item>
               </ulist>
            </examples>
            <resources/>
            <related-techniques>
               <relatedtech idref="G73"/>
               <relatedtech idref="G74"/>
               <relatedtech idref="F13"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For all non-text content that requires a long description</p>
                  <olist>
                     <item>
                        <p>Check that the long description serves the same purpose or presents the same information as the non-text content.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1 is false, then this failure condition applies and the content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F68">
            <short-name>Failure of Success Criterion 1.3.1 and 4.1.2 due to the association of label and user interface controls not being programmatically determinable</short-name>
            <applicability>
               <p>HTML and XHTML controls that use visible labels</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p>This failure describes a problem that occurs when no label element is used to explicitly associate a form control with a label where the visual design uses a label.</p>
               <note>
                  <p>Elements that use explicitly-associated labels are:
							</p>
                  <ulist>
                     <item>
                        <p>
                           <code>input type="text"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="checkbox"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="radio"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="file"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>input type="password"</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>textarea</code>
                        </p>
                     </item>
                     <item>
                        <p>
                           <code>select</code>
                        </p>
                     </item>
                  </ulist>
                  <p>The <att>label</att> element is <emph role="bold">not</emph> used for the following because labels for these elements are provided via the value attribute (for Submit and Reset buttons), the alt attribute (for image buttons), or element content itself (button). 
              
            </p>
                  <ulist>
                     <item>
                        <p>Submit and Reset buttons (<code>input type="submit"</code> or <code>input type="reset"</code>)</p>
                     </item>
                     <item>
                        <p>Image buttons (<code>input type="image"</code>)</p>
                     </item>
                     <item>
                        <p>Hidden input fields (<code>input type="hidden"</code>)</p>
                     </item>
                     <item>
                        <p>Script buttons (<code>button</code> elements or <code>&lt;input type="button"&gt;</code>)</p>
                     </item>
                  </ulist>
               </note>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>The following example demonstrates a form that visually presents labels for form controls, but does not use the <el>label</el> element to associate them with their controls. The code example below is a failure because assistive technology may not be able to determine which <el>label</el> goes with which control.</p>
                  </description>
                  <code role="html401">
&lt;form&gt;
 First name: 
 &lt;input type="text" name="firstname"&gt;
 &lt;br /&gt;
 Last name: 
 &lt;input type="text" name="lastname"&gt;
 &lt;br /&gt;
 I have a dog &lt;input type="checkbox" name="pet" value="dog" /&gt;
 I have a cat &lt;input type="checkbox" name="pet" value="cat" /&gt;
&lt;/form&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>In the following code examples, the names associated with the text input
controls are not properly determined by assistive technology.
              </p>
                  </description>
                  <code role="html401">
&lt;form action="..." method="post"&gt;
&lt;p&gt;
&lt;label&gt;
   First Name
   &lt;input type="text" name="firstname"&gt;
&lt;/label&gt;
&lt;label&gt;
   &lt;input type="text" name="lastname"&gt;
   Last Name
&lt;/label&gt;
&lt;/p&gt;
&lt;/form&gt;
</code>
                  <code role="html401">
&lt;form action="..." method="post"&gt; 
&lt;p&gt; 
&lt;label&gt;First Name &lt;/label&gt;
&lt;input type="text" name="firstname"&gt; 
&lt;label&gt;Last Name&lt;/label&gt; 
&lt;input type="text" name="lastname"&gt; 
&lt;/p&gt; 
&lt;/form&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>The search text box does in the following code example not have a name.  The name can be supplied with either the title attribute or with a label element hidden with CSS.
              </p>
                  </description>
                  <code role="html401">
&lt;input type="text" value="Type your search here"&gt;&lt;input type="submit" type="submit" value="Search"&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="H44"/>
               <relatedtech idref="H65"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For all <code>input</code> elements of type <code>radio</code>, <code>checkbox</code>, <code>text</code>, <code>file</code> or <code>password</code>, for all <code>textareas</code>, and for all <code>select</code> elements in the Web page:
							</p>
                  <olist>
                     <item>
                        <p>Check that the visual design uses a text label that identifies the purpose of the control</p>
                     </item>
                     <item>
                        <p>Check that a label element associates the text with the input element</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #1 is true and check #2 is false, then this failure condition applies and the content fails these Success Criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F69">
            <short-name>Failure of Success Criterion 1.4.4 when resizing visually rendered text up to 200 percent causes the text, image or controls to be clipped, truncated or obscured</short-name>
            <applicability>
               <p>HTML, XHTML and CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <description>
               <p>The objective of this failure condition is to describe a problem that occurs when changing the size of text causes text to be clipped, truncated, or obscured, so that it is no longer available to the user. In general, this failure occurs when there is no way for a user agent's layout engine to honor all the layout hints in the HTML at the new font size. Some of the ways in which this can occur include:</p>
               <ulist>
                  <item>
                     <p>Setting the <code>overflow</code> property of the enclosing element to <code>hidden</code>
                     </p>
                  </item>
                  <item>
                     <p>Using absolutely positioned content</p>
                  </item>
                  <item>
                     <p>Creating popups that aren't big enough for their content at the new font size</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>The font size is set in a scalable way, but the container is set to a fixed pixel size. A gray border shows the boundaries of the text container. When the text is resized, it spills out of its container, and obsures the next paragraph.</p>
                  </description>
                  <code role="css">
&lt;div style="font-size:100%; width:120px; height:100px; border: thin solid gray;&gt; 
  Now is the time for all good men to come to the aid of their country. 
&lt;/div&gt;
&lt;p&gt;Now is the time for all good men to come to the aid of their country.&lt;/p&gt;
</code>
                  <description>
                     <p>Illustration of example 1:</p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/F69/F69-obscured.gif"
                              alt="Example showing text that spills outside of its container, obscuring other text on the page."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>This example is identical to the last one, except that the container is set to clip the text. The text is no longer bleeding into the next paragraph, but now it is truncated. This is also a failure.</p>
                  </description>
                  <code role="css">
&lt;div style="font-size:100%; width:120px; height:100px; overflow: hidden; border: thin solid gray;&gt;
 Now is the time for all good men to come to the aid of their country. 
&lt;/div&gt;
&lt;p&gt;Now is the time for all good men to come to the aid of their country.&lt;/p&gt;
</code>
                  <description>
                     <p>Illustration of example 2:</p>
                     <graphic xmlns:xlink="http://www.w3.org/1999/xlink"
                              source="working-examples/F69/F69-truncated.gif"
                              alt="Example showing text that truncated due to resized text."
                              xlink:type="simple"
                              xlink:show="embed"
                              xlink:actuate="onLoad"/>
                  </description>
               </eg-group>
            </examples>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Increase the text size of the content by 200%.</p>
                     </item>
                     <item>
                        <p>Check that no text is clipped, truncated, or obscured.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is false, then the failure condition applies and the content fails these Success Criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F70">
            <short-name>Failure of Success Criterion 4.1.1 due to incorrect use of start and end tags or attribute markup</short-name>
            <applicability>
               <p>Markup languages: HTML, XHTML, and other SGML or XML-based technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p>The objective of this failure is to identify examples of markup errors in element tags that could cause assistive technology to be unable to generate a satisfactory model of the page. Different user agents may implement different heuristics to recover from errors, resulting in inconsistent presentations of the page between user agents.</p>
               <p>Some common types of problems with start and end tags that lead to this failure condition (though this is not an exhaustive list):</p>
               <ulist>
                  <item>
                     <p>Opening and closing tags that are missing the opening &lt; and closing &gt; brackets.</p>
                  </item>
                  <item>
                     <p>Closing tag missing the initial / to indicate it is a closing tag.</p>
                  </item>
                  <item>
                     <p>Attribute values that have an opening quote but not a closing quote. Attribute values must be either fully quoted or, in some markup languages, may be unquoted.</p>
                  </item>
                  <item>
                     <p>Lack of whitespace between attributes.</p>
                  </item>
                  <item>
                     <p>Unquoted attribute values that have whitespace in the value.</p>
                  </item>
                  <item>
                     <p>Failure to provide a closing element tag for elements that do not accept empty-element syntax.</p>
                  </item>
               </ulist>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Missing angle brackets in XHML</head>
                  <description>
                     <p>The following code fails because the opening tag is missing an angle bracket, and the intended boundary of the tag is unclear.</p>
                  </description>
                  <code role="xhtml">
&lt;p This is a paragraph&lt;/p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Missing slash on closing tag in XHTML</head>
                  <description>
                     <p>The following code fails because the closing tag is missing the slash, making it look like it is in fact another opening tag.</p>
                  </description>
                  <code role="xhtml">
&lt;p&gt;This is a paragraph&lt;p&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Unbalanced attribute quoting</head>
                  <description>
                     <p>The following code fails because the attribute value is missing the closing quote, which makes the boundary of the attribute-value pair unclear.</p>
                  </description>
                  <code role="xhtml">
&lt;input title="name type="text"&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Lack of whitespace between attributes</head>
                  <description>
                     <p>The following code fails because the there is not whitespace between attributes, which makes the boundary between attribute-value pairs unclear.</p>
                  </description>
                  <code role="xhtml">
&lt;input title="name"type="text"&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Unquoted attribute with whitespace value</head>
                  <description>
                     <p>The following code fails because an attribute value is not quoted and contains whitespace, which makes the boundary of the attribute-value pair unclear.</p>
                  </description>
                  <code role="xhtml">
&lt;input title=Enter name here type=text&gt;
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Missing end tags in XHTML</head>
                  <description>
                     <p>The following code fails because the closing tag of the first paragraph is missing, making it unclear whether the second paragraph is a child or sibling of the first.</p>
                  </description>
                  <code role="xhtml">
&lt;p&gt;This is a paragraph
&lt;p&gt;This is another paragraph&lt;/p&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check the source code of pages implemented in markup languages.</p>
                     </item>
                     <item>
                        <p>Check whether any opening tags, closing tags or attributes are malformed.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is true, then the failure condition applies and the content does not meet this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F71">
            <short-name>Failure of Success Criterion 1.1.1 due to using text look-alikes to represent text without providing a text alternative</short-name>
            <applicability>
               <p>Any technology.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>The objective of this failure condition is to avoid substituting characters whose glyphs look similar to the intended character, for that intended character. The Unicode character set defines thousands of characters, covering dozens of writing systems. While the glyphs for some of these characters may look like the glyphs for other characters in visual presentation, they are not processed the same by text-to-speech tools.</p>
               <p>For example, the characters U+0063 and U+03F2 both look like the letter "c", yet the first is from the Western alphabet and the second from the Greek alphabet and not used in Western languages. The characters U+0033 and U+04E0 both look like the number "3", yet the second is actually a letter from the Cyrillic alphabet.</p>
               <note>
                  <p>This failure also applies to the use of character entities. It is the incorrect character used because of its glyph representation that comprises a failure, not the mechanism by which that character is implemented.</p>
               </note>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Characters </head>
                  <description>
                     <p>The following word looks, in browsers with appropriate font support, like the English word "cook", yet is composed of the string U+03f2 U+043E U+03BF U+006B, only one of which is a letter from the Western alphabet. This word will not be processed meaningfully, and a text alternative is not provided.</p>
                  </description>
                  <code role="xhtml">
ϲоοk
</code>
               </eg-group>
               <eg-group role="failure">
                  <head>Character entities</head>
                  <description>
                     <p>The following example, like the one above, will look like the English word "cook" when rendered in browsers with appropriate font support. In this case, the characters are implemented with character entities, but the word will still not be processed meaningfully, and a text alternative is not provided.</p>
                  </description>
                  <code role="xhtml">
&amp;#x03F2;&amp;#x043E;&amp;#x03BF;&amp;#x006B;
</code>
                  <description>
                     <p>Working Example: "ϲоοk"</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check the characters or character entities used to represent text.</p>
                     </item>
                     <item>
                        <p>If the characters used do not match the appropriate characters for the displayed glyphs in the human language of the content, then look-alike glyphs are being used.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If look-alike glyphs are used, and there is not a text alternative for any range of text that uses look-alike glyphs, then the content does not meet the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F72">
            <short-name>Failure of Success Criterion 1.1.1 due to using ASCII art without providing a text alternative</short-name>
            <applicability>
               <p>Any technology.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="text-equiv-all"/>
            </applies-to>
            <description>
               <p>The objective of this failure condition is to avoid the use of <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="asciiartdef" linktype="glossary"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">ASCII art</loc> when a text alternative is not provided. Although ASCII art is implemented as a character string, its meaning comes from the pattern of glyphs formed by a visual presentation of that string, not from the text itself. Therefore ASCII art is non-text content and requires a text alternative. Text alternatives, or links to them, should be placed near the ASCII art in order to be associated with it.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head> ASCII Art chart without a text alternative </head>
                  <description>
                     <p>The following ASCII art chart lacks a text alternative and therefore does not meet Success Criterion 1.1.1. Note this failure example does in fact cause this page to fail, but you may <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="#F72-related-techs"
                             xlink:type="simple"
                             xlink:show="replace"
                             xlink:actuate="onRequest">skip over the example</loc>.</p>
                  </description>
                  <code role="xhtml">
&lt;pre&gt;
  %   __ __ __ __ __ __ __ __ __ __ __ __ __ __   
100 |             *                             |
 90 |                *  *                       |
 80 |          *           *                    |
 70 |             @           *                 |
 60 |          @                 *              |
 50 |       *        @              *           |
 40 |                   @              *        |
 30 |    *  @              @  @           *     |
 20 |                                           |
 10 |    @                       @  @  @  @     |
      0  5 10 15 20 25 30 35 40 45 50 55 60 65 70
      Flash frequency (Hz)
&lt;/pre&gt;
</code>
               </eg-group>
            </examples>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Access a page with ASCII art.</p>
                     </item>
                     <item>
                        <p>For each instance of ASCII art, check that it has a text alternative.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is false, then this failure condition applies and the content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F73">
            <short-name>Failure of Success Criterion 1.4.1 due to creating links that are not visually evident without color vision</short-name>
            <applicability>
               <p>Any technology.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>This failure helps ensure that people who cannot perceive color differences can identify links. Link underlines or some other non-color visual distinction are required. While some links may be visually evident from page design and context, such as navigational links, links within text are often visually understood only from their own display attributes. Removing the underline and leaving only the color difference for such links would be a failure because there would be no other visual indication (besides color) that it is a link.</p>
               <note>
                  <p>If the non-color cue only happens when the mouse hovers over the link or when the link receives focus, it is still a failure.</p>
                  <p>If the link is a different color and bold it would not fail because the boldness is not color dependent.</p>
               </note>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>A Web page includes a large number of links within the body text. The links are styled so that they do not have underlines and are very similar in color to the body text. This would be a failure because users would be unable to differentiate the links from the body text.</p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>The following code is an example of removing the underline from a link in a sentence or paragraph without providing another visual cue besides color.</p>
                  </description>
                  <code role="css">
&lt;head&gt;
&lt;style type="text/css"&gt;
p a:link {text-decoration: none}
p a:visited {text-decoration: none}
p a:active {text-decoration: none}
p a:hover {text-decoration: underline; color: red;}
&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;p&gt;To find out more about the &lt;a href="rain_in_spain.htm"&gt;rain in spain&lt;/a&gt;there are many resources.&lt;/p&gt;

&lt;/body&gt;
</code>
                  <description>
                     <note>
                        <p>If the visual cue is only provided on hover (as in the example above), it would still fail.
</p>
                     </note>
                  </description>
               </eg-group>
            </examples>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that each link within text that is part of a sentence or paragraph (or other area where they could be mistaken as non-linked text) in the page is underlined or otherwise visually identifiable (i.e. bolded, italicized) as a link without relying on color (hue).</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #1 is false, then this failure condition applies and the content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F74">
            <short-name>Failure of  SC1.2.2 and 1.2.8 due to not labeling a synchronized media alternative to text as an alternative</short-name>
            <applicability>
               <p>Pages that provide synchronized media alternatives to text.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-captions"/>
               <success-criterion idref="media-equiv-text-doc"/>
            </applies-to>
            <description>
               <p>The objective of this failure is to avoid situations in which synchronized media alternatives are not labeled with the text for which they are alternatives. Synchronized media alternatives provide enhanced access to users for whom synchronized media is a more effective format than text. Since they are alternatives to text, they do not need themselves to have redundant text alternatives. However, they need to be clearly labeled with the text for which they substitute, so users can find them and so users who normally expect text alternatives to synchronized media know not to look for them.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>Synchronized media alternatives provided elsewhere on page</head>
                  <description>
                     <p>A page with instructions to complete a tax form provides a prose description of the fields to complete, data to provide, etc. Additionally, a synchronized media alternative provides spoken instructions, with video of a person completing the section being discussed in the audio. Although both versions are provided on the page, the synchronized media version is provided elsewhere on the page and is not clearly labeled with the part of the text for which it is a substitute. This makes it difficult for users encountering the text to find it, and users encountering the video do not know where its text alternative is.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check pages that provide synchronized media alternatives to text.</p>
                     </item>
                     <item>
                        <p>Check that synchronized media is clearly labeled with the text for which it is an alternative.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is false, then this failure condition applies and the content fails these Success Criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F75">
            <short-name>Failure of Success Criterion 1.2.2 by providing synchronized media without captions when the synchronized media presents more information than is presented on the page</short-name>
            <applicability>
               <p>Any technology.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="media-equiv-captions"/>
            </applies-to>
            <description>
               <p>The objective of this failure is to avoid situations in which synchronized media alternatives provide more information than the text for which they are alternatives, but do not provide their own text alternatives to provide access to the extra information. Synchronized media alternatives provide enhanced access to users for whom synchronized media is a more effective format than text. Since they are alternatives to text, they are do not need themselves to have redundant text alternatives in the form of captions, audio descriptions or full text alternatives. However, if they provide more information than the text for which they are an alternative, then they are more than simply alternatives but are synchronized media content in their own right. In this case they are subject to the full requirements of <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="media-equiv-captions"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Success Criterion 1.2.2</loc> to provide captions and to <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="media-equiv-audio-desc"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">Success Criterion 1.2.2</loc> and <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="media-equiv-real-time-captions"
                       linktype="guideline"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">1.2.3</loc>.</p>
            </description>
            <examples/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check for captions on synchronized media alternatives.</p>
                     </item>
                     <item>
                        <p>Check that the synchronized media alternative does not provide more information than is presented on the page in text.</p>
                        <note>
                           <p>Synchronized media alternatives often use different words to present what is on the page but it should not present new information on the topic of the page.</p>
                        </note>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #2 is false, then this failure condition applies and the content fails these Success Criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F76">
            <short-name>Failure of 3.2.2 due to providing instruction material about the change of context by change of setting in a user interface element at a location that users may bypass</short-name>
            <applicability>
               <p>Applies to all technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="consistent-behavior-unpredictable-change"/>
            </applies-to>
            <description>
               <p>Without prior instruction, unexpected change of context due to change of user interface setting can sometimes confuse users.  Users must receive instruction prior to such encounter.  Providing the instruction in a way in which the user may not have the opportunity to review may leave opportunity for confusion.</p>
               <p>Failure examples:</p>
               <ulist>
                  <item>
                     <p>Not providing instruction on the Web page preceding the user interface element that causes change of context by change of setting.</p>
                  </item>
                  <item>
                     <p>Not providing instruction at a part of the process prior to the step where they may encounter such change of context, in case of a multi-step process in which users must go through particular steps to reach the user interface element where change of setting would cause a change of context.</p>
                  </item>
                  <item>
                     <p>Not providing mandatory instruction about the change of context in the case of intranet Web application.</p>
                  </item>
               </ulist>
            </description>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Find occurrence of change of context due to change of user interface setting</p>
                     </item>
                     <item>
                        <p>Find instructional material that all users must review prior encountering of the change of context.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If #1 is true and #2 is false, then this failure condition applies and content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F77">
            <short-name>Failure of Success Criterion 4.1.1 due to duplicate values of type ID</short-name>
            <applicability>
               <p>Any XML-based markup languages including HTML 4.01 and XHTML 1.x.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-parses"/>
            </applies-to>
            <description>
               <p>This describes a failure condition where duplicate ID errors are known to cause problems for assistive technologies when they are trying to interact with content. Duplicate values of type ID can be problematic for user agents that rely on this attribute to accurately convey relationships between different parts of content to users. For example, a screen reader may use ID values to identify the applicable header content for a data cell within a data table, or an input control to which a given label applies. If these values are not unique, the screen reader will be unable to programmatically determine which headers are associated with the data cell or which control is associated with which label or name.</p>
               <p>Checking that ID attribute values are unique within a document can be done by validating the document against its schema, because the schema defines which attributes contain document-wide unique identifiers.</p>
               <note>
                  <p>In most markup languages, ID values are attribute values, for example in HTML and XHTML.</p>
                  <p>XML documents that use only the <code>xml:id</code> attribute as an ID attribute, parsing the XML document with a validating parser that supports the <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                          href="http://www.w3.org/TR/2005/REC-xml-id-20050909/"
                          xlink:type="simple"
                          xlink:show="replace"
                          xlink:actuate="onRequest">xml:id specification</loc> is sufficient.</p>
               </note>
            </description>
            <examples>
               <eg-group>
                  <description>
                     <p>An author uses an online validation service to check that all id attribute values are unique.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <description>
                     <p>A developer utilizes features in their authoring tool to ensure that id attribute values are unique.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/2005/REC-xml-id-20050909/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">xml:id Version 1.0</loc> - W3C Recommendation 9 September 2005.</p>
                     </item>
                     <item>
                        <p>Extensible Markup Language (XML) 1.0 (Fourth Edition): <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/REC-xml/#id"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Validity constraint: ID</loc>
                        </p>
                     </item>
                     <item>
                        <p>HTML 4.01: <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/html4/struct/global.html#adef-id"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">id attribute</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="G108"/>
               <relatedtech idref="H75"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check that all values of type ID are unique in the Web page</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If Step #1 is false, then this failure condition applies and the content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F78">
            <short-name>Failure of Success Criterion 2.4.7 due to styling element outlines and borders in a way that <phrase diff="chg">removes</phrase> or renders non-visible the visual focus indicator</short-name>
            <applicability>
               <p>Any technology</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-visible"/>
            </applies-to>
            <description>
               <p>This describes a failure condition that occurs when the user agent's default visual indication of keyboard focus is turned off or rendered non-visible by other styling on the page <phrase diff="add">without providing an author-supplied visual focus indicator.<issue id="i2650" status="open">
                        <p>2650</p>
                     </issue>
                  </phrase>. Turning off the focus indicator instructs the user agent not to present the focus indicator. Other styling may make it difficult to see the focus indicator even though it is present, such as outlines that look the same as the focus outline, or thick borders that are the same color as the focus indicator so it cannot be seen against them.</p>
            </description>
            <examples>
               <eg-group>
                  <head>The focus indicator is turned off with CSS</head>
                  <description>
                     <p>The following CSS example will remove the default focus indicator, which fails the requirement to provide a visible focus indicator.</p>
                  </description>
                  <code role="css">:focus {outline: none}</code>
               </eg-group>
               <eg-group>
                  <head>The outline of elements is visually similar to the focus indicator</head>
                  <description>
                     <p>The following CSS example will create an outline around links that looks the same as the focus indicator. This makes it impossible for users to determine which one in fact has the focus, even though the user agent does draw the focus indicator.</p>
                  </description>
                  <code role="css">a {outline: thin dotted black}</code>
               </eg-group>
               <eg-group>
                  <head>Elements have a border that occludes the focus indicator</head>
                  <description>
                     <p>The following CSS example creates a border around links that does not have enough contrast for the focus indicator to seen when drawn on top of it. In this case the focus indicator is drawn just ouside the border, but as both are black and the border is thicker than the focus indicator, it no longer meets the definition of "visible".</p>
                  </description>
                  <code role="css">a {border: medium solid black}</code>
               </eg-group>
            </examples>
            <resources/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Set the focus to all focusable elements on a page.</p>
                     </item>
                     <item>
                        <p>
                           <phrase diff="add">Check that the focus indicator is visible.</phrase>
                           <phrase diff="del">Check that the focus indicator is not turned off or occluded by design features of the page.</phrase>
                        </p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>#2 is true.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F79">
            <short-name>Failure of Success Criterion 4.1.2 due to the focus state of a user interface component not being programmatically determinable or no notification of change of focus state available</short-name>
            <applicability>
               <p>All technologies</p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p>Whether a user interface component has focus is a particularly important facet of its state. Many types of assistive technology rely on tracking the current keyboard focus. Screen readers will move the user's point of regard to the focused user interface component, and screen magnifiers will change the display of the content so that the focused component is visible. If assistive technology is not notified when focus moves to a new component, the user will become confused when they attempt to interact with the wrong component.</p>
               <p>While user agents usually handle this functionality for standard controls, custom-scripted user interface components are responsible for using accessibility APIs to make focus information and notifications available.</p>
            </description>
            <examples>
               <p>A custom menu displays menu items by rendering them explicitly, handling mouse and key events directly and highlighting the currently selected menu item. The programmer does not expose the menu item that has focus via the Accessibility API, so assistive technology can only determine that focus is somewhere within the menu and cannot determine which menu item has focus.</p>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://msdn2.microsoft.com/en-us/library/ms696082.aspx"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Accessible Explorer and Accessible Event Watcher</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://java.sun.com/developer/earlyAccess/jaccesshelper/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Java Accessibility Helper</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Using the accessibility checker for the technology (or if that is not available, inspect the code or test with an assistive technology), check the controls to see if they expose the focus state through the accessibility API. </p>
                     </item>
                     <item>
                        <p>Using the accessibility checker for the technology (or if that is not available, inspect the code or test with an assistive technology), check whether assistive technology is notified when focus moves from one control to another.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If Check #1 or Check #2 is false, then this failure condition applies and the content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F80">
            <short-name>Failure of Success Criterion 1.4.4 when text-based form controls do not resize when visually rendered text is resized up to 200%</short-name>
            <applicability>
               <p>HTML, XHTML, and CSS</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-scale"/>
            </applies-to>
            <description>
               <p>The objective of this failure condition is to describe a problem that occurs when changing the size of text does not cause the text-based form controls to resize accordingly. This means that the user may have difficulty entering text and being able to read what they have entered because the text is not displayed at the text size required by the user.</p>
               <p>Text-based form controls include input boxes (text and textarea) as well as buttons.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>A Contact Form</head>
                  <description>
                     <p>A Contact Us form has some introductory information and then form controls for users to enter their first name, last name, telephone number and email address. The heading, introductory text and form control labels have been implemented in a scalable way but the form controls themselves have not.</p>
                     <p>The XHTML component:</p>
                  </description>
                  <code role="xhtml"> &lt;h1&gt;Contact Us&lt;/h1&gt;
 &lt;p&gt;Please provide us with your details and we will contact you as soon as we can. Note that all of the form fields are required.&lt;/p&gt;
 &lt;label for="fname"&gt;First Name&lt;/label&gt;&lt;input type="text" name="fname" id="fname" /&gt;&lt;br /&gt;
 &lt;label for="lname"&gt;Last Name&lt;/label&gt;&lt;input type="text" name="lname" id="lname" /&gt;&lt;br /&gt;
 &lt;label for="phone"&gt;Telephone&lt;/label&gt;&lt;input type="text" name="phone" id="phone" /&gt;&lt;br /&gt;
 &lt;label for="email"&gt;Email&lt;/label&gt;&lt;input type="text" name="email" id="email" /&gt;&lt;br /&gt;
 &lt;input type="submit" name="Submit" value="Submit" id="Submit" /&gt;</code>
                  <description>
                     <p>The CSS component:</p>
                  </description>
                  <code role="css"> h1 { font-size: 2em; }
 p, label { font-size: 1em; }
 input {font-size: 12pt}</code>
               </eg-group>
            </examples>
            <resources/>
            <related-techniques/>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Enter some text into text-based form controls that receive user entered text. </p>
                     </item>
                     <item>
                        <p>Increase the text size of the content by 200%.</p>
                     </item>
                     <item>
                        <p>Check that the text in text-based form controls has increased by 200%.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If check #3 is false, then the failure condition applies and the content fails these Success Criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F81">
            <short-name>Failure of Success Criterion 1.4.1 due to identifying required or error fields using color differences only</short-name>
            <applicability>
               <p>All technologies</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-without-color"/>
            </applies-to>
            <description>
               <p>This objective of this technique is to describe the failure that occurs when a required field or an error field is marked with color differences only, without an alternate way to identify the required field or error field. This can cause problems for people who are blind or colorblind, because they may not be able to perceive the color differences that indicate which field is required or which field is causing an error.</p>
            </description>
            <examples>
               <ulist>
                  <item>
                     <p>A user is completing an online form, and the phone number field is required. To indicate that the phone number field is required, the label "Phone Number" is displayed in blue text only, without any other indication that "Phone Number" is a required field. A blind or colorblind user may not be able to identify that "Phone Number" is a required field.</p>
                  </item>
                  <item>
                     <p>A user submits an online form and leaves a required field blank, resulting in an error. The form field that caused the error is indicated by red text only, without an additional non-color indication that the field caused an error.</p>
                  </item>
               </ulist>
            </examples>
            <tests>
               <procedure>
                  <p>For all required fields or error fields in the Web page that are identified using color differences:</p>
                  <olist>
                     <item>
                        <p>Check that an non-color way to identify the required field or error field is provided.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #1 is false, then this failure condition applies and content fails the Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F82">
            <short-name>Failure of Success Criterion 3.3.2 by visually formatting a set of phone number fields but not including a text label</short-name>
            <applicability>
               <p>Any technology</p>
            </applicability>
            <applies-to>
               <success-criterion idref="minimize-error-cues"/>
            </applies-to>
            <description>
               <p>This failure ensures that people with visual or cognitive disabilities will recognize phone number fields and understand what information to provide to fill in the fields. Phone numbers are frequently formatted in fixed, distinctive ways, and authors may feel that just providing visual formatting of the fields will be sufficient to identify them. However, even if all the fields have programmatically determined names, a text label must also identify the set of fields as a phone number.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head/>
                  <description>
                     <p>In the United States, phone numbers are broken into a three digit area code, a three digit prefix, and a four digit extension. A web page creates fixed length text input fields for the three parts of the phone number, surrounding the first field with parenthesis and separating the second and third fields with a dash. Because of this formatting, some users recognize the fields as a phone number. However, there is no text label for the phone number on the web page. This is because the label for each field will be the closest preceding text, so the three fields would be labeled "(", ")" , and "-" respectively.</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>For each set of phone number fields in the web page that represents a single phone number, check that the set of fields are labeled with a visible text label that is positioned near the set of phone number fields.</p>
                     </item>
                     <item>
                        <p>For each set of phone number fields in the Web page that represent a single phone number, instructions are provided about how to fill in the fields.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If both check #1 and check #2 are false, then this failure condition applies and the content fails this success criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F83">
            <short-name>Failure of Success Criterion 1.4.3 and 1.4.6 due to using background images that do not provide sufficient contrast with foreground text (or images of text)</short-name>
            <applicability>
               <p>Any technology</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-contrast"/>
               <success-criterion idref="visual-audio-contrast7"/>
            </applies-to>
            <description>
               <p>This failure occurs when people with low vision are not able to read text that is displayed over a background image. When there is not sufficient contrast between the background image and the text, features of the background image can be confused with the text making it difficult to accurately read the text.</p>
               <p>To satisfy Success Criterion 1.4.3 and 1.4.6, there must be sufficient contrast between the text and its background. For pictures, this means that there would need to be sufficient contrast between the text and those parts of the image that are most like the text and behind the text. </p>
            </description>
            <examples>
               <eg-group>
                  <head>Failure Example 1</head>
                  <description>
                     <p>Black text overlays an image with black lines. The lines cross behind the letters making F's look like E's etc.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Failure Example 2</head>
                  <description>
                     <p>Black text overlays an image with with dark gray areas. Wherever the text crosses a dark gray area the contrast is so bad that the text cannot be read.</p>
                  </description>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>
                           <emph role="bold">Quickcheck:</emph> First do a quick check to see if the contrast between the text and the area of the image that darkest (for dark text) or lightest (for light text) meets or exceeds that required by the Success Criterion (1.4.3 or 1.4.5). If the contrast meets or exceeds the specified contrast, then there is no failure. </p>
                     </item>
                     <item>
                        <p>If the Quickcheck is false, then check to see if the background behind each letter has sufficient contrast with the letter.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If Quickcheck is false and #2 is false as well then this failure condition applies and the content fails the contrast Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F84">
            <short-name>Failure of Success Criterion 2.4.9 due to using a non-specific link such as "click here" or "more" without a mechanism to change the link text to specific text.</short-name>
            <applicability>
               <p>HTML and XHTML</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-link"/>
            </applies-to>
            <description>
               <p>This failure describes a common condition where links such as "click here" or "more" are used as anchor elements where you need to have the surrounding text to understand their purpose and where there isn't any mechanism to make the destination clear by itself, such as a button to expand the link text.</p>
               <p>Many blind people who use screen readers call up a dialog box that has a list of links from the page. They use this list of links to decide where they will go. But if many of the links in that list simply say "click here" or "more" they will be unable to use this feature in their screen reader, which is a core navigation strategy. That's why it's a failure of 2.4.9 to not provide any way of allowing them to know the destination from the link text alone. It is also true for people who tab through links. If all they hear as they tab through the document is "click here, click here, click here etc." they will become confused. </p>
            </description>
            <examples>
               <eg-group>
                  <code>&lt;a href="file110.htm"&gt;Click here&lt;/a&gt; for more information on the Rocky Mountains.</code>
               </eg-group>
               <eg-group>
                  <code>&lt;h2&gt;News headlines&lt;/h2&gt;
The middle east peace meetings have yielded fruitful dialogue. 
&lt;a href="r4300.htm"&gt;read more&lt;/a&gt;</code>
               </eg-group>
            </examples>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine each link on the page.</p>
                     </item>
                     <item>
                        <p>Check to see if it has non-descript link text such as "click here" or "more" whose purpose can be determined from the surrounding text but not from the link text alone.</p>
                     </item>
                     <item>
                        <p>Check to see if there is a mechanism on the page which turns all non-descript links on the page into descriptive links.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step #2 is true AND #3 is false, then this failure condition applies and content fails the success criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F85">
            <short-name>Failure of Success Criterion 2.4.3 due to using dialogs or menus that are not adjacent to their trigger control in the sequential navigation order</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-focus-order"/>
            </applies-to>
            <description>
               <p>This describes the failure condition that results when a Web page opens a dialog or menu interface component embedded on the page in a way that makes it difficult for a keyboard user to operate because of its position in the sequential navigation order. When the user opens the dialog or menu embedded on the page by activating a button or link, his next action will be to interact with the dialog or menu. If the dialog or menu is not adjacent to the trigger control in the sequential navigation order, it will be difficult for the keyboard user to operate the dialog or menu.</p>
            </description>
            <examples>
               <eg-group>
                  <head>Dialog or menu embedded on the page is added to the end of the sequential navigation order</head>
                  <description>
                     <p>When a DHTML menu or dialog is activated, it is created dynamically, positioned visually near the trigger, and appended to the end of the DOM. Because it is appended to the end of the DOM, it is at the end of the sequential navigation order. The user must tab through the rest of the web page before he can interact with the dialog or menu.</p>
                  </description>
               </eg-group>
               <eg-group>
                  <head>Dismissing a menu embedded on the page sets focus to the document</head>
                  <description>
                     <p>When a DHTML menu is dismissed, it is removed or hidden from the web page and focus is set to the document. The user must tab from the beginning of the navigation sequence to reach the point from which the menu was opened.</p>
                  </description>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="SCR26"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>For each menu or dialog embedded on a Web page that is opened via a trigger control:</p>
                  <olist>
                     <item>
                        <p>Activate the trigger control via the keyboard.</p>
                        <ulist>
                           <item>
                              <p>Check whether focus is in the menu or dialog.</p>
                           </item>
                           <item>
                              <p>Check whether advancing the focus in the sequential navigation order puts focus in the menu or dialog.</p>
                           </item>
                        </ulist>
                     </item>
                     <item>
                        <p>Dismiss the menu or dialog.</p>
                        <ulist>
                           <item>
                              <p>Check whether focus is on the trigger control.</p>
                           </item>
                           <item>
                              <p>Check whether advancing the focus backwards in the sequential navigation order puts focus in the trigger control.</p>
                           </item>
                        </ulist>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If step 1a and 1b are both false, then this failure condition applies and the content fails this success criterion.</p>
                     </item>
                     <item>
                        <p>If step 2a and 2b are both false, then this failure condition applies and the content fails this success criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F86">
            <short-name>Failure of Success Criterion 4.1.2 due to not providing names for each part of a multi-part form field, such as a US telephone number</short-name>
            <applicability>
               <p>General</p>
            </applicability>
            <applies-to>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <description>
               <p>This describes a failure condition of Success Criterion 4.1.2 where some or all of the parts of multi-part form field do not have names. Often there is a label for the multi-part field, which is either programatically associated with the first part, or not programatically associated with any parts.</p>
               <note>
                  <p>A name does not necessarily have to be visible, but is visible to assistive technologies.</p>
               </note>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>A US telephone number consists of a 3-digit area code, a 3-digit prefix, and a 4-digit suffix. They are typically formatted as follows ([area code]) [prefix]-[suffix], such as (206) 555-1212. Often, forms asking for a telephone number will include 3 separate fields, but with a single label, such as:</p>
                  </description>
                  <code>Phone number: 
(&lt;input type="text" size="3"&gt;) &lt;input type="text" size="3"&gt;-&lt;input type="text" size="4"&gt;</code>
                  <description>
                     <p>The failure occurs when there is not a name for each of the 3 fields in the Accessibility API. A user with assistive technology will experience these as three undefined text fields. Some assistive technologies will read the punctuation as identification for the text fields, which can be even more confusing. In the case of a 3-field US phone number, some assistive technologies would name the fields "(", ")" and "-", which is not very useful.</p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>The same US telephone number. In this case, the label is not programatically associated with any of the parts. Phone number: </p>
                  </description>
                  <code>(&lt;input type="text" size="3"&gt;) &lt;input type="text" size="3"&gt;-&lt;input type="text" size="4"&gt;</code>
                  <description>
                     <p> A user with assistive technology will experience these as three undefined text fields. </p>
                  </description>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>The same US telephone number. In this case, the label is programatically associated with the first part.</p>
                  </description>
                  <code>&lt;label for="area"&gt;Phone number:&lt;/label&gt; 
(&lt;input id="area" type="text" size="3"&gt;) &lt;input type="text" size="3"&gt;-&lt;input type="text" size="4"&gt;</code>
                  <description>
                     <p>A user with assistive technology will be led to believe that the first field is for the entire phone number, and will experience the second and third fields as undefined text fields.</p>
                  </description>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.microsoft.com/downloads/details.aspx?familyid=3755582A-A707-460A-BF21-1373316E13F0&amp;displaylang=en"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Microsoft Active Accessibility 2.0 SDK</loc>. Includes Inspect32.exe and other MSAA tools.</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://library.gnome.org/devel/atk/unstable/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Gnome Accessibility Toolkit documentation</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://developer.gnome.org/projects/gap/testing/index.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Gnome Accessibility QA documentation and tools</loc> 
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.microsoft.com/downloads/details.aspx?familyid=E59C3964-672D-4511-BB3E-2D5E1DB91038&amp;displaylang=en"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Microsoft Internet Explorer Developer Toolbar</loc>. Allows examination of script-generated DOM in Microsoft Internet Explorer.</p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://getfirebug.com/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Firebug</loc>. Allows examination of script-generated DOM in Firefox.</p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques><!-- the following were not yet aproved when this tech. was published: 
            -Modeling custom user interfaces in HTML semantics (HTML, CSS, Script) This is a new technique
            - Using CSS to hide label elements when visible text labels cannot be used (CSS) (this is new technique)  --><relatedtech idref="H44"/>
               <relatedtech idref="H71"/>
               <relatedtech idref="H65"/>
            </related-techniques>
            <tests>
               <procedure>
                  <p>
                     <emph role="bold">General Procedure:</emph>
                  </p>
                  <olist>
                     <item>
                        <p>Install a tool that allows you to view the accessibility API for your platform (see Resources section)</p>
                     </item>
                     <item>
                        <p>Find each form control</p>
                     </item>
                     <item>
                        <p>Check that the name property for each control is populated</p>
                     </item>
                  </olist>
                  <p>
                     <emph role="bold">Alternative Procedure for HTML and XHTML:</emph>
                  </p>
                  <olist>
                     <item>
                        <p>Find each <code>input</code>, <code>select</code>, and <code>textarea</code> element in the HTML source</p>
                     </item>
                     <item>
                        <p>Check that there is a title attribute on the element</p>
                     </item>
                     <item>
                        <p>Check that there is an associated <code>label</code> element</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <p>
                     <emph role="bold">General Procedure:</emph>
                  </p>
                  <ulist>
                     <item>
                        <p>If check #3 is false, then the failure condition applies and the content fails this success criterion.</p>
                     </item>
                  </ulist>
                  <p>
                     <emph role="bold">Alternative Procedure for HTML and XHTML:</emph>
                  </p>
                  <ulist>
                     <item>
                        <p>If checks #2 and #3 are false, then the failure condition applies and the content fails the success criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F87">
            <short-name>Failure of 1.3.1 due to inserting non-decorative content by using :before and :after pseudo-elements and the 'content' property in CSS</short-name>
            <applicability>
               <p>All technologies that support CSS.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="content-structure-separation-programmatic"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="IE" version="7-">
                  <p>
                     <code>:before</code> and <code>:after</code> are not supported by IE7 and lower</p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>The CSS <code>:before</code> and <code>:after</code> pseudo-elements specify the location of content before and after an element's document tree content. The <code>content</code> property, in conjunction with these pseudo-elements, specifies what is inserted. For users who need to customize or turn off style information in order to view content according to their needs, assistive technologies may not be able to access the information that is inserted using CSS. Therefore, it is a failure to use these properties to insert non-decorative content.</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>In the following example, <code>:before</code> and <code>:after</code> are used to indicate speaker changes and to insert quotation marks in a screenplay.</p>
                     <p>The CSS contains:</p>
                  </description>
                  <code role="css"> p.jim:before {	content: "Jim: " }
p.mary:before { content: "Mary: " }

q:before { content: open-quote }
q:after  { content: close-quote }</code>
                  <description>
                     <p>It is used in this excerpt:</p>
                  </description>
                  <code role="html401"> &lt;p class="jim"&gt;
 &lt;q&gt;Do you think he's going to make it?&lt;/q&gt;
&lt;/p&gt;
&lt;p class="mary"&gt;
 &lt;q&gt;It's not looking good.&lt;/q&gt;
&lt;/p&gt;</code>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>In this example, <code>:before</code> is used to differentiate facts from opinions.</p>
                     <p>The CSS contains:</p>
                  </description>
                  <code role="css"> p.fact:before { content: "Fact: "; font-weight: bold; }
 p.opinion:before { content: "Opinion: "; font-weight: bold; }</code>
                  <description>
                     <p>It is used in this excerpt:</p>
                  </description>
                  <code role="html401"> &lt;p class="fact"&gt;
 The defendant was at the scene of the crime when it occurred. 
&lt;/p&gt;
&lt;p class="opinion"&gt;
 The defendant committed the crime. 
&lt;/p&gt;</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.w3.org/TR/CSS21/generate.html"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">CSS 2.1: Generated content, automatic numbering, and lists</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="F3"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Examine all content inserted through use of the :before and :after pseudo-elements and the <code>content</code> property</p>
                     </item>
                     <item>
                        <p>Verify that the content is decorative.</p>
                     </item>
                     <item>
                        <p>If the inserted content is not decorative, check that the information is provided to assistive technologies and is also available when CSS is turned off.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If checks #2 or #3 are false, then this failure condition applies and the content fails this Success Criterion.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F88" diff="add">
            <short-name>Failure of SC 1.4.8 due to using text that is justified (aligned to both the left and the right margins)</short-name>
            <applicability>
               <p>All technologies.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="visual-audio-contrast-visual-presentation"/>
            </applies-to>
            <description>
               <p>Many people with cognitive disabilities have a great deal of trouble with blocks of text that are justified (aligned to both the left and the right margins). The spaces between words create "rivers of white" running down the page, which can make the text difficult for some people to read. This failure describes situations where this confusing text layout occurs. The best way to avoid this problem is not to create text layout that is fully justified (aligned to both the left and the right margins).</p>
            </description>
            <examples>
               <eg-group role="failure">
                  <description>
                     <p>In the following example of a failure, the HTML <att>align</att> attribute is used to create justified text.</p>
                  </description>
                  <code role="html"> 
&lt;p align="justify"&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Vestibulum sit amet pede. Phasellus 
nec sem id mauris vehicula tincidunt. Morbi ac arcu. Maecenas vehicula velit et orci. Donec 
ullamcorper porttitor velit. Sed arcu lorem, cursus sit amet, auctor eu, convallis ut, purus. 
Vivamus imperdiet accumsan nunc. Maecenas pellentesque nunc a libero. Vestibulum ante ipsum 
primis in faucibus orci luctus et ultrices posuere cubilia Curae; Curabitur pharetra commodo 
justo. Nulla facilisi. Phasellus nulla lacus, tempor quis, tincidunt ac, rutrum et, mauris.
&lt;/p&gt;</code>
               </eg-group>
               <eg-group role="failure">
                  <description>
                     <p>In this example of a failure, the CSS <code>text-align</code> property is used to create justified text.</p>
                  </description>
                  <code role="css"> 
...
p {text-align: justify}

...

&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Vestibulum sit amet pede. Phasellus 
nec sem id mauris vehicula tincidunt. Morbi ac arcu. Maecenas vehicula velit et orci. Donec 
ullamcorper porttitor velit. Sed arcu lorem, cursus sit amet, auctor eu, convallis ut, purus. 
Vivamus imperdiet accumsan nunc. Maecenas pellentesque nunc a libero. Vestibulum ante ipsum 
primis in faucibus orci luctus et ultrices posuere cubilia Curae; Curabitur pharetra commodo 
justo. Nulla facilisi. Phasellus nulla lacus, tempor quis, tincidunt ac, rutrum et, mauris.&lt;/p&gt;</code>
               </eg-group>
            </examples>
            <related-techniques>
               <relatedtech idref="C22"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Open the page in a common browser.</p>
                     </item>
                     <item>
                        <p>Verify that content is not justified (aligned to both the left and the right margins).</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If test procedure #2 is false, then this failure condition applies and the content fails to meet Success Criterion 1.4.8.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
         <technique id="F89" diff="add">
            <short-name>Failure of 2.4.4, 2.4.9 and 4.1.2 due to using null alt on an image where the image is the only content in a link</short-name>
            <applicability>
               <p>Content that contains links.</p>
            </applicability>
            <applies-to>
               <success-criterion idref="navigation-mechanisms-refs"/>
               <success-criterion idref="navigation-mechanisms-link"/>
               <success-criterion idref="ensure-compat-rsv"/>
            </applies-to>
            <ua-issues>
               <ua-issue name="" version="">
                  <p>Different assistive technologies employ different repair strategies when dealing with links that lack text alternatives. For HTML, they may use the <att>title</att> attribute of the anchor, if present, or they may use the value of the <att>src</att> attribute of the <att>img</att> element. </p>
               </ua-issue>
            </ua-issues>
            <description>
               <p>This failure condition occurs when a link contains only non-text content, such as an image, and the non-text content has been implemented in a way that it can be ignored by assistive technology. Because a link is an interactive control, the user can tab to it and activate it. Since there is no text content within the link to be used as the name, assistive technology employs a variety of repair techniques to find some name to use for the link.</p>
               <p>Often, both text and images are used on a page to link to the same target. This introduces a "stuttering" effect when two nearly links have the same name, and authors attempts to eliminate the redundancy by providing a null alt attribute for the image. Unfortuneately, this often makes the problem worse. <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="H2" linktype="html"
                       xlink:type="simple"
                       xlink:show="replace"
                       xlink:actuate="onRequest">H2: Combining adjacent image and text links for the same resource</loc> is the recommended approach to reduce the number of separate links and the undesirable redundancy. </p>
            </description>
            <examples>
               <eg-group role="failure">
                  <head>HTML Search Results</head>
                  <description>
                     <p>A search site returns search results that include both a text link and an image link to the match site. The image has a null <att>alt</att> attribute, since the result already contains a link with a text description. However, the screen reader does not ignore the image link but uses heuristics to find some text that might describe the purpose of the link. For example, the screen reader might announce, "football dot gif Football Scorecard." </p>
                  </description>
                  <code role="xhtml1"> &lt;a href="scores.html"&gt;
   &lt;img src="football.gif" alt="" /&gt;
 &lt;/a&gt;
 &lt;a href="scores.html"&gt;
   Football Scoreboard
 &lt;/a&gt;
}</code>
               </eg-group>
            </examples>
            <resources>
               <see-also>
                  <ulist>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://www.webaim.org/techniques/alttext/"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Appropriate Use of Alternative Text, Functional Images</loc>
                        </p>
                     </item>
                     <item>
                        <p>
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                                href="http://jimthatcher.com/webcourse2.htm"
                                xlink:type="simple"
                                xlink:show="replace"
                                xlink:actuate="onRequest">Text Alternatives for Images (alt-text)</loc>
                        </p>
                     </item>
                  </ulist>
               </see-also>
            </resources>
            <related-techniques>
               <relatedtech idref="H2"/>
               <relatedtech idref="H30"/>
            </related-techniques>
            <tests>
               <procedure>
                  <olist>
                     <item>
                        <p>Check whether the link contains only non-text content.</p>
                     </item>
                     <item>
                        <p>Check whether the non-text content has been implemented in a way that it can be ignored by assistive technology.</p>
                     </item>
                  </olist>
               </procedure>
               <expected-results>
                  <ulist>
                     <item>
                        <p>If all checks are true, then this failure condition applies and the content fails the success criteria.</p>
                     </item>
                  </ulist>
               </expected-results>
            </tests>
         </technique>
      </div1>
   </body>
   <back>
      <inform-div1 id="references">
         <head>References</head>
         <blist>
            <bibl id="CSS1" key="CSS1">"Cascading Style Sheets, level 1," B. Bos, H. Wium Lie, eds., W3C Recommendation 17 Dec 1996, revised 11 Jan 1999. Available at <loc href="http://www.w3.org/TR/REC-CSS1/">http://www.w3.org/TR/REC-CSS1/</loc>.</bibl>
            <bibl id="CSS2" key="CSS2">"Cascading Style Sheets, level 2," B. Bos, H. Wium Lie, C. Lilley, and I. Jacobs, eds., W3C Recommendation 12 May 1998. Available at <loc href="http://www.w3.org/TR/REC-CSS2/">http://www.w3.org/TR/REC-CSS2/</loc>.</bibl>
            <bibl id="CSS21" key="CSS21">"Cascading Style Sheets, level 2 revision 1,"  B. Bos, T. Çelik,  I. Hickson,   H. Wium Lie, eds., W3C Candidate Recommendation 25 February 2004.  Available at:  <loc href="http://www.w3.org/TR/CSS21/">http://www.w3.org/TR/CSS21/</loc>
            </bibl>
            <bibl id="CSS3" key="CSS3">
               <titleref href="http://www.w3.org/Style/CSS/current-work">[CSS 2.1 and CSS 3] Roadmap</titleref>, CSS WG's table of modules and publication dates.</bibl>
            <bibl id="HTML4" key="HTML4">"HTML 4.01 Specification," D. Raggett, A. Le Hors, I. Jacobs, eds.,  W3C Recommendation 24 December 1999. Available at <loc href="http://www.w3.org/TR/html401/">http://www.w3.org/TR/html401/</loc>
            </bibl>
            <bibl id="WCAG20" key="WCAG20">"Web Content Accessibility Guidelines 2.0,"  B. Caldwell, M Cooper, L Guarino Reid, and G. Vanderheiden, eds., W3C Working Draft 30 April 2008. This W3C Working Draft is available at <loc href="http://www.w3.org/TR/2008/CR-WCAG20-20080430/">http://www.w3.org/TR/2008/CR-WCAG20-20080430/</loc>.  The latest version of WCAG 2.0 is available at <loc href="http://www.w3.org/TR/WCAG20/">http://www.w3.org/TR/WCAG20/</loc>
            </bibl>
            <bibl id="XHTML1" key="XHTML1">"XHTML 1.0 The Extensible HyperText Markup Language (Second Edition)," S. Pemberton, et al.,  W3C Recommendation 26 January 2000, revised 1 August 2002. Available at:  <loc href="http://www.w3.org/TR/xhtml1/">http://www.w3.org/TR/xhtml1/</loc>.</bibl>
         </blist>
      </inform-div1>
   </back>
</spec>