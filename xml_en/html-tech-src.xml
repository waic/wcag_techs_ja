<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec SYSTEM "xmlspec.dtd">
<spec status="final" w3c-doctype="wgnote">
	<header>
		<title>HTML and XHTML Techniques</title>
		<w3c-designation>WCAG20-HTML-TECHS</w3c-designation>
		<w3c-doctype>W3C Working Group Note</w3c-doctype>
		<pubdate>
			<day>3</day>
			<month>January</month>
			<year>2012</year>
		</pubdate>
		<publoc>
			<loc href="http://www.w3.org/TR/2005/WD-WCAG20-HTML-TECHS-20051118/">http://www.w3.org/TR/2005/WD-WCAG20-HTML-TECHS-20051118/</loc>
		</publoc>
		<latestloc>
			<loc href="http://www.w3.org/TR/WCAG20-HTML-TECHS/">http://www.w3.org/TR/WCAG20-HTML-TECHS/</loc>
		</latestloc>
		<prevlocs>
			<loc href="http://www.w3.org/TR/2004/WD-WCAG20-HTML-TECHS-20050630/">http://www.w3.org/TR/2004/WD-WCAG20-HTML-TECHS-20050630/</loc>
		</prevlocs>
		<authlist>
			<author>
				<name>Michael Cooper</name>
				<affiliation>Watchfire</affiliation>
			</author>
		</authlist>
		<status>
			<ednote>
				<edtext>Placeholder - actual status text for WCAG20-TECHS is included in the XSLT,
          techs-merge.xslt.</edtext>
			</ednote>
		</status>
		<abstract>
			<ednote>
				<edtext>Placeholder - actual abstract text for WCAG20-TECHS is included in the XSLT,
          techs-merge.xslt.</edtext>
			</ednote>
		</abstract>
		<langusage>
			<language id="en-US"/>
		</langusage>
		<revisiondesc>
			<p/>
		</revisiondesc>
	</header>
	<body>
		<div1 id="html">
			<head>HTML and XHTML Techniques</head>
			<technique id="H2">
				<short-name>Combining adjacent image and text links for the same resource</short-name>
				<applicability>
					<p>HTML and XHTML documents that contain links.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
					<success-criterion idref="navigation-mechanisms-refs"/>
					<success-criterion idref="navigation-mechanisms-link"/>
				</applies-to>
				<description>
					<p>This objective of this technique is to avoid unnecessary duplication that occurs when
            adjacent text and iconic versions of a link are contained in a document. </p>
					<p>Many kinds of links have both a text and iconic link adjacent to each other. Often the
            text and the icon link are rendered in separate links, in part to create a slight visual
            separation from each other. Visually they appear to be the same link, but they are
            experienced by many people as two identical links and this can be confusing. To avoid
            this, some authors omit alternative text from the image, but this would fail <loc href="text-equiv-all" linktype="guideline">Success Criterion 1.1.1</loc> because the
            text alternative would not serve the same purpose as the graphical link. The preferred
            method to address this is to put the text and image together in one link, and provide
            null alternative text on the image to eliminate duplication of text. </p>
					<p>Sometimes the text and the icon link are rendered in separate, adjacent table cells to
            facilitate page layout. Although WCAG 2 does not prohibit the use of layout tables,
            CSS-based layouts are recommended in order to retain the defined semantic meaning of the
            HTML table elements and to conform to the coding practice of separating presentation
            from content. If CSS is used, this technique can be applied to combine the links. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The icon and text are contained in the same <el>a</el> element.</p>
						</description>
						<code role="html401"><![CDATA[ <a href="products.html">
   <img src="icon.gif" alt="" />
   Products page
 </a>      ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>A link contains an icon and text, and the site help refers to the icon. The
                  <el>img</el> has a text alternative which is the name used for the icon in the
                site help, which describes clicking the home page icon.</p>
						</description>
						<code role="html401"><![CDATA[<a href="foo.htm">
  <img src="house.gif" alt="home page icon"/>
  Go to the home page
</a>     ]]></code>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>This example demonstrates a failure to apply this technique. An icon and text link
                are side by side. The text alternative for the image is the same as the text link
                beside it, leading to a "stutter" effect as the link is read twice.</p>
						</description>
						<code role="html401"><![CDATA[<a href="products.html">
   <img src="icon.gif" alt="Products page" />
 </a>
 <a href="products.html">
   Products page
 </a>  ]]></code>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>This example demonstrates a failure to apply this technique. An icon and text link
                are side by side. In an attempt to remove the "stutter" the text alternative for the
                image is null. However, now one of the links has an unknown destination, which is
                its own link text problem.</p>
						</description>
						<code role="html401"><![CDATA[<a href="products.html">
   <img src="icon.gif" alt="" />
 </a>
 <a href="products.html">
   Products page
 </a>     ]]></code>
					</eg-group>
					<eg-group role="failure">
						<description>
							<p>This example demonstrates an incorrect implementation of this technique. The icon
                and text are contained in the same a element. However, the text alternative for the
                icon is a duplicate of the link text, leading to a "stutter" effect as the
                description is read twice. </p>
						</description>
						<code role="html401"><![CDATA[<a href="products.html">
  <img src="products.gif" alt="Products page"/>
  Products page
</a>    
            ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/objects.html#h-13.8">HTML 4.01 -
                    how to specify alt text</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G91"/>
					<relatedtech idref="G94"/>
					<relatedtech idref="H30"/>
					<relatedtech idref="C9"/>
					<relatedtech idref="F89"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each <el>a</el> in the content that contains an <el>img</el> element: </p>
						<olist>
							<item>
								<p>Check that there is no adjacent <el>a</el> element that has the same
                    <att>href</att> attribute and the same description</p>
							</item>
						</olist>
						<p>For each <el>a</el> in the content that is contained in a table: </p>
						<olist>
							<item>
								<p>Check that there is no <el>a</el> element in an adjacent table cell that has
                  the same <att>href</att> attribute and the same description </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H4">
				<short-name>Creating a logical tab order through links, form controls, and objects</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-focus-order"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to provide a logical tab order when the default tab
            order does not suffice. Often, <loc href="G59" linktype="general">placing the
              interactive elements in an order that follows sequences and relationships within the
              content</loc> is sufficient and this technique is not necessary. It can be very easy
            to introduce usability bugs when setting the tab order explicitly.</p>
					<p>In some cases, the author may want to specify a tab order that follows relationships in
            the content without following the order of the interactive elements in the code. In
            these cases, an alternative order can be specified using the <att>tabindex</att>
            attribute of the interactive element. The <att>tabindex</att> is given a value between
            0 and 32767. </p>
					<p>When the interactive elements are navigated using the tab key, the elements are given
            focus in increasing order of the value of their <att>tabindex</att> attribute.
            Elements that have a <att>tabindex</att> value higher than zero will receive focus
            before elements without a <att>tabindex</att> or a <att>tabindex</att> of 0. After
            all of the elements with a tabindex higher than 0 have received focus, the rest of the
            interactive elements are given focus in the order in which they appear in the Web
          page.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A genealogical search form searches for marriage records. The search form includes
                several input fields for the bride and the groom. The form is marked up using a data
                table that includes the fields of the groom in the first column and the fields of
                the bride in the second column. The order in the content is row by row but the
                author feels it is more logical to navigate the form column by column. This way, all
                the groom's criteria can be filled in before moving on to the bride's criteria. The
                  <att>tabindex</att> attributes of the input fields are used to specify a tab
                order that navigates column by column.</p>
						</description>
						<code role="html401"><![CDATA[<form action="#" method="post">
 <table summary="the first column contains the search criteria 
  of the groom, the second column the search criteria of 
  of the bride">
 <caption>Search for marriage records</caption>
 <tr>
   <th>Search criteria</th>
   <th>Groom</th>
   <th>Bride</th>
 </tr>
 <tr>
  <th>First name</th>
  <td><input type="text" size="30" value="" name="groomfirst" 
      title="First name of the groom" tabindex="1"></td>
  <td><input type="text" size="30" value="" name="bridefirst" 
       title="First name of the bride" tabindex="4"></td>
 </tr>
 <tr>
  <th>Last name</th>
  <td><input type="text" size="30" value="" name="groomlast" 
      title="Last name of the groom" tabindex="2"></td>
  <td><input type="text" size="30" value="" name="bridelast" 
      title="Last name of the bride" tabindex="5"></td>
 </tr>
 <tr>
  <th>Place of birth</th>
  <td><input type="text" size="30" value="" name="groombirth" 
      title="Place of birth of the groom" tabindex="3"></td>
  <td><input type="text" size="30" value="" name="bridebirth" 
      title="Place of birth of the bride" tabindex="6"></td>
 </tr>
</table>
</form>      ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>A Web page contains a search field in the upper right corner. The field is given
                tabindex="1" so that it will occur first in the tab order, even though it is not
                first in the content order.</p>
						</description>
					</eg-group>
					<eg-group>
						<description>
							<p>
								<att>Tabindex</att> values need not be sequential nor must they begin with any
                particular value. The values do not have to be unique. Elements that have identical
                  <att>tabindex</att> values are navigated in the order they appear in the
                character stream. So in the following example, the tab order would be one, three,
                two, four.</p>
						</description>
						<code role="html401"><![CDATA[<a href="" tabindex="1">one</a>
 <a href="" tabindex="2">two</a>
 <a href="" tabindex="1">three</a>
 <a href="" tabindex="2">four</a>  ]]></code>
						<description>
							<p>In sections of the content where the tab order follows the content order, it can be
                less error prone to give all elements the same tabindex value rather than specifying
                a different number for each element. Then it is easy to rearrange those elements or
                add new elements and maintain a logical tab order.</p>
						</description>
						<code role="html401"><![CDATA[ <a href="xxx" tabindex = "1">First link in list</a>
<a href="xxx" tabindex = "1">Second link in list</a>
<a href="xxx" tabindex = "1">Link that was added long 
  after the original list was created</a>
<a href="xxx" tabindex = "1">Third link in list</a>
  ...
<a href="xxx" tabindex = "1">Twentieth link in list</a>      ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html4/interact/forms.html#adef-tabindex">Tabbing
                    navigation in the HTML 4.01 specification</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G59"/>
					<relatedtech idref="F44"/>
					<relatedtech idref="F85"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check if <att>tabindex</att> is used</p>
							</item>
							<item>
								<p>If <att>tabindex</att> is used, check that the tab order specified by the
                    <att>tabindex</att> attributes follows relationships in the content.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H24">
				<short-name> Providing text alternatives for the <el>area</el> elements of image maps </short-name>
				<applicability>
					<p>HTML and XHTML Documents that contain <el>area</el> elements.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
					<success-criterion idref="navigation-mechanisms-refs"/>
					<success-criterion idref="navigation-mechanisms-link"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>The HTML 4.01 specification explains that the text of the <att>alt</att> attribute
              is to be displayed when the element cannot be rendered normally. User Agents will
              display the <att>alt</att> attribute text when images are not displayed. However,
              currently, visual User Agents do not display the alt attribute text for area elements
              of image maps when accessed by keyboard or when images are not displayed, and may clip
              the area elements if the intrinsic size of the image is not used. In addition, the
              display of alt attribute text in response to mouse-hover does not display in the font
              size or color combination set in the User Agent. </p>
						<p>The <att>title</att> attribute is meant to provide additional information. However,
              current implementation in User Agents is access to either the title or alt attribute,
              but not both. User Agents generally will display the <att>title</att> attribute text
              when the mouse is placed over the element containing the <att>title</att> attribute.
              </p>
						<p>Therefore, when using image maps, successful implementation of this technique would
              require either:</p>
						<ulist>
							<item>
								<p>Ensuring the area element alt attribute value is displayed in response to
                  attaining focus (including keyboard focus), and that this applies both to
                  situations where images are loaded and not loaded. OR</p>
							</item>
							<item>
								<p>A redundant mechanism serving the same purpose as the area elements is present in
                  the Web Page.</p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to provide text alternatives that serve the same
            purpose as the selectable regions of an image map. An image map is an image divided into
            selectable regions defined by <el>area</el> elements. Each area is a link to another
            Web page or another part of the current Web page. The <att>alt</att> attribute of each
              <el>area</el> element serves the same purpose as the selectable area of the
          image.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example uses the <att>alt</att> attribute of the <el>area</el> element
                to provide text that describes the purpose of the image map areas.</p>
						</description>
						<code role="html401"><![CDATA[<img src="welcome.gif" usemap="#map1" 
    alt="Areas in the library. Select an area for
more information on that area." /> 
<map id="map1" name="map1">
  <area shape="rect" coords="0,0,30,30"
    href="reference.html" alt="Reference" />
  <area shape="rect" coords="34,34,100,100"
    href="media.html" alt="Audio visual lab" />
</map>   ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/objects.html#h-13.6.1">HTML 4.01
                    client-side image maps</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/objects.html#h-13.8">HTML 4.01 -
                    how to specify alt text</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G91"/>
					<relatedtech idref="H30"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each <el>area</el> element in an image map: </p>
						<olist>
							<item>
								<p>Check that the <el>area</el> element has an <att>alt</att> attribute.</p>
							</item>
							<item>
								<p>Check that the text alternative specified by the alt attribute serves the same
                  purpose as the part of image map image referenced by the <el>area</el> element
                  of the imagemap.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>The above checks are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H25">
				<short-name>Providing a title using the title element</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-title"/>
				</applies-to>
				<description>
					<p>All HTML and XHTML documents, including those in individual frames in
            a frameset, have a <el>title</el> element in the <el>head</el> section that
            defines in a simple phrase the purpose of the document. This helps users to orient
            themselves within the site quickly without having to search for orientation information
            in the body of the page.</p>
					<p>Note that the (mandatory) <el>title</el> element, which only appears once in a
            document, is different from the <att>title</att> attribute, which may be applied to
            almost every HTML and XHTML element.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example defines a document's title.</p>
						</description>
						<code role="html401"><![CDATA[<html xmlns="http://www.w3.org/1999/xhtml">   
   <head>     
      <title>The World Wide Web Consortium</title>     
   </head>   
   <body>     
      ...   
   </body> 
</html>  ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/global.html#h-7.4.2">HTML 4.01
                    TITLE element</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G88"/>
					<relatedtech idref="G127"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the source code of the HTML or XHTML document and check that a non-empty
                    <el>title</el> element appears in the <el>head</el> section.</p>
							</item>
							<item>
								<p>Check that the <el>title</el> element describes the document.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks 1 and 2 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H27">
				<short-name>Providing text and non-text alternatives for <el>object</el>
				</short-name>
				<applicability>
					<p>Documents that load media with the <el>object</el> element, when the media format is
            not an accessibility-supported content technology.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="general" version="">
						<p>This technique is not supported well by assistive technologies and cross-browser support is irregular.</p>
					</ua-issue>
				</ua-issues>
				<description id="object_desc">
					<p>If <el>object</el> is used, provide a <loc linktype="glossary" href="text-altdef">text
              alternative</loc> in the content of the element:</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example shows a text alternative for a Java applet using the <el>object</el>
                element.</p>
						</description>
						<code role="xhtml10"><![CDATA[<object classid="java:Press.class" width="500" height="500">
  As temperature increases, the molecules in the balloon...
</object>     ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>This example takes advantage of the fact the <el>object</el> elements may be nested
                to provide for alternative representations of information.</p>
						</description>
						<code role="xhtml10"><![CDATA[<object classid="java:Press.class" width="500" height="500">
  <object data="Pressure.mpeg" type="video/mpeg">
    <object data="Pressure.gif" type="image/gif">
      As temperature increases, the molecules in the balloon...
    </object>
  </object>
</object>  ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<p>
							<loc href="http://www.w3.org/TR/html401/struct/objects.html#edef-OBJECT">HTML 4.01
                OBJECT element</loc>
						</p>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G92"/>
					<relatedtech idref="H53"/>
					<relatedtech idref="H46"/>
				</related-techniques>
				<tests/>
			</technique>
			<technique id="H28">
				<short-name>Providing definitions for abbreviations by using the abbr and acronym elements</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="meaning-located"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p>Assistive technologies provide different levels of support for speaking title attributes. Some do not include features that allow users to access information provided via the title attribute. </p>
							</item>
							<item>
								<p>Implementing this technique with the <att>title</att> attribute is only sufficient if the <att>title</att> attribute is accessibility supported. The content of the <att>title</att> attribute needs to be available to all keyboard users (not only those with text-to-speech software) for this attribute to be accessibility  supported.</p>
							</item>
							<item>
								<p>JAWS 6.2 and higher and WindowEyes 5.0 and higher support the abbr and acronym elements. They can all be set to speak the title attribute when these elements are encountered, but this is not the default setting and is often not turned on by users. </p>
							</item>
							<item>
								<p>Many graphical user agents render text enclosed within an <el>abbr</el> or <el>acronym</el> element with a dotted line below or surrounding it. In addition, when the mouse hovers over the element, the expansion is displayed as a tool tip.
                      </p>
							</item>
							<item>
								<p>In Internet Explorer 7 and below, items marked using the <el>abbr</el> element are not displayed with any additional formatting. For IE 6 and below, the expanded version does not display as a tooltip when the mouse hovers over the item. </p>
							</item>
							<item>
								<p>Within a given user agent or assistive technology, <el>abbr</el> and <el>acronym</el> elements are presented to users in the same way.
                      </p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to provide expansions or definitions for
            abbreviations by using the <el>abbr</el> and <el>acronym</el> elements.</p>
					<p>It is always appropriate to use the <el>abbr</el> element for any abbreviation,
            including acronyms and initialisms. When using HTML and XHTML,
            initialisms and acronyms may be marked up using the <el>acronym</el> element. 
          	Versions of HTML after HTML 4 eliminate the <el>acronym</el> element in favor of the more general
              <el>abbr</el> element.</p>
				</description>
				<examples>
					<eg-group>
						<head> Using <el>abbr</el> element to expand abbreviations. </head>
						<code role="html401"><![CDATA[<p>Sugar is commonly sold in 5 <abbr title="pound">lb.<abbr> bags.</p>
<p>Welcome to the <abbr title="World Wide Web">WWW</abbr>!</p>              ]]></code>
					</eg-group>
					<eg-group>
						<head> Using <el>abbr</el> element to define abbreviations. </head>
						<code role="html401"><![CDATA[<p>Tasini <abbr title="and others">et al.</abbr> <abbr title="versus">v.</abbr>
The New York Times <abbr title="and others">et al.</abbr> is the landmark lawsuit 
brought by members of the National Writers Union against ......</p>  ]]></code>
					</eg-group>
					<eg-group>
						<head> Using the <el>acronym</el> element to expand an acronym </head>
						<code role="html401"><![CDATA[ <p>The use of <acronym title="Keep It Simple Stupid">KISS</acronym> became popular in ...</p>        
            ]]></code>
					</eg-group>
					<eg-group>
						<head> Using the <el>acronym</el> element to expand an initialism </head>
						<code role="html401"><![CDATA[ <p><acronym title="World Wide Web">WWW</acronym></p>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/text.html#edef-ABBR">HTML 4.01 ABBR
                    element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/xhtml2/mod-text.html#sec_9.1.">XHTML 2.0 abbr
                    element</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G102"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that an expansion or definition is provided for each abbreviation via
                    <el>abbr</el> or <el>acronym</el>. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H30">
				<short-name>Providing link text that describes the purpose of a link for anchor elements</short-name>
				<applicability>
					<p>HTML and XHTML documents that contain links, (&lt;a
            href&gt; elements)</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
					<success-criterion idref="navigation-mechanisms-refs"/>
					<success-criterion idref="navigation-mechanisms-link"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to describe the purpose of a link by providing
            descriptive text as the content of the <el>a</el> element. The description lets a
            user distinguish this link from other links in the Web page and helps the user determine
            whether to follow the link. The URI of the destination is generally not sufficiently
            descriptive. </p>
					<p>When an image is the only content of a link, the text alternative for the image
            describes the unique function of the link.</p>
					<p>When the content of a link contains both text and one or more images, if the text is
            sufficient to describe the purpose of the link, the images may have an empty text
            alternative. (See <loc href="H67" linktype="techniques">Using null alt text and no title
              attribute on img elements for images that assistive technology should ignore</loc>.)
            When the images convey information beyond the purpose of the link, they must also have
            appropriate alt text. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>Describing the purpose of a link in HTML in the text content of the <el>a</el>
                element.</p>
						</description>
						<code role="html401"><![CDATA[<a href="routes.html">
  Current routes at Boulders Climbing Gym
</a>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>Using the <att>alt</att> attribute for the <el>img</el> element to describe
                the purpose of a graphical link.</p>
						</description>
						<code role="html401"><![CDATA[<a href="routes.html">
   <img src="topo.gif" alt="Current routes at Boulders Climbing Gym" /> 
</a> ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>Using an empty alt attribute when the anchor (<el>a</el>) element contains text
                that describes the purpose of the link in addition to the <el>img</el> element.
                Note that the link text will appear on the page next to the image.</p>
						</description>
						<code role="html401"><![CDATA[<a href="routes.html">
  <img src="topo.gif" alt="" />
  Current routes at Boulders Climbing Gym
</a>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>A site allows users to provide feedback on products, when the user is logged in, by clicking on the "Feedback" link in a product detail page. Other users or the product manufacturer are able to provide a response to any feedback. The feedback link displays an icon before the "Feedback" text when a response to the user's feedback is available. The help information describes this icon as a talking bubble containing quotation marks and includes the icon itself as an example. The icon's text alternative in the help text is "Response received icon". The same text alternative is used in the product detail pages (when a response is available) to allow identification of this icon through multiple modalities.</p>
						</description>
						<code role="html401"><![CDATA[<a href="prod_123_feedback.htm">Feedback <img src="response.gif" width="15" height="15" alt="Response received icon" /></a>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>A link contains text and an icon, and the icon provides additional information about the target. </p>
						</description>
						<code role="html401"><![CDATA[<a href="WMFP.pdf">
Woodend Music Festival Program
<img src="pdficon.gif" alt="PDF format"/>
</a>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>The “MyCorp” company’s annual report is made available on the corporate
        				website as a PDF file, and the annual corporate budget is made available as an
        				Excel file on the web site.</p>
							<note>
								<p>Many users prefer to know the file type when opening a file that results in opening a new application to view the file, so it is often regarded as useful to include this additional information. However, this is not required for compliance with this success criterion.</p>
							</note>
						</description>
						<code><![CDATA[<p>
<a href=”2009mycorp_report.pdf”>MyCorp 2009 Annual Report (pdf)</a><br />
<a href=”2009mycorp_budget.xls”>MyCorp 2009 Annual Budget (Excel)</a>
</p>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/objects.html#h-13.8">HTML 4.01 -
                    how to specify alt text</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G91"/><!--<relatedtech idref="C7"/>-->
					<relatedtech idref="H2"/>
					<relatedtech idref="H24"/>
					<relatedtech idref="H67"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each link in the content that uses this technique:</p>
						<olist>
							<item>
								<p>Check that text or a text alternative for non-text content is included in the
                    <el>a</el> element</p>
							</item>
							<item>
								<p>If an <el>img</el> element is the only content of the <el>a</el> element,
                  check that its text alternative describes the purpose of the link</p>
							</item>
							<item>
								<p>If the <el>a</el> element contains one or more <el>img</el> element(s)
                  and the text alternative of the <el>img</el> element(s) is empty, check that
                  the text of the link describes the purpose of the link </p>
							</item>
							<item>
								<p>If the <el>a</el> element only contains text, check that the text describes
                  the purpose of the link</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>The above checks are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H32">
				<short-name>Providing submit buttons</short-name>
				<applicability>
					<p> Content that includes form controls. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-unpredictable-change"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to provide a mechanism that allows users to
            explicitly request changes of context. The intended use of a submit button is to
            generate an HTTP request that submits data entered in a form, so it is an appropriate
            control to use for causing a change of context. </p>
				</description>
				<examples>
					<eg-group>
						<head/>
						<description>
							<p> This is a basic example of a form with a submit button.</p>
						</description>
						<code><![CDATA[
<form action="http://www.example.com/cgi/subscribe/" method="post"><br /> 
 <p>Enter your e-mail address to subscribe to our mailing list.</p><br /> 
 <label for="address">Enter email address:</label><input type="text" 
 id="address" name="address" /> 
 <input type="submit" value="Subscribe" /><br /> 
</form>]]></code>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<p> The following example uses a server-side script (specified in the
                <att>action</att> attribute) that redirects the user to the requested page. </p>
						</description>
						<code><![CDATA[ <form action="http://www.example.com/cgi/redirect/" method="get"><br /> 
    <p>Navigate the site.</p><br /> 
    <select name="dest"><br /> 
      <option value="/index.html">Home</option/><br /> 
      <option value="/blog/index.html">My blog</option/><br /> 
      <option value="/tutorials/index.html">Tutorials</option/><br /> 
      <option value="/search.html">Search</option/><br /> 
    </select><br /> 
  <input type="submit" value="Go to Page" /><br /> 
  </form> ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.cs.tut.fi/~jkorpela/forms/navmenu.html">Navigational
                    pulldown menus in HTML</loc> by Jukka Korpela discusses a few techniques that
                  work or do not work. </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G80"/>
					<relatedtech idref="H36"/>
					<relatedtech idref="H84"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Find all forms in the content </p>
							</item>
							<item>
								<p> For each form, check that it has a submit button (input type="submit", input type="image", or button type="submit") </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> #2 is true </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H33">
				<short-name>Supplementing link text with the title attribute</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs"/>
					<success-criterion idref="navigation-mechanisms-link"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p> Current user agents and assistive technology provide no feedback to the user
                  when links have <att>title</att> attribute content available. </p>
							</item>
							<item>
								<p> Some graphical user agents will display a tool tip when the mouse hovers above
                  an anchor element containing a <att>title</att> attribute. However, current user
                  agents do not provide access to <att>title</att> attribute content via the
                  keyboard. </p>
							</item>
							<item>
								<p> The tool tip in some common user agents disappears after a short period of time
                  (approximately 5 seconds). This can cause difficulty accessing <att>title</att>
                  attribute content for those users who can use a mouse but have fine motor skill
                  impairment, and may result in difficulties for users who need more time to read
                  the tool tip. </p>
							</item>
							<item>
								<p> Current graphical user agents do not provide mechanisms to control the
                  presentation of <att>title</att> attribute content. The user cannot resize the
                  tool tip text or control the foreground and background colors. The placement and
                  location of the tool tip cannot be controlled by users, causing some screen
                  magnifier users to be unable to access meaningful portions of the
                  <att>title</att> attribute content because the tool tip cannot be fully
                  displayed within the viewport. </p>
							</item>
							<item>
								<p> Some user agents allow access to supplementary information through the context
                  menu. For example, the keystroke combination Shift+F10 followed by P will display
                  the <att>title</att> attribute content, along with other supplementary
                  information in Mozilla/Firefox. </p>
							</item>
							<item>
								<p>The HTML 4.01 specification explains that the text of the <att>alt</att>
                  attribute is to be displayed when the element cannot be rendered normally. Thus,
                  visual User Agents will display the <att>alt</att> attribute text when images
                  are not displayed. The <att>title</att> attribute is meant to provide additional
                  information. User Agents generally will display the <att>title</att> attribute
                  text when the mouse is placed over the element containing the <att>title</att>
                  attribute. Internet Explorer will display the <att>alt</att> text on mouse-over
                  if there is no <att>title</att> text. The Firefox and Opera browsers only
                  display the <att>title</att> text on mouse-over and do not use the
                  <att>alt</att> attribute text for this purpose. </p>
							</item>
							<item>
								<p>Assistive technologies provide different levels of support for speaking title attributes. Some do not include features that allow users to access information provided via the title attribute.</p>
							</item>
							<item>
								<p>JAWS 7.0 and above will speak the value of title attributes depending upon a JAWS setting. This setting can be changed temporarily or permanently within JAWS.</p>
							</item>
							<item>
								<p>WindowEyes 5.5 and above has a hot key, ins-E, that will speak additional information, including the title attribute, for the item with focus. </p>
							</item>
							<item>
								<p>Implementing this technique with the <att>title</att> attribute is only sufficient if the <att>title</att> attribute is accessibility supported. If the value of the <att>title</att> is essential to understanding the purpose of the link for all users, then the content of this attribute needs to be available to all keyboard users (not only those with text-to-speech software) for this technique to be accessibility supported.</p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to demonstrate how to use a <att>title</att>
            attribute on an anchor element to provide additional text describing a link. The
              <att>title</att> attribute is used to provide additional information to help clarify
            or further describe the purpose of a link. If the supplementary information provided
            through the <att>title</att> attribute is something the user should know before
            following the link, such as a warning, then it should be provided in the link text
            rather than in the <att>title</att> attribute. </p>
					<p>Because of the extensive user agent limitations in supporting access to the title attribute, authors should use caution in applying this technique. For this reason, it is preferred that the author use technique <loc href="C7" linktype="css">C7: Using CSS to hide a portion of the link text</loc> or <loc href="H30" linktype="techniques">H30: Providing link text that describes the purpose of a link for anchor elements</loc>.</p>
				</description>
				<examples>
					<eg-group>
						<head>Clarifying the purpose of a link</head>
						<code role="html401"><![CDATA[<a href="http://example.com/WORLD/africa/kenya.elephants.ap/index.html" 
   title="Read more about failed elephant evacuation">
   Evacuation Crumbles Under Jumbo load
</a>]]></code>
					</eg-group>
					<eg-group>
						<head>A link that opens in a new window</head>
						<description>
							<p>In HTML 4.01 the <code>
									<att>target</att><![CDATA[="_blank"]]></code> attribute can be used on an anchor
                element to indicate that the URI specified by the <att>href</att> attribute will be opened in a
                new window. This example shows using the <att>title</att> attribute of the anchor
                element to provide information that the link will be opened in a new window.</p>
						</description>
						<code role="html401"><![CDATA[<a href="http://example.com/subscribe.html" 
     target="_blank" 
     title="link opens in new window">
     Subscribe to email notifications about breaking news
</a>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.brothercake.com/site/resources/scripts/tooltips/">Displaying tooltips when elements receive focus</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C7"/>
					<relatedtech idref="H30"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>Examine the source code for anchor elements. </p>
						<olist>
							<item>
								<p>For each anchor element that has a <att>title</att> attribute, check that the
                    <att>title</att> attribute together with the link text describes the purpose
                  of the link.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H34">
				<short-name>Using a Unicode right-to-left mark (RLM) or left-to-right mark (LRM) to mix text
          direction inline</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-sequence"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to use Unicode right-to-left marks and left-to-right
            marks to override the HTML bidirectional algorithm when it produces undesirable results.
            This may be necessary, for instance, when placing neutral characters such as spaces or
            punctuation between different directional text runs. The concepts used in this technique
            are described in <loc href="http://www.w3.org/International/articles/inline-bidi-markup/">What you need to
              know about the bidi algorithm and inline markup</loc>.</p>
					<p> Unicode right-to-left marks and left-to-right marks can be entered directly or by
            means of character entities or numeric character references, as shown here.</p>
					<ulist>
						<item>
							<p>left-to-right mark: &amp;lrm; or &amp;#x200e; (U+200E)</p>
						</item>
						<item>
							<p>right-to-left mark: &amp;rlm; or &amp;#x200f; (U+200F)</p>
						</item>
					</ulist>
					<p>Due to the <abbr expansion="bidirectional">bidi</abbr> algorithm, a source code editor
            may not display character entities or numeric
              character references as expected.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example shows an Arabic phrase in the middle of an English sentence. The exclamation point is part of the Arabic phrase and should appear on its left. Because it is between an Arabic and Latin character and the overall paragraph direction is <abbr expansion="left-to-right">LTR</abbr>, the bidirectional algorithm positions the exclamation mark to the right of the Arabic phrase. </p>
							<p>The title is "<phrase xml:lang="ar">مفتاح معايير الويب!</phrase>" in Arabic.</p>
							<p>Visually-ordered ASCII version (RTL text in uppercase, LTR in lower):</p>
							<p>the title is "HCTIWS SDRADNATS BEW!" in arabic.</p>
							<p>Inserting a Unicode right-to-left mark in the code immediately after the exclamation mark positions it correctly when you view the displayed text (see below). You can use a character escape or the (invisible) control character to insert the right-to-left mark.</p>
							<p>The title is "<phrase xml:lang="ar">مفتاح معايير الويب!‏</phrase>" in Arabic.</p>
							<p>Visually-ordered ASCII version:</p>
							<p>the title is "!HCTIWS SDRADNATS BEW" in arabic.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/i18n-html-tech-bidi/">Authoring Techniques for
                    XHTML &amp; HTML Internationalization: Handling Bidirectional Text 1.0</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/i18n-html-tech-bidi/#ri20030218.135304584">Mixing
                    text direction inline</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/International/articles/inline-bidi-markup/">What you
                    need to know about the bidi algorithm and inline markup</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/International/geo/html-tech/tech-bidi.html#bidisource">Problems with bidirectional source text</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H56"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the source for places where text changes direction. </p>
							</item>
							<item>
								<p>When text changes direction, check whether neutral characters such as spaces or
                  punctuation occur adjacent to text that is rendered in the non-default
                direction.</p>
							</item>
							<item>
								<p>When #2 is true and the HTML bidirectional algorithm would produce the wrong
                  placement of the neutral characters, check whether the neutral characters are
                  followed by Unicode right-to-left or left-to-right marks that cause neutral
                  characters to be placed as part of the preceding characters. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #3 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H35">
				<short-name> Providing text alternatives on <el>applet</el> elements </short-name>
				<applicability>
					<p> HTML and XHTML Documents that load Java applets where <el>applet</el> is not deprecated.
          </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p>This technique is not supported well by assistive technologies. The HTML specification explains that text alternatives for applets are to be displayed when the element cannot be rendered. Therefore, text alternatives that are included in the body of <el>applet</el> elements may not be available to users unless the user agent either does not support or has been configured not to render applets. </p>
							</item>
							<item>
								<p>IE 6 for Windows and Firefox 1.5 and Opera 9 on Windows treat alternative text for the applet element differently. IE will display the body text of the applet element and not the alt attribute. Firefox and Opera will display the alt attribute but not the body text. </p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p> Provide a text alternative for an applet by using the alt attribute to label an applet
            and providing the text alternative in the body of the applet element. In this technique, both mechanisms
            are required due to the varying support of the alt attribute and applet body text by
            user agents. </p>
				</description>
				<examples>
					<eg-group>
						<head>An applet to play the tic-tac-toe game. </head>
						<description/>
						<code><![CDATA[<applet code="tictactoe.class" width="250" height="250" alt="tic-tac-toe game">
   tic-tac-toe game
</applet>  ]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="G94"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> View the source code of the applet element </p>
							</item>
							<item>
								<p> Check that the applet element contains an alt attribute with a text alternative
                  for the applet </p>
							</item>
							<item>
								<p> Check that the applet element contains a text alternative for the applet in the
                  body of the applet element </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> Checks #2 and #3 are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H36">
				<short-name>Using alt attributes on images used as submit buttons</short-name>
				<applicability>
					<p> Applies to content using image-based submit buttons. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
				</applies-to>
				<description>
					<p> For input elements of type 'image', the <att>alt</att> attribute of the
            <el>input</el> element is used to provide a functional label. This label indicates
            the button's function, but does not attempt to describe the image. The label is
            especially important if there are multiple submit buttons on the page that each lead to
            different results. </p>
					<p> The <el>input</el> element is used to create many kinds of form controls. Although
            the HTML and XHTML DTDs permits the <att>alt</att> attribute on all of these, it should be used
            only on image submit buttons. User agent support for this attribute on other types of
            form controls is not well defined, and other mechanisms are used to label these
            controls. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p> An <el>input</el> element with an <att>alt</att> attribute</p>
						</description>
						<code><![CDATA[<form action="http://example.com/prog/text-read" method="post">
  <input type="image" name="submit" src="button.gif" alt="Submit" />
</form>    ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also/>
				</resources>
				<related-techniques>
					<relatedtech idref="G94"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> For all input elements that have a type attribute value of "image", check for
                  the presence of an alt attribute. </p>
							</item>
							<item>
								<p>Check that the alt attribute indicates the 
                  button's function.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> #1 and #2 are true </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H37">
				<short-name>Using <att>alt</att> attributes on <el>img</el> elements</short-name>
				<applicability>
					<p>Images used within HTML documents.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
				</applies-to>
				<description id="img-alt_desc">
					<p>When using the <el>img</el> element, specify a short text alternative with the
            <att>alt</att> attribute. Note. The value of this attribute is referred to as "alt
            text".</p>
					<p>When an image contains words that are important to understanding the content, the alt
            text should include those words. This will allow the alt text to play the same function
            on the page as the image. Note that it does not necessarily describe the visual
            characteristics of the image itself but must convey the same meaning as the image. </p>
				</description>
				<examples>
					<eg-group id="img-alt_example">
						<description>
							<p>An image on a Website provides a link to a free newsletter. The image contains the
                text "Free newsletter. Get free recipes, news, and more. Learn more." The alt text
                matches the text in the image. </p>
						</description>
						<code role="xhtml10"><![CDATA[<img src="newsletter.gif" alt="Free newsletter. 
   Get free recipes, news, and more. Learn more." />]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>An image on a Web site depicts the floor plan of a building. The image is an
              image map with each room an interactive map area. The alt text is "The
              building's floor plan. Select a room for more information about the purpose or
              content of the room." The instruction to "select a room" indicates that the
              image is interactive.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<p>
							<loc href="http://www.w3.org/TR/html401/struct/objects.html#edef-IMG">HTML 4.01 IMG
                element</loc>
						</p>
					</see-also>
					<see-also>
						<p>
							<loc href="http://www.w3.org/TR/html401/struct/objects.html#adef-alt">HTML 4.01 alt
                attribute</loc>
						</p>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G82"/>
					<relatedtech idref="H2"/>
					<relatedtech idref="H24"/>
					<relatedtech idref="H30"/>
					<relatedtech idref="H45"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine each <el>img</el> element in the content </p>
							</item>
							<item>
								<p>Check that each <el>img</el> element which conveys meaning contains an
                  <att>alt</att> attribute. </p>
							</item>
							<item>
								<p>If the image contains words that are important to understanding the content, the
                  words are included in the text alternative. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p>Checks #2 and #3 are true.</p>
					</expected-results>
				</tests>
			</technique>
			<technique id="H39">
				<short-name>Using caption elements to associate data table captions with data tables</short-name>
				<applicability>
					<p>HTML and XHTML data tables </p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to programmatically associate captions for data
            tables where captions are provided in the presentation. The caption for a table is a
            table identifier and acts like a title or heading for the table. </p>
					<p>The <el>caption</el> element is the appropriate markup for such text and it ensures
            that the table identifier remains associated with the table, including visually (by
            default). In addition, using the <el>caption</el> element allows screen reading software
            to navigate directly to the caption for a table if one is present.</p>
					<p>The <el>caption</el> element may be used whether or not the table includes a
              <att>summary</att> attribute. The <el>caption</el> element identifies the table
            whereas the <att>summary</att> attribute gives an overview of the purpose or explains
            how to navigate the table. If both are used, the <el>caption</el> should not duplicate
            information in the <att>summary</att>.</p>
					<p>Although WCAG 2.0 does not prohibit the use of layout tables, CSS-based layouts are
            recommended in order to retain the defined semantic meaning of the HTML and XHTML
            <el>table</el> elements and to conform to the coding practice of separating
            presentation from content. If a table is used for layout, the <el>caption</el> element
            is not used. The purpose of a layout table is simply to control the placement of
            content; the table itself is “transparent" to the user. A <el>caption</el> would "break"
            this transparency by calling attention to the table. </p>
				</description>
				<examples>
					<eg-group>
						<head>An appointment calendar with a <el>caption</el>
						</head>
						<code role="html401"><![CDATA[<table>
<caption>Schedule for the week of March 6</caption>
...</table> ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.2">Table Captions: The CAPTION element</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H43"/>
					<relatedtech idref="H63"/>
					<relatedtech idref="H73"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check for layout tables: determine whether the content has a relationship with
                  other content in both its column and its row. </p>
								<olist>
									<item>
										<p>If “no," the table is a layout table.</p>
									</item>
									<item>
										<p>If “yes," the table is a data table.</p>
									</item>
								</olist>
							</item>
							<item>
								<p>If the table is a layout table, check that the table does not include a
                    <el>caption</el> element.</p>
							</item>
							<item>
								<p>If the table is a data table and it includes a <el>caption</el> element, check
                  that the <el>caption</el> identifies the table</p>
							</item>
							<item>
								<p>If both a <att>summary</att> attribute and a <el>caption</el> element are present
                  for this data table, check that the <att>summary</att> does not duplicate the
                    <el>caption</el>.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>For layout tables, #2 is true.</p>
							</item>
							<item>
								<p>For data tables, #3 and #4 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H40">
				<short-name>Using definition lists</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="meaning-idioms"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to provide the definitions of words or phrases by
            presenting them in a definition list. The list is marked up using the <el>dl</el>
            element. Within the list, each term is put in a separate <el>dt</el> element, and
            its definition goes in the <el>dd</el> element directly following it. The
              <att>title</att> attribute can be used to provide additional information about the
            definition list. </p>
					<p>Using <el>dl</el>, <el>dt</el>, and <el>dd</el> ensures that relationships
            between terms and their definitions are preserved if the presentation format changes and
            that the list of terms and definitions is treated as a unit.</p>
					<p>Definition lists are easiest to use when the definitions are put in alphabetical order.
            Definition lists are typically used in a glossary.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A list of definitions of nautical terms used on a Website about sailing.</p>
						</description>
						<code role="html401"><![CDATA[<dl title="Nautical terms">
  <dt>Knot</dt>
  <dd>
    <p>A <em>knot</em> is a unit of speed equaling 1 
      nautical mile per hour (1.15 miles per hour or 1.852 
      kilometers per hour).</p>
  </dd>
  <dt>Port</dt>
  <dd>
    <p><em>Port</em> is the nautical term (used on 
      boats and ships) that refers to the left side
      of a ship, as perceived by a person facing towards 
      the bow (the front of the vessel).</p>
  </dd>
  <dt>Starboard</dt>
  <dd>
    <p><em>Starboard</em> is the nautical term (used 
      on boats and ships) that refers to the right 
      side of a vessel, as perceived by a person 
      facing towards the bow (the front of the vessel).</p>
  </dd>
</dl>        ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/REC-html40/struct/lists.html#edef-DL">Definition
                    lists: the DL, DT, and DD elements</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G62"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For any set of words and their definitions that have the appearance of a list: </p>
						<olist>
							<item>
								<p>Check that the list is contained within a <el>dl</el> element. </p>
							</item>
							<item>
								<p>Check that each word defined in the list is contained within a <el>dt</el>
                  element. </p>
							</item>
							<item>
								<p>Check that the definition for each word appears in the <el>dd</el> element
                  immediately following the word's <el>dt</el> element . </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H42">
				<short-name>Using h1-h6 to identify headings</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to use HTML and XHTML heading markup to provide semantic code for headings in the content. Heading markup will allow assistive technologies to present the heading status of text to a user. A screen reader can recognize the code and announce the text as a heading with its level, beep or provide some other auditory indicator. Screen readers are also able to navigate heading markup which can be an effective way for screen reader users to more quickly find the content of interest. Assistive technologies that alter the authored visual display will also be able to provide an appropriate alternate visual display for headings that can be identified by heading markup.</p>
				</description>
				<examples>
					<eg-group>
						<head>Hierarchical Heading Organization</head>
						<description>
							<p>In the following example, headings are used in a hierarchical layout with <el>h3</el> as a subsection of <el>h2</el>, which is a subsection of <el>h1</el>. </p>
						</description>
						<code xml:space="preserve"><![CDATA[<h1>Plant Foods that Humans Eat</h1>
<p>There are an abundant number of plants that humans eat...</p>
<h2>Fruit</h2>
<p> A fruit is a structure of a plant that contains its
  seeds...</p>
<h3>Apple</h3>
<p>The apple is the pomaceous fruit of the apple tree...</p>
<h3>Orange</h3>
<p>The orange is a hybrid of ancient cultivated origin...</p>
<h3>Banana</h3>
<p>Banana is the common name for herbaceous plants ...</p>
<h2>Vegetables</h2>
<p>A vegetable is an edible plant or part of a plant other than a
  sweet fruit ...</p>
<h3>Broccoli</h3>
<p>Broccoli is a plant of the mustard/cabbage family ... </p>
<h3>Brussels sprouts</h3>
<p>The Brussels sprout of the Brassicaceae family, is a Cultivar
  group of wild cabbage ...</p>
<h3>Green beans</h3>
<p>Green beans have been bred for the fleshiness, flavor, or
  sweetness of their pods...</p>]]></code>
					</eg-group>
					<eg-group>
						<head>Headings in a 3-column layout</head>
						<description>
							<p>In this example, the main content of the page is in the middle column of a 3-column
                page. The title of the main content matches the title of the page, and is marked as
                  <el>h1</el>, even though it is not the first thing on the page. The content in
                the first and third columns is less important, and marked with <el>h2</el>.</p>
							<note>
								<p>It is important to note that the example code below is <phrase diff="del">intended to show how headings can be used to bypass blocks of information. It is</phrase> not intended to prescribe what level of heading should be used for a particular section of the web page. In the example, the layout could be presented with the first heading in each column at the same logical level (such as an h1), or as found in the example, where the logical level reflects it's importance in relation to the main content.</p>
							</note>
						</description>
						<code role="html401"><![CDATA[<head>
 <title>Stock Market Up Today</title>
 </head>

 <body>

 <!-- left nav -->
 <div class="left-nav">
 <h2>Site Navigation</h2>
 <!-- content here -->
 </div>

 <!-- main contents -->
 <div class="main">
 <h1>Stock Market up today</h1>
 <!-- article text here -->
 </div>

 <!-- right panel -->
 <div class="left-nav">
 <h2>Related links</h2>
 <!-- content here -->
 </div>
 </body>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/global.html#h-7.5.5">HTML 4.01
                    H1-H6 elements</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://meyerweb.com/eric/thoughts/2004/07/21/pick-a-heading/">Pick a
                    Heading</loc> Eric Meyer</p>
							</item>
							<item>
								<p>
									<loc href="http://webarchive.nationalarchives.gov.uk/20100418065544/http://www.rnib.org.uk/wacblog/headings/quick-tips-for-accessible-headings/">Quick tips for accessible headings</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H69"/>
					<relatedtech idref="G141"/>
					<relatedtech idref="F2"/>
					<relatedtech idref="F43"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that heading markup is used when content is a heading.</p>
							</item>
							<item>
								<p>Check that heading markup is not used when content is not a heading.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1 and #2 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H43">
				<short-name>Using id and headers attributes to associate data cells with header cells in
          data tables</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to associate each data cell (in a data table) with
            the appropriate headers. This technique adds a <att>headers</att> attribute to each
            data cell (<el>td</el> element). It also adds an <att>id</att> attribute to any
            cell used as a header for other cells. The <att>headers</att> attribute of a cell
            contains a list of the <att>id</att> attributes of the associated header cells. If
            there is more than one <att>id</att>, they are separated by spaces.</p>
					<p>This technique is used when data cells are associated with more than one row and/or one
            column header. This allows screen readers to speak the headers associated with each data
            cell when the relationships are too complex to be identified using the <el>th</el>
            element alone or the <el>th</el> element with the <att>scope</att> attribute.
            Using this technique also makes these complex relationships perceivable when the
            presentation format changes.</p>
					<p>This technique is not recommended for layout tables since its use implies a
            relationship between cells that is not meaningful when tables are used for layout.</p>
				</description>
				<examples>
					<eg-group>
						<head>A table with multiple rows of headers</head>
						<code role="html401"><![CDATA[<table>
   <tr>
     <th rowspan="2" id="h">Homework</th>
     <th colspan="3" id="e">Exams</th>
     <th colspan="3" id="p">Projects</th>
   </tr>
   <tr>
     <th id="e1" headers="e">1</th>
     <th id="e2" headers="e">2</th>
     <th id="ef" headers="e">Final</th>
     <th id="p1" headers="p">1</th>
     <th id="p2" headers="p">2</th>
     <th id="pf" headers="p">Final</th>
   </tr>
   <tr>
    <td headers="h">15%</td>
    <td headers="e e1">15%</td>
    <td headers="e e2">15%</td>
    <td headers="e ef">20%</td>
    <td headers="p p1">10%</td>
    <td headers="p p2">10%</td>
    <td headers="p pf">15%</td>
   </tr>
  </table>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/tables.html#h-11.4.1">header information with data cells</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H39"/>
					<relatedtech idref="H51"/>
					<relatedtech idref="H63"/>
					<relatedtech idref="H73"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check for layout tables: determine whether the content has a relationship with
                  other content in both its column and its row. If “no," the table is a layout
                  table. If “yes," the table is a data table.</p>
							</item>
							<item>
								<p>For data tables, check that any cell that is associated with more than one row
                  and/or one column header contains a <att>headers</att> attribute that lists the
                    <att>id</att> for all headers associated with that cell.</p>
							</item>
							<item>
								<p>For data tables where any cell contains an <att>id</att> or
                  <att>headers</att> attribute, </p>
								<olist>
									<item>
										<p>Check that each <att>id</att> listed in the <att>headers</att> attribute
                      of the data cell matches the <att>id</att> attribute of a cell that is used
                      as a header element</p>
									</item>
									<item>
										<p>Check that the <att>headers</att> attribute of a data cell contains the
                        <att>id</att> attribute of all headers associated with the data cell</p>
									</item>
									<item>
										<p>Check that all ids are unique (that is, no two elements in the page have the
                      same id)</p>
									</item>
								</olist>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>If table is a layout table, no cells contain <att>headers</att> or
                  <att>id</att> attributes</p>
							</item>
							<item>
								<p>If table is a data table and any cell contains an <att>id</att> attribute,
                  checks #3.a, #3.b, and #3.c are true.</p>
							</item>
							<item>
								<p>If table is a data table and any cell is associated with more than one row and/or
                  one column header, check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H44">
				<short-name>Using label elements to associate text labels with form controls</short-name>
				<applicability>
					<p>HTML and XHTML controls that use external labels</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
					<success-criterion idref="content-structure-separation-programmatic"/>
					<success-criterion idref="minimize-error-cues"/>
					<success-criterion idref="ensure-compat-rsv"/>
				</applies-to>
				<ua-issues><!-- these ua issues also appear in H90 -->
					<ua-issue name="" version="">
						<p>The HTML and XHTML specifications allow both implicit and explicit labels. However, some
              assistive technologies do not correctly handle implicit labels (for example,
                <code><![CDATA[<label>First name <input type="text"
                name="firstname"></label>]]></code>).</p>
						<ulist>
							<item>
								<p>JAWS 7.10 was tested on Windows XP with Internet Explorer 6.0 and Firefox 1.5. It
                  reads the label for explicit and implicit labels for text fields in both virtual
                  PC cursor and forms reading mode. In forms mode it does not read the label for
                  implicit labels on checkboxes and radio fields.</p>
							</item>
							<item>
								<p>Window-Eyes 5.5 was tested on Windows XP with Internet Explorer 6.0 and Firefox
                  1.5. It will always speak the label for an explicitly labelled form field. It does
                  not speak the label for the implicitly labelled form control in browse on mode but
                  will speak the implicit label when navigating from control to control in browse
                  off mode. </p>
							</item>
						</ulist>
					</ua-issue>
					<ua-issue name="" version="">
						<p>User agents will display a tool tip when the mouse hovers above an <el>input</el>
              element containing a <att>title</att> attribute. Title attributes are exposed to
              assistive technology and are displayed as tooltips in many graphical browsers.
              Tooltips can't be opened via the keyboard, so this information may not be available to
              sighted keyboard users. </p>
					</ua-issue>
					<ua-issue name="" version="">
						<p>If no <el>label</el> is available, JAWS and Window-Eyes speak the
              <att>title</att> attribute when the form control receives focus </p>
						<ulist>
							<item>
								<p>JAWS 6.0 and later can be set to speak both <el>label</el> and
                  <att>title</att> when the two items are different; however, very few users are
                  aware of this setting.</p>
							</item>
							<item>
								<p>WindowEyes 5.5 has a hot key, ins-E, that will display additional information,
                  including the title attribute, for the item with focus. </p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to use the <el>label</el> element to explicitly
            associate a form control with a label. A <el>label</el> is attached to a specific
            form control through the use of the <att>for</att> attribute. The value of the
              <att>for</att> attribute must be the same as the value of the <att>id</att>
            attribute of the form control. </p>
					<p>The <att>id</att> attribute may have the same value as the <att>name</att>
            attribute, but both must be provided, and the <att>id</att> must be unique in the Web
            page.</p>
					<p>This technique is sufficient for Success Criteria 1.1.1, 1.3.1 and 4.1.2 whether or not the <el>label</el> element is visible. That is, it may be hidden using CSS. However, for Success Criterion 3.3.2, the <el>label</el> element must be visible since it provides assistance to all users who need help understanding the purpose of the field. </p>
					<p>An additional benefit of this technique is a larger clickable area for the control, since clicking on the label or the control will activate the control. This can be helpful for users with impaired motor control.</p>
					<p>Note that the <el>label</el> is positioned after <el>input</el> elements of
              <code>
							<att>type</att><![CDATA[="checkbox"]]></code> and <code>
							<att>type</att><![CDATA[="radio"]]></code>.</p>
					<note>
						<p>Elements that use explicitly associated labels are: </p>
						<ulist>
							<item>
								<p>
									<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="text"]]></code>
								</p>
							</item>
							<item>
								<p>
									<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="checkbox"]]></code>
								</p>
							</item>
							<item>
								<p>
									<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="radio"]]></code>
								</p>
							</item>
							<item>
								<p>
									<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="file"]]></code>
								</p>
							</item>
							<item>
								<p>
									<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="password"]]></code>
								</p>
							</item>
							<item>
								<p>
									<el>textarea</el>
								</p>
							</item>
							<item>
								<p>
									<el>select</el>
								</p>
							</item>
						</ulist>
						<p>The <att>label</att> element is <emph role="bold">not</emph> used for the following
              because labels for these elements are provided via the value attribute (for Submit and
              Reset buttons), the alt attribute (for image buttons), or element content itself
              (button). </p>
						<ulist>
							<item>
								<p>Submit and Reset buttons (<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="submit"]]></code> or <code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="reset"]]></code>)</p>
							</item>
							<item>
								<p>Image buttons (<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="image"]]></code>)</p>
							</item>
							<item>
								<p>Hidden input fields (<code>
										<el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="hidden"]]></code>)</p>
							</item>
							<item>
								<p>Script buttons (<el>button</el> elements or <code><![CDATA[<]]><el>input</el><![CDATA[]]>
										<att>type</att><![CDATA[="button">]]></code>)</p>
							</item>
						</ulist>
					</note>
				</description>
				<examples>
					<eg-group>
						<head>A text input field</head>
						<description>
							<p>The text field in the example below has the explicit label of "First name:". The
                  <el>label</el> element's <att>for</att> attribute matches the
                <att>id</att> attribute of the <el>input</el> element. </p>
						</description>
						<code role="html401"><![CDATA[<label for="firstname">First name:</label> 
<input type="text" name="firstname" id="firstname" />]]></code>
					</eg-group>
					<eg-group>
						<head>A checkbox</head>
						<code role="html401"><![CDATA[<input type="checkbox" id="markuplang" name="computerskills" checked="checked">
<label for="markuplang">HTML</label>]]></code>
					</eg-group>
					<eg-group>
						<head>A group of radio buttons</head>
						<description>
							<p>A small, related group of radio buttons with a clear description and labels for
                each individual element.</p>
							<note>
								<p>To provide clear associations and instructions for a large set of related radio
                  buttons <specref ref="H71"/>, should be considered.</p>
							</note>
						</description>
						<code role="html401"><![CDATA[ <h1>Donut Selection</h1>

<p>Choose the type of donut(s) you would like then select 
   the "purchase donuts" button.</p>

<form action="http://example.com/donut" method="post">
<p>
  <input type="radio" name="flavor" id="choc" value="chocolate" />
    <label for="choc">Chocolate</label><br/>
  <input type="radio" name="flavor" id="cream" value="cream"/>
    <label for="cream">Cream Filled</label><br/>
  <input type="radio" name="flavor" id="honey" value="honey"/>
    <label for="honey">Honey Glazed</label><br/>
  <input type="submit" value="Purchase Donuts"/>
</p>
</form>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/interact/forms.html#h-17.9">HTML 4.01 form labels</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.usability.com.au/resources/wcag2/">Accessible Forms using WCAG 2.0</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G167"/>
					<relatedtech idref="H65"/>
					<relatedtech idref="H71"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For all <el>input</el> elements of type <code><![CDATA[text]]></code>, <code><![CDATA[file]]></code> or
                <code><![CDATA[password]]></code>, for all <el>textareas</el> and for all
              <el>select</el> elements in the Web page: </p>
						<olist>
							<item>
								<p>Check that there is a <el>label</el> element that identifies the purpose of
                	the control before the <el>input</el>, <el>textarea</el>, or <el>select</el> element</p>
							</item>
							<item>
								<p>Check that the <att>for</att> attribute of the <el>label</el> element
                	matches the id of the <el>input</el>, <el>textarea</el>, or <el>select</el> element</p>
							</item>
							<item>
								<p>Check that the <el>label</el> element is visible. </p>
							</item>
						</olist>
						<p>For all <el>input</el> elements of type checkbox or radio in the Web page:: </p>
						<olist>
							<item>
								<p>Check that there is a <el>label</el> element that identifies the purpose of
                  the control after the <el>input</el> element</p>
							</item>
							<item>
								<p>Check that the <att>for</att> attribute of the <el>label</el> element
                  matches the <att>id</att> of the <el>input</el> element</p>
							</item>
							<item>
								<p>Check that the <el>label</el> element is visible. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1 and #2 are true. For Success Criterion 3.3.2, Check #3 is also true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H45">
				<short-name>Using longdesc</short-name>
				<applicability>
					<p>HTML and XHTML documents that include images that cannot be
          described in a short text alternative. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Some older assistive technologies do not support the <att>longdesc</att> attribute.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p> The objective of this technique is to provide information in a file designated by the
            <att>longdesc</att> attribute when a short text alternative does not adequately convey the function
            or information provided in the image. The <att>longdesc</att> attribute is a <abbr expansion="Uniform Resource Identifier">URI</abbr>, the target of
            which contains a long description of the non-text content. </p>
				</description>
				<examples>
					<eg-group>
						<code><![CDATA[<p><img src="chart.gif" alt="a complex chart" longdesc="chartdesc.html"/></p>]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="G73"/>
					<relatedtech idref="G74"/>
					<relatedtech idref="G92"/>
					<relatedtech idref="G94"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that the <el>img</el> element has a longdesc attribute. </p>
							</item>
							<item>
								<p>Check that the value of the <att>longdesc</att> attribute is a valid URI of an existing resource.</p>
							</item>
							<item>
								<p>Check that the content at the target of that URI contains a long description describing the original non-text content associated with it.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> #1 through #3 are all true </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H46">
				<short-name>Using <el>noembed</el> with <el>embed</el>
				</short-name>
				<applicability>
					<p>Documents that load plugins with the <el>embed</el> element.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
					<success-criterion idref="media-equiv-text-doc"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="general" version="">
						<note>
							<p>Although <el>embed</el> is widely supported in user agents - it is not a valid part
                of HTML or XHTML.</p><!--BBC: Commenting out for now, issue response okay without this info for now. ednote>
            <edtext>@@ add user agent notes section to reflect details about user agents that support this. Refer to <loc href="http://www.w3.org/2006/02/lc-comments-tracker/35422/understandingwcag20/786">LC-786</loc>.</edtext>
          </ednote-->
						</note>
					</ua-issue>
				</ua-issues>
				<description id="noembed_desc">
					<p>The objective of this technique is to provide alternative content for the
            <el>embed</el> element in a <el>noembed</el> element. The <el>noembed</el> is rendered
            only if the <el>embed</el> is not supported. While it can be positioned anywhere on the
            page, it is a good idea to include it as a child element of <el>embed</el> so that it is
            clear to assistive technologies that a text alternative is associated with the
            <el>embed</el> element it describes.</p>
				</description>
				<examples>
					<eg-group>
						<head>
							<el>noembed</el> is provided inside an <el>embed</el>
						</head>
						<code><![CDATA[<embed src="../movies/history_of_rome.mov"
  height="60" width="144" autostart="false">
  <noembed>
    <a href="../transcripts/transcript_history_rome.htm">Transcript of "The history of Rome"</a>
  </noembed>
</embed>]]></code>
					</eg-group>
					<eg-group>
						<head>
							<el>noembed</el> is provided beside an <el>embed</el>
						</head>
						<code><![CDATA[<embed src="moviename.swf" width="100" height="80"
  pluginspage="http://example.com/shockwave/download/" />
<noembed>
  <img alt="Still from Movie" src="moviename.gif" 
    width="100" height="80" />
</noembed>;]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check if <el>embed</el> element has a child <el>noembed</el> element </p>
							</item>
							<item>
								<p>Check if <el>embed</el> element has a <el>noembed</el> element that
                  immediately follows it. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#1 is true or #2 is true </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H48">
				<short-name>Using ol, ul and dl for lists or groups of links</short-name>
				<applicability>
					<p>HTML, XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/><!--success-criterion idref="navigation-mechanisms-skip"/-->
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Assistive technologies include inconsistent support for various uses of the <att>type</att> attribute used to indicate numbering and bullet styles. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to create lists of related items using list elements
            appropriate for their purposes. The <el>ol</el> element is used when the list is
            ordered and the <el>ul</el> element is used when the list is unordered. Definition
            lists (<el>dl</el>) are used to group terms with their definitions. Although the use
            of this markup can make lists more readable, not all lists need markup. For instance,
            sentences that contain comma-separated lists may not need list markup.</p>
					<p>When markup is used that visually formats items as a list but does not indicate the
            list relationship, users may have difficulty in navigating the information. An example
            of such visual formatting is including asterisks in the content at the beginning of each
            list item and using <code><![CDATA[<]]><el>br</el><![CDATA[>]]></code> elements to separate the list items.</p>
					<p>Some assistive technologies allow users to navigate from list to list or item to item.
            Style sheets can be used to change the presentation of the lists while preserving their
            integrity.</p>
					<p>The list structure (<el>ul</el>/<el>ol</el>) is also useful to group hyperlinks. When this is done, it helps screen reader users to navigate from the first item in a list to the end of the list or jump to the next list. This helps them to bypass groups of links if they choose to.</p>
				</description>
				<examples>
					<eg-group>
						<head>A list showing steps in a sequence </head>
						<description>
							<p>This example uses an ordered list to show the sequence of steps in a process.</p>
						</description>
						<code role="html401"><![CDATA[ <ol>
  <li>Mix eggs and milk in a bowl.</li>
  <li>Add salt and pepper.</li>
</ol>]]></code>
					</eg-group>
					<eg-group>
						<head>A grocery list </head>
						<description>
							<p>This example shows an unordered list of items to buy at the store.</p>
						</description>
						<code role="html401"><![CDATA[<ul>
  <li>Milk</li>
  <li>Eggs</li>
  <li>Butter</li>
</ul>]]></code>
					</eg-group>
					<eg-group>
						<head>A word and its definition </head>
						<description>
							<p>This example uses a definition list to group a definition with the term that is
                being defined.</p>
						</description>
						<code role="html401"><![CDATA[<dl>
  <dt>blink</dt>
  <dd>turn on and off between .5 and 3 times per second
  </dd>
</dl> ]]></code>
					</eg-group>
					<eg-group diff="add">
						<head>Contact information using a definition list</head>
						<description>
							<p>This example uses a defintion list to mark up pairs of related items. The pairs themselves are a logically related list. Since browsers lack wide support for CSS styling on definition list elements, span elements have been included in the markup for styling purposes only, and are not required: </p>
							<codeblock><![CDATA[<dl>
<dt><span>name:</span></dt><dd><span>John Doe</span></dd>
<dt><span>tel:</span></dt><dd><span>01-2345678</span></dd>
<dt><span>fax:</span></dt><dd><span>02-3456789</span></dd>
<dt><span>email:</span></dt><dd><span>johndoe@someemail.com</span></dd>
</dl>
]]></codeblock>
							<p>The following CSS styling can be used to format each paired item in the list on its own line, as well as giving a table-like layout: </p>
							<codeblock><![CDATA[dt, dd{float: left;margin: 0;padding: 0;}
dt{clear:both;font-weight: bold}
dt span{display: inline-block; width: 70px;}
dd span{display: inline-block; margin-right: 5px;}
]]></codeblock>
							<p>This is shown in the <loc href="ContactInfoDL.html" linktype="examples">working example of Contact information using a definition list</loc></p>
						</description>
					</eg-group>
					<eg-group>
						<head>Using lists to group links</head>
						<description>
							<p>In this example the links are grouped using the <el>ul</el> and <el>li</el>
        				elements.</p>
						</description>
						<code role="html401"><![CDATA[<a name="categories" id="categories"></a><h2>Product Categories</h2>
<ul class="navigation">
    <li><a href="kitchen.html">Kitchen</a></li>
    <li><a href="bedbath.html">Bed &amp; Bath</a></li>
    <li><a href="dining.html">Fine Dining</a></li>
    <li><a href="lighting.html">Lighting</a></li>
    <li><a href="storage.html">Storage</a><li>
</ul> ]]></code>
						<description>
							<p>CSS can be used to style the list elements, so this technique can be used with a
        				variety of visual appearances.</p>
							<p>Here is a style that removes the list bullets and the left padding that creates the
        				indent and flows the individual list elements horizontally.</p>
						</description>
						<code role="html401"><![CDATA[ul.navigation {
  list-style: none; 
  padding: 0;
}
ul.navigation li {
  display: inline;
}]]></code>
						<description>
							<p>This style removes the list bullets and the left padding and displays the items in
        				a floating block.</p>
						</description>
						<code role="html401"><![CDATA[ul.navigation {
 list-style: none; 
 padding: 0;
}
ul.navigation li {
 display: block; 
 float: left;
}]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/lists.html#h-10.2">Unordered lists (UL), ordered lists (OL), and list items (LI)</loc>
								</p>
							</item>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/lists.html#h-10.3">Definition lists: the DL, DT, and DD elements</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H40"/>
					<relatedtech idref="H50"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that content that has the visual appearance of a list (with or without bullets) is marked as an unordered list.</p>
							</item>
							<item>
								<p>Check that content that has the visual appearance of a numbered list is marked as an ordered list.</p>
							</item>
							<item>
								<p>Check that content is marked as a definition list when terms and their definitions are presented in the form of a list.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All the checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H49">
				<short-name>Using semantic markup to mark emphasized or special text</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p>Some semantic elements are not supported well by assistive technologies. Elements and attributes that are known to have limited support include <el>code</el>, <el>del</el>, <el>dfn</el>, <el>ins</el>, <el>kbd</el>, <el>s</el>, <el>sub</el>, <el>sup</el>, <el>tt</el>, and <el>q</el>. For these elements, authors are encouraged to consider whether they are using them in a way that would require users to be able to access the semantic meaning of the markup in order to understand the content and, where understanding the semantics is required, to provide this information in text.
                  </p>
							</item>
							<item>
								<p>Most screen readers do not provide automatic notification about <el>em</el>, <el>strong</el>, <el>b</el>, or <el>i</el>.
                  </p>
							</item>
							<item>
								<p>JAWS contains support for <el>blockquote</el> and <el>cite</el>. WindowEyes contains support for <el>blockquote</el>, <el>q</el> and <el>cite</el>. </p>
							</item>
							<item>
								<p>Firefox 1.0 (Windows) and higher, Opera 7.54 (Windows) and higher, Mozilla 1.7.3 (Windows) and higher automatically generate quotes around <el>q</el> elements, but Internet Explorer 6 for Windows does not.
                  </p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to demonstrate how semantic markup can be used to
            mark emphasized or special text so that it can be programmatically determined. Using
            semantic markup to mark emphasized or special text also provides structure to the
            document. User agents can then make the structure perceivable to the user, for example
            using a different visual presentation for different types of structures or by using a
            different voice or pitch in an auditory presentation. </p>
					<p>Most user agents will visually distinguish text that has been identified using semantic
            markup. Some assistive technologies provide a mechanism for determining the
            characteristics of content that has been created using proper semantic markup.</p>
				</description>
				<examples>
					<p>See <loc href="semantictext.html" linktype="examples">rendered examples of semantic
              text</loc>.</p>
					<eg-group>
						<description>
							<p>This example shows how to use the <el>em</el> and <el>strong</el> elements
                to emphasize text. The <el>em</el> and <el>strong</el> elements were
                designed to indicate structural emphasis that may be rendered in a variety of ways
                (font style changes, speech inflection changes, etc.).</p>
						</description>
						<code role="html401"><![CDATA[ ...What she <em>really</em> meant to say was, &quot;This is not ok, 
 it is <strong>excellent</strong>&quot;!... ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>This example shows using the <el>blockquote</el> element to mark up long
                quotations which may require paragraph breaks. It also demonstrates the use of the
                  <el>cite</el> element to specify a reference.</p>
						</description>
						<code role="html401"><![CDATA[<p>The following is an excerpt from the <cite>The Story of my Life</cite> by Helen Keller</p>
 <blockquote>
   <p>Even in the days before my teacher came, I used to feel along the square stiff boxwood
   hedges, and, guided by the sense of smell, would find the first violets and lilies.  
   There, too, after a fit of temper, I went to find comfort and to hide my hot face 
   in the cool leaves and grass.</p>
 </blockquote>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>Here is the use of the <el>q</el> element to mark up a shorter quotation.
                Quotes are provided around the <el>q</el> element, because many user agents do
                not support this element yet and therefore do not display it properly (see UA
                notes). CSS rules to suppress automatic generation of quotes are provided for those
                user agents that do support the <el>q</el> element, to prevent them from
                generating quotes automatically in addition to the quotes provided by the author,
                resulting in double-quoted content. In the future, when the <el>q</el> element
                is more broadly supported, the need to provide quotes and suppress browser-generated
                quotes will go away. </p>
						</description>
						<code role="css"><![CDATA[q:before { content: ""; } 
q:after { content: ""; }  ]]></code>
						<code role="html401"><![CDATA[ <p>Helen Keller said, "<q>Self-pity is our worst enemy and if we yield to it, 
we can never do anything good in the world.</q>"</p>]]></code>
						<description/>
					</eg-group>
					<eg-group>
						<description>
							<p>Superscripts and subscripts are created using the <el>sup</el> and
                <el>sub</el> elements.</p>
						</description>
						<code role="html401"><![CDATA[ <p>Beth received 1<sup>st</sup> place in the 9<sup>th</sup> grade science competition.</p>
<p>The chemical notation for water is H<sub>2</sub>O.</p>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/text.html#h-9.2.1">Phrase
                    elements: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ABBR, and ACRONYM</loc>
								</p>
							</item>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/text.html#h-9.2.2">Quotations: The BLOCKQUOTE and Q elements</loc>
								</p>
							</item>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/text.html#h-9.2.3">Subscripts and superscripts: the SUB and SUP elements</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://juicystudio.com/article/fixing-ie-quotes.php">Fixing Quotes in
                    Internet Explorer</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G115"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the content for information that is conveyed through variations in
                  presentation of text.</p>
							</item>
							<item>
								<p>Check that appropriate semantic markup (such as <el>em</el>, <el>strong</el>, <el>cite</el>,
                    <el>blockquote</el>, <el>quote</el>, <el>sub</el>, and <el>sup</el>) have been used to mark the
                  text that conveys information through variations in text.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H50">
				<short-name>Using map to group links</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-skip"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to demonstrate how to group links into logical sets using the <code><![CDATA[map]]></code> element. When links are grouped into logical sets (for example, in a navigation bar or main menu that appears on every page in a site) they should be marked up as a unit. Navigation bars are usually the first thing someone encounters on a page. People who are sighted are often able to ignore navigation parts and start reading the content of the page. Someone using a screen reader must first listen to the text of each link in the navigation bar before reading the interesting content. This technique uses the <code><![CDATA[map]]></code> element to mark up content so that a user with a screen reader can jump over the navigation bar and avoid reading all of the links.
        	</p>
				</description>
				<examples>
					<eg-group>
						<head>Using <el>map</el> to group links</head>
						<description>
							<p>In this example, the <el>map</el> element groups a set of links, the
                  <att>title</att> attribute identifies it as a navigation bar.</p>
						</description>
						<code role="html401"><![CDATA[ <map title="Navigation Bar">
  <p>
    [<a href="home.html">Home</a>] 
    [<a href="search.html">Search</a>] 
    [<a href="new.html">New and highlighted</a>] 
    [<a href="sitemap.html">Site map</a>]
  </p>
 </map>  ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/lists.html">HTML 4.01 lists</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/objects.html#edef-MAP">HTML 4.01
                    MAP element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/global.html#adef-title">HTML 4.01
                    title attribute</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H48"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>Examine the content for <code><![CDATA[anchor]]></code> elements which are to be grouped together
              . </p>
						<olist>
							<item>
								<p>Check that the anchor elements are grouped using 
                    <el>map</el> elements.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H51">
				<short-name>Using table markup to present tabular information</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to present tabular information in a way that
            preserves relationships within the information even when users cannot see the table or
            the presentation format is changed. Information is considered tabular when logical
            relationships among text, numbers, images, or other data exist in two dimensions
            (vertical and horizontal). These relationships are represented in columns and rows, and
            the columns and rows must be recognizable in order for the logical relationships to be
            perceived.</p>
					<p>Using the <el>table</el> element with the child elements <el>tr</el>,
              <el>th</el>, and <el>td</el> makes these relationships perceivable. Techniques
            such as inserting tabs to create columns or using the <el>pre</el> element are
            purely visual, and visually implied logical relationships are lost if the user cannot
            see the table or the visual presentation is changed.</p>
				</description>
				<examples>
					<eg-group>
						<head>A schedule marked up as a simple data table with column and row headers</head>
						<description>
							<p>This example uses markup for a simple data table. The first row shows the days of
                the week. Time intervals are shown in the first column. These cells are marked with
                the <el>th</el> element. This identifies the days of the week as column headers
                and the time intervals as row headers.</p>
							<p>Screen readers speak header information that changes as the user navigates the
                table. Thus, when screen reader users move to left or right along a row, they will
                hear the day of the week (the column header) followed by the appointment (if any).
                They will hear the time interval as they move up or down within the same column.</p>
						</description>
						<code role="html401"><![CDATA[ <table>
  <tr>
    <td> </td>
    <th>Monday</th>
    <th>Tuesday</th>
    <th>Wednesday</th>
    <th>Thursday</th>
    <th>Friday</th>
  </tr>
  <tr>
    <th>8:00-9:00</th>
    <td>Meet with Sam</td>
    <td> </td>
    <td> </td>
    <td> </td>
    <td> </td>
  </tr>
  <tr>
    <th>9:00-10:00</th>
    <td> </td>
    <td> </td>
    <td>Doctor Williams</td>
    <td>Sam again</td>
    <td>Leave for San Antonio</td>
  </tr>
</table> ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.1">Table Element</loc>
								</p>
							</item>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.5">Table rows: The TR element</loc>
								</p>
							</item>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/tables.html#h-11.2.6">Table cells: The TH and TD elements</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H39"/>
					<relatedtech idref="H43"/>
					<relatedtech idref="H63"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check for the presence of tabular information.</p>
							</item>
							<item>
								<p>For each occurrence of tabular information: </p>
								<olist>
									<item>
										<p>Check that table markup with at least the elements <el>table</el>,
                        <el>tr</el>, <el>th</el>, and <el>td</el> is used. </p>
									</item>
								</olist>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H53"><!--MC to update wiki and review output-->
				<short-name>Using the body of the <el>object</el> element</short-name>
				<applicability>
					<p>Documents that load media with the <el>object</el> element.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
					<success-criterion idref="media-equiv-audio-desc"/>
					<success-criterion idref="media-equiv-text-doc"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="general" version="">
						<p>This technique is not supported well by assistive technologies and cross-browser
              support is irregular.</p>
					</ua-issue>
				</ua-issues>
				<description id="object_shortdescription_desc">
					<p>The objective of this technique is to provide a text alternative for content rendered
            using the object element. The body of the object element can be used to provide a
            complete text alternative for the object or may contain additional non-text content with
            text alternatives.</p>
				</description>
				<examples>
					<eg-group>
						<head>An object includes a long description that describes it</head>
						<code><![CDATA[ <object classid="http://www.example.com/analogclock.py">
  <p>Here is some text that describes the object and its operation.</p>
</object>]]></code>
					</eg-group>
					<eg-group>
						<head>An object includes non-text content with a text alternative </head>
						<code><![CDATA[<object classid="http://www.example.com/animatedlogo.py">
  <img src="staticlogo.gif" alt="Company Name" />
</object>   
            ]]></code>
					</eg-group>
					<eg-group>
						<head>The image object has content that provides a brief description of the function of
              the image</head>
						<code><![CDATA[<object data="companylogo.gif" type="image/gif">
  <p>Company Name</p>
</object>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/objects.html#edef-OBJECT">HTML 4.01
                    OBJECT element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://juicystudio.com/article/object-paranoia.php">Object
                  Paranoia</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G92"/>
					<relatedtech idref="H46"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check that the body of each <el>object</el> element contains a text alternative
                  for the object. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> #1 is true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H54">
				<short-name>Using the <el>dfn</el> element to identify the defining instance of a word</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="meaning-idioms"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to use the <el>dfn</el> to mark the use of a
            word or phrase where it is defined. The <el>dfn</el> element is used to indicate the
            defining instance of the enclosed term. In other words, it marks the occurrence of the
            term where the term is defined. Note that it encloses the term, not the definition. This
            technique would be used in combination with <loc href="G112" linktype="general">Using
              inline definitions</loc> to provide the definition.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following code snippet demonstrates the use of the <el>dfn</el>
              element.</p>
						</description>
						<code role="html401"><![CDATA[<p>The Web Content Accessibility Guidelines require that non-text content
has a text alternative. <dfn>Non-text content</dfn> is content that is not a sequence
of characters that can be programmatically determined or where the sequence is
not expressing something in human language; this includes ASCII Art (which is a
pattern of characters), emoticons, leetspeak (which is character substitution), and
images representing text .</p> ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/text.html#edef-DFN">DFN
                    Element</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G112"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Identify all words that are defined inline in the text, that is, where the
                  definition occurs in a sentence near an occurrence of the word. </p>
							</item>
							<item>
								<p>Check that each word that is defined inline is contained in a <el>dfn</el>
                  element. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H56">
				<short-name>Using the <att>dir</att> attribute on an inline element to resolve problems
          with nested directional runs</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-sequence"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to identify changes in the text direction of text that includes nested directional runs by providing the <att>dir</att> attribute on
            inline elements. A nested directional run is a run of text that includes mixed directional text, for example, a paragraph in English containing a quoted Hebrew sentence which in turn includes an English phrase. Use of the <att>dir</att> attribute on an enclosing <el>span</el> or other inline element may be necessary because the <loc href="http://www.w3.org/International/articles/inline-bidi-markup/">Unicode bidirectional algorithm</loc> can produce undesirable results when mixed
            directional text contains spaces or punctuation. The concepts used in this technique are described in <loc href="http://www.w3.org/International/articles/inline-bidi-markup/">What you need to know about the bidi algorithm and inline markup</loc>. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example defines the text direction of a nested, mixed-direction phrase, in Hebrew and English, to be right-to-left. Because the whole quote is in Hebrew, and therefore runs right to left, the text "W3C" and the comma should appear to the left of (i.e., after) the Hebrew text, like this:</p>
							<p>The title is "<phrase xml:lang="he" dir="rtl">פעילות הבינאום, W3C</phrase>" in Hebrew.</p>
							<p>Visually-ordered ASCII version (RTL text in uppercase, LTR in lower):</p>
							<p>the title is "w3c ,YTIVITCA NOITAZILANOITANRETNI" in hebrew.</p>
							<p>The Unicode bidirection algorithm alone is insufficient to achieve the right result, and leaves the text 'W3C' on the right side of the quote:</p>
							<p>The title is "<phrase xml:lang="he">פעילות הבינאום</phrase>, W3C" in Hebrew.</p>
							<p>Visually-ordered ASCII version:</p>
							<p>the title is "YTIVITCA NOITAZILANOITANRETNI, w3c" in hebrew.</p>
							<p>The following markup will produce the expected result:</p>
						</description>
						<code role="html401"><![CDATA[
<p>The title says "<span lang="he" 
dir="rtl">]]><phrase dir="rtl">פעילות הבינאום, W3C</phrase><![CDATA[</span>" in Hebrew.</p> ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/dirlang.html#blocklevel-bidi">Inheritance of text direction information</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/i18n-html-tech-bidi/">Authoring Techniques for
                    XHTML &amp; HTML Internationalization: Handling Bidirectional Text 1.0</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H34"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the text direction of text in the document</p>
							</item>
							<item>
								<p>If the text direction is right-to-left, check that for the ancestor element that
                  has a <att>dir</att> attribute, the attribute has the value "rtl"</p>
							</item>
							<item>
								<p>If the text direction is left-to-right, check that there is no ancestor element
                  with a <att>dir</att> attribute, or that for the ancestor element that has a
                    <att>dir</att> attribute, the attribute has the value "ltr"</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #2 and #3 are true for all text.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H57">
				<short-name> Using language attributes on the html element </short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="meaning-doc-lang-id"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="subtags" version="">
						<p>Additional subtags for region, script, variant or other aspects may lead to errors in language switching in older versions of some screenreaders.</p>
					</ua-issue>
					<ua-issue name="jaws" version="8">
						<p>JAWS 8.0 can be configured to change language automatically on the basis of the lang attribute. However, it only switches amongst major languages as indicated by the primary code. If a regional language variant is indicated with a language subcode, JAWS will use the default variant for which it is configured.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p> The objective of this technique is to identify the default language of a document by
            providing the <att>lang</att> and/or <att>xml:lang</att> attribute on the <el>html</el>
            element. </p>
					<p>Identifying the language of the document is important for a number of reasons: </p>
					<ulist>
						<item>
							<p>It allows braille translation software to substitute control codes for accented
                characters, and insert control codes necessary to prevent erroneous creation of
                Grade 2 braille contractions. </p>
						</item>
						<item>
							<p>Speech synthesizers that support multiple languages will be able to orient and
                adapt to the pronunciation and syntax that are specific to the language of the page,
                speaking the text in the appropriate accent with proper pronunciation. </p>
						</item>
						<item>
							<p>Marking the language can benefit future developments in technology, for example
                users who are unable to translate between languages themselves will be able to use
                machines to translate unfamiliar languages. </p>
						</item>
						<item>
							<p>Marking the language can also assist user agents in providing definitions using a
                dictionary. </p>
						</item>
					</ulist>
					<p>HTML 4.01 uses the <el>lang</el> attribute of the <el>html</el> element. XHTML served
            as text/html uses the <att>lang</att> attribute and the <att>xml:lang</att> attribute of
            the <el>html</el> element, in order to meet the requirements of XHTML and provide
            backward compatibility with HTML. XHTML served as application/xhtml+xml uses the
              <att>xml:lang</att> attribute of the <el>html</el> element. Both the <att>lang</att>
            and the <att>xml:lang</att> attributes can take only one value. </p>
					<note>
						<p> HTML only offers the use of the <att>lang</att> attribute, while XHTML 1.0 (as a
              transitional measure) allows both attributes, and XHTML 1.1 allows only
              <att>xml:lang</att>. </p><!-- Same note in H58 -->
						<p>Allowed values for the lang and xml:lang attributes are indicated in the resources referenced below. Language tags use a primary code to indicate the language, and optional subcodes (separated by hyphen characters) to indicate variants of the language. For instance, English is indicated with the primary code "en"; British English and American English can be distinguished by using "en-GB" and "en-US", respectively. Use of the primary code is important for this technique. Use of subcodes is optional but may be helpful in certain circumstances.</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example defines the content of an HTML document to be in the French language.
              </p>
						</description>
						<code role="html401"><![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="fr"> 
<head>
  <title>document écrit en français</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
</head>  
<body>     
	...document écrit en français...   
</body>
</html>]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>This example defines the content of an XHTML 1.0 document with content type of
                text/html to be in the French language. Both the <att>lang</att> and
                <att>xml:lang</att> attributes are specified in order to meet the requirements of
                XHTML and provide backward compatibility with HTML.</p>
						</description>
						<code role="html401"><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">
<head>
  <title>document écrit en français</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
</head>
<body> 
...document écrit en français...      
</body>
</html>  ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>This example defines the content of an XHTML 1.1 document with content type of
                application/xhtml+xml to be in the French language. Only the <att>xml:lang</att>
                attribute is specified.</p>
						</description>
						<code role="html401"><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr">
<head>
  <title>document écrit en français</title>
	<meta http-equiv="content-type" content="application/xhtml+xml; charset=utf-8" />
</head>
<body> 
	...document écrit en français... 
</body>
</html>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/dirlang.html#h-8.1">HTML 4.01
                    "lang" attribute</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">BCP 47: Tags for the
                    Identification of Languages</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/dirlang.html#h-8.1.2">Inheritance of language codes</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/International/tutorials/language-decl/">Declaring
                    Language in XHTML and HTML</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/i18n-html-tech-lang/">Authoring Techniques for
                    XHTML &amp; HTML Internationalization: Specifying the language of content
                    1.0</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/International/articles/language-tags/Overview.en.php">Language tags in HTML and XML</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H58"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Examine the <el>html</el> element of the document.</p>
							</item>
							<item>
								<p>Check that the <el>html</el> element has a <att>lang</att> and/or
                    <att>xml:lang</att> attribute. </p>
							</item>
							<item>
								<p>Check that the value of the <att>lang</att> attribute conforms to <loc href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">BCP 47: Tags for the
                    Identification of Languages</loc> or its successor and reflects the primary language used by the Web page. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>The above checks are all true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H58">
				<short-name>Using language attributes to identify changes in the human language </short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="meaning-other-lang-id"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="subtags" version="">
						<p>Additional subtags for region, script, variant or other aspects may lead to errors in language switching in older versions of some screenreaders.</p>
					</ua-issue>
					<ua-issue name="jaws" version="8">
						<p>JAWS 8.0 can be configured to change language automatically on the basis of the lang attribute. However, it only switches amongst major languages as indicated by the primary code. If a regional language variant is indicated with a language subcode, JAWS will use the default variant for which it is configured.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to clearly identify any changes in language on a
            page by using the <att>lang</att> or <att>xml:lang</att> attribute, as appropriate
            for the HTML or XHTML version you use.</p>
					<p>HTML 4.01 uses the <att>lang</att> attribute on elements. XHTML served as text/html
            uses the <att>lang</att> attribute and the <att>xml:lang</att> attribute on
            elements, in order to meet the requirements of XHTML and provide backward compatibility
            with HTML. XHTML served as application/xhtml+xml uses the <att>xml:lang</att>
            attribute on elements.</p>
					<note>
						<p> HTML only offers the use of the <att>lang</att> attribute, while XHTML 1.0 (as a
              transitional measure) allows both attributes, and XHTML 1.1 allows only
              <att>xml:lang</att>. </p>
					</note><!-- Same note in H57 -->
					<p>Allowed values for the lang and xml:lang attributes are indicated in the resources referenced below. Language tags use a primary code to indicate the language, and optional subcodes (separated by hyphen characters) to indicate variants of the language. For instance, English is indicated with the primary code "en"; British English and American English can be distinguished by using "en-GB" and "en-US", respectively. Use of the primary code is important for this technique. Use of subcodes is optional but may be helpful in certain circumstances.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example demonstrates the use of the <att>xml:lang</att> attribute defining a
                quote written in German. This snippet could be included by an XHTML 1.1 document
                where <att>lang</att> is not allowed.</p>
						</description>
						<code role="html401"><![CDATA[<blockquote xml:lang="de">
  <p>
    Da dachte der Herr daran, ihn aus dem Futter zu schaffen,
    aber der Esel merkte, daß kein guter Wind wehte, lief fort
    und machte sich auf den Weg nach Bremen: dort, meinte er,
    könnte er ja Stadtmusikant werden.
  </p>
</blockquote>   
            ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/dirlang.html#adef-lang">HTML 4.01
                    lang attribute</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/REC-xml/#sec-lang-tag">XML 1.0 xml:lang
                  attribute</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/dirlang.html#h-8.1.2">Inheritance of language codes</loc>. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">BCP 47: Tags for the
                    Identification of Languages</loc> . </p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/International/articles/language-tags/">Language tags
                    in HTML and XML</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H57"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each element in the document: </p>
						<olist>
							<item>
								<p>Check that the human language of the content of the element is the same as the
                  inherited language for the element as specified in <loc href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/dirlang.html#h-8.1.2">HTML 4.01, Inheritance of language codes</loc>
								</p>
							</item>
						</olist>
						<p>For each <att>lang</att> attribute in the document: </p>
						<olist>
							<item>
								<p>Check that the value of the <att>lang</att> attribute conforms to <loc href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">BCP 47: Tags for the
                    Identification of Languages</loc> or its successor </p>
							</item>
						</olist>
						<p>For each xml:lang attribute in the document: </p>
						<olist>
							<item>
								<p> Check that the value of the <att>xml:lang</att> attribute conforms to <loc href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">BCP 47: Tags for the
                    Identification of Languages</loc> or its successor </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H59">
				<short-name>Using the link element and navigation tools</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-mult-loc"/>
					<success-criterion idref="navigation-mechanisms-location"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p>The link element has inconsistent user agent and assistive technology support. </p>
							</item>
							<item>
								<p>Some user agents provide an optional navigation bar which will display the
              information specified in the link element. Current versions of the Mozilla and Opera
              browsers provide this functionality. IE 6.0 and Firefox 1.5 do not offer this feature
              but it may be available through extensions or add-ons.</p>
								<p>See <loc href="//www.subotnik.net/html/link">The 'link'-Element in (X)HTML</loc> for
              more information on browser support for <el>link</el>.</p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to describe how the <el>link</el> element can
            provide metadata about the position of an HTML page within a set of Web pages or can
            assist in locating content with a set of Web pages. The value of the <att>rel</att>
            attributes indicates what type of relation is being described, and the <att>href</att>
            attribute provides a link to the document having that relation. Multiple
            <el>link</el> elements can provide multiple relationships. Several values of
              <att>rel</att> are useful: </p>
					<ulist>
						<item>
							<p>Start: Refers to the first document in a collection of documents.</p>
						</item>
						<item>
							<p>Next: Refers to the next document in a linear sequence of documents.</p>
						</item>
						<item>
							<p>Prev: Refers to the previous document in an ordered series of documents.</p>
						</item>
						<item>
							<p>Contents: Refers to a document serving as a table of contents.</p>
						</item>
						<item>
							<p>Index: Refers to a document providing an index for the current document.</p>
						</item>
					</ulist>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A Web page for Chapter 2 of an on-line book might contain the following links
                within the <el>head</el> section.</p>
						</description>
						<code role="html401"><![CDATA[<link rel="Contents" href="Contents.html" title="Table of Contents"  />
<link rel="Index" href="Index.html" title="Index" />
<link rel="Prev" href="Chapter01.html" title="01. Why Volunteer?" />
<link rel="Next" href="Chapter03.html" title="03. Who Volunteers?" />]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/REC-html40/struct/links.html#edef-LINK">HTML 4.01
                    LINK element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/REC-html40/types.html#type-links">HTML 4.01 link
                    types</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://cdn.mozdev.org/linkToolbar/">Link Toolbar extension for
                  Firefox</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/Tips/use-links">Use &lt;link&gt;s in your
                    document</loc> from W3C's Quality Web Tips </p>
							</item>
							<item>
								<p>
									<loc href="http://www.htmlhelp.com/reference/html40/head/link.html">LINK -
                    Document Relationship</loc> from Web Design Group </p>
							</item>
							<item>
								<p>
									<loc href="http://www.subotnik.net/html/link">The 'link'-Element in (X)HTML</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G1"/>
					<relatedtech idref="G63"/>
					<relatedtech idref="G64"/>
					<relatedtech idref="G123"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For a Web page that is within a sequence or collection of Web pages: </p>
						<olist>
							<item>
								<p>Check that all <el>link</el> elements pertaining to navigation occur in the
                    <el>head</el> section of the document.</p>
							</item>
							<item>
								<p>For each <el>link</el> element in the <el>head</el> section of the
                  document which pertains to navigation, check that it contains at least: </p>
								<olist>
									<item>
										<p>a <att>rel</att> attribute identifying the link type</p>
									</item>
									<item>
										<p>a valid <att>href</att> attribute to locate the appropriate resource</p>
									</item>
								</olist>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All of the checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H60">
				<short-name>Using the link element to link to a glossary</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="meaning-idioms"/>
					<success-criterion idref="meaning-located"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Some user agents provide an optional navigation bar which will display the
              information specified in the <el>link</el> element. Current versions of the Mozilla
              and Opera browsers provide this functionality. IE 6.0 and Firefox 1.5 do not offer
              this feature but it may be available through extensions or add-ons. See <loc href="http://www.subotnik.net/html/link">The 'link'-Element in (X)HTML</loc> for
              more information on browser support for the <el>link</el> element.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to provide a mechanism for locating a glossary. When
            terms in the content are defined on a separate glossary page, the glossary is referenced
            using a <el>link</el> element in the <el>head</el> element of the document that
            uses the glossary. The <att>rel</att> attribute of the <el>link</el> element is
            set to "glossary", and the <att>href</att> attribute contains the URI of the glossary
            page. User agents can then assist users in accessing the glossary quickly and
          easily.</p>
				</description>
				<examples>
					<eg-group>
						<head> The WCAG 2.0 Glossary. </head>
						<code role="html401"><![CDATA[ <link rel="glossary" href="http://www.w3.org/TR/WCAG20/#glossary">]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/REC-html40/struct/links.html#edef-LINK">HTML 4.01
                    LINK element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/REC-html40/types.html#type-links">HTML 4.01 link
                    types</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/Tips/use-links">Use &lt;link&gt;s in your
                    document</loc> from W3C's Quality Web Tips </p>
							</item>
							<item>
								<p>
									<loc href="http://www.htmlhelp.com/reference/html40/head/link.html">LINK -
                    Document Relationship</loc> from Web Design Group </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques/>
				<tests>
					<procedure>
						<p>For any set of words and their definitions that are meant to serve as a glossary: </p>
						<olist>
							<item>
								<p>Check that the <el>head</el> section of the Web page that contains words,
                  phrases or abbreviations defined in a glossary contains a <el>link</el>
                  element</p>
							</item>
							<item>
								<p>Check that the <el>link</el> element has attribute
                  <code>
										<att>rel</att><![CDATA[="glossary"]]></code>
								</p>
							</item>
							<item>
								<p>Check that the <att>href</att> attribute of the <el>link</el> element
                  refers to the glossary page.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
						<p>Note: The definition of abbreviation used in WCAG is : "shortened form of a word,
              phrase, or name where the original expansion has not been rejected by the organization
              that it refers to and where the abbreviation has not become part of the language."</p>
					</expected-results>
				</tests>
			</technique>
			<technique id="H62">
				<short-name>Using the ruby element</short-name>
				<applicability>
					<p>XHTML 1.1</p>
				</applicability>
				<applies-to>
					<success-criterion idref="meaning-pronunciation"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p> Ruby markup includes the <loc href="http://www.w3.org/TR/1998/WD-ruby-19981221/#a2-4">
								<el>rp</el> element</loc> as a fallback mechanism for user agents that do not
              support XHTML 1.1. Although ruby markup is only defined in XHTML 1.1, IE 5.0 and later
              supports the <el>ruby</el>, <el>rt</el>, and <el>rp</el> elements even if they are
              used in HTML 4.01 or XHTML 1.0. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to use ruby annotation to provide information about
            the pronunciation and meaning of a run of text where meaning is determined by
            pronunciation.</p>
					<p>There are many languages in which a run of text may mean different things depending on
            how the text is pronounced. This is common in East Asian languages as well as Hebrew,
            Arabic, and other languages; it also occurs in English and other Western European
            languages. </p>
					<p>Ruby Annotation allows the author to annotate a "base text," providing a guide to
            pronunciation and, in some cases, a definition as well. Ruby is commonly used for text
            in Japanese and other East Asian languages. Ruby Annotation is defined as a module for
            XHTML 1.1. </p>
					<p>There are two types of Ruby markup: simple and complex. Simple Ruby markup applies to a
            run of text such as a complete word or phrase. This is known as the "base" text
            (<el>rb</el> element). The Ruby annotation that indicates how to pronounce the term (the
              <el>rt</el> element, or Ruby text) is shown in a smaller font. (The term "Ruby" is
            derived from a small font used for this purpose in printed texts.) The Ruby text is
            usually rendered above or immediately before the base text, that is, immediately above
            horizontal text or immediately to the right of vertical text. Sometimes Japanese uses
            Ruby to provide the meaning of text on the other side of the base text (visually) from
            the phonetic annotation. Simple Ruby markup also provides a "fallback" option for user
            agents that do not support Ruby markup (that is, user agents that do not support XHTML
            1.1). </p>
					<p>Complex Ruby markup makes it possible to divide the base text into smaller units, each
            of which may be associated with a separate Ruby annotation. Complex Ruby markup does not
            support the fallback option. </p>
					<p>Ruby annotation is uncommon in languages such as Hebrew, where Unicode fonts can
            include diacritical marks that convey pronunciation. It is also uncommon in English and
            European languages. </p>
					<p>Note: The primary reason for indicating pronunciation through Ruby or any other means
            is to make the content accessible to people with disabilities who could read and
            understand the language of the content if information about pronunciation were provided.
            It is not necessary to provide information about pronunciation for use by people who are
            not familiar with the language of the content. </p>
				</description>
				<examples>
					<eg-group>
						<head> Ruby markup providing pronunciation information for an initialism </head>
						<description>
							<p> This example uses Ruby annotation to give the pronunciation of the initialism
                (acronym) formed by the first letters of the words Web Content Accessibility
                Guidelines. The letters WCAG are the base (the rb element), and the pronunciation
                information is shown by the Ruby text (the rt element). The Ruby parenthesis element
                  <el>rp</el> is used for user agents that do not support Ruby annotations to
                indicate that the text in the <el>rt</el> element provides the pronunciation
                information. The pronunciation information is rendered in parentheses immediately
                following the base text. (User agents that support Ruby do not show the
                parentheses.) </p>
						</description>
						<code role="html401"><![CDATA[<p>When we talk about these guidelines, we often just call them
  <ruby>
    <rb>WCAG</rb>
    <rp>(</rp>
      <rt>Wuh-KAG</rt>
    <rp>)</rp>
  </ruby>.
</p>]]></code>
					</eg-group>
					<eg-group>
						<head> Ruby annotation for Japanese </head>
						<description>
							<p> The following is an example in Japanese. For Japanese, the Ruby is used to give
                the reading of Han characters(Kanji). the Ruby parenthesis element <el>rp</el> is
                used for user agents that do not support Ruby annotations to indicate that the text
                in the <el>rt</el> element provides the pronunciation information. The pronunciation
                information is rendered in parentheses immediately following the base text. (User
                agents that support Ruby do not show the parentheses.) </p>
						</description>
						<code role="html401"><![CDATA[<p>
  <ruby>
    <rb>慶應大学</rb>
    <rp>(</rp>
    <rt>けいおうだいがく</rt>
    <rp>)</rp>
  </ruby>
</p>    ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/ruby/">Ruby Annotation</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.imsglobal.org/accessibility/accessiblevers/sec11.html">IMS Guidelines for
                    Topic-Specific Accessibility</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/css3-ruby/">CSS 3 Ruby</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/International/techniques/markup#ruby">W3C I18N
                    Techniques: Markup and text, "Using Ruby"</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G102"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each run of text where a Ruby annotation is used to provide pronunciation
              information: </p>
						<olist>
							<item>
								<p>Check that a <el>rt</el> element contains pronunciation information for each
                  run of text defined by the <el>rb</el> element.</p>
							</item>
							<item>
								<p>If simple Ruby markup is used, check that the <el>rp</el> element is present
                  to indicate to user agents that do not support Ruby annotations that the text in
                  the rt element provides the pronunciation information. .</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1 and #2 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H63">
				<short-name>Using the scope attribute to associate header cells and data cells in data
          tables</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>The <att>row</att> and <att>col</att> values of the <att>scope</att> attribute are
              currently supported to a large extent by most current versions of JAWS. However, there
              are still some problems and WindowEyes support for <att>scope</att> is inconsistent.
              The same is true for Japanese versions of these screen readers. Versions of JAWS prior
              to version 5 and older versions of Window-Eyes have inconsistent support for
                <att>scope</att>.</p>
						<p>At the current time, those who want to ensure consistent support across Assistive
              Technologies for tables where the headers are not in the first row/column may want to
              use the technique for complex tables <specref ref="H43"/>. For simple tables that have
              headers in the first column or row we recommend the use of the <el>th</el> and
              <el>td</el> elements. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to associate header cells with data cells in complex tables using the
              <att>scope</att> attribute. The <att>scope</att> attribute may be used to clarify
            the scope of any cell used as a header. The scope identifies whether the cell is a
            header for a row, column, or group of rows or columns. The values <code><![CDATA[row]]></code>,
              <code><![CDATA[col]]></code>, <code><![CDATA[rowgroup]]></code>, and <code><![CDATA[colgroup]]></code> identify these
            possible scopes respectively.</p>
					<p>For simple data tables where the header is not in the first row or column, like the one
            in Example 1, this technique can be used. Based on screen reader support today, its use
            is suggested in two situations both relating to simple tables: : </p>
					<ulist>
						<item>
							<p>data cells marked up with <el>td</el> that also function as row header or column
                header </p>
						</item>
						<item>
							<p>header cells marked up with <el>td</el> instead of <el>th</el>. Sometimes, authors
                use this to avoid the display characteristics associated with <el>th</el> and also
                do not choose to use CSS to control the display for <el>th</el>. </p>
						</item>
					</ulist>
					<note>
						<p>For simple tables that have the headers in the first row or column then it is
              sufficient to simply use the TH elements without scope. </p>
					</note>
					<note>
						<p>For complex tables use ids and headers as in <specref ref="H43"/>. </p>
					</note>
				</description>
				<examples>
					<eg-group>
						<head>A simple schedule</head>
						<description>
							<p>In the following example, column #1 contains serial numbers for rows in the table
                and the second column contains the key value for the row. The cells in the second
                column may then use <code>
									<att>scope</att><![CDATA[="row"]]></code>. The cells in the first row too are
                marked up with <el>td</el> and use <code>
									<att>scope</att><![CDATA[="col"]]></code>. </p>
						</description>
						<code role="html401"><![CDATA[ <table border="1">
  <caption>Contact Information</caption>
  <tr>
    <td></td>
    <th scope="col">Name</th>
    <th scope="col">Phone#</th>
    <th scope="col">Fax#</th>
    <th scope="col">City</th>
  </tr><tr>
    <td>1.</td>
    <th scope="row">Joel Garner</th>
    <td>412-212-5421</td>
    <td>412-212-5400</td>
    <td>Pittsburgh</td>
  </tr><tr>
    <td>2.</td>
    <th scope="row">Clive Lloyd</th>
    <td>410-306-1420</td>
    <td>410-306-5400</td>
    <td>Baltimore</td>
  </tr><tr>
    <td>3.</td>
    <th scope="row">Gordon Greenidge</th>
    <td>281-564-6720</td>
    <td>281-511-6600</td>
    <td>Houston</td>
  </tr>
</table> ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/1999/REC-html401-19991224/struct/tables.html#adef-scope ">Table Cells: scope attribute</loc>
								</p>
							</item>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html401/struct/tables.html#h-11.2.6">Table cells: The TH and TD elements</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.eramp.com/david/tablesample2.htm">Assistive technology
                    reading tables</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H43"/>
					<relatedtech idref="H51"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each data table: </p>
						<olist>
							<item>
								<p>Check that all <el>th</el> elements have a <att>scope</att> attribute.</p>
							</item>
							<item>
								<p>Check that all <el>td</el> elements that act as headers for other elements
                  have a <att>scope</att> attribute.</p>
							</item>
							<item>
								<p>Check that all <att>scope</att> attributes have the value <code><![CDATA[row]]></code>,
                    <code><![CDATA[col]]></code>, <code><![CDATA[rowgroup]]></code>, or <code><![CDATA[colgroup]]></code>.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H64">
				<short-name>Using the <att>title</att> attribute of the <el>frame</el> and <el>iframe</el> elements</short-name>
				<applicability>
					<p>HTML and XHTML documents that use frames or iframes </p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-skip"/>
					<success-criterion idref="ensure-compat-rsv"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>The use of the <att>longdesc</att> attribute in HTML 4 on <el>frame</el> and <el>iframe</el> elements to specify a link to a long description of a frame is not supported well by assistive technologies. The use of <att>title</att> as described in this technique is recommended instead.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to demonstrate the use of the <att>title</att>
            attribute of the <el>frame</el> or <el>iframe</el> element to describe the contents
            of each frame. This provides a label for the frame so users can determine which frame to
            enter and explore in detail. It does not label the individual page (frame) or inline
            frame (iframe) in the frameset.</p>
					<p>Note that the <att>title</att> attribute labels frames, and is different from the
              <el>title</el> element which labels documents. Both should be provided, since the
            first facilitates navigation among frames and the second clarifies the user's current
            location.</p>
					<p>The <att>title</att> attribute is not interchangeable with the <att>name</att>
            attribute. The <att>title</att> labels the frame for users; the <att>name</att>
            labels it for scripting and window targeting. The <att>name</att> is not presented to
            the user, only the <att>title</att> is.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example shows how to use the <att>title</att> attribute with
                <el>frame</el> to describe the frames containing the navigation bar and the
                document.</p>
						</description>
						<code role="html401"><![CDATA[<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>A simple frameset document</title>
  </head>
  <frameset cols="10%, 90%">
    <frame src="nav.html" title="Main menu" />
    <frame src="doc.html" title="Documents" />
    <noframes>
      <body>
        <a href="lib.html" title="Library link">Select to
        go to the electronic library</a>
      </body>
    </noframes>
  </frameset>
</html> ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>This example shows how to use the title attribute with <el>iframe</el> to
                describe the contents of an inline frame. The example also includes an alternative
                link to the page included by the iframe element for older browsers, which may not
                understand the <el>iframe</el>element.</p>
						</description>
						<code role="html401"><![CDATA[ <html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>A document using iframe</title>
  </head>
...
<iframe src="banner-ad.html" id="testiframe" 
  name="testiframe" title="Advertisement">
    <a href="banner-ad.html">Advertisement</a>
</iframe>
...
</html>  ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html4/present/frames.html#h-16.2.2"> HTML 4.01
                    FRAME element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html4/present/frames.html#h-16.5">HTML 4.0.1
                    Inline frames: the IFRAME element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.jimthatcher.com/webcourse4.htm">Accessible Navigation,
                    "Implementing Frame Titles"</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check each frame and iframe element in the HTML or XHTML source code for the presence of a
                  title attribute.</p>
							</item>
							<item>
								<p>Check that the title attribute contains text that identifies the frame.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1 and #2 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H65">
				<short-name>Using the title attribute to identify form controls when the label element
          cannot be used</short-name>
				<applicability>
					<p>HTML and XHTML form controls that are not identified using <att>value</att>,
            <att>alt</att>, or element content </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
					<success-criterion idref="content-structure-separation-programmatic"/>
					<success-criterion idref="minimize-error-cues"/>
					<success-criterion idref="ensure-compat-rsv"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p>User agents will display a tool tip when the mouse hovers above an
                  <el>input</el> element containing a <att>title</att> attribute. </p>
							</item>
							<item>
								<p>If no <el>label</el> is available, JAWS and Window-Eyes speak the
                  <att>title</att> attribute when the form control receives focus </p>
								<ulist>
									<item>
										<p>JAWS 6.0 and later can be set to speak both <el>label</el> and
                        <att>title</att> when the two items are different; however, very few users
                      are aware of this setting.</p>
									</item>
									<item>
										<p>WindowEyes 5.5 has a hot key, ins-E, that will display additional
                      information, including the title attribute, for the item with focus. </p>
									</item>
								</ulist>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to use the <att>title</att> attribute to label
            form controls when the visual design cannot accommodate the label (for example, if there
            is no text on the screen that can be identified as a label) or where it might be
            confusing to display a label. User agents, including assistive technology, can speak the
              <att>title</att> attribute.</p>
				</description>
				<examples>
					<eg-group>
						<head>A pulldown menu that limits the scope of a search</head>
						<description>
							<p>A search form uses a pulldown menu to limit the scope of the search. The pulldown
                menu is immediately adjacent to the text field used to enter the search term. The
                relationship between the search field and the pulldown menu is clear to users who
                can see the visual design, which does not have room for a visible label. The
                  <att>title</att> attribute is used to identify the <el>select</el> menu. The
                  <att>title</att> attribute can be spoken by screen readers or displayed as a
                tool tip for people using screen magnifiers.</p>
						</description>
						<code role="html401"><![CDATA[<label for="searchTerm">Search for:</label>
<input id="searchTerm" type="text" size="30" value="" name="searchTerm">
<select title="Search in" id="scope">
…
</select> ]]></code>
					</eg-group>
					<eg-group>
						<head>Input fields for a phone number</head>
						<description>
							<p>A Web page contains controls for entering a phone number in the United States, with
                three fields for area code, exchange, and last four digits.</p>
						</description>
						<code role="html401"><![CDATA[<fieldset><legend>Phone number</legend>
<input id="areaCode" name="areaCode" title="Area Code" 
type="text" size="3" value="" >
<input id="exchange" name="exchange" title="First three digits of phone number" 
type="text" size="3" value="" >
<input id="lastDigits" name="lastDigits" title="Last four digits of phone number" 
type="text" size="4" value="" >
</fieldset> ]]></code>
					</eg-group>
					<eg-group>
						<head> A Search Function</head>
						<description>
							<p>A Web page contains a text field where the user can enter search terms and a button labeled "Search" for performing the search. The <att>title</att> attribute is used to identify the form control and the button is positioned right after the text field so that it is clear to the user that the text field is where the search term should be entered.</p>
						</description>
						<code role="html401"><![CDATA[
<input type="text" title="Type search term here"/> <input type="submit" value="Search"/>
]]></code>
					</eg-group>
					<eg-group>
						<head>A data table of form controls</head>
						<description>
							<p>A data table of form controls needs to associate each control with the column and row headers for that cell. Without a title (or off-screen LABEL) it is difficult for non-visual users to pause and interrogate for corresponding row/column header values using their assistive technology  while tabbing through the form.</p>
							<p>For example, a survey form has four column headers in first row: Question, Agree, Undecided, Disagree. Each following row contains a question and a radio button in each cell 			corresponding to answer choice in the three columns. The title attribute for every radio button is a concatenation of the answer choice (column header) and the text of the question (row header) with a hyphen or colon as a separator.</p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/global.html#h-7.4.3">The
                    title attribute</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.jimthatcher.com/webcourse8.htm">Accessible Forms</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.usability.com.au/resources/wcag2/">Accessible Forms using WCAG 2.0</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H44"/>
					<relatedtech idref="H71"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Identify each form control that is not associated with a <el>label</el>
                  element </p>
							</item>
							<item>
								<p>Check that the control has a <att>title</att> attribute</p>
							</item>
							<item>
								<p>Check that the <att>title</att> attribute identifies the purpose of the
                control</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H67">
				<short-name>Using null alt text and no title attribute on img elements for images that AT
          should ignore</short-name>
				<applicability>
					<p>HTML and XHTML documents that load images. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
				</applies-to>
				<description>
					<p> The purpose of this technique is to show how images can be marked so that they can be
            ignored by Assistive Technology. </p>
					<p> If no title attribute is used, and the alt text is set to null (i.e.
            <code>
							<att>alt</att><![CDATA[=""]]></code>) it indicates to assistive technology that the image can be safely
            ignored. </p>
					<p>Note: Although <code>
							<att>alt</att><![CDATA[=" "]]></code> is also valid, <code>
							<att>alt</att><![CDATA[=""]]></code> is recommended.</p>
					<p> Note: Have a "null" <att>alt</att> attribute is not the same as having no <att>alt</att> attribute. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following image is used to insert a decorative image on a Web page.</p>
						</description>
						<code role="html401"><![CDATA[
<img src="squiggle.gif" width="20" height="20" alt="" />
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://webaim.org/techniques/images/alt_text#null">'Null alt
                    text' in WebAIM's 'Creating Accessible Images'</loc> also shows how to do this
                  in Dreamweaver. </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques/>
				<tests>
					<procedure>
						<p> For each image that should be ignored. </p>
						<olist>
							<item>
								<p> Check that <att>title</att> attribute is either absent or empty. </p>
							</item>
							<item>
								<p> Check that <att>alt</att> attribute is present and empty or contains only
                  whitespace (but not <code><![CDATA[&nbsp;]]></code>) </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> #1 and #2 are true </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H69">
				<short-name>Providing heading elements at the beginning of each section of content</short-name>
				<applicability>
					<p>HTML and XHTML </p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-skip"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Most screen readers provide navigation via headings and provide information
              about the level of the heading. The Opera browser provides a mechanism to navigate by
              headings. Additional plugins support navigation by headings in other user agents. <phrase diff="add">See the Resources section for references to some of these plugins.</phrase></p>
						<ednote>
							<edtext>There is an <loc href="http://lists.w3.org/Archives/Public/w3c-wai-ig/2011JulSep/0177.html">action to update user agent notes</loc>, but not yet a precise edit.</edtext>
						</ednote>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to use section headings to convey the structure of
        		the content. Heading markup can be used:</p>
					<ulist>
						<item>
							<p>to indicate start of main content</p>
						</item>
						<item>
							<p>to mark up section headings within the main content area</p>
						</item>
						<item>
							<p>to demarcate different navigational sections like top or main navigation, left or
        				secondary navigation and footer navigation</p>
						</item>
						<item>
							<p>to mark up images of text that are used as headings</p>
						</item>
					</ulist>
					<p><phrase diff="del">In some technologies, </phrase>Headings are designed to convey logical hierarchy. Skipping
        		levels in the sequence of headings may create the impression that the structure of the
        		document has not been properly thought through or that specific headings have been
        		chosen for their visual rendering rather than their meaning. Authors are encouraged to
        		nest headings hierarchically. When headings are nested hierarchically, the most important information is given the highest logical level, and subsections are given subsequent logical levels.(i.e., h2 is a subsection of h1).</p>
					<p>Since headings indicate the start of important sections of content, it is possible for
        		users with assistive technology to jump directly to the appropriate heading and begin
        		reading the content. This significantly speeds interaction for users who would otherwise
        		access the content slowly. <phrase>Headings create chunks of information that can be found easily by people with disabilities, such as a blind person using a screen reader, or a person with a cognitive disability who uses assistive technology that delineates groups of information, or someone with a communication disability or illiteracy, who uses a screen reader to assist them in their reading.</phrase>
					</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>This example organizes the sections of a search page by marking each section
                heading using <el>h2</el> elements.</p>
						</description>
						<code role="html401"><![CDATA[<h1>Search Technical Periodicals</h1>
 <h2>Search</h2>
 <form action="search.php">
  <p><label for="searchInput">Enter search topic: </label>
  <input type="text" size="30" id="searchInput">
  <input type="submit" value="Go"></p>
 </form>
 <h2>Available Periodicals</h2>
 <div class="jlinks">
  <a href="pcoder.com">Professional Coder</a> |
  <a href="algo.com">Algorithms</a> |
  <a href="jse.com">Journal of Software Engineering</a>
 </div>
 <h2>Search Results</h2>
 ... search results are returned in this section ...   ]]></code>
					</eg-group>
					<eg-group>
						<head>Headings show the overall organization of the content</head>
						<description>
							<p>In this example, heading markup is used to make the navigation and main content
                sections perceivable.</p>
						</description>
						<code role="html401"><![CDATA[<!-- Logo, banner graphic, search form, etc.  -->
  <h2>Navigation</h2>
    <ul>
      <li><a href="about.htm">About us</a></li>
      <li><a href="contact.htm">Contact us</a></li>
       ...
    </ul>
  <h2>All about headings</h2>
   <!-- Text, images, other material making up the main content... --> 
            ]]></code>
					</eg-group>
					<eg-group>
						<head>Headings show the organization of material within the main content</head>
						<description>
							<p>Note that in HTML 4.01 and XHTML 1.x, heading elements only mark the beginning of
              	sections. Because there is no markup to associate a heading element with the section content explicitly, users will assume that the heading applies to all following content until the next heading element is encountered.</p>
						</description>
						<code role="html401"><![CDATA[ <html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Cooking techniques</title>  
  </head>   
  <body>     
    <h1>Cooking techniques</h1>     
    <p>       
      ... some text here ...     
    </p>           
    <h2>Cooking with oil</h2> 
    <p> 
        ... text of the section ...     
    </p>           
    <h2>Cooking with butter</h2>       
    <p>
        ... text of the section ...     
    </p>   
  </body> 
</html>    ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/struct/global.html#h-7.5.5">HTML 4.01
                    H1-H6 elements</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://meyerweb.com/eric/thoughts/2004/07/21/pick-a-heading/">Pick a
                    Heading</loc> Eric Meyer</p>
							</item>
							<item>
								<p>
									<loc href="http://webarchive.nationalarchives.gov.uk/20100418065544/http://www.rnib.org.uk/wacblog/headings/quick-tips-for-accessible-headings/">Quick tips for accessible headings</loc>
								</p>
							</item>
							<item>
								<p diff="add"><loc href="http://www.456bereastreet.com/archive/201003/heading_navigation_in_web_browsers">Heading navigation in web browsers</loc></p>
							</item>
							<item>
								<p diff="add">For Firefox, the following plugins provide header navigation via the keyboard:
									<ulist>
										<item><p><loc href="https://addons.mozilla.org/en-US/firefox/addon/accessibility-evaluation-toolb/" diff="chg">Accessibility Evaluation Toolbar</loc></p></item>
										<item><p><loc href="http://juicystudio.com/article/heading-navigation-greasemonkey-user-script.php">Heading Navigation Greasemonkey User Script</loc></p></item>
									</ulist>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H42"/>
					<relatedtech idref="F2"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For all content which is divided into separate sections, </p>
						<olist>
							<item>
								<p>Check that each section starts with a heading.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H70">
				<short-name>Using frame elements to group blocks of repeated material</short-name>
				<applicability>
					<p>HTML and XHTML documents that use frames </p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-skip"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to demonstrate how framesets can be used to group
            blocks of repeated material. Since most user agents and assistive technology provide a
            way to navigate from frame to frame, using frames to organize elements can provide a
            mechanism for easily bypassing blocks of repeated content. If the site uses framesets,
            organize the blocks of content into separate frames. Make certain that the repeated
            blocks of content appear in the same frame within the frameset of each Web page. In
            addition, each frame element must have a title attribute to describe the content of the
            frame. When frames are properly titled, users can use frame navigation to easily
            navigate between blocks of content.</p>
					<p>This technique is appropriate when framesets are already used to organize the content
            of the page; other techniques are preferred for pages that are not already using
            framesets, because many people using assistive technology have trouble with frames . An
            advisory technique about using noframes is available in <loc href="text-equiv-all" linktype="understanding">Success Criterion 1.1.1</loc>. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following example shows the use of two frames to organize content. The source
                of the first frame is the Web page, navigation.html, which contains the HTML for the
                navigation. This frame has a title attribute which identifies it as a navigation
                bar. The second frame contains the main content of the site as indicated by the
                source parameter of main.html and the title attribute, "Main News Content" which
                identifies its function.</p>
						</description>
						<code role="html401"><![CDATA[<frameset cols="20%, *">
  <frame src="navigation.html" name="navbar" title="Navigation Bar" />
  <frame src="main.html" name="maincontent" title="Main News Content" />
  <noframes>
    <p>View <a href="noframe.html">no frame version</a>.</p>
  </noframes>
</frameset>   ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> HTML 4.01 <loc href="http://www.w3.org/TR/html4/present/frames.html#h-16.2.1">
                    The FRAMESET element</loc>
								</p>
							</item>
							<item>
								<p> HTML 4.01 <loc href="http://www.w3.org/TR/html4/present/frames.html#h-16.2.2">    The FRAME element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.jimthatcher.com/webcourse4.htm">Accessible Navigation</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H64"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>If the Web page uses frames to organize content: </p>
						<olist>
							<item>
								<p>Check if repeated blocks of content are organized into separate frames.</p>
							</item>
							<item>
								<p>Check that the frames with repeated content appear in the same location within
                  each frameset.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1 and #2 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H71">
				<short-name> Providing a description for groups of form controls using fieldset and legend
          elements </short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
					<success-criterion idref="minimize-error-cues"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to provide a semantic grouping for related form controls. This allows users to understand the relationship of the controls and interact with the form more quickly and effectively.</p>
					<p>Form controls can be grouped by enclosing them <phrase diff="chg">within</phrase> the <el>fieldset</el> element. All controls within a given <el>fieldset</el> are then related. The first element inside the <el>fieldset</el> <phrase diff="chg">must</phrase> be a <el>legend</el> element, which provides a label or <phrase diff="chg">description</phrase> for the group.  <phrase diff="chg">Authors should avoid nesting <el>fieldsets</el> unnecessarily, as this can lead to confusion.</phrase> </p>
					<p>Grouping controls is most important for related radio buttons and checkboxes. A set of radio buttons or checkboxes is related when they all submit values for a single named field. They work in the same way as selection lists, allowing the user to choose from a set of options, except selection lists are single controls while radio buttons and checkboxes are multiple controls. <phrase diff="chg">The individual label associated with each radio or checkbox control may not fully convey the group's descriptive context. In this situation, it is essential that they be grouped together semantically to facilitate being treated as a single control, as well as to provide an additional group level description. Often, user agents will present the value of the <el>legend</el> before the label of each control to provide this description, as well as to remind users that they are part of the same group.</phrase></p>
					<p>It can also be useful to group other sets of controls less tightly related than radio buttons and checkboxes. For instance, several fields that collect a user's address might be grouped together with a legend of "Address", thus providing a group level description for these controls. As a rule of thumb, it can be said that where a group of controls within a larger form requires an additional heading to provide a description specific to that particular group, the use of fieldset and legend elements is appropriate.</p>
					<p>However, when a group of related radio buttons or checkboxes (even having values for a single named field) includes clear instructions and distinct selections (i.e. where the individual label associated with each particular control provides a sufficient description), the use of the <el>fieldset</el> and <el>legend</el> elements is not required. 
						<specref ref="H44"/> is sufficient in this case.</p>
					<p>Authors sometimes avoid using the <el>fieldset</el> element because of the default display in the browser, which draws a border around the grouped controls. This visual grouping is also useful and authors should seriously consider retaining it (or some form of visual grouping). The visual effect can be modified in CSS by overriding the "border" property of the <el>fieldset</el> and the "position" property of the <el>legend</el>. </p>
					<p diff="del">When a small group of related radio buttons includes clear instructions and distinct selections it may not be necessary to use fieldsets and legends; <specref ref="H44"/>, may also be sufficient. </p>
				</description>
				<examples>
					<eg-group>
						<head>A multiple choice test </head>
						<description>
							<p>This example shows a test item with one question and five possible answers. Each
                answer is represented by a radio button (<code>
									<el>input</el><![CDATA[]]>
									<att>type</att><![CDATA[="radio"]]></code>). The radio
                buttons are contained within a <el>fieldset</el>. The test question is tagged
                with the <el>legend</el> element.</p>
						</description>
						<code role="html401"><![CDATA[<fieldset>
  <legend>The play <cite>Hamlet</cite> was written by:</legend>
  <input type="radio" id="shakesp" name="hamlet" checked="checked" value="a">
  <label for="shakesp">William Shakespeare</label><br />
  <input type="radio" id="kipling" name="hamlet" value="b">
  <label for="kipling">Rudyard Kipling</label><br />
  <input type="radio" id="gbshaw" name="hamlet" value="c">
  <label for="gbshaw">George Bernard Shaw</label><br />
  <input type="radio" id="hem" name="hamlet" value="d">
  <label for="hem">Ernest Hemingway</label><br />
  <input type="radio" id="dickens" name="hamlet" value="e">
  <label for="dickens">Charles Dickens</label>
</fieldset>   ]]></code>
					</eg-group>
					<eg-group>
						<head>A set of checkboxes </head>
						<description>
							<p>The User Profile page for a Web site allows users to indicate their interests by
                selecting multiple checkboxes. Each checkbox (<code>
									<el>input</el><![CDATA[]]>
									<att>type</att><![CDATA[="checkbox"]]></code>)
                has a <el>label</el>. The checkboxes are contained within a
                <el>fieldset</el>, and the <el>legend</el> element contains the prompt for
                the entire group of checkboxes.</p>
						</description>
						<code role="html401"><![CDATA[<fieldset>
  <legend>I am interested in the following (check all that apply):</legend>
  <input type="checkbox" id="photo" name="interests" value="ph">
  <label for="photo">Photography</label><br />
  <input type="checkbox" id="watercol" name="interests" checked="checked" value="wa">
  <label for="watercol">Watercolor</label><br />
  <input type="checkbox" id="acrylic" name="interests" checked="checked" value="ac">
  <label for="acrylic">Acrylic</label>
  …
</fieldset>    ]]></code>
					</eg-group>
					<eg-group>
						<head> Radio buttons submitting to the same named field</head>
						<description>
							<p>This example requests the user to choose a single philosopher. Note that each field has the same "<att>name</att>" attribute, indicating these radio buttons are related (they all submit the same field), and should be grouped as shown. Also note that while the "<att>name</att>" attributes are the same, the "<att>id</att>" attributes must be unique.</p>
						</description>
						<code><![CDATA[<form action="http://example.com/vote" method="post">
  <fieldset>
    <legend>Your preferred philosopher</legend>
    <input type="radio" name="philosopher" id="philosopher_socrates" value="socrates"/>
    <label for="philosopher_socrates">Socrates</label>
    <input type="radio" name="philosopher" id="philosopher_plato" value="plato"/>
    <label for="philosopher_plato">Plato</label>
    <input type="radio" name="philosopher" id="philosopher_aristotle" value="aristotle"/>
    <label for="philosopher_aristotle">Aristotle</label>
  </fieldset>
  </form> ]]></code>
						<description>
							<note>
								<p>Groups of related checkboxes work in the same way, except the user is allowed to express more than one preference for the field.</p>
							</note>
						</description>
					</eg-group>
					<eg-group>
						<head> Logically related controls</head>
						<description>
							<p>In this example, form fields for residential and postal addresses are distinguished by the value of the <el>legend</el> in each <el>fieldset</el> grouping.</p>
						</description>
						<code role="html401"><![CDATA[<form action="http://example.com/adduser" method="post">
   <fieldset>
     <legend>Residential Address</legend>
     <label for="raddress">Address: </label>
     <input type="text" id="raddress" name="raddress" />
     <label for="rzip">Postal/Zip Code: </label>
     <input type="text" id="rzip" name="rzip" />
     ...more residential address information...
   </fieldset>
   <fieldset>
     <legend>Postal Address</legend>
     <label for="paddress">Address: </label>
     <input type="text" id="paddress" name="paddress" />
     <label for="pzip">Postal/Zip Code: </label>
     <input type="text" id="pzip" name="pzip" />
     ...more postal address information...
   </fieldset>
</form>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/interact/forms.html#adef-checked">Checkboxes</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.usability.com.au/resources/wcag2/">Accessible Forms using WCAG 2.0</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H44"/>
					<relatedtech idref="H65"/>
				</related-techniques>
				<tests>
					<procedure>
					<p>For groups of related controls where the individual labels for each control do not provide a sufficient description, and an additional group level description is needed,</p>
						<olist>
							<item>
								<p diff="chg">Check that the group of logically related <el>input</el> or <el>select</el> elements are contained within <el>fieldset</el> elements.</p>
							</item>
							<item>
								<p>Check that each <el>fieldset</el> has a <el>legend</el> element that includes a description <phrase diff="chg">for</phrase> that group.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All of the above checks are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H73">
				<short-name>Using the summary attribute of the table element to give an overview of data
          tables</short-name>
				<applicability>
					<p>HTML 4.01, XHTML 1.x</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to provide a brief overview of how data has been organized into a table or a brief explanation of how to navigate the table. The <att>summary</att> attribute of the <el>table</el> element makes this information available to people who use screen readers; the information is not displayed visually.</p>
					<p>The <att>summary</att> is useful when the table has a complex structure (for example,
            when there are several sets of row or column headers, or when there are multiple groups
            of columns or rows). The <att>summary</att> may also be helpful for simple data tables
            that contain many columns or rows of data.</p>
					<p>The <att>summary</att> attribute may be used whether or not the table includes a
              <el>caption</el> element. If both are used, the <att>summary</att> should not
            duplicate the <el>caption</el>.</p>
					<p> Although WCAG 2 does not prohibit the use of layout tables, CSS-based layouts are
            recommended in order to retain the defined semantic meaning of the HTML <el>table</el>
            elements and to conform to the coding practice of separating presentation from content.
            However, if a layout table is used, then the <att>summary</att> attribute is not used or
            is null. The purpose of a layout table is simply to control the placement of content;
            the table itself is “transparent" to the user. A <att>summary</att> would “break" this
            transparency by calling attention to the table. A null <att>summary</att>
              (<code>
							<att>summary</att><![CDATA[=""]]></code>) on layout tables is acceptable.</p>
				</description>
				<examples>
					<eg-group>
						<head>A data table with a <att>summary</att> but no <el>caption</el>
						</head>
						<description>
							<p>This example shows a bus schedule. The route number and direction are included in
                the <att>summary</att> along with information on how to use the schedule.</p>
						</description>
						<code role="html401"><![CDATA[<table summary="Schedule for Route 7 going downtown. Service begins 
at 4:00 AM and ends at midnight. Intersections are listed in the top row. 
Find the intersection closest to your starting point or destination, then read 
down that column to find out what time the bus leaves that intersection.">
  <tr>
    <th scope="col">State & First</th>
    <th scope="col">State & Sixth</th>
    <th scope="col">State & Fifteenth</th>
    <th scope="col">Fifteenth & Morrison</th>
  </tr>
  <tr>
    <td>4:00</td>
    <td>4:05</td>
    <td>4:11</td>
    <td>4:19</td>
  </tr>
  …
</table>  ]]></code>
					</eg-group>
					<eg-group>
						<head>A data table with both a <att>summary</att> and a <el>caption</el>
						</head>
						<description>
							<p>In this example both a <att>summary</att> attribute and a <el>caption</el>
                element are used. The <el>caption</el> identifies the bus route. The
                  <att>summary</att> helps users who are blind understand how to use the schedule.
                Screen readers read the <el>caption</el>, followed by the
              <att>summary</att>.</p>
						</description>
						<code role="html401"><![CDATA[<table summary="Intersections are listed in row 1. 
Find the intersection closest to your starting point 
or destination, then read down that column to find 
out what time the bus leaves that intersection.  
Service begins at 4:00 AM and ends at midnight.">
  <caption>Route 7 Downtown (Weekdays)</caption>
…
</table>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>HTML 4.01 <loc href="http://www.w3.org/TR/html4/struct/tables.html#adef-summary">summary attribute</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H39"/>
					<relatedtech idref="H51"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check for layout tables: determine whether the content has a relationship with
                  other content in both its column and its row. </p>
								<olist>
									<item>
										<p>If “no," the table is a layout table.</p>
									</item>
									<item>
										<p>If “yes," the table is a data table.</p>
									</item>
								</olist>
							</item>
							<item>
								<p>If the table is a layout table, check that the <att>summary</att> attribute is
                  not present or <att>summary</att> attribute is null.</p>
							</item>
							<item>
								<p>If the table is a data table and a <att>summary</att> is present, check that the
                    <att>summary</att> attribute describes the table's organization or explains how
                  to use the table</p>
							</item>
							<item>
								<p>If both a <att>summary</att> attribute and a <el>caption</el> element are present
                  for this data table, check that the <att>summary</att> does not duplicate the
                    <el>caption</el>.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>For layout tables, #2 is true.</p>
							</item>
							<item>
								<p>For data tables, #3 and #4 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H74">
				<short-name>Ensuring that opening and closing tags are used according to specification</short-name>
				<applicability>
					<p> HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-parses"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to avoid key errors that are known to cause
            problems for assistive technologies when they are trying to parse content which involve
            having opening and closing tags that are not used according to specification. These
            errors can be avoided by using the HTML or XHTML mechanism to specify the technology and
            technology version, and making sure the Web page does not have these types of errors in
            it. There are several validators that the developer can use: validation reports
            generally mention these types of errors. This technique deals only with errors related
            to incorrectly formed opening and closing tags. The document type declaration is not
            strictly necessary for this type of evaluation, but specifying the document type
            declaration makes it easier to use a validator. </p>
				</description>
				<examples>
					<eg-group>
						<head> HTML</head>
						<description>
							<p> HTML pages include a document type declaration (sometimes referred to as
                  <code><![CDATA[!DOCTYPE]]></code> statement). The developer can use offline or online
                validators (see Resources below) to check that all id attribute values are unique
                and that opening and closing tags are used according to the specification. </p>
						</description>
					</eg-group>
					<eg-group>
						<head>XHTML</head>
						<description>
							<p> Like other other XML-based documents, XHTML documents reference a Document Type
                Definition (DTD) or other type of XML schema. The developer can use online or
                offline validators (including validation tools built into editors) to check that
                opening and closing tags are used according to the specification. </p>
						</description>
					</eg-group>
					<eg-group>
						<head>Using test frameworks</head>
						<description>
							<p> When a Website generates HTML or XHTML dynamically instead of serving only static pages, a
                developer can use <loc href="http://xhtmlunit.sourceforge.net/">XHTMLUnit</loc>,
                  <loc href="http://xmltestsuite.sourceforge.net/">XML Test Suite</loc> or a similar
                framework to test the generated XHTML code. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/Tips/Doctype">Do not forget to add a doctype</loc>
                  by the W3C Quality Assurance Initiative explains what doctypes are and why you
                  should use them. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/2002/04/valid-dtd-list.html">Recommended DTDs to
                    use in your Web document</loc> by the W3C Quality Assurance Initiative is a list
                  of commonly used declarations. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.chami.com/html-kit/faq/pages/validate_tools.html">How do I
                    validate my code or check for possible errors?</loc> describes the tools in the
                  free editor HTML-Kit for checking HTML, CSS and XML. </p>
							</item>
						</ulist>
						<p> For other resources, see <loc href="G134" linktype="general">Validating Web
              pages</loc>. </p>
					</see-also>
				</resources>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check that there are closing tags for all elements with required closing tags.
                </p>
							</item>
							<item>
								<p> Check that there are no closing tags for all elements where closing tags are
                  forbidden. </p>
							</item>
							<item>
								<p> Check that opening and closing tags for all elements are correctly nested. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p> Steps 1, 2, and 3 are true.</p>
					</expected-results>
				</tests>
			</technique>
			<technique id="H75">
				<short-name>Ensuring that Web pages are well-formed</short-name>
				<applicability>
					<p> Any XML-based markup languages. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-parses"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to avoid key errors that are known to cause
            problems for assistive technologies when they are trying to parse contents.
            Well-formedness is checked by parsing the document with a conforming XML parser and
            checking if the validation report mentions well-formedness errors. Every conforming XML
            parser is required to check well-formedness and stop normal processing when a
            well-formedness error is found (a conforming XML parser does not need to support
            validation).</p>
				</description>
				<examples>
					<eg-group>
						<head/>
						<description>
							<p>XML files include a document type declaration, a xsi:schemaLocation attribute or
                other type of reference to a schema. The developer can use off-line or online
                validators, an XML editor or an IDE with XML support (see Resources below) to check
                well-formedness. </p>
						</description>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<p> When XML files do not include a document type declaration, a xsi:schemaLocation
                attribute or a processing instruction referencing a schema even though there is a
                schema for them, the relevant schema is specified by a command line instruction, a
                user dialog or a configuration file, and the XML files are checked against the
                schema.</p>
						</description>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<p>When XML files do not include a document type declaration, a xsi:schemaLocation
                attribute or a processing instruction referencing a schema even though there is a
                schema for them, the namespace is dereferenced to retrieve a schema document or
                resource directory (Resource Directory Description Language: <loc href="http://www.rddl.org/">RDDL</loc>), and the XML files are checked against the
                schema.</p>
						</description>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<p>When a Website generates XML dynamically instead of serving only static documents,
                a developer can use <loc href="http://xmlunit.sourceforge.net/">XMLUnit</loc>, <loc href="http://xmltestsuite.sourceforge.net/">XML Test Suite</loc> or a similar
                framework to test the generated XML code. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/2004/REC-xml-20040204/Overview.html#sec-well-formed">Well-Formed XML Documents</loc> in Extensible Markup Language (XML) 1.0 (Third
                  Edition), W3C Recommendation 04 February 2004. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/2004/REC-xml11-20040204/#sec-well-formed">Well-Formed XML Documents</loc> in Extensible Markup Language (XML) 1.1, W3C
                  Recommendation 04 February 2004. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/REC-xml/#wf-entities">4.3.2 Well-Formed Parsed
                    Entities</loc> in Extensible Markup Language (XML) 1.1, W3C Recommendation 04
                  February 2004.</p>
							</item>
						</ulist>
						<p> For other resources, see <loc href="G134" linktype="general">Validating Web
              pages</loc>. </p>
					</see-also>
				</resources>
				<related-techniques/>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Load each file into a validating XML parser. </p>
							</item>
							<item>
								<p> Check that there are no well-formedness errors. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p>Step 2 is true.</p>
					</expected-results>
				</tests>
			</technique>
			<technique id="H76">
				<short-name>Using meta refresh to create an instant client-side redirect</short-name>
				<applicability>
					<p> HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to enable redirects on the client side without
            confusing the user. Redirects are preferably implemented on the server side (see <loc href="SVR1" linktype="server">Implementing automatic redirects on the server side
              instead of on the client side</loc>), but authors do not always have control over
            server-side technologies. </p>
					<p>In HTML and XHTML, one can use the <el>meta</el> element with the value of
            the <att>http-equiv</att> attribute set to "<code><![CDATA[Refresh]]></code>" and the value of the
              <att>content</att> attribute set to "0" (meaning zero seconds), followed by the URI
            that the browser should request. It is important that the time-out is set to zero, to
            avoid that content is displayed before the new page is loaded. The page containing the
            redirect code should only contain information related to the redirect. </p>
				</description>
				<examples>
					<eg-group>
						<code><![CDATA[ <html xmlns="http://www.w3.org/1999/xhtml">    
  <head>      
    <title>The Tudors</title>      
    <meta http-equiv="refresh" content="0;URL='http://thetudors.example.com/'" />    
  </head>    
  <body> 
    <p>This page has moved to a <a href="http://thetudors.example.com/">
      theTudors.example.com</a>.</p> 
  </body>  
</html>     ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p> See also <loc href="F41" linktype="failure">Failure due to using meta refresh
                    with a time-out</loc>. </p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="G110"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Find all <el>meta</el> elements in the document. </p>
							</item>
							<item>
								<p> For each meta element, check if it contains the attribute
                  <att>http-equiv</att> with value "<code><![CDATA[refresh]]></code>" (case-insensitive) and the
                    <att>content</att> attribute with a number greater than 0 followed by
                    <code><![CDATA[;'URL=anyURL']]></code> (where anyURL stands for the URI that should replace
                  the current page). </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<p> Step 2 is false. </p>
					</expected-results>
				</tests>
			</technique>
			<technique id="H77">
				<short-name>Identifying the purpose of a link using link text combined with its enclosing
          list item</short-name>
				<applicability>
					<p>All technologies that contain links.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs"/>
				</applies-to>
				<description>
					<p> The objective of this technique is to identify the purpose of a link from the link and
            its list item context. The list item enclosing the link provides context for an
            otherwise unclear link when the link item is the nearest enclosing block-level ancestor
            element. The description lets a user distinguish this link from links in the Web page
            that lead to other destinations and helps the user determine whether to follow the link.
            Note that simply providing the URI of the destination is generally not sufficiently
            descriptive. </p>
					<note>
						<p>These descriptions will be most useful to the user if the additional information
              needed to understand the link precedes the link. If the additional information follows
              the link, there can be confusion and difficulty for screen reader users who are
              reading through the page in order (top to bottom).</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<code><![CDATA[<ul>
  <li>
    Check out the video report for last year's 
    <a href="festival.htm">National Folk Festival</a>.
  </li>
  <li>
    <a href="listen.htm">Listen to the instruments</a>
  </li>
  <li>
    Guitar Man: George Golden talks about 
    <a href="mkguitars.htm">making guitars</a>.
  </li>
</ul>]]></code>
					</eg-group>
					<eg-group>
						<head>A list of video games for download</head>
						<code><![CDATA[<ul>
  <li>
    <a href="tomb_raider.htm">Tomb Raider: Legend</a>
    <a href="tomb_raider_images.htm">See Images</a>
    <a href="tomb_raider.mpeg">(Download Demo)</a>
  </li>
  <li>
    <a href="fear_extraction.htm">F.E.A.R. Extraction Point</a>
    <a href="fear_extraction_images.htm">See Images</a>
    <a href="fear_extraction.mpeg">(Download Demo)</a>
  </li>
  <li>
    <a href="call_of_duty.htm">Call of Duty 2</a>
    <a href="call_of_duty_images.htm">See Images</a>
    <a href="call_of_duty.mpeg">(Download Demo)</a>
  </li>
  <li>
    <a href="Warhammer 40K.htm">Warhammer 40K</a>
    <a href="warhammer_40k_images.htm">See Images</a>
    <a href="Warhammer_40k.mpeg">(Download Demo)</a>
  </li>
</ul>   ]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G53"/>
					<relatedtech idref="G91"/>
					<relatedtech idref="H33"/>
					<relatedtech idref="H78"/>
					<relatedtech idref="H79"/>
					<relatedtech idref="H80"/>
					<relatedtech idref="H81"/>
					<relatedtech idref="C7"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each link in the content that uses this technique:</p>
						<olist>
							<item>
								<p> Check that the link is part of a list item. </p>
							</item>
							<item>
								<p> Check that text of the link combined with the text of its enclosing list item
                  describes the purpose of the link. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> The above checks are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H78">
				<short-name>Identifying the purpose of a link using link text combined with its enclosing
          paragraph</short-name>
				<applicability>
					<p>All technologies that contain links.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="JAWS" version="5.0+">
						<p>JAWS 5.0 and later includes the following keystrokes:</p>
						<ulist>
							<item>
								<p> alt+leftArrow: read previous sentence </p>
							</item>
							<item>
								<p> alt+rightArrow: read next sentence </p>
							</item>
							<item>
								<p> alt+NumPad 5: read current sentence </p>
							</item>
							<item>
								<p> Ctrl+NumPad5: read current paragraph </p>
							</item>
						</ulist>
					</ua-issue>
					<ua-issue name="" version="">
						<p>If
              alt+numPad5 is pressed when a link has focus, the sentence is read without changing
              the focus.</p>
					</ua-issue>
					<ua-issue name="" version="">
						<p>If Ctrl+NumPad 5 is
              pressed when the link has focus, the entire paragraph is read without changing the
              focus.</p>
					</ua-issue>
					<ua-issue name="WindowEyes" version="5.5">
						<p>Window-Eyes 5.5 has hotkeys to read the current sentence and current paragraph.</p>
						<p>To surf the internet with WindowEyes you must be in browse mode. Current sentence and
              current paragraph hot keys do not work in browse mode in version 6.1. </p>
						<p>The factory default settings for reading surrounding link context are as follows:</p>
						<p>Desktop settings:</p>
						<ulist>
							<item>
								<p>Character = CTRL-NUMPAD-LEFT ARROW</p>
							</item>
							<item>
								<p>Word = CTRL-NUMPAD-RIGHT ARROW</p>
							</item>
							<item>
								<p>Line = CTRL-NUMPAD-CENTER</p>
							</item>
							<item>
								<p>Sentence = Not available in Browse mode</p>
							</item>
							<item>
								<p>(Next Sentence command is undefined by default on Desktop mode but the next line
                  is the DOWN Arrow.) </p>
							</item>
							<item>
								<p>Next Paragraph = P</p>
							</item>
							<item>
								<p>Prior Paragraph = Shift P </p>
							</item>
							<item>
								<p>Current Paragraph = Not Available in Browse mode</p>
							</item>
						</ulist>
						<p>Laptop</p>
						<ulist>
							<item>
								<p>Character = ALT-SHIFT-LESS THAN</p>
							</item>
							<item>
								<p>Word Prior = ALT-SHIFT-J</p>
							</item>
							<item>
								<p>Word = ALT-SHIFT-K</p>
							</item>
							<item>
								<p>Word Next = ALT-SHIFT-L</p>
							</item>
							<item>
								<p>Sentence Prior = ALT-SHIFT-7</p>
							</item>
							<item>
								<p>Sentence = unavailable in browse mode</p>
							</item>
							<item>
								<p>Sentence Next = unavailable in browse mode</p>
							</item>
							<item>
								<p>Paragraph = Undefined on Laptop by default </p>
							</item>
							<item>
								<p>Line Prior = ALT-SHIFT-U</p>
							</item>
							<item>
								<p>Line = ALT-SHIFT-I</p>
							</item>
							<item>
								<p>Line Next = ALT-SHIFT-O</p>
							</item>
						</ulist>
					</ua-issue>
					<ua-issue name="" version="">
						<p>The "speak parent element" command in Fire Vox (Ctrl+Shift+u) works without changing the focus. <loc href="http://www.firevox.clcworld.net/">Fire Vox</loc> is a free screen reader
              designed specifically for Firefox 1.0 and later. It supports Windows, Macintosh, and
              Linux.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to identify the purpose of a link from the link in
            its paragraph context. The paragraph enclosing the link provides context for an
            otherwise unclear link when the paragraph is the nearest enclosing block-level ancestor
            element. The description lets a user distinguish this link from links in the Web page
            that lead to other destinations and helps the user determine whether to follow the link.
            Note that simply providing the URI of the destination is generally not sufficiently
            descriptive. </p>
					<note>
						<p>These descriptions will be most useful to the user if the additional information
              needed to understand the link precedes the link. If the additional information follows
              the link, there can be confusion and difficulty for screen reader users who are
              reading through the page in order (top to bottom).</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<description>
							<p> Announcements column on a Folk Festival Web page.</p>
						</description>
						<code><![CDATA[<h3>The final 15</h3>
<p>Coming soon to a town near you...the final 15 in the 
National Folk Festival lineup.
<a href="final15.html">[Read more...]</a>
</p>

<h3>Folk artists get awards</h3>
<p>Performers from the upcoming National Folk Festival receive 
 National Heritage Fellowships. 
 <a href="nheritage.html">[Read more...]</a>
</p>
…   ]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G53"/>
					<relatedtech idref="G91"/>
					<relatedtech idref="H33"/>
					<relatedtech idref="H77"/>
					<relatedtech idref="H79"/>
					<relatedtech idref="H80"/>
					<relatedtech idref="H81"/>
					<relatedtech idref="C7"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each link in the content that uses this technique:</p>
						<olist>
							<item>
								<p> Check that the link is part of a paragraph. </p>
							</item>
							<item>
								<p> Check that text of the link combined with the text of its enclosing paragraph
                  describes the purpose of the link. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> The above checks are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H79">
				<short-name>Identifying the purpose of a link using link text combined with its enclosing
          table cell and associated table headings</short-name>
				<applicability>
					<p>All technologies that contain links.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to identify the purpose of a link from the link in
            its data table context. This context is the table cell enclosing the link and the cell's
            associated headings. The data table context provides the purpose for an otherwise
            unclear link when the table cell is the nearest enclosing block-level ancestor element.
            It lets a user distinguish this link from other links in the Web page that lead to other
            destinations and helps the user determine whether to follow the link. Note that simply
            providing the URI of the destination is not sufficiently descriptive for people with
            disabilities, especially those with cognitive disabilities.</p>
				</description>
				<examples>
					<eg-group>
						<head>A table of rental car choices</head>
						<code><![CDATA[ <table>
<tr>
  <th></th>
  <th scope="col">Alamo</th>
  <th scope="col">Budget</th>
  <th scope="col">National</th>
  <th scope="col">Avis</th>
  <th scope="col">Hertz</th>
</tr>
<tr>
  <th scope="row">Economy cars</th>
  <td><a href="econ_ala.htm">$67/day</a></td>
  <td><a href="econ_bud.htm">$68/day</a></td>
  <td><a href="econ_nat.htm">$72/day</a></td>
  <td><a href="econ_av.htm">$74/day</a></td>
  <td><a href="econ_hz.htm">$74/day</a></td>
</tr>
<tr>
  <th scope="row">Compact cars</th>
  <td><a href="comp_ala.htm">$68/day</a></td>
  <td><a href="comp_bud.htm">$69/day</a></td>
  <td><a href="comp_nat.htm">$74/day</a></td>
  <td><a href="comp_av.htm">$76/day</a></td>
  <td><a href="comp_hz.htm">$76/day</a></td>
</tr>
<tr>
  <th scope="row">Mid-sized cars</th>
  <td><a href="mid_ala.htm">$79/day</a></td>
  <td><a href="mid_bud.htm">$80/day</a></td>
  <td><a href="mid_nat.htm">$83/day</a></td>
  <td><a href="mid_av.htm">$85/day</a></td>
  <td><a href="mid_hz.htm">$85/day</a></td>
</tr>
<tr>
  <th scope="row">Full-sized cars</th>
  <td><a href="full_ala.htm">$82/day</a></td>
  <td><a href="full_bud.htm">$83/day</a></td>
  <td><a href="full_nat.htm">$89/day</a></td>
  <td><a href="full_av.htm">$91/day</a></td>
  <td><a href="full_hz.htm">$91/day</a></td>
</tr>
</table>  ]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G53"/>
					<relatedtech idref="G91"/>
					<relatedtech idref="H33"/>
					<relatedtech idref="H77"/>
					<relatedtech idref="H78"/>
					<relatedtech idref="H80"/>
					<relatedtech idref="H81"/>
					<relatedtech idref="C7"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each link in the content that uses this technique:</p>
						<olist>
							<item>
								<p> Check that the link is in a table cell. </p>
							</item>
							<item>
								<p> Check that text of the link combined with the text of the associated table
                  heading describes the purpose of the link. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> The above checks are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H80">
				<short-name>Identifying the purpose of a link using link text combined with the preceding
          heading element</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="JAWS" version="">
						<p>The command to take advantage of this technique in JAWS is "JAWS KEY + T".</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to describe the purpose of a link from the context
            provided by its heading context. The preceding heading provides context for an otherwise
            unclear link. The description lets a user distinguish this link from links in the Web
            page that lead to other destinations and helps the user determine whether to follow the
            link.</p>
					<note>
						<p>Whenever possible, provide link text that identifies the purpose of the link without
              needing additional context.</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<head>Blocks of information on hotels</head>
						<description>
							<p>The information for each hotel consists of the hotel name, a description and a
                series of links to a map, photos, directions, guest reviews and a booking form.</p>
						</description>
						<code role="xhtml"><![CDATA[<h2><a href="royal_palm_hotel.html">Royal Palm Hotel</a></h2>
  <ul class="horizontal">
    <li><a href="royal_palm_hotel_map.html">Map</a></li>
    <li><a href="royal_palm_hotel_photos.html">Photos</a></li>
    <li><a href="hroyal_palm_hotel_directions.html">Directions</a></li>
    <li><a href="royal_palm_hotel_reviews.html">Guest reviews</a></li>
    <li><a href="royal_palm_hotel_book.html">Book now</a></li>
  </ul>

<h2><a href="hotel_three_rivers.html">Hotel Three Rivers</a></h2>
  <ul class="horizontal">
    <li><a href="hotel_three_rivers_map.html">Map</a></li>
    <li><a href="hotel_three_rivers_photos.html">Photos</a></li>
    <li><a href="hotel_three_rivers_directions.html">Directions</a></li>
    <li><a href="hotel_three_rivers_reviews.html">Guest reviews</a></li>
    <li><a href="hotel_three_rivers_book.html">Book now</a></li>
  </ul>     ]]></code>
					</eg-group>
					<eg-group>
						<head>A document provided in three formats</head>
						<code role="xhtml"><![CDATA[<h2>Annual Report 2006-2007</h2>
<p> 
  <a href="annrep0607.html">(HTML)</a>&nbsp;
  <a href="annrep0607.pdf">(PDF)</a>&nbsp;
  <a href="annrep0607.rtf">(RTF)</a>
</p>       ]]></code>
					</eg-group>
					<eg-group>
						<head>Newspaper Web site</head>
						<code role="xhtml"><![CDATA[<h2><a href="Stockmarket_05052007.htm>Stock market soars as bullishness prevails</a></h2>
<p>this week was a stellar week for the stock market as investing in gold rose 2%. 
<a href="Stockmarket_05052007.htm>More here</a></p>     ]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G91"/>
					<relatedtech idref="G53"/>
					<relatedtech idref="H33"/>
					<relatedtech idref="C7"/>
					<relatedtech idref="H77"/>
					<relatedtech idref="H78"/>
					<relatedtech idref="H79"/>
					<relatedtech idref="H81"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each link in the content that uses this technique:</p>
						<olist>
							<item>
								<p>Find the heading element that precedes the link</p>
							</item>
							<item>
								<p>Check that the text of the link combined with the text of that heading describes
                  the purpose of the link.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H81">
				<short-name>Identifying the purpose of a link in a nested list using link text combined with
          the parent list item under which the list is nested</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>Although the context information is programmatically associated with the link, assistive technology lacks commands for reading the parent list item without moving focus away from the link. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to describe the purpose of a link in a nested list
            from the context provided by the list item under which the list is nested. This list
            item provides context for an otherwise unclear link. The description lets a user
            distinguish this link from links in the Web page that lead to other destinations and
            helps the user determine whether to follow the link.</p>
					<p>Because current assistive technologies do not include commands to query  contextual information provided by parent list items, use of this technique requires users to navigate the list one item at a time. Therefore, this technique may not be appropriate for very long or deeply nested lists.</p>
					<note>
						<p>Whenever possible, provide link text that identifies the purpose of the link without
              needing additional context.</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<head>A document provided in three formats</head>
						<code role="xhtml"><![CDATA[<ul>
<li>Annual Report 2005-2006
  <ul> 
  <li><a href="annrep0506.html">(HTML)</a></li>
  <li><a href="annrep0506.pdf">(PDF)</a></li>
  <li><a href="annrep0506.rtf">(RTF)</a></li>
  </ul>
</li>
<li>Annual Report 2006-2007
  <ul> 
  <li><a href="annrep0607.html">(HTML)</a></li>
  <li><a href="annrep0607.pdf">(PDF)</a></li>
  <li><a href="annrep0607.rtf">(RTF)</a></li>
  </ul>
</li>
</ul> ]]></code>
					</eg-group>
					<eg-group>
						<head>Blocks of information on hotels</head>
						<description>
							<p>The information for each hotel consists of the hotel name, a description and a
                series of links to a map, photos, directions, guest reviews and a booking form.</p>
						</description>
						<code role="xhtml"><![CDATA[<ul>
<li><a href="royal_palm_hotel.html">Royal Palm Hotel</a>
  <ul class="horizontal">
    <li><a href="royal_palm_hotel_map.html">Map</a></li>
    <li><a href="royal_palm_hotel_photos.html">Photos</a></li>
    <li><a href="hroyal_palm_hotel_directions.html">Directions</a></li>
    <li><a href="royal_palm_hotel_reviews.html">Guest reviews</a></li>
    <li><a href="royal_palm_hotel_book.html">Book now</a></li>
  </ul>
</li>
<li><a href="hotel_three_rivers.html">Hotel Three Rivers</a>
  <ul class="horizontal">
    <li><a href="hotel_three_rivers_map.html">Map</a></li>
    <li><a href="hotel_three_rivers_photos.html">Photos</a></li>
    <li><a href="hotel_three_rivers_directions.html">Directions</a></li>
    <li><a href="hotel_three_rivers_reviews.html">Guest reviews</a></li>
    <li><a href="hotel_three_rivers_book.html">Book now</a></li>
  </ul>
</li>
</ul> ]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G91"/>
					<relatedtech idref="G53"/>
					<relatedtech idref="H33"/>
					<relatedtech idref="C7"/>
					<relatedtech idref="H77"/>
					<relatedtech idref="H78"/>
					<relatedtech idref="H79"/>
					<relatedtech idref="H80"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each link in the content that uses this technique:</p>
						<olist>
							<item>
								<p>Find the <el>ul</el> or ol element that contains the link</p>
							</item>
							<item>
								<p>Check that this list element (<el>ul</el>, <el>ol</el>) is a descendant of an
                    <el>li</el> element</p>
							</item>
							<item>
								<p>Check that the text of the link combined with the text of that li element
                  describes the purpose of the link.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>The above checks are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H83">
				<short-name>Using the target attribute to open a new window on user request and indicating this in link text</short-name>
				<applicability>
					<p>HTML 4.01 Transitional and XHTML 1.0 Transitional</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-no-extreme-changes-context"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to avoid confusion that may be caused by the appearance of new windows that were not requested by the user. Suddenly opening new windows can disorientate or be missed completely by some users. In HTML 4.01 Transitional and XHTML 1.0 Transitional, the <att>target</att> attribute can be used to open a new window, instead of automatic pop-ups. (The <att>target</att> attribute is deleted from HTML 4.01 Strict and XHTML 1.0 Strict.) Note that not using the <att>target</att> allows the user to decide whether a new window should be opened or not. Use of the <att>target</att> attribute provides an unambiguously machine-readable indication that a new window will open. User agents can inform the user, and can also be configured not to open the new window. For those not using assistive technology, the indication would also be available from the link text.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following example illustrates  the use of the <att>target</att> attribute in a link that indicates it will open in a new window.</p>
						</description>
						<code role="HTML4"><![CDATA[<a href="help.html" target="_blank">Show Help (opens new window)</a>]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="SCR24"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Activate each link in the document to check if it opens a new window.</p>
							</item>
							<item>
								<p>For each link that opens a new window, check that it uses the <att>target</att> attribute.</p>
							</item>
							<item>
								<p>Check that the link text contains information indicating that the link will open in a new window.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #2 and #3 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H84">
				<short-name>Using a button with a select element to perform an action</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="consistent-behavior-unpredictable-change"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to allow the user to control when an action is performed, rather than having the action occur as a side effect of choosing a value for the <el>select</el> element. The user may inspect the different values of the <el>select</el> element, or may accidentally choose the wrong value, without causing the action to occur. When the user is satisfied with their choice, they select the button to perform the action.</p>
					<p>This is particularly important for users who are choosing the value of the <el>select</el> element via the keyboard, since navigating through the options of the <el>select</el> element changes the value of the control. </p>
				</description>
				<examples>
					<eg-group>
						<head>A Calendar</head>
						<description>
							<p>A Web page lets the user choose any month of any year and display the calendar for that month. After the user has set the month and year, he displays the calendar by pressing the "Show" button. This example relies on client-side scripting to implement the action.</p>
						</description>
						<code><![CDATA[
<label for="month">Month:</label>
<select name="month" id="month">
  <option value="1">January</option>
  <option value="2"> February</option>
  ...
  <option value="12">December</option>
</select> 
<label for="year">Year:</label>
<input type="text" name="year" id="year">
<input type="button" value="Show" onclick = "...">]]></code>
					</eg-group>
					<eg-group>
						<head>Choosing an action</head>
						<description>
							<p>A <el>select</el> element contains a list of possible actions. The action is not performed until the user presses the "Do it" button.</p>
						</description>
						<code><![CDATA[
<form action="http://somesite.com/action" method="post">
  <label for="action">Options:</label>
  <select name="action" id="action">
    <option value="help">Help</option>
    <option value="reset">Reset</option>
    <option value="submit">Submit</option>
  </select> 
  <button type="submit" name="submit" value="submit">Do It </button>
</form>              ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.cs.tut.fi/~jkorpela/forms/navmenu.html">Jukka Korpela: Navigational pulldown menus in HTML</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H32"/>
					<relatedtech idref="G80"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each <el>select</el> element/button element combination:</p>
						<olist>
							<item>
								<p>Check that focus (including keyboard focus) on an option in the <el>select</el> element does not result in any actions</p>
							</item>
							<item>
								<p>Check that selecting the button performs the action associated with the current <el>select</el> value</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H85">
				<short-name>Using OPTGROUP to group OPTION elements inside a SELECT</short-name>
				<applicability>
					<p>HTML and XHTML pages that collect user input.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>The <el>optgroup</el> element is not widely supported by many screen readers including JAWS 11 and below or Window-Eyes 6 and below.</p>
					</ua-issue>
					<ua-issue name="" version="">
						<p>The <att>label</att> attribute for <el>option</el> and <el>optgroup</el> is supported inconsistently across user agents and is not widely supported by screen readers including JAWS 11 and below and Window-Eyes 6 and below.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to group items in a selection list. A selection list is a set of allowed values for a form control such as a multi-select list or a combo box. Often, selection lists have groups of related options. Those groups should be semantically identified, rather than simply delimiting the groups with "dummy" list entries. This allows user agents to collapse the options by group to support quicker skimming of the options, and to indicate in what group an option of interest is located. It also helps to visually break up long lists so that users can more easily locate the option(s) they are interested in.</p>
					<p>In HTML, the <el>select</el> element is used to create both multi-select lists and combo boxes. The various allowed options are each indicated with <el>option</el> elements. To group options together, use the <el>optgroup</el> element, with the related <el>option</el> elements inside that element. Label the group with the "label" attribute so users will know what to expect inside the group.</p>
					<p>The <el>optgroup</el> element should be directly inside the <el>select</el> element, and the <el>option</el>  elements directly inside the <el>optgroup</el>. It is possible for a <el>select</el> element to contain both single <el>option</el> elements and <el>optgroup</el> groups, though authors should consider if this is in fact the desired intent when using this. It is not possible to nest the <el>optgroup</el> element, so only one level of grouping can be done within a <el>select</el>.</p>
					<p>If grouping information is essential to understanding the list, authors may define <el>option</el> labels that can be understood even when the screen reader does not present the grouping information provided by <el>optgroup</el>.</p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following combo box collects data about favorite foods. Grouping by type allows users to select their preference more quickly.</p>
						</description>
						<code><![CDATA[
<form action="http://example.com/prog/someprog" method="post">
    <label for="food">What is your favorite food?</label>
    <select id="food" name="food">
      <optgroup label="Fruits">
        <option value="1">Apples</option>
        <option value="3">Bananas</option>
        <option value="4">Peaches</option>
        <option value="5">...</option>
      </optgroup>
      <optgroup label="Vegetables">
        <option value="2">Carrots</option>
        <option value="6">Cucumbers</option>
       <option value="7">...</option>
     </optgroup>
     <optgroup label="Baked Goods">
       <option value="8">Apple Pie</option>
       <option value="9">Chocolate Cake</option>
       <option value="10">...</option>
     </optgroup>
   </select>
</form>              ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>The following example shows how a multi-select box can make use of the <el>optrgroup</el> element.</p>
						</description>
						<code><![CDATA[
<form action="http://example.com/prog/someprog" method="post">
    <label for="related_techniques"><strong>Related Techniques:</strong></label>
    <select name="related_techniques" id="related_techniques" multiple="multiple" size="10">
  <optgroup label="General Techniques">
    <option value="G1">G1: Adding a link at the top of each page ... </option>
    <option value="G4">G4: Allowing the content to be paused and restarted ... </option>
    <option value="G5">G5: Allowing users to complete an activity without any time... </option>
    <option value="G8">G8: Creating an extended audio description for the ... </option>
    <option value="G9">G9: Creating captions for live synchronized media... </option>
    <option value="G10">G10: Creating components using a technology that ... </option>
  </optgroup>
  <optgroup label="HTML Techniques">
    <option value="H2">H2: Combining adjacent image and text links for the same ... </option>
    <option value="H4">H4: Creating a logical tab order through links, form ... </option>
    <option value="H24">H24: Providing text alternatives for the area ... </option>
  </optgroup>
  <optgroup label="CSS Techniques">
    <option value="C6">C6: Positioning content based on structural markup... </option>
    <option value="C7">C7: Using CSS to hide a portion of the link text... </option>
  </optgroup>
  <optgroup label="SMIL Techniques">
    <option value="SM1">SM1: Adding extended audio description in SMIL 1.0... </option>
    <option value="SM2">SM2: Adding extended audio description in SMIL 2.0... </option>
    <option value="SM6">SM6: Providing audio description in SMIL 1.0... </option>
  </optgroup>
  <optgroup label="ARIA Techniques">
    <option value="ARIA1">ARIA1: Using WAI-ARIA describedby... </option>
    <option value="ARIA2">ARIA2: Identifying required fields with the "required"... </option>
    <option value="ARIA3">ARIA3: Identifying valid range information with "valuemin" ... </option>
  </optgroup>
  <optgroup label="Common Failures">
    <option value="F1">F1: Failure of SC 1.3.2 due to changing the meaning of content by... </option>
    <option value="F2">F2: Failure of SC 1.3.1 due to using changes in text presentation... </option>
    <option value="F3">F3: Failure of SC 1.1.1 due to using CSS to include images  ... </option>
    <option value="F4">F4: Failure of SC 2.2.2 due to using text-decoration:blink ...</option>
  </optgroup>
</select>
</form>              ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/interact/forms.html#edef-SELECT">HTML SELECT element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/interact/forms.html#edef-OPTGROUP">HTML OPTGROUP element</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://webaim.org/techniques/forms/">Creating Accessible Forms</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://www.usability.com.au/resources/wcag2/">Accessible Forms using WCAG 2.0</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check the set of options within a selection list to see if there are groups of related options.</p>
							</item>
							<item>
								<p>If there are groups of related options, they should be grouped with <el>optgroup</el>. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H86">
				<short-name>Providing text alternatives for ASCII art, emoticons, and leetspeak</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p>Assistive technologies provide different levels of support for speaking title attributes. Some do not include features that allow users to access information provided via the title attribute. </p>
							</item>
							<item>
								<p>Implementing this technique with the <att>title</att> attribute is only sufficient if the <att>title</att> attribute is accessibility supported. The content of the <att>title</att> attribute needs to be available to all keyboard users (not only those with text-to-speech software) for this attribute to be accessibility  supported.</p>
							</item>
							<item>
								<p>JAWS 6.2 and higher and WindowEyes 5.0 and higher support the abbr and acronym elements. They can all be set to speak the title attribute when these elements are encountered, but this is not the default setting and is often not turned on by users. </p>
							</item>
							<item>
								<p>Many graphical user agents render text enclosed within an <el>abbr</el> or <el>acronym</el> element with a dotted line below or surrounding it. In addition, when the mouse hovers over the element, the expansion is displayed as a tool tip.
                        </p>
							</item>
							<item>
								<p>In Internet Explorer 7 and below, items marked using the <el>abbr</el> element are not displayed with any additional formatting. For IE 6 and below, the expanded version does not display as a tooltip when the mouse hovers over the item. </p>
							</item>
							<item>
								<p>Within a given user agent or assistive technology, <el>abbr</el> and <el>acronym</el> elements are presented to users in the same way.
                        </p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>Before graphics became widely used on the internet, ASCII characters were often arranged to form pictures or graphs. Although ASCII art is not used frequently on the Web anymore, it must be remembered that, when it is used, it is very confusing to people who are blind and accessing the internet using screen readers. If it is used it should also have a text explanation of what the picture is. It is also suggested that there be a link to skip over the ASCII art (although this is not required).</p>
					<p>Emoticons are very popular. They include ASCII characters that form facial expressions and other ways to communicate an emotion. They can be confusing for screen reader users. When possible it is better simply to use a word like "smile" instead of an emoticon. But if emoticons are used they should have a text alternative. In some contexts, blog and forum software for example, plug-ins are available that automatically convert ASCII characters used as emoticons into HTML images with text alternatives.</p>
					<p>Leetspeak uses various combinations of ASCII characters to replace Latinate letters. Leet has become a part of Internet culture and slang. Leet is frequently used to beat text and spam filters. It is often incomprehensible to blind people using screen readers, and therefore requires a text alternative in order to conform to Success Criteria 1.1.1.</p>
					<note>
						<p>Because support for this technique is limited, it is recommended that authors provide the text alternative in text. </p>
					</note>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>The following shows three options for providing alternatives for an emoticon representing "fright," which is made out of an equal sign followed by the number eight, a hyphen and the number zero.</p>
						</description>
						<code><![CDATA[
=8-0 (fright)

<abbr title="fright">=8-0</abbr>

<img src="fright.gif" alt="fright"/>
             ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>Here is ASCII art with an explanation of the picture preceding it. It includes a link to skip over the ASCII art. <loc href="#H86-ex3">Skip ASCII example</loc>.</p>
						</description>
						<code><![CDATA[
 Figure 1: ASCII art picture of a butterfly. 
 <a href="#skipbutterfly">Skip ASCII image</a>
                                 
                                                                LLLLLLLLLLL
                                                            __LLLLLLLLLLLLLL
                                                           LLLLLLLLLLLLLLLLL
                                                         _LLLLLLLLLLLLLLLLLL
                                                        LLLLLLLLLLLLLLLLLLLL
                                                      _LLLLLLLLLLLLLLLLLLLLL
                                                      LLLLLLLLLLLLLLLLLLLLLL
                                              L     _LLLLLLLLLLLLLLLLLLLLLLL
                                             LL     LLLLLL~~~LLLLLLLLLLLLLL
                                            _L    _LLLLL      LLLLLLLLLLLLL
                                            L~    LLL~        LLLLLLLLLLLLL
                                           LL   _LLL        _LL   LLLLLLLL
                                          LL    LL~         ~~     ~LLLLLL
                                          L   _LLL_LLLL___         _LLLLLL
                                         LL  LLLLLLLLLLLLLL      LLLLLLLL
                                         L  LLLLLLLLLLLLLLL        LLLLLL
                                        LL LLLLLLLLLLLLLLLL        LLLLL~
                  LLLLLLLL_______       L _LLLLLLLLLLLLLLLL     LLLLLLLL
                         ~~~~~~~LLLLLLLLLLLLLLLLLLLLLLLLL~       LLLLLL
                       ______________LLL  LLLLLLLLLLLLLL ______LLLLLLLLL_
                   LLLLLLLLLLLLLLLLLLLL  LLLLLLLL~~LLLLLLL~~~~~~   ~LLLLLL
             ___LLLLLLLLLL __LLLLLLLLLLLLL LLLLLLLLLLLLL____       _LLLLLL_
          LLLLLLLLLLL~~   LLLLLLLLLLLLLLL   LLLLLLLLLLLLLLLLLL     ~~~LLLLL
      __LLLLLLLLLLL     _LLLLLLLLLLLLLLLLL_  LLLLLLLLLLLLLLLLLL_       LLLLL
     LLLLLLLLLLL~       LLLLLLLLLLLLLLLLLLL   ~L ~~LLLLLLLLLLLLL      LLLLLL
   _LLLLLLLLLLLL       LLLLLLLLLLLLLLLLLLLLL_  LL      LLLLLLLLL   LLLLLLLLL
  LLLLLLLLLLLLL        LLLLLLLLLLLLL~LLLLLL~L   LL       ~~~~~       ~LLLLLL
 LLLLLLLLLLLLLLL__L    LLLLLLLLLLLL_LLLLLLL LL_  LL_            _     LLLLLL
LLLLLLLLLLLLLLLLL~     ~LLLLLLLL~~LLLLLLLL   ~L  ~LLLL          ~L   LLLLLL~
LLLLLLLLLLLLLLLL               _LLLLLLLLLL    LL  LLLLLLL___     LLLLLLLLLL
LLLLLLLLLLLLLLLL              LL~LLLLLLLL~     LL  LLLLLLLLLLLL   LLLLLLL~
LLLLLLLLLLLLLLLL_  __L       _L  LLLLLLLL      LLL_ LLLLLLLLLLLLLLLLLLLLL
 LLLLLLLLLLLLLLLLLLLL        L~  LLLLLLLL      LLLLLLL~LLLLLLLLLLLLLLLL~
  LLLLLLLLLLLLLLLLLLLL___L_ LL   LLLLLLL       LLLL     LLLLLLLLLLLLLL
   ~~LLLLLLLLLLLLLLLLLLLLLLLL     LLLLL~      LLLLL        ~~~~~~~~~
           LLLLLLLLLLLLLLLLLL_ _   LLL       _LLLLL
               ~~~~~~LLLLLLLLLL~             LLLLLL
                         LLLLL              _LLLLLL
                         LLLLL    L     L   LLLLLLL
                          LLLLL__LL    _L__LLLLLLLL
                          LLLLLLLLLL  LLLLLLLLLLLL
                           LLLLLLLLLLLLLLLLLLLLLL
                            ~LLLLLLLLLLLLLLLLL~~
                               LLLLLLLLLLLLL
                                 ~~~~~~~~~
<a name="skipbutterfly"></a>            ]]></code>
					</eg-group>
					<eg-group id="skipbutterfly">
						<description>
							<p>The following is Leetspeak for "Austin Rocks". </p>
						</description>
						<code><![CDATA[
<abbr title="Austin Rocks">Au5t1N r0xx0rz</abbr>             ]]></code>
					</eg-group>
				</examples>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Open the page in a common browser.</p>
							</item>
							<item>
								<p>Check to see that the content contains ASCII art, emoticons and/or leetspeak.</p>
							</item>
							<item>
								<p>Check that there is a text alternative immediately before or after all ASCII art, emoticons and/or Leetspeak.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Test procedure #3 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H87">
				<short-name>Not interfering with the user agent's reflow of text as the viewing window is narrowed</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-visual-presentation"/>
				</applies-to>
				<description>
					<p>This technique helps avoid situations where horizontal scrolling may occur. Many people with cognitive disabilities and low vision users who do not use assistive technology have a great deal of trouble with blocks of text that require horizontal scrolling. It involves not interfering with the reflow of text if the window is narrowed. One of the best ways to do this is to define widths of text block containers in percentages.</p>
					<p>HTML and XHTML user agents automatically reflow text as the browser window is narrowed as long as the author does not specify widths using absolute measurements such as pixels or points. </p>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A newspaper site includes articles with columns that adjust with the user agents window width. Users with cognitive disabilities can narrow the column to a width that makes it easier to read. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/CSS2/box.html">CSS Box Model</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="C20"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Open the content that contains a block of text in a common browser. </p>
							</item>
							<item>
								<p>Narrow the viewing window to 1/4 of the screen width. </p>
							</item>
							<item>
								<p>Check to see that the content does not require horizontal scrolling to read a line of text. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #3 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H88"><!-- This was originallly included as G154 -->
				<short-name>Using HTML according to spec</short-name>
				<applicability>
					<p>HTML and XHTML</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-parses"/>
					<success-criterion idref="ensure-compat-rsv"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to use HTML and XHTML according to their respective specifications. Technology specifications define the meaning and proper handling of features of the technology. Using those features in the manner described by the specification ensures that user agents, including assistive technologies, will be able to present representations of the feature that are accurate to the author's intent and interoperable with each other.</p>
					<p>At the time this technique was published, the appropriate versions of these technologies is HTML 4.01 and XHTML 1.0. HTML 4.01 is the latest mature version of HTML, which provides specific accessibility features and is widely supported by user agents. XHTML 1.0 provides the same features as HTML 4.01, except that it uses an XML structure, and has a more strict syntax than the HTML structure. Later versions of these technologies are not mature and / or are not widely supported by user agents at this time.</p>
					<p>There are a few broad aspects to using HTML and XHTML according to their specification.</p>
					<olist>
						<item>
							<p>
								<emph role="bold">Using only features that are defined in the specification</emph> HTML defines sets of elements, attributes, and attribute values that may be used on Web pages. These features have specific semantic meanings and are intended to be processed by user agents in particular ways. Sometimes, however, additional features come into common authoring practice. These are usually initially supported by only one user agent. When features not in the specification are used, many user agents may not support the feature for a while or ever. Furthermore, lacking standard specifications for the use of these features, different user agents may provide varying support. This impacts accessibility because assistive technologies, developed with fewer resources than mainstream user agents, may take a long time if ever to add useful support. Therefore, authors should avoid features not defined in HTML and XHTML to prevent unexpected accessibility problems.</p>
						</item>
						<item>
							<p>
								<emph role="bold">Using features in the manner prescribed by the specification</emph> The HTML specification provides specific guidance about how particular elements, attributes, and attribute values are to be processed and understood semantically. Sometimes, however, authors use features in a manner that is not supported by the specification, for example, using semantic elements to achieve visual effects without intending the underlying semantic message to be conveyed. This leads to confusion for user agents and assistive technologies that rely on correct semantic information to present a coherent representation of the page. It is important to use HTML features only as prescribed by the HTML specification.</p>
						</item>
						<item>
							<p>
								<emph role="bold">Making sure the content can be parsed</emph> HTML and XHTML also define how content should be encoded in order to be correctly processed by user agents. Rules about the structure of start and end tags, attributes and values, nesting of elements, etc. ensure that user agents will parse the content in a way to achieve the intended document representation. Following the structural rules in these specifications is an important part of using these technologies according to specification. </p>
						</item>
					</olist>
				</description>
				<resources>
					<see-also>
						<p>Refer to the resources section of <loc href="G134" linktype="general" locn-note="G134-resources">Validating Web
                        pages</loc>. </p>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H74"/>
					<relatedtech idref="H75"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each HTML or XHTML page:</p>
						<olist>
							<item>
								<p>Check that the page uses only elements, attributes, and attribute values that are defined in the relevant specification.</p>
							</item>
							<item>
								<p>Check that elements, attributes, and values are used in the manner prescribed by the relevant specification.</p>
							</item>
							<item>
								<p>Check that the page can be parsed correctly, according to the rules of the relevant specification.</p>
							</item>
						</olist>
						<note>
							<p>Check #1 and #3 are most easily checked with page validation tools. Check #2 can be checked with the assistance of heuristic evaluation tools though manual judgment is usually required.</p>
						</note>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1, #2, and #3 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H89">
				<short-name>Using the title attribute to provide context-sensitive help</short-name>
				<applicability>
					<p>HTML and XHTML </p>
				</applicability>
				<applies-to>
					<success-criterion idref="minimize-error-context-help"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<ulist>
							<item>
								<p>Some current assistive technology provide feedback to the user when form fields have title attribute content available. </p>
							</item>
							<item>
								<p>Some graphical user agents will display a tool tip when the mouse hovers above a form field containing a <att>title</att> attribute. However, current user agents do not provide access to the <att>title</att> attribute content via the keyboard. </p>
							</item>
							<item>
								<p>The tool tip in some common user agents disappears after a short period of time (approximately 5 seconds). This can cause difficulty accessing title attribute content for those users who can use a mouse but have fine motor skill impairment, and may result in difficulties for users who need more time to read the tool tip. </p>
							</item>
							<item>
								<p>It is difficult for most users to resize, adjust background colors, reposition or otherwise control the presentation of title attribute content in many current user agents. </p>
							</item>
							<item>
								<p>This technique can only be used when the element has an explicitly associated label. In the absence of a lable, the title will be used as the Name in the accessibility API of current user agents that support one. The help text described below makes a poor name. </p>
							</item>
						</ulist>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to provide context sensitive help for users as they enter data in forms by providing the help information in a <att>title</att> attribute. The help may include format information or examples of input. </p>
					<note>
						<p>Current user agents and assistive technologies do not always provide the information contained in the <att>title</att> attribute to users. Avoid using this technique in isolation until the <att>title</att> attribute has wide-spread support. </p>
					</note>
				</description>
				<examples>
					<eg-group>
						<description>
							<p>A mapping application provides a form consisting of a label "Address:", an input box and a submit button with value "Find map". The input box has a <att>title</att> attribute value with an example of the address format the user should enter. </p>
						</description>
						<code><![CDATA[
<label for="searchAddress">Address: </label>
<input id="searchAddress" type="text" size="30" value="" name="searchAddress" 
 title="Address example: 101 Collins St, Melbourne, Australia" />
             ]]></code>
					</eg-group>
					<eg-group>
						<description>
							<p>A form that allows users to pay their bill online requires the user to enter their account number. The input box associated with the "Account number" label has a <att>title</att> attribute providing information on locating the account number. </p>
						</description>
						<code><![CDATA[
<label for="accNum1">Account number: </label>
<input id="accNum1" type="text" size="10" value="" title="Your account number 
 can be found in the top right-hand corner of your bill." />
             ]]></code>
					</eg-group>
				</examples>
				<related-techniques>
					<relatedtech idref="H65"/>
					<relatedtech idref="G71"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Identify form controls that require text input. </p>
							</item>
							<item>
								<p>Check that each form control has an explicitly associated label </p>
							</item>
							<item>
								<p>Check that each form control has context-sensitive help provided in the <att>title</att> attribute. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #2 and #3 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H90">
				<short-name><phrase diff="chg">Indicating required form controls using label or legend</phrase></short-name>
				<applicability>
					<p>HTML and XHTML controls that use external labels.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="minimize-error-cues"/>
				</applies-to><!-- these ua issues also appear in H44 -->
				<ua-issues>
					<ua-issue name="" version="">
						<p>The HTML and XHTML specifications allow both implicit and explicit labels. However, some
                        assistive technologies do not correctly handle implicit labels (for example,
                        <code><![CDATA[<label>First name <input type="text"
                            name="firstname"></label>]]></code>).</p>
						<ulist>
							<item>
								<p>JAWS 7.10 was tested on Windows XP with Internet Explorer 6.0 and Firefox 1.5. It
                                reads the label for explicit and implicit labels for text fields in both virtual
                                PC cursor and forms reading mode. In forms mode it does not read the label for
                                implicit labels on checkboxes and radio fields.</p>
							</item>
							<item>
								<p>Window-Eyes 5.5 was tested on Windows XP with Internet Explorer 6.0 and Firefox
                                1.5. It will always speak the label for an explicitly labelled form field. It does
                                not speak the label for the implicitly labelled form control in browse on mode but
                                will speak the implicit label when navigating from control to control in browse
                                off mode. </p>
							</item>
						</ulist>
					</ua-issue>
					<ua-issue name="" version="">
						<p>User agents will display a tool tip when the mouse hovers above an <el>input</el>
                        element containing a <att>title</att> attribute. Title attributes are exposed to
                        assistive technology and are displayed as tooltips in many graphical browsers.
                        Tooltips can't be opened via the keyboard, so this information may not be available to
                        sighted keyboard users. </p>
					</ua-issue>
					<ua-issue name="" version="">
						<p>If no <el>label</el> is available, JAWS and Window-Eyes speak the
                        <att>title</att> attribute when the form control receives focus </p>
						<ulist>
							<item>
								<p>JAWS 6.0 and later can be set to speak both <el>label</el> and
                                <att>title</att> when the two items are different; however, very few users are
                                aware of this setting.</p>
							</item>
							<item>
								<p>WindowEyes 5.5 has a hot key, ins-E, that will display additional information,
                                including the title attribute, for the item with focus. </p>
							</item>
						</ulist>
					</ua-issue><!-- BBC: This UA issue (below) is not shared with H44 -->
					<ua-issue name="" version="">
						<p>Some user agents (specifically the Window-Eyes screen reader) do not by default voice the asterisk character in form labels. There is a preference that Window-Eyes users can modify to adjust this behavior but many users should be expected not to have made this change. </p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to provide a clear indication that a specific form control in a Web application or form is required for successful data submission. A symbol or text indicating that the control is required is programmatically associated with the field by using the <el>label</el> element, or the <el>legend</el> for groups of controls associated via <el>fieldset</el>. If a symbol is used, the user is advised of its meaning before the first use. </p>
				</description>
				<examples>
					<eg-group>
						<head>Using text to indicate required state</head>
						<description>
							<p>The text field in the example below has the explicit label of "First name (required):". The <el>label</el> element's  <att>for</att> attribute matches the <att>id</att> attribute of the <el>input</el> element and the <el>label</el> text indicates that the control is required. </p>
						</description>
						<code><![CDATA[
<label for="firstname">First name (required):</label> 
<input type="text" name="firstname" id="firstname" />
]]></code>
						<description>
							<note>
								<p>Some authors abbreviate "required" to "req." but there is anecdotal evidence that suggests that this abbreviation is confusing. </p>
							</note>
						</description>
					</eg-group>
					<eg-group>
						<head>Using an asterisk to indicate required state</head>
						<description>
							<p>The text field in the example below has an explicit label that includes an asterisk to indicate the control is required. It is important that the asterisk meaning is defined at the start of the form. In this example, the asterisk is contained within a <el diff="chg">abbr</el> element to allow for the asterisk character to be styled so that it is larger than the default asterisk character, since the asterisk character can be difficult to see for those with impaired vision. </p>
						</description>
						<code><![CDATA[
CSS:
.req {font-size: 150%} 

HTML:

<p> Required fields are marked with an asterisk (<abbr class="req" title="required">*</abbr>).</p>
<form action="http://www.test.com" method="post">
<label for="firstname">First name <abbr class="req" title="required">*</abbr>:</label> 
<input type="text" name="firstname" id="firstname" />
]]></code>
					</eg-group>
					<eg-group>
						<head>Using an image to indicate required state</head>
						<description>
							<p>The text field in the example below has an explicit label that includes an image to indicate the control is required. It is important that the image meaning is defined at the start of the form.</p>
						</description>
						<code><![CDATA[
<p><img src="req_img.gif" alt="Required Control" /> indicates that the form control is required</p>
<form action="http://www.test.com" method="post">
<label for="firstname">First name <img src="req_img.gif" alt="Required Control" />:</label> 
<input type="text" name="firstname" id="firstname" />
...
]]></code>
					</eg-group>
					<eg-group>
						<head>Indicating required state for groups of radio buttons or check box controls</head>
						<description>
							<p>Radio buttons and checkboxes are treated differently than other interactive controls since individual radio buttons and checkboxes are not required but indicates that a response for the group is required. The methods used in examples 1-3 apply to radio buttons and checkboxes, but the indication of the required state should be placed in the <el>legend</el> element instead of the <el>label</el> element. </p>
						</description>
						<code><![CDATA[
<fieldset>
<legend>I am interested in the following (Required):</legend>
<input type="checkbox" id="photo" name="interests" value="ph">
<label for="photo">Photography</label></br>
<input type="checkbox" id="watercol" name="interests" checked="checked" value="wa">
<label for="watercol">Watercolor</label></br>
<input type="checkbox" id="acrylic" name="interests" checked="checked" value="ac">
<label for="acrylic">Acrylic</label>
…
</fieldset>
]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/TR/html401/interact/forms.html#h-17.9">HTML 4.01 form labels</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H44"/>
					<relatedtech idref="H65"/>
					<relatedtech idref="H71"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>For each required form control, check that the required status is indicated in the form control's <el>label</el> or <el>legend</el>. </p>
							</item>
							<item>
								<p>For each indicator of required status that is not provided in text, check that the meaning of the indicator is explained before the form control that uses it. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>All checks above are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H91">
				<short-name>Using HTML form controls and links</short-name>
				<applicability>
					<p>HTML form controls and links </p>
				</applicability>
				<applies-to>
					<success-criterion idref="keyboard-operation-keyboard-operable"/>
					<success-criterion idref="keyboard-operation-all-funcs"/>
					<success-criterion idref="ensure-compat-rsv"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to use standard HTML form controls and link elements to provide keyboard operation and assistive technology interoperability of interactive user interface elements.</p>
					<p>User agents provide the keyboard operation of HTML form controls and links. In addition, the user agent maps the form controls and links to an accessibility API. Assistive technologies use the accessibility API to extract appropriate accessibility information, such as role, name, state, and value, and present them to users. The role is provided by the HTML element, and the name is provided by the text associated with that element. Elements for which values and states are appropriate also expose the values and states via multiple mechanisms. </p>
					<p>In some cases, the text is already associated with the control through a required attribute. For example, submit buttons use the <el>button</el> element text or image '<att>alt</att>' attribute as the name. In the case of form controls, <el>label</el> elements or '<att>title</att>' attributes are used. The following table describes how the role, name, value, and state are determined for HTML links and form controls. </p>
					<table border="1" cellpadding="5" summary="Table describing how the role, name, value and state are determined for HTML links and form controls.">
						<thead>
							<tr>
								<th rowspan="1" colspan="1">HTML element </th>
								<th rowspan="1" colspan="1">Role</th>
								<th rowspan="1" colspan="1">Name </th>
								<th rowspan="1" colspan="1">Value </th>
								<th rowspan="1" colspan="1">State </th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td rowspan="1" colspan="1">&lt;a&gt; </td>
								<td rowspan="1" colspan="1"> link </td>
								<td rowspan="1" colspan="1"> 'title' attribute, text within &lt;a&gt; element or 'alt' attribute if image link. Concatenated if both text and image 'alt' attribute are provided </td>
								<td rowspan="1" colspan="1"> 'href' attribute </td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;button&gt; </td>
								<td rowspan="1" colspan="1"> push button </td>
								<td rowspan="1" colspan="1"> text inside &lt;button&gt; element or 'title' attribute </td>
								<td rowspan="1" colspan="1"/>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;fieldset&gt; </td>
								<td rowspan="1" colspan="1"> grouping </td>
								<td rowspan="1" colspan="1">&lt;legend&gt; element </td>
								<td rowspan="1" colspan="1"/>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;input type = "button", "submit", or "reset"&gt; </td>
								<td rowspan="1" colspan="1"> push button </td>
								<td rowspan="1" colspan="1"> 'value' attribute </td>
								<td rowspan="1" colspan="1"/>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;input type = "image"&gt; </td>
								<td rowspan="1" colspan="1"> push button </td>
								<td rowspan="1" colspan="1"> 'alt' attribute or 'title' attribute </td>
								<td rowspan="1" colspan="1"/>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;input type = "text"&gt; </td>
								<td rowspan="1" colspan="1"> editable text </td>
								<td rowspan="1" colspan="1">&lt;label&gt; element associated with it or 'title' attribute </td>
								<td rowspan="1" colspan="1"> 'value' attribute </td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;input type = "password"&gt; </td>
								<td rowspan="1" colspan="1"> editable text </td>
								<td rowspan="1" colspan="1">&lt;label&gt; element associated with it or 'title' attribute </td>
								<td rowspan="1" colspan="1"/>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;input type="checkbox"&gt; </td>
								<td rowspan="1" colspan="1"> checkbox </td>
								<td rowspan="1" colspan="1">&lt;label&gt; element associated with it or 'title' attribute </td>
								<td rowspan="1" colspan="1"/>
								<td rowspan="1" colspan="1"> 'checked' attribute
                            </td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;input type="radio"&gt; </td>
								<td rowspan="1" colspan="1"> radio button </td>
								<td rowspan="1" colspan="1">&lt;label&gt; element associated with it or 'title' attribute </td>
								<td rowspan="1" colspan="1"/>
								<td rowspan="1" colspan="1"> 'checked' attribute
                                
                            </td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;select&gt; </td>
								<td rowspan="1" colspan="1"> combobox, list, or dropdown list </td>
								<td rowspan="1" colspan="1">&lt;label&gt; element associated with it or 'title' attribute </td>
								<td rowspan="1" colspan="1">&lt;option&gt; element with 'selected' attribute set to "selected" </td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">&lt;textarea&gt; </td>
								<td rowspan="1" colspan="1"> editable text </td>
								<td rowspan="1" colspan="1">&lt;label&gt; element associated with it or 'title' attribute </td>
								<td rowspan="1" colspan="1"> text within  &lt;textarea&gt; element </td>
								<td rowspan="1" colspan="1"/>
							</tr>
						</tbody>
					</table>
				</description>
				<examples>
					<eg-group>
						<head>Links</head>
						<description>
							<p>User agents provide mechanisms to navigate to and select links. In each of the following examples, the role is "link" from the &lt;a href&gt;.  Note that &lt;a name&gt; does not provide a role of "link". The value is the URI in the 'href' attribute. </p>
							<exsubhead>Example 1a</exsubhead>
							<p>In example 1a, the name is the text inside the link, in this case "Example Site". </p>
						</description>
						<code role="xhtml"><![CDATA[<a href="www.example.com">Example Site</a>
                    ]]></code>
						<description>
							<exsubhead>Example 1b</exsubhead>
							<p>In example 1b of an image inside a link, the 'alt' attribute for the image provides the name. Some tools for viewing APIs, such as Microsoft Inspect Objects, will not surface this, but AT does. </p>
						</description>
						<code role="xhtml"><![CDATA[<a href="www.example.com"><img src="example_logo.gif" alt="Example"></a>
                    ]]></code>
						<description>
							<exsubhead>Example 1c</exsubhead>
							<p>In example 1c, the name will be concatenated from the different elements inside the link to read "Example Text" </p>
						</description>
						<code role="xhtml"><![CDATA[<a href="www.example.com"><img src="example_logo.gif" alt="Example">Text</a>
]]></code>
					</eg-group>
					<eg-group>
						<head>Buttons</head>
						<description>
							<p>There are several ways to create a button in HTML, and they all map to the "push button" role.</p>
							<exsubhead>Example 2a</exsubhead>
							<p>In example 2a, the text is contained in the <el>button</el> element, in this case "save", as the name. There is no value.</p>
						</description>
						<code role="xhtml"><![CDATA[<button>Save</button>
                    ]]></code>
						<description>
							<exsubhead>Example 2b</exsubhead>
							<p>Example 2b uses the 'value' attribute, in this case "Save", "Submit", or "Reset" as the name.</p>
						</description>
						<code role="xhtml"><![CDATA[<input type="button" value="Save" /> 
<input type="submit" value="Submit" />  
<input type="reset" value="Reset" />   
                    ]]></code>
						<description>
							<exsubhead>Example 2c</exsubhead>
							<p>Example 2c uses the 'alt' attribute, in this case "save", as the name.</p>
						</description>
						<code role="xhtml"><![CDATA[<input type="image" src="save.gif" alt="save" /> 
                    ]]></code>
						<description>
							<exsubhead>Example 2d</exsubhead>
							<p>In example 2d, there is no 'alt' attribute so the 'title' attribute, in this case "save", is used as the name.</p>
						</description>
						<code role="xhtml"><![CDATA[<input type="image" src="save.gif" title="save" />
                    ]]></code>
						<description>
							<exsubhead>Example 2e</exsubhead>
							<p>Example 2e clarifies how the user agent determines the name if the author specifies both the 'alt' and 'title' attributes of the input element. In this case, the user agent uses the 'alt' attribute ("Save") and ignores the 'title' attribute.</p>
						</description>
						<code role="xhtml"><![CDATA[<input type="image" src="save.gif" alt="save" title="save the file" />
]]></code>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<exsubhead>Example 3a</exsubhead>
							<p>In example 3a, the input field has a role of "editable text". The <el>label</el> element is associated to the <el>input</el> element via the 'for' attribute which references the 'id' attribute of the <el>input</el>&gt; element. The name comes from the <el>label</el> element, in this case, "Type of fruit". Its value comes from its value attribute, in this case "bananas". </p>
						</description>
						<code role="xhtml"><![CDATA[<label for="text_1">Type of fruit</label>
<input id="text_1" type="text" value="bananas">
]]></code>
						<description>
							<exsubhead>Example 3b</exsubhead>
							<p>In example 3b, the input field has the same role <phrase diff="del">and value </phrase>as example 3a, but <phrase diff="add">the value is the empty string and the field </phrase>gets its name from the 'title' attribute. </p>
						</description>
						<code role="xhtml"><![CDATA[<input id="text_1" type="text" title="Type of fruit">
]]></code>
					</eg-group>
					<eg-group>
						<head>Checkbox </head>
						<description>
							<p>Example 4 has a role of "checkbox", from the 'type' attribute of the <el>input</el> element. The <el>label</el> element is associated with the <el>input</el> element via the 'for' attribute which refers to the 'id' attribute of the <el>input</el> element. The name comes from the <el>label</el> element, in this case "cheese". Its state can be "checked" or "unchecked" and comes from the 'checked' attribute. The state can be changed by the user's interaction with the control. </p>
						</description>
						<code role="xhtml"><![CDATA[<label for="cb_1">Cheese</label> 
<input id="cb_1" type="checkbox" checked="checked">
                    ]]></code>
					</eg-group>
					<eg-group>
						<head>Radio Buttons </head>
						<description>
							<p>Example 5 has a role of "radio button" from the 'type' attribute on the <el>input</el> element. Its name comes from the <el>label</el> element. The state can be "checked" or "unchecked" and comes from the 'checked' attribute. The state can be changed by the user. </p>
						</description>
						<code role="xhtml"><![CDATA[<input type="radio" name="color" id="r1" checked="checked"/><label for="r1">Red</label>
<input type="radio" name="color" id="r2" /><label for="r2">Blue</label>
<input type="radio" name="color" id="r3" /><label for="r3">Green</label>
                    ]]></code>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<exsubhead>Example 6a</exsubhead>
							<p>Example 6a has a role of "Combobox" from the <el>select</el> element. Its name is "Numbers" from the <el>label</el> element. Forgetting to give a name to the select is a common error. The value is the <el>option</el> element that has the 'selected' attribute <phrase diff="chg">present (with a value of "selected" in XHTML)</phrase>. In this case, the default value is "Two". </p>
						</description>
						<code role="xhtml"><![CDATA[<label for="s1">Numbers</label>
<select id="s1" size="1">
 <option>One</option>
 <option selected="selected">Two</option>
 <option>Three</option>
</select>
                    ]]></code>
						<description>
							<exsubhead>Example 6b</exsubhead>
							<p>Example 6b has the same name, role, and value as the above, but sets the name with the 'title' attribute on the <el>select</el> element. This technique can be used when a visible label is not desirable. </p>
						</description>
						<code role="xhtml"><![CDATA[<select id="s1" title="Numbers" size="1">
 <option>One</option>
 <option selected="selected">Two</option>
 <option>Three</option>
</select>
                    ]]></code>
					</eg-group>
					<eg-group>
						<head> Textarea</head>
						<description>
							<exsubhead>Example 7a</exsubhead>
							<p>Example 7a has a role of "editable text" from the <el>textarea</el> element. The name is "Type your speech here" from the <el>label</el> element. The value is the content inside the <el>textarea</el> element, in this case "Four score and seven years ago". </p>
						</description>
						<code role="xhtml"><![CDATA[<label for="ta_1">Type your speech here</label>
<textarea id="ta_1" >Four score and seven years ago</textarea>
                    ]]></code>
						<description>
							<exsubhead>Example 7b</exsubhead>
							<p>Example 7b has the same role, <phrase diff="chg">the name is set using the 'title' attribute, and the value is the empty string</phrase>.</p>
						</description>
						<code role="xhtml"><![CDATA[<textarea id="ta_1" title="Type your speech here" >Four score and seven years ago</textarea>
                    ]]></code>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<exsubhead>Radio Fieldset</exsubhead>
							<p>The radio fieldset in example 8 has a role of "grouping". The name comes from the <el>legend</el> element. </p>
						</description>
						<code role="xhtml"><![CDATA[<fieldset>
  <legend>Choose a Color:</legend> 
     <input id="red" type="radio" name="color" value="red" /><label for="red">Red</label><br /> 
     <input id="blue" type="radio" name="color" value="blue" /><label for="blue">Blue</label><br /> 
     <input id="green" type="radio" name="color" value="green" /><label for="green">Green</label> 
</fieldset>
                    ]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.usability.com.au/resources/wcag2/">Accessible Forms using WCAG 2.0</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="http://msdn.microsoft.com/en-us/library/aa360193(VS.85).aspx">MSDN Accessible DHTML elements</loc>
								</p>
							</item>
							<item>
								<p>
									<loc href="https://wiki.mozilla.org/Accessibility/AT-Windows-API#MSAA_Role_Support">Mozilla Accessibility/AT-Windows-API </loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="H44"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Inspect the HTML source code.</p>
							</item>
							<item>
								<p>For each instance of links and form elements, check that the name, value, and state are specified as indicated in the table above. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #2 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H92">
				<short-name>Including a text cue for colored form control labels</short-name>
				<applicability>
					<p>All technologies that support color and text.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="visual-audio-contrast-without-color"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to combine color and text or character cues to convey information. Most users can quickly scan the content to locate information conveyed by using color differences. Users who cannot see color can look or listen for text cues; people using Braille displays or other tactile interfaces can detect text cues by touch.</p>
				</description>
				<examples>
					<eg-group>
						<head>Required fields in an HTML form</head>
						<description>
							<p>The instructions for an online form say, "Required fields are shown in red and marked with (required)." The cue "(required)" is included within the <code><![CDATA[label]]></code> element.</p>
						</description>
						<code role="html401"><![CDATA[<label for="lastname" class="required">Last name (required): </label>
<input id="lastname" type="text" size="25" value=""/>
<style type="text/css">
  .required {
    color=red;
  }
</style>]]></code>
					</eg-group>
				</examples>
				<resources/>
				<related-techniques>
					<relatedtech idref="G14"/>
				</related-techniques>
				<tests>
					<procedure>
						<p>For any content where color differences are used to convey information:
    				</p>
						<olist>
							<item>
								<p>Check that the same information is available through text or character cues. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="H93">
				<short-name>Ensuring that <att>id</att> attributes are unique on a Web page</short-name>
				<applicability>
					<p>All HTML pages</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-parses"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to avoid key errors that are known
    				to cause problems for assistive technologies when they are trying to
    				parse content that has the same <att>id</att> attribute on different elements.
    				These errors can be avoided by making sure the Web page does not have
    				duplicate <att>id</att> values. This can be done manually or by using HTML's mechanism
    				to specify the technology and technology version, and validating the
    				document for this condition. There are several validators that the
    				developer can use; validation reports generally mention this type of
    				error. The document type declaration is not strictly necessary for
    				this type of evaluation, but specifying the document type declaration
    				makes it easier to use a validator. </p>
				</description>
				<examples>
					<eg-group>
						<head>HTML Validators</head>
						<description>
							<p>HTML pages include a document type declaration (sometimes referred
    						to as !DOCTYPE statement). The developer can use offline or online
    						validators (see Resources below) to check that id attributes values
    						are only used once on a page. The W3C validador, for example, will
    						report ID   "X already defined" when it encounters the second
    						use of an id value. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/Tips/Doctype">Do
    					not forget to add a doctype by the W3C Quality Assurance Initiative
    					explains what doctypes are and why you should use them</loc>. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/2002/04/valid-dtd-list.html">Recommended
    						DTDs to use in your Web document by the W3C Quality Assurance Initiative
    						is a list of commonly used declarations</loc>. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.chami.com/html-kit/faq/pages/validate_tools.html">How
    							do I validate my code or check for possible errors? describes the
    							tools in the free editor HTML-Kit for checking HTML, CSS and XML</loc>. </p>
							</item>
						</ulist>
						<p>For other resources, see <loc href="G134" linktype="general">G134: Validating Web pages</loc>. </p>
					</see-also>
				</resources>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check that all id attribute values are unique on the web page. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> Check 1 is true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
				<admin>
					<source>
						<loc href="http://trace.wisc.edu/wcag_wiki/index.php?title=Ensuring_that_id_attributes_are_unique_on_a_Web_page"/>
					</source>
				</admin>
			</technique>
			<technique id="H94">
				<short-name>Ensuring that elements do not contain duplicate attributes</short-name>
				<applicability>
					<p>All HTML pages</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-parses"/>
				</applies-to>
				<description>
					<p>The objective of this technique is to avoid key errors that are known
    				to cause problems for assistive technologies when they are trying to
    				parse content that has duplicate attributes on the same element. This
    				can be checked manually, or by using HTML's mechanism to specify the
    				technology and technology version and validating the document for this
    				condition. There are several validators that the developer can use;
    				validation reports generally mention this type of error. The document
    				type declaration is not strictly necessary for this type of evaluation,
    				but specifying the document type declaration makes it easier to use
    				a validator. </p>
				</description>
				<examples>
					<eg-group>
						<head>HTML Validators</head>
						<description>
							<p>HTML pages include a document type declaration (sometimes referred
    						to as !DOCTYPE statement). The developer can use offline or online
    						validators (see Resources below) to check that attributes are only
    						used once on an element. The W3C validador, for example, will report   "duplicate
    						specification of attribute X" when it encounters the second definition
    						of the same attribute on an element. </p>
						</description>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/Tips/Doctype">Do
    					not forget to add a doctype by the W3C Quality Assurance Initiative
    					explains what doctypes are and why you should use them</loc>. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.w3.org/QA/2002/04/valid-dtd-list.html">Recommended
    						DTDs to use in your Web document by the W3C Quality Assurance Initiative
    						is a list of commonly used declarations</loc>. </p>
							</item>
							<item>
								<p>
									<loc href="http://www.chami.com/html-kit/faq/pages/validate_tools.html">How
    							do I validate my code or check for possible errors? describes the
    							tools in the free editor HTML-Kit for checking HTML, CSS and XML</loc>. </p>
							</item>
						</ulist>
						<p>For other resources, see <loc href="G134" linktype="general">G134:
    					Validating Web pages</loc>. </p>
					</see-also>
				</resources>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Check that no attribute occurs more than once on any element </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p> Check 1 is true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
		</div1>
	</body>
	<back>
		<div1 id="placeholders"><!-- note: this can be updated using /misc/id-list.xslt (requires cut and paste)-->
			<head/>
			<p id="UNKNOWN">place holder for idref</p>
			<p id="cc1">placeholder for cc1</p>
			<p id="cc2">placeholder for cc2</p>
			<p id="cc3">placeholder for cc3</p>
			<p id="cc4">placeholder for cc4</p>
			<p id="cc5">placeholder for cc5</p>
			<p id="text-equiv">placeholder for text-equiv</p>
			<p id="text-equiv-all">placeholder for text-equiv-all</p>
			<p id="media-equiv">placeholder for media-equiv</p>
			<p id="media-equiv-av-only-alt">placeholder for media-equiv-av-only-alt</p>
			<p id="media-equiv-captions">placeholder for media-equiv-captions</p>
			<p id="media-equiv-audio-desc">placeholder for media-equiv-audio-desc</p>
			<p id="media-equiv-real-time-captions">placeholder for media-equiv-real-time-captions</p>
			<p id="media-equiv-audio-desc-only">placeholder for media-equiv-audio-desc-only</p>
			<p id="media-equiv-sign">placeholder for media-equiv-sign</p>
			<p id="media-equiv-extended-ad">placeholder for media-equiv-extended-ad</p>
			<p id="media-equiv-text-doc">placeholder for media-equiv-text-doc</p>
			<p id="media-equiv-live-audio-only">placeholder for media-equiv-live-audio-only</p>
			<p id="content-structure-separation">placeholder for content-structure-separation</p>
			<p id="content-structure-separation-programmatic">placeholder for content-structure-separation-programmatic</p>
			<p id="content-structure-separation-sequence">placeholder for content-structure-separation-sequence</p>
			<p id="content-structure-separation-understanding">placeholder for content-structure-separation-understanding</p>
			<p id="visual-audio-contrast">placeholder for visual-audio-contrast</p>
			<p id="visual-audio-contrast-without-color">placeholder for visual-audio-contrast-without-color</p>
			<p id="visual-audio-contrast-dis-audio">placeholder for visual-audio-contrast-dis-audio</p>
			<p id="visual-audio-contrast-contrast">placeholder for visual-audio-contrast-contrast</p>
			<p id="visual-audio-contrast-scale">placeholder for visual-audio-contrast-scale</p>
			<p id="visual-audio-contrast-text-presentation">placeholder for visual-audio-contrast-text-presentation</p>
			<p id="visual-audio-contrast7">placeholder for visual-audio-contrast7</p>
			<p id="visual-audio-contrast-noaudio">placeholder for visual-audio-contrast-noaudio</p>
			<p id="visual-audio-contrast-visual-presentation">placeholder for visual-audio-contrast-visual-presentation</p>
			<p id="visual-audio-contrast-text-images">placeholder for visual-audio-contrast-text-images</p>
			<p id="keyboard-operation">placeholder for keyboard-operation</p>
			<p id="keyboard-operation-keyboard-operable">placeholder for keyboard-operation-keyboard-operable</p>
			<p id="keyboard-operation-trapping">placeholder for keyboard-operation-trapping</p>
			<p id="keyboard-operation-all-funcs">placeholder for keyboard-operation-all-funcs</p>
			<p id="time-limits">placeholder for time-limits</p>
			<p id="time-limits-required-behaviors">placeholder for time-limits-required-behaviors</p>
			<p id="time-limits-pause">placeholder for time-limits-pause</p>
			<p id="time-limits-no-exceptions">placeholder for time-limits-no-exceptions</p>
			<p id="time-limits-postponed">placeholder for time-limits-postponed</p>
			<p id="time-limits-server-timeout">placeholder for time-limits-server-timeout</p>
			<p id="seizure">placeholder for seizure</p>
			<p id="seizure-does-not-violate">placeholder for seizure-does-not-violate</p>
			<p id="seizure-three-times">placeholder for seizure-three-times</p>
			<p id="navigation-mechanisms">placeholder for navigation-mechanisms</p>
			<p id="navigation-mechanisms-skip">placeholder for navigation-mechanisms-skip</p>
			<p id="navigation-mechanisms-title">placeholder for navigation-mechanisms-title</p>
			<p id="navigation-mechanisms-focus-order">placeholder for navigation-mechanisms-focus-order</p>
			<p id="navigation-mechanisms-refs">placeholder for navigation-mechanisms-refs</p>
			<p id="navigation-mechanisms-mult-loc">placeholder for navigation-mechanisms-mult-loc</p>
			<p id="navigation-mechanisms-descriptive">placeholder for navigation-mechanisms-descriptive</p>
			<p id="navigation-mechanisms-focus-visible">placeholder for navigation-mechanisms-focus-visible</p>
			<p id="navigation-mechanisms-location">placeholder for navigation-mechanisms-location</p>
			<p id="navigation-mechanisms-link">placeholder for navigation-mechanisms-link</p>
			<p id="navigation-mechanisms-headings">placeholder for navigation-mechanisms-headings</p>
			<p id="meaning">placeholder for meaning</p>
			<p id="meaning-doc-lang-id">placeholder for meaning-doc-lang-id</p>
			<p id="meaning-other-lang-id">placeholder for meaning-other-lang-id</p>
			<p id="meaning-idioms">placeholder for meaning-idioms</p>
			<p id="meaning-located">placeholder for meaning-located</p>
			<p id="meaning-supplements">placeholder for meaning-supplements</p>
			<p id="meaning-pronunciation">placeholder for meaning-pronunciation</p>
			<p id="consistent-behavior">placeholder for consistent-behavior</p>
			<p id="consistent-behavior-receive-focus">placeholder for consistent-behavior-receive-focus</p>
			<p id="consistent-behavior-unpredictable-change">placeholder for consistent-behavior-unpredictable-change</p>
			<p id="consistent-behavior-consistent-locations">placeholder for consistent-behavior-consistent-locations</p>
			<p id="consistent-behavior-consistent-functionality">placeholder for consistent-behavior-consistent-functionality</p>
			<p id="consistent-behavior-no-extreme-changes-context">placeholder for consistent-behavior-no-extreme-changes-context</p>
			<p id="minimize-error">placeholder for minimize-error</p>
			<p id="minimize-error-identified">placeholder for minimize-error-identified</p>
			<p id="minimize-error-cues">placeholder for minimize-error-cues</p>
			<p id="minimize-error-suggestions">placeholder for minimize-error-suggestions</p>
			<p id="minimize-error-reversible">placeholder for minimize-error-reversible</p>
			<p id="minimize-error-context-help">placeholder for minimize-error-context-help</p>
			<p id="minimize-error-reversible-all">placeholder for minimize-error-reversible-all</p>
			<p id="ensure-compat">placeholder for ensure-compat</p>
			<p id="ensure-compat-parses">placeholder for ensure-compat-parses</p>
			<p id="ensure-compat-rsv">placeholder for ensure-compat-rsv</p>
			<p id="G1">placeholder for G1</p>
			<p id="G4">placeholder for G4</p>
			<p id="G5">placeholder for G5</p>
			<p id="G8">placeholder for G8</p>
			<p id="G9">placeholder for G9</p>
			<p id="G10">placeholder for G10</p>
			<p id="G11">placeholder for G11</p>
			<p id="G13">placeholder for G13</p>
			<p id="G14">placeholder for G14</p>
			<p id="G15">placeholder for G15</p>
			<p id="G17">placeholder for G17</p>
			<p id="G18">placeholder for G18</p>
			<p id="G19">placeholder for G19</p>
			<p id="G21">placeholder for G21</p>
			<p id="G53">placeholder for G53</p>
			<p id="G54">placeholder for G54</p>
			<p id="G55">placeholder for G55</p>
			<p id="G56">placeholder for G56</p>
			<p id="G57">placeholder for G57</p>
			<p id="G58">placeholder for G58</p>
			<p id="G59">placeholder for G59</p>
			<p id="G60">placeholder for G60</p>
			<p id="G61">placeholder for G61</p>
			<p id="G62">placeholder for G62</p>
			<p id="G63">placeholder for G63</p>
			<p id="G64">placeholder for G64</p>
			<p id="G65">placeholder for G65</p>
			<p id="G68">placeholder for G68</p>
			<p id="G69">placeholder for G69</p>
			<p id="G70">placeholder for G70</p>
			<p id="G71">placeholder for G71</p>
			<p id="G73">placeholder for G73</p>
			<p id="G74">placeholder for G74</p>
			<p id="G75">placeholder for G75</p>
			<p id="G76">placeholder for G76</p>
			<p id="G78">placeholder for G78</p>
			<p id="G79">placeholder for G79</p>
			<p id="G80">placeholder for G80</p>
			<p id="G81">placeholder for G81</p>
			<p id="G82">placeholder for G82</p>
			<p id="G83">placeholder for G83</p>
			<p id="G84">placeholder for G84</p>
			<p id="G85">placeholder for G85</p>
			<p id="G86">placeholder for G86</p>
			<p id="G87">placeholder for G87</p>
			<p id="G88">placeholder for G88</p>
			<p id="G89">placeholder for G89</p>
			<p id="G90">placeholder for G90</p>
			<p id="G91">placeholder for G91</p>
			<p id="G92">placeholder for G92</p>
			<p id="G93">placeholder for G93</p>
			<p id="G94">placeholder for G94</p>
			<p id="G95">placeholder for G95</p>
			<p id="G96">placeholder for G96</p>
			<p id="G97">placeholder for G97</p>
			<p id="G98">placeholder for G98</p>
			<p id="G99">placeholder for G99</p>
			<p id="G100">placeholder for G100</p>
			<p id="G101">placeholder for G101</p>
			<p id="G102">placeholder for G102</p>
			<p id="G103">placeholder for G103</p>
			<p id="G105">placeholder for G105</p>
			<p id="G107">placeholder for G107</p>
			<p id="G108">placeholder for G108</p>
			<p id="G110">placeholder for G110</p>
			<p id="G111">placeholder for G111</p>
			<p id="G112">placeholder for G112</p>
			<p id="G115">placeholder for G115</p>
			<p id="G117">placeholder for G117</p>
			<p id="G120">placeholder for G120</p>
			<p id="G121">placeholder for G121</p>
			<p id="G122">placeholder for G122</p>
			<p id="G123">placeholder for G123</p>
			<p id="G124">placeholder for G124</p>
			<p id="G125">placeholder for G125</p>
			<p id="G126">placeholder for G126</p>
			<p id="G127">placeholder for G127</p>
			<p id="G128">placeholder for G128</p>
			<p id="G130">placeholder for G130</p>
			<p id="G131">placeholder for G131</p>
			<p id="G133">placeholder for G133</p>
			<p id="G134">placeholder for G134</p>
			<p id="G135">placeholder for G135</p>
			<p id="G136">placeholder for G136</p>
			<p id="G138">placeholder for G138</p>
			<p id="G139">placeholder for G139</p>
			<p id="G140">placeholder for G140</p>
			<p id="G141">placeholder for G141</p>
			<p id="G142">placeholder for G142</p>
			<p id="G143">placeholder for G143</p>
			<p id="G144">placeholder for G144</p>
			<p id="G145">placeholder for G145</p>
			<p id="G146">placeholder for G146</p>
			<p id="G147">placeholder for G147</p>
			<p id="G148">placeholder for G148</p>
			<p id="G149">placeholder for G149</p>
			<p id="G150">placeholder for G150</p>
			<p id="G151">placeholder for G151</p>
			<p id="G152">placeholder for G152</p>
			<p id="G153">placeholder for G153</p>
			<p id="G155">placeholder for G155</p>
			<p id="G156">placeholder for G156</p>
			<p id="G157">placeholder for G157</p>
			<p id="G158">placeholder for G158</p>
			<p id="G159">placeholder for G159</p>
			<p id="G160">placeholder for G160</p>
			<p id="G161">placeholder for G161</p>
			<p id="G162">placeholder for G162</p>
			<p id="G163">placeholder for G163</p>
			<p id="G164">placeholder for G164</p>
			<p id="G165">placeholder for G165</p>
			<p id="G166">placeholder for G166</p>
			<p id="G167">placeholder for G167</p>
			<p id="G168">placeholder for G168</p>
			<p id="G169">placeholder for G169</p>
			<p id="G170">placeholder for G170</p>
			<p id="G171">placeholder for G171</p>
			<p id="G172">placeholder for G172</p>
			<p id="G173">placeholder for G173</p>
			<p id="G174">placeholder for G174</p>
			<p id="G175">placeholder for G175</p>
			<p id="G176">placeholder for G176</p>
			<p id="G177">placeholder for G177</p>
			<p id="G178">placeholder for G178</p>
			<p id="G179">placeholder for G179</p>
			<p id="G180">placeholder for G180</p>
			<p id="G181">placeholder for G181</p>
			<p id="G182">placeholder for G182</p>
			<p id="G183">placeholder for G183</p>
			<p id="G184">placeholder for G184</p>
			<p id="G185">placeholder for G185</p>
			<p id="G186">placeholder for G186</p>
			<p id="G187">placeholder for G187</p>
			<p id="G188">placeholder for G188</p>
			<p id="G189">placeholder for G189</p>
			<p id="G190">placeholder for G190</p>
			<p id="G191">placeholder for G191</p>
			<p id="G192">placeholder for G192</p>
			<p id="G193">placeholder for G193</p>
			<p id="G194">placeholder for G194</p>
			<p id="G195">placeholder for G195</p>
			<p id="G196">placeholder for G196</p>
			<p id="G197">placeholder for G197</p>
			<p id="G198">placeholder for G198</p>
			<p id="C6">placeholder for C6</p>
			<p id="C7">placeholder for C7</p>
			<p id="C8">placeholder for C8</p>
			<p id="C9">placeholder for C9</p>
			<p id="C12">placeholder for C12</p>
			<p id="C13">placeholder for C13</p>
			<p id="C14">placeholder for C14</p>
			<p id="C15">placeholder for C15</p>
			<p id="C16">placeholder for C16</p>
			<p id="C17">placeholder for C17</p>
			<p id="C18">placeholder for C18</p>
			<p id="C19">placeholder for C19</p>
			<p id="C20">placeholder for C20</p>
			<p id="C21">placeholder for C21</p>
			<p id="C22">placeholder for C22</p>
			<p id="C23">placeholder for C23</p>
			<p id="C24">placeholder for C24</p>
			<p id="C25">placeholder for C25</p>
			<p id="C26">placeholder for C26</p>
			<p id="C27">placeholder for C27</p>
			<p id="C28">placeholder for C28</p>
			<p id="C29">placeholder for C29</p>
			<p id="C30">placeholder for C30</p>
			<p id="SCR1">placeholder for SCR1</p>
			<p id="SCR2">placeholder for SCR2</p>
			<p id="SCR14">placeholder for SCR14</p>
			<p id="SCR16">placeholder for SCR16</p>
			<p id="SCR18">placeholder for SCR18</p>
			<p id="SCR19">placeholder for SCR19</p>
			<p id="SCR20">placeholder for SCR20</p>
			<p id="SCR21">placeholder for SCR21</p>
			<p id="SCR22">placeholder for SCR22</p>
			<p id="SCR24">placeholder for SCR24</p>
			<p id="SCR26">placeholder for SCR26</p>
			<p id="SCR27">placeholder for SCR27</p>
			<p id="SCR28">placeholder for SCR28</p>
			<p id="SCR29">placeholder for SCR29</p>
			<p id="SCR30">placeholder for SCR30</p>
			<p id="SCR31">placeholder for SCR31</p>
			<p id="SCR32">placeholder for SCR32</p>
			<p id="SCR33">placeholder for SCR33</p>
			<p id="SCR34">placeholder for SCR34</p>
			<p id="SCR35">placeholder for SCR35</p>
			<p id="SCR36">placeholder for SCR36</p>
			<p id="SCR37">placeholder for SCR37</p>
			<p id="SVR1">placeholder for SVR1</p>
			<p id="SVR2">placeholder for SVR2</p>
			<p id="SVR3">placeholder for SVR3</p>
			<p id="SVR4">placeholder for SVR4</p>
			<p id="SM1">placeholder for SM1</p>
			<p id="SM2">placeholder for SM2</p>
			<p id="SM6">placeholder for SM6</p>
			<p id="SM7">placeholder for SM7</p>
			<p id="SM11">placeholder for SM11</p>
			<p id="SM12">placeholder for SM12</p>
			<p id="SM13">placeholder for SM13</p>
			<p id="SM14">placeholder for SM14</p>
			<p id="T1">placeholder for T1</p>
			<p id="T2">placeholder for T2</p>
			<p id="T3">placeholder for T3</p>
			<p id="ARIA1">placeholder for ARIA1</p>
			<p id="ARIA2">placeholder for ARIA2</p>
			<p id="ARIA3">placeholder for ARIA3</p>
			<p id="ARIA4">placeholder for ARIA4</p>
			<p id="F1">placeholder for F1</p>
			<p id="F2">placeholder for F2</p>
			<p id="F3">placeholder for F3</p>
			<p id="F4">placeholder for F4</p>
			<p id="F7">placeholder for F7</p>
			<p id="F8">placeholder for F8</p>
			<p id="F9">placeholder for F9</p>
			<p id="F10">placeholder for F10</p>
			<p id="F12">placeholder for F12</p>
			<p id="F13">placeholder for F13</p>
			<p id="F14">placeholder for F14</p>
			<p id="F15">placeholder for F15</p>
			<p id="F16">placeholder for F16</p>
			<p id="F17">placeholder for F17</p>
			<p id="F19">placeholder for F19</p>
			<p id="F20">placeholder for F20</p>
			<p id="F22">placeholder for F22</p>
			<p id="F23">placeholder for F23</p>
			<p id="F24">placeholder for F24</p>
			<p id="F25">placeholder for F25</p>
			<p id="F26">placeholder for F26</p>
			<p id="F30">placeholder for F30</p>
			<p id="F31">placeholder for F31</p>
			<p id="F32">placeholder for F32</p>
			<p id="F33">placeholder for F33</p>
			<p id="F34">placeholder for F34</p>
			<p id="F36">placeholder for F36</p>
			<p id="F37">placeholder for F37</p>
			<p id="F38">placeholder for F38</p>
			<p id="F39">placeholder for F39</p>
			<p id="F40">placeholder for F40</p>
			<p id="F41">placeholder for F41</p>
			<p id="F42">placeholder for F42</p>
			<p id="F43">placeholder for F43</p>
			<p id="F44">placeholder for F44</p>
			<p id="F46">placeholder for F46</p>
			<p id="F47">placeholder for F47</p>
			<p id="F48">placeholder for F48</p>
			<p id="F49">placeholder for F49</p>
			<p id="F50">placeholder for F50</p>
			<p id="F52">placeholder for F52</p>
			<p id="F54">placeholder for F54</p>
			<p id="F55">placeholder for F55</p>
			<p id="F58">placeholder for F58</p>
			<p id="F59">placeholder for F59</p>
			<p id="F60">placeholder for F60</p>
			<p id="F61">placeholder for F61</p>
			<p id="F62">placeholder for F62</p>
			<p id="F63">placeholder for F63</p>
			<p id="F65">placeholder for F65</p>
			<p id="F66">placeholder for F66</p>
			<p id="F67">placeholder for F67</p>
			<p id="F68">placeholder for F68</p>
			<p id="F69">placeholder for F69</p>
			<p id="F70">placeholder for F70</p>
			<p id="F71">placeholder for F71</p>
			<p id="F72">placeholder for F72</p>
			<p id="F73">placeholder for F73</p>
			<p id="F74">placeholder for F74</p>
			<p id="F75">placeholder for F75</p>
			<p id="F76">placeholder for F76</p>
			<p id="F77">placeholder for F77</p>
			<p id="F78">placeholder for F78</p>
			<p id="F79">placeholder for F79</p>
			<p id="F80">placeholder for F80</p>
			<p id="F81">placeholder for F81</p>
			<p id="F82">placeholder for F82</p>
			<p id="F83">placeholder for F83</p>
			<p id="F84">placeholder for F84</p>
			<p id="F85">placeholder for F85</p>
			<p id="F86">placeholder for F86</p>
			<p id="F87">placeholder for F87</p>
			<p id="F88">placeholder for F88</p>
			<p id="F89">placeholder for F89</p>
		</div1>
	</back>
</spec>
