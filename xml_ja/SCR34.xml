<?xml version="1.0" encoding="utf-8"?>
<technique id="SCR34">
  <short-name>テキストサイズに応じて拡大するように、サイズ及びポジションを定める</short-name>
  <applicability>
    <p>クライアントサイド・スクリプティング</p>
  </applicability>
  <applies-to>
    <success-criterion idref="visual-audio-contrast-scale"/>
    <success-criterion idref="visual-audio-contrast-visual-presentation"/>
  </applies-to>
  <ua-issues>
    <ua-issue>
      <p>サイズ及びポジションを定めることは複雑であり、異なるブラウザは異なる結果をだすことになる。これはCSSスタイリングでpadding、 margins及びwidthを一つのオブジェクトに対して組み合わせて使用したとき、又はオフセット値及び単純な値、例えばoffsetWidthとwidthを組合せて使用したときに起こりうる。
                    これらのうちのいくつかはズームに対して異なる動きをする。
                  Internet Explorer 6及びそれ以降のバージョンと、IEのそれより前のバージョンとの違いについての説明は、<a href="http://msdn.microsoft.com/en-us/library/bb250395(VS.85).aspx#cssenhancements_topic3">MSDN: Fix the Box Instead of Thinking Outside It（英語）</a>を参照すること。</p>
    </ua-issue>
  </ua-issues>
  <description><p>この実装方法の目的は、文字サイズが縮小・拡大されるのに従って、適切に拡大・縮小するように要素のサイズ及びポジションを定めることである。 </p>
                
               <p>ここに要素のサイズとポジションを決めるJavaScriptの4つプロパティがある：</p>
                
               <ul>
<li>
                     <p>
                        <code>offsetHeight</code> （ピクセルでの要素の高さ）</p>
                  </li>
<li>
                     <p>
                        <code>offsetWidth</code> （ピクセルでの要素の幅）</p>
                  </li>
<li>
                     <p>
                        <code>offsetLeft</code> （ピクセルでの親要素（offsetParent）の左からの距離）</p>
                  </li>
<li>
                     <p>
                        <code>offsetTop</code> （ピクセルでの親要素（offsetParent）の上からの距離）</p>
                  </li>
</ul>
<p><code>offsetHeight</code>や<code>offsetWidth</code>を用いて高さや幅を定めることは簡単である、しかし、オブジェクトの左とトップの位置を絶対配置の値として定める時、親要素を考える必要がある。下記において、<code>calculatePosition</code>関数は、要素におけるすべての親ノードの最終的な値が決定するまで繰り返されている。
                 その関数は<code>objElement</code>（当該の要素の名前）とオフセットプロパティ（<code>offsetLeft</code>又は <code>offsetTop</code>）の2つの引数を取っている。</p></description>
  <examples>
    <eg-group>
      <description><p>Javascriptの関数：</p>
</description>
      <code>function calculatePosition(objElement, strOffset)
{
    var iOffset = 0;

    if (objElement.offsetParent)
    {
        do 
        {
            iOffset += objElement[strOffset];
            objElement = objElement.offsetParent;
        } while (objElement);
    }

    return iOffset;
}</code>
      <description><p>次の事例は、上の関数がオブジェクトを、参照オブジェクトの下、かつ、左から同じ距離に配置するために用いられていることを示している：</p>
</description>
      <code>// Get a reference object
var objReference = document.getElementById('refobject');
// Get the object to be aligned
var objAlign = document.getElementById('lineup');

objAlign.style.position = 'absolute';
objAlign.style.left = calculatePosition(objReference, 'offsetLeft') + 'px';
objAlign.style.top = calculatePosition(objReference, 'offsetTop') + objReference.offsetHeight + 'px';</code>
    </eg-group>
  </examples>
  <resources>
    <see-also>
      <ulist>
        <item>
          <p>&#13;
                           <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://msdn.microsoft.com/en-us/library/bb250395(VS.85).aspx#cssenhancements_topic3" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">MSDN: Fix the Box Instead of Thinking Outside It</loc>&#13;
                        </p>
        </item>
      </ulist>
    </see-also>
  </resources>
  <related-techniques>
    <relatedtech idref="C12"/>
    <relatedtech idref="C14"/>
    <relatedtech idref="C17"/>
    <relatedtech idref="C20"/>
    <relatedtech idref="C24"/>
    <relatedtech idref="C26"/>
  </related-techniques>
  <tests>
    <procedure>
      <olist>
        <item>
          <p>文字サイズの変更とともにテキストコンテナのサイズを調整するように設計されているページを開く。</p>
        </item>
        <item>
          <p>ブラウザの文字サイズ調節を使って200%のサイズまで大きくする。（ズーム機能は使用しない）</p>
        </item>
        <item>
          <p>テキストコンテナのサイズが文字サイズに合わせて調整される。</p>
        </item>
        <item>
          <p>文字サイズを大きくした結果、どの文字も「切り取られ」たり、見えなくなっていたりしない。</p>
        </item>
      </olist>
    </procedure>
    <expected-results>
      <ulist>
        <item>
          <p>3.及び 4.を満たしている。</p>
        </item>
      </ulist>
      <p>注意： この実装方法が「達成基準を満たすことのできる実装方法」の一つである場合、このチェックポイントや判定基準を満たしていなければ、それはこの実装方法が正しく用いられていないことを意味するが、必ずしも達成基準を満たしていないことにはならない。場合によっては、別の実装方法によってその達成基準が満たされていることもありうる。</p>
    </expected-results>
  </tests>
  <translationcredit>
    <ulist>
      <item>原文：<a href="http://www.w3.org/TR/WCAG20-TECHS/SCR34.html">SCR34: Calculating size and position in a way that scales with text size
（英語）</a></item>
      <item>日本語訳監修：<a href="http://www.hitachi.co.jp/design/index.html">株式会社日立製作所デザイン本部</a></item>
      <item>日本語訳：<a href="http://jp.fujitsu.com">富士通株式会社</a>, <a href="http://jp.fujitsu.com/group/fdl/">富士通デザイン株式会社</a></item>
    </ulist>
  </translationcredit>
</technique>
