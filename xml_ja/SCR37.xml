<?xml version="1.0" encoding="utf-8"?>
<technique id="SCR37">
  <short-name>デバイス非依存な方法でカスタム・ダイアログを作成する</short-name>
  <applicability>
    <p>スクリプトで使用されるHTML及びXHTML</p>
  </applicability>
  <applies-to>
    <success-criterion idref="navigation-mechanisms-focus-order"/>
  </applies-to>
  <ua-issues/>
  <description><p>コンテンツ制作者はしばしば、ブラウザによって提供されるポップアップウインドウを使わずに、独自のダイアログを作成したがる。これは通常、ダイアログのコンテンツを<code>div</code>の中に収めて、その<code>div</code>をコンテンツの上にCSSによる重なり順及び絶対配置を用いて配置するというやり方でおこなわれる。</p>
		<p>これらのダイアログをアクセシブルにするには、いくつかの簡単なルールに従う必要がある。</p>
		<ol class="enumar">
<li>
						<p>リンクやボタンの<code>onclick</code>イベントからダイアログを起動するスクリプトをトリガーにする。</p>
				</li>
				<li>
						<p>ダイアログの<code>div</code>をDocument Object Model (DOM) の中、トリガーした要素の直後に配置する。トリガーした要素がフォーカスを保持し、ダイアログのコンテンツをその要素のあとに挿入することで、ダイアログの中のコンテンツがスクリーンリーダーの読み上げ順序で次になり、タブ順序も次になる。それでも、ダイアログは視覚的にページ上のあらゆる場所に絶対配置できる。これは、下の例のようにダイアログをHTMLの中で作成し、CSSで非表示にする方法又は、トリガーした要素の直後にスクリプトで挿入する方法のどちらでも実装できる。</p>
				</li>
				<li>
						<p>ダイアログのdiv内部のHTMLが、その他のコンテンツと同じアクセシビリティガイドラインの要件を満たしていることを保証する。</p>
				</li>
		</ol>
<p>リンクがダイアログを開閉できたり、キーボードのフォーカスが外れるとダイアログが閉じるようにしたりすることはすばらしいが、必ずしも必要なわけではない。</p></description>
  <examples>
    <eg-group>
      <head>ダイアログを開くオプションボタン</head>
      <description><p>この例のHTMLには、トリガーとなる要素、この場合はボタンとダイアログのフレームとして機能するdivがある。</p>
<p>トリガーとなる要素はボタンで、スクリプトはonclickイベントのトリガーである。これは適切なイベントをオペレーティングシステムに送るので、支援技術はDOMの中の変化に気がつくことができる。</p>
<p>この例では、ダイアログ内の送信及びリセットボタンは単純に<code>div</code>に隠れている。</p>
</description>
      <code>...
&lt;button onclick="TogglePopup(event,true)"
	name="pop0001"&gt;オプション&lt;/button&gt;

&lt;div class="popover" id="pop0001"&gt;
  &lt;h3&gt;並べ替えの情報を編集&lt;/h3&gt;
  &lt;form action="default.htm" onsubmit="this.parentNode.style.display='none'; return false;" onreset="this.parentNode.style.display='none'; return false;"&gt;
    &lt;fieldset&gt;
      &lt;legend&gt;並び順&lt;/legend&gt; 
      &lt;input type="radio" name="order" id="order_alpha" /&gt;&lt;label for="order_alpha"&gt;アルファベット順&lt;/label&gt;
      &lt;input type="radio" name="order" id="order_default" checked="true" /&gt;&lt;label for="order_default"&amp;gt既定&lt;/label&gt;
    &lt;/fieldset&gt;
&lt;div class="buttons"&gt;
  &lt;input type="submit" value="OK" /&gt;
  &lt;input type="reset" value="キャンセル" /&gt;
&lt;/div&gt;
&lt;/form&gt;

&lt;/div&gt;
...</code>
      <description><p><code>div</code>、見出し、及び<code>form</code>要素はCSSでダイアログに見えるようにスタイル付けされている。</p>
</description>
      <code>...
a { color:blue; }
a.clickPopup img { border:none; width:0; }

div.popover { position:absolute; display:none; border:1px outset; background-color:beige; font-size:80%; background-color:#eeeeee; color:black; }
div.popover h3 { margin:0; padding:0.1em 0.5em; background-color:navy; color:white; }
#pop0001 { width:20em; }
#pop0001 form { margin:0; padding:0.5em; }
#pop0001 fieldset { margin-bottom:0.3em; padding-bottom:0.5em; }
#pop0001 input, #pop0001 label { vertical-align:middle; }
#pop0001 div.buttons { text-align:right; }
#pop0001 div.buttons input { width:6em; }
...</code>
      <description><p>スクリプトはポップアップする<code>div</code>の表示を切り替え、表示させたり隠したりする。</p>
</description>
      <code>...
function TogglePopup(evt,show)
{
	HarmonizeEvent(evt);
	var src = evt.target;
	if ("click" == evt.type)
	{
		evt.returnValue = false;
	}
	var popID = src.getAttribute("name");
	if (popID)
	{
		var popup = document.getElementById(popID);
		if (popup)
		{
			if (true == show)
			{
				popup.style.display = "block";
			}
			else if (false == show)
			{
				popup.style.display = "none";
			}
			else
			{
				popup.style.display = "block" == popup.style.display ? "none" : "block";
			}
			if ("block" == popup.style.display)
			{
				//window.alert(document.documentElement.scrollHeight);
				popup.style.top = ((document.documentElement.offsetHeight - popup.offsetHeight) / 2 ) + 'px';
				popup.style.left = ((document.documentElement.offsetWidth - popup.offsetWidth) / 2) + 'px';
			}
		}
	}
}

function SubmitForm(elem)
{ 
	elem.parentNode.style.display='none'; 
	return false;
}

function ResetForm(elem)
{ 
	elem.parentNode.style.display='none'; 
	return false;
}
...</code>
      <description><p>このコードの実装サンプル：<a href="http://www.w3.org/TR/WCAG20-TECHS/working-examples/SCR37/default.htm">ダイアログを開くオプションボタン</a></p>
</description>
    </eg-group>
  </examples>
  <resources>
    <see-also>
      <ulist>
        <item>
          <p> <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.w4a.info/2007/prog/8-shelly.pdf" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">W4A Paper: Accessibility for Simple to Moderate-Complexity DHTML Web Sites by Cynthia C. Shelly and George Young, Microsoft Corporation. (PDF Format)</loc> by Cynthia C. Shelly and George Young, Microsoft Corporation. (PDF Format)</p>
        </item>
        <item>
          <p>Microsoft Developer Network Whitepaper:<loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://download.microsoft.com/download/0/f/5/0f5e941c-c495-401a-9031-eab8315da35e/writing_accessible_web_applications.doc" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">Microsoft Developer Network Whitepaper: Writing Accessible Web Applications by Cynthia C. Shelly and George Young. (Microsoft Word Format)</loc> by Cynthia C. Shelly and George Young. (Microsoft Word Format)</p>
        </item>
        <item>
          <p> <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.microsoft.com/downloads/details.aspx?familyid=3755582A-A707-460A-BF21-1373316E13F0&amp;displaylang=en" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">Microsoft Active Accessibility 2.0 SDK. Includes Inspect32.exe and other MSAA tools.</loc>. Includes Inspect32.exe and other MSAA tools.</p>
        </item>
        <item>
          <p> <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://www.microsoft.com/downloads/details.aspx?familyid=E59C3964-672D-4511-BB3E-2D5E1DB91038&amp;displaylang=en" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">Microsoft Internet Explorer Developer Toolbar.. Allows examination of script-generated DOM in Microsoft Internet Explorer</loc>. Allows examination of script-generated DOM in Microsoft Internet Explorer</p>
        </item>
        <item>
          <p> <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://getfirebug.com/" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">Firebug. Allows examination of script-generated DOM in Firefox.</loc>. Allows examination of script-generated DOM in Firefox. </p>
        </item>
      </ulist>
    </see-also>
  </resources>
  <related-techniques>
    <relatedtech idref="SCR26"/>
    <relatedtech idref="G59"/>
  </related-techniques>
  <tests>
    <procedure>
      <olist>
        <item>
          <p>ページ内のすべての場所から、ダイアログのトリガーとなるもので、ポップアップウインドウでないものを探す。</p>
        </item>
        <item>
          <p>Tabキーでその場所に移動してEnterキーを押下することで、ダイアログを開くことができる。</p>
        </item>
        <item>
          <p>開いたら、タブ順序でダイアログが次の位置にある。</p>
        </item>
        <item>
          <p>ダイアログがボタン又はリンクのクリックイベントによってトリガーされている。</p>
        </item>
        <item>
          <p>スクリプトによって生成されたDOMを検証できるツールを用いて、DOM内でダイアログが次にある。</p>
        </item>
      </olist>
    </procedure>
    <expected-results>
      <ulist>
        <item>
          <p>2., 3., 4.及び5.を満たしている。</p>
        </item>
      </ulist>
    </expected-results>
  </tests>
  <translationcredit>
    <ulist>
      <item>原文：<a href="http://www.w3.org/TR/WCAG20-TECHS/SCR37.html">SCR37: Creating Custom Dialogs in a Device Independent Way（英語）</a></item>
      <item>日本語訳監修：<a href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</a></item>
      <item>日本語訳：辻 勝利（<a href="http://www.mitsue.co.jp/">株式会社ミツエーリンクス</a>）</item>
    </ulist>
  </translationcredit>
</technique>
