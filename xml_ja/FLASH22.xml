<?xml version="1.0" encoding="utf-8"?>
<technique id="FLASH22">
  <short-name>FLASH22： キーボードで操作可能なアクションを静的エレメントに追加する</short-name>
  <applicability>
    <ul>
<li><p>Adobe Flash Professional バージョン MX 以降</p></li>
<li><p>Adobe Flex</p></li>
</ul>
  </applicability>
  <applies-to>
    <success-criterion idref="keyboard-operation-keyboard-operable"/>
    <success-criterion idref="keyboard-operation-all-funcs"/>
  </applies-to>
  <ua-issues>
    <ua-issue>
      <p>ユーザーエージェントによるサポートに関する全般的な情報は、<a href="flash.html#flash_ua_support">Flashのユーザーエージェントによるサポート</a>を参照のこと。</p>
    </ua-issue>
  </ua-issues>
  <description>
    <p>この実装方法の目的は、デフォルトではキーボードで操作できない Flash ムービークリップをキーボードで操作可能にする方法を示すことである。この実装方法では、tabenabled プロパティを設定してエレメントをフォーカス可能にし、click ハンドラに加えて keydown ハンドラを提供してキーボードからアクションをトリガできるようにする。</p>
  </description>
  <examples>
    <eg-group>
      <head>ムービークリップをボタンとして使用する</head>
      <description><p>この事例では、カスタムムービークリップをボタンとして使用する。キーボードでの操作を可能にするため、tabEnabled を使用してムービークリップをタブの順序に配置する。さらに、カスタムボタンがマウスクリックとスペースバーの打鍵の両方に反応するように、冗長なイベントハンドラを追加する。最後に、ムービークリップの AccessibilityProperties オブジェクトを使用して、カスタムボタンにアクセシブルな名前を付ける。これにより、支援技術でボタンのラベルを認識できるようになる。</p>
<p>この実例は、<a href="http://www.w3.org/TR/WCAG-TECHS/working-examples/FLASH22/event_handlers_to_static_objects_as3.html">「ムービークリップをボタンとして使用する」のサンプル（英語）</a>で確認できる。 <a href="http://www.w3.org/TR/WCAG-TECHS/working-examples/FLASH22/event_handlers_to_static_objects_as3.swf">「ムービークリップをボタンとして使用する」のソース（英語）</a>をダウンロードすることもできる。</p>
<note><p class="prefix">カスタムボタンはボタンではなくフォーカス可能なグラフィックとして認識されるので、汎用のムービークリップを使用することは一般的に推奨されない。代わりに、標準の Flash の Button コンポーネントを使用するか、「button」タイプの新規シンボルを作成することが望ましい。</p>
</note>
</description>
      <code>import flash.accessibility. *
import flash.events.KeyboardEvent;
import flash.events.MouseEvent;
import flash.net.navigateToURL;
import flash.net.URLRequest;

testMC.tabEnabled = true;
updateAccName(testMC);
testMC.addEventListener(MouseEvent.CLICK, clickHandler, false);
testMC.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);

updateAccName(testMC);

function clickHandler(e) {
  testMC.labelText.text = "THANKS";
  updateAccName(testMC);
}

function keyDownHandler(e) {
  if (e.keyCode == 32)
  clickHandler(e);
}

function updateAccName(mc: MovieClip) {
  if (! mc.accessibilityProperties)
  mc.accessibilityProperties = new AccessibilityProperties();
  mc.accessibilityProperties.name = mc.labelText.text;
  Accessibility.updateProperties();
}</code>
    </eg-group>
  </examples>
  <resources/>
  <related-techniques>
    <relatedtech idref="SCR29"/>
    <relatedtech idref="FLASH17"/>
  </related-techniques>
  <tests>
    <procedure>
      <p>インタラクティブコントロールとして使用されるムービークリップの汎用インスタンスが Flash ムービーに含まれている場合は、次のことを確認する。</p>
      <olist>
        <item>
          <p>ムービークリップインスタンスの tabEnabled プロパティが true に設定されている。</p>
        </item>
        <item>
          <p>ムービークリップインスタンスにマウスとキーボードの両方のイベントに対応するイベントハンドラがある。</p>
        </item>
      </olist>
    </procedure>
    <expected-results>
      <ulist>
        <item>
          <p>1. および 2. を満たしている。</p>
        </item>
      </ulist>
      <p>注意： この実装方法が「達成基準を満たすことのできる実装方法」の一つである場合、このチェックポイントや判定基準を満たしていなければ、それはこの実装方法が正しく用いられていないことを意味するが、必ずしも達成基準を満たしていないことにはならない。場合によっては、別の実装方法によってその達成基準が満たされていることもありうる。</p>
    </expected-results>
  </tests>
  <translationcredit>
    <ulist>
      <item>原文：<a href="http://www.w3.org/TR/WCAG20-TECHS/FLASH22.html">FLASH22: Adding keyboard-accessible actions to static elements（英語）</a></item>
      <item>日本語訳監修：<a href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</a></item>
      <item>日本語訳：<a href="http://www.adobe.com/jp/accessibility/">アドビ システムズ 株式会社</a></item>
    </ulist>
  </translationcredit>
</technique>
