<?xml version="1.0" encoding="utf-8"?>
<technique id="FLASH27">
  <short-name>FLASH27： ボタンの目的を説明するラベルを提供する</short-name>
  <applicability>
    <ul>
<li><p>Adobe Flash Professional バージョン MX 以降</p></li>
<li><p>Adobe Flex</p></li>
</ul>
  </applicability>
  <applies-to>
    <success-criterion idref="text-equiv-all"/>
    <success-criterion idref="navigation-mechanisms-refs"/>
    <success-criterion idref="navigation-mechanisms-link"/>
  </applies-to>
  <ua-issues>
    <ua-issue>
      <p>ユーザーエージェントによるサポートに関する全般的な情報は、<a href="flash.html#flash_ua_support">Flashのユーザーエージェントによるサポート</a>を参照のこと。</p>
    </ua-issue>
  </ua-issues>
  <description><p>この実装方法の目的は、ボタンのアクセシブルな名前として説明的なテキストを提供して、ボタンの目的を記述することである。この説明により、利用者はこのボタンとその他の Flash ムービーのボタンを区別でき、このボタンを有効化するかどうかを決定できる。ボタンのアクセシブルな名前として、空の文字列では不十分である。</p>
<p>テキストラベル付きのボタンの場合、ラベルテキストがボタンのアクセシブルな名前として使用される。画像ベースのボタンでテキストラベルが付いていない場合、このボタンのアクセシブルな名前は、アクセシビリティパネルを使用するか、またはスクリプトによって、別途設定する必要がある。</p></description>
  <examples>
    <eg-group>
      <head>ラベルプロパティを使用してボタンの目的を記述する</head>
      <code>import fl.controls.Button;
import fl.accessibility.ButtonAccImpl;

ButtonAccImpl.enableAccessibility();

var myButton:Button = new Button();
myButton.label = "View Items in Cart";</code>
    </eg-group>
    <eg-group>
      <head>スクリプトを使用して、ActionScript 3.0 により画像ボタンのアクセシブルな名前を設定する</head>
      <description><p>この事例では、ボタンのラベルプロパティで意図的に空の文字列を設定する。支援技術で認識できるようにするには、ボタンの <code>accessibilityProperties.name</code> プロパティを設定する。</p>
</description>
      <code>import fl.controls.Button;
import fl.accessibility.ButtonAccImpl;
import flash.accessibility.*;
import flash.system.Capabilities;
ButtonAccImpl.enableAccessibility();

var soundIsMuted = false;
var myButton:Button = new Button();
myButton.setStyle("icon", unmuted);
myButton.label = "";
myButton.x = myButton.y = 10;
myButton.width = myButton.height = 50;
updateAccName(myButton, "mute sound");
myButton.setStyle("icon", unmuted);
myButton.addEventListener(MouseEvent.CLICK, handleBtnClick);
addChild(myButton);

function handleBtnClick(e) {
  soundIsMuted = !soundIsMuted;
  myButton.setStyle("icon", soundIsMuted ? muted : unmuted);
  updateAccName(myButton, soundIsMuted ? "unmute sound" : "mute sound");
}

function updateAccName(obj, newName:String) {
  if (!obj.accessibilityProperties)
    obj.accessibilityProperties = new AccessibilityProperties();
  obj.accessibilityProperties.name = newName;
  if (Capabilities.hasAccessibility)
    Accessibility.updateProperties();
}</code>
    </eg-group>
  </examples>
  <resources/>
  <related-techniques>
    <relatedtech idref="G91"/>
    <relatedtech idref="FLASH5"/>
    <relatedtech idref="FLASH4"/>
    <relatedtech idref="FLASH30"/>
  </related-techniques>
  <tests>
    <procedure>
      <p>この実装方法を用いている Flash ムービーの各ボタンについて、次のことを確認する。</p>
      <olist>
        <item>
          <p>ボタンのラベルテキストがボタンの目的を正しく説明している</p>
        </item>
        <item>
          <p>ボタンにテキストラベルがない場合、ボタンのアクセシブルな名前として説明的なテキストが追加されている</p>
        </item>
        <item>
          <p>ボタンにラベルテキストとアクセシブルな名前の両方が含まれている場合、その二つの組み合わせが、ボタンの目的の説明として正しいものである</p>
        </item>
      </olist>
    </procedure>
    <expected-results>
      <ulist>
        <item>
          <p>1., 2. または 3. を満たしている。</p>
        </item>
      </ulist>
      <p>注意： この実装方法が「達成基準を満たすことのできる実装方法」の一つである場合、このチェックポイントや判定基準を満たしていなければ、それはこの実装方法が正しく用いられていないことを意味するが、必ずしも達成基準を満たしていないことにはならない。場合によっては、別の実装方法によってその達成基準が満たされていることもありうる。</p>
    </expected-results>
  </tests>
  <translationcredit>
    <ulist>
      <item>原文：<a href="http://www.w3.org/TR/WCAG20-TECHS/FLASH27.html">FLASH27: Providing button labels that describe the purpose of a button（英語）</a></item>
      <item>日本語訳監修：<a href="http://www.infoaxia.co.jp/">植木 真（株式会社インフォアクシア）</a></item>
      <item>日本語訳：<a href="http://www.adobe.com/jp/accessibility/">アドビ システムズ 株式会社</a></item>
    </ulist>
  </translationcredit>
</technique>
